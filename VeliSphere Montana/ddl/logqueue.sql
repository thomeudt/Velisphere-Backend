CREATE TABLE LOGQUEUE (

   EXCHANGENAME VARCHAR(255),
   MESSAGE VARCHAR(1024),
   QUEUENAME VARCHAR(255) NOT NULL,
   ROUTINGKEY VARCHAR(255),
   IDENTIFIER VARCHAR(36) NOT NULL,
   PRIMARY KEY (IDENTIFIER, QUEUENAME)
);

PARTITION TABLE LOGQUEUE ON COLUMN QUEUENAME;

CREATE PROCEDURE FROM CLASS Insert;
CREATE PROCEDURE FROM CLASS Select;


CREATE TABLE USER (

   USERID VARCHAR(36) NOT NULL,
   USERNAME VARCHAR(255) NOT NULL,
   USEREMAIL VARCHAR(255) NOT NULL,
   PRIMARY KEY (USERID)
);

PARTITION TABLE USER ON COLUMN USERID;


CREATE TABLE ENDPOINT_USER_LINK (

   LINKID VARCHAR(36) NOT NULL,
   ENDPOINTID VARCHAR(36) NOT NULL,
   USERID VARCHAR(36) NOT NULL,
   PRIMARY KEY (LINKID)
);

PARTITION TABLE ENDPOINT_USER_LINK ON COLUMN USERID;

CREATE TABLE ENDPOINT_SPHERE_LINK (

   LINKID VARCHAR(36) NOT NULL,
   ENDPOINTID VARCHAR(36) NOT NULL,
   SPHEREID VARCHAR(36) NOT NULL,
   PRIMARY KEY (LINKID)
);

PARTITION TABLE ENDPOINT_SPHERE_LINK ON COLUMN ENDPOINTID;

CREATE TABLE SPHERE_USER_LINK (

   LINKID VARCHAR(36) NOT NULL,
   SPHEREID VARCHAR(36) NOT NULL,
   USERID VARCHAR(36) NOT NULL,
   PRIMARY KEY (LINKID)
);

PARTITION TABLE SPHERE_USER_LINK ON COLUMN USERID;

CREATE TABLE SPHERE (

   SPHEREID VARCHAR(36) NOT NULL,
   SPHERENAME VARCHAR(255) NOT NULL,
   PUBLIC TINYINT,
   PRIMARY KEY (SPHEREID)
);

PARTITION TABLE SPHERE ON COLUMN SPHEREID;

CREATE TABLE ENDPOINTCLASS (

   ENDPOINTCLASSID VARCHAR(36) NOT NULL,
   ENDPOINTCLASSNAME VARCHAR(255) NOT NULL,
   PRIMARY KEY (ENDPOINTCLASSID)
);

PARTITION TABLE ENDPOINTCLASS ON COLUMN ENDPOINTCLASSID;

CREATE TABLE ENDPOINT (

   ENDPOINTID VARCHAR(36) NOT NULL,
   ENDPOINTNAME VARCHAR(255) NOT NULL,
   PRIMARY KEY (ENDPOINTID)
);

PARTITION TABLE ENDPOINT ON COLUMN ENDPOINTID;



