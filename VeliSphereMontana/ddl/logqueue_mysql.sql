--CREATE TABLE LOGQUEUE (
--
--   EXCHANGENAME VARCHAR(255),
--   MESSAGE VARCHAR(32768),
--   QUEUENAME VARCHAR(255) NOT NULL,
--   ROUTINGKEY VARCHAR(255),
--   IDENTIFIER VARCHAR(36) NOT NULL,
--   PRIMARY KEY (IDENTIFIER, QUEUENAME)
--);

-- PARTITION TABLE LOGQUEUE ON COLUMN QUEUENAME;

CREATE TABLE ENDPOINTPROPERTYLOG (
   ENTRYID VARCHAR(36) NOT NULL,
   ENDPOINTID VARCHAR(255) NOT NULL,
   PROPERTYID VARCHAR(255) NOT NULL,
   PROPERTYENTRY VARCHAR(4096),
   TIME_STAMP TIMESTAMP,
   PRIMARY KEY (ENTRYID, ENDPOINTID)
);



CREATE TABLE USER (

   USERID VARCHAR(36) NOT NULL,
   USERNAME VARCHAR(255) NOT NULL,
   USEREMAIL VARCHAR(255) NOT NULL,
   USERPWHASH VARCHAR(255),
   PLANID VARCHAR(36),
   APIKEY VARCHAR(36),
   PRIMARY KEY (USERID)
);



CREATE TABLE ENDPOINT_USER_LINK (

   LINKID VARCHAR(36) NOT NULL,
   ENDPOINTID VARCHAR(36) NOT NULL,
   USERID VARCHAR(36) NOT NULL,
   PRIMARY KEY (LINKID)
);



CREATE TABLE ENDPOINT_SPHERE_LINK (

   LINKID VARCHAR(36) NOT NULL,
   ENDPOINTID VARCHAR(36) NOT NULL,
   SPHEREID VARCHAR(36) NOT NULL,
   PRIMARY KEY (LINKID)
);


CREATE TABLE SPHERE_USER_LINK (

   LINKID VARCHAR(36) NOT NULL,
   SPHEREID VARCHAR(36) NOT NULL,
   USERID VARCHAR(36) NOT NULL,
   PRIMARY KEY (LINKID, SPHEREID)
);


CREATE TABLE SPHERE (

   SPHEREID VARCHAR(36) NOT NULL,
   SPHERENAME VARCHAR(255) NOT NULL,
   PUBLIC TINYINT,
   PRIMARY KEY (SPHEREID)
);

CREATE TABLE ENDPOINTCLASS (

   ENDPOINTCLASSID VARCHAR(36) NOT NULL,
   ENDPOINTCLASSNAME VARCHAR(255) NOT NULL,
   ENDPOINTCLASSIMAGEURL VARCHAR(255),
   VENDORID VARCHAR(36),
   PRIMARY KEY (ENDPOINTCLASSID)
);


CREATE TABLE ENDPOINT (

   ENDPOINTID VARCHAR(36) NOT NULL,
   ENDPOINTNAME VARCHAR(255) NOT NULL,
   ENDPOINTCLASSID VARCHAR(36) NOT NULL,
   ENDPOINTPROVDATE TIMESTAMP,
   ENDPOINTSTATE VARCHAR(10) NOT NULL,
   SECRET VARCHAR(100) NOT NULL,
   PRIMARY KEY (ENDPOINTID)
);


CREATE TABLE PROPERTY (

   PROPERTYID VARCHAR(36) NOT NULL,
   PROPERTYNAME VARCHAR(255),
   PROPERTYCLASSID VARCHAR(36) NOT NULL,
   ENDPOINTCLASSID VARCHAR(36) NOT NULL,
   ACT TINYINT,
   SENSE TINYINT,
   STATUS TINYINT,
   CONFIGURABLE TINYINT,
   PRIMARY KEY (PROPERTYID)
);


CREATE TABLE PROPERTYCLASS (

   PROPERTYCLASSID VARCHAR(36) NOT NULL,
   PROPERTYCLASSNAME VARCHAR(255),
   PROPERTYCLASSDATATYPE VARCHAR(32) NOT NULL,
   PROPERTYCLASSUNIT VARCHAR(32),
   PRIMARY KEY (PROPERTYCLASSID)
);


CREATE TABLE MESSAGE_ENDPOINT_LINK (

   LINKID VARCHAR(36) NOT NULL,
   ENDPOINTID VARCHAR(36) NOT NULL,
   MESSAGEID VARCHAR(36) NOT NULL,
   PRIMARY KEY (LINKID, ENDPOINTID)
);


CREATE TABLE MESSAGE (

   MESSAGEID VARCHAR(36) NOT NULL,
   EXPRESSIONCOUNT SMALLINT,
   TIME_STAMP TIMESTAMP NOT NULL,
   PRIMARY KEY (MESSAGEID)
);



CREATE TABLE MESSAGE_EXPRESSION_LINK (

   LINKID VARCHAR(36) NOT NULL,
   MESSAGEID VARCHAR(36) NOT NULL,
   EXPRESSIONID VARCHAR(36) NOT NULL,
   PRIMARY KEY (LINKID)
);


CREATE TABLE EXPRESSION (

   EXPRESSIONID VARCHAR(36) NOT NULL,
   PROPERTYID VARCHAR(36) NOT NULL,
   PAYLOAD VARCHAR(4096),
   PRIMARY KEY (EXPRESSIONID)
);



CREATE TABLE CHECK (

   CHECKID VARCHAR(36) NOT NULL,
   ENDPOINTID VARCHAR(36) NOT NULL,
   PROPERTYID VARCHAR(36) NOT NULL,
   CHECKVALUE VARCHAR(4096),
   OPERATOR VARCHAR (32),
   STATE TINYINT,
   EXPIRED TINYINT,
   NAME VARCHAR(255),
   CHECKPATHID VARCHAR(36) NOT NULL,
   PRIMARY KEY (CHECKID, CHECKPATHID, ENDPOINTID)
);



CREATE TABLE CHECKSTATE (

   CHECKID VARCHAR(36) NOT NULL,
   STATE TINYINT,
   CHECKPATHID VARCHAR(36) NOT NULL,
   PRIMARY KEY (CHECKID, CHECKPATHID)
);


CREATE TABLE MULTICHECK (

   MULTICHECKID VARCHAR(36) NOT NULL,
   OPERATOR VARCHAR (32),
   STATE TINYINT,
   EXPIRED TINYINT,
   MULTICHECKNAME VARCHAR(255),
   CHECKPATHID VARCHAR(36) NOT NULL,
   PRIMARY KEY (MULTICHECKID, CHECKPATHID)
);

CREATE TABLE MULTICHECK_CHECK_LINK (

   LINKID VARCHAR(36) NOT NULL,
   MULTICHECKID VARCHAR(36) NOT NULL,
   CHECKID VARCHAR(36) NOT NULL,
   CHECKPATHID VARCHAR(36) NOT NULL,
   PRIMARY KEY (LINKID, CHECKPATHID)
);


CREATE TABLE MULTICHECK_MULTICHECK_LINK (

   LINKID VARCHAR(36) NOT NULL,
   MULTICHECKLID VARCHAR(36) NOT NULL,
   MULTICHECKRID VARCHAR(36) NOT NULL,
   CHECKPATHID VARCHAR(36) NOT NULL,
   PRIMARY KEY (LINKID, CHECKPATHID)
);


CREATE TABLE CHECKPATH (

   CHECKPATHID VARCHAR(36) NOT NULL,
   CHECKPATHNAME VARCHAR(255),
   UIOBJECT VARCHAR(32768),
   OWNERID VARCHAR(36),
   PRIMARY KEY (CHECKPATHID)
);

CREATE TABLE CHECKPATH_CHECK_LINK (

   LINKID VARCHAR(36) NOT NULL,
   CHECKPATHID VARCHAR(36) NOT NULL,
   CHECKID VARCHAR(36) NOT NULL,
   PRIMARY KEY (LINKID, CHECKPATHID)
);




CREATE TABLE CHECKPATH_MULTICHECK_LINK (

   LINKID VARCHAR(36) NOT NULL,
   CHECKPATHID VARCHAR(36) NOT NULL,
   MULTICHECKID VARCHAR(36) NOT NULL,
   PRIMARY KEY (LINKID, CHECKPATHID)
);



CREATE TABLE ACTION (

   ACTIONID VARCHAR(36) NOT NULL,
   ACTIONNAME VARCHAR(255) NOT NULL,
   TARGETENDPOINTID VARCHAR(36),
   TGTEPIDFROMINBOUNDPROP VARCHAR(36),
   EXPIRED TINYINT,
   CHECKID VARCHAR(36),
   MULTICHECKID VARCHAR(36),
   CHECKPATHID VARCHAR(36) NOT NULL,
   PRIMARY KEY (ACTIONID,CHECKPATHID)

);


CREATE TABLE OUTBOUNDPROPERTYACTION (

   OUTBOUNDPROPERTYACTIONID VARCHAR(36) NOT NULL,
   OUTBOUNDPROPERTYID VARCHAR(36),
   INBOUNDPROPERTYID VARCHAR(36),
   CURRENTSTATEPROPERTYID VARCHAR(36),
   CURRENTSTATEENDPOINTID VARCHAR(36),
   CUSTOMPAYLOAD VARCHAR(32768),
   ACTIONID VARCHAR(36) NOT NULL,
   CHECKPATHID VARCHAR(36) NOT NULL,
   PRIMARY KEY (OUTBOUNDPROPERTYACTIONID, CHECKPATHID)
);


CREATE TABLE ITEMCOST (

   ITEMID VARCHAR(36) NOT NULL,
   PLANID VARCHAR(36),
   DESCRIPTION VARCHAR(128),
   COST FLOAT,
   PRIMARY KEY (ITEMID, PLANID)
);

CREATE TABLE PLAN (

   PLANID VARCHAR(36) NOT NULL,
   DESCRIPTION VARCHAR(128),
   PRIMARY KEY (PLANID)
);

CREATE TABLE UNPROVISIONED_ENDPOINT (

   UEPID VARCHAR(36) NOT NULL,
   IDENTIFIER VARCHAR(128),
   ENDPOINTCLASSID VARCHAR(36),
   TIME_STAMP TIMESTAMP,
   SECRET VARCHAR(100) NOT NULL,
   PRIMARY KEY (UEPID)
);

CREATE TABLE VENDOR (

   VENDORID VARCHAR(36) NOT NULL,
   VENDORNAME VARCHAR(255) NOT NULL,
   VENDORIMAGEURL VARCHAR(255),
   PRIMARY KEY (VENDORID)
);


CREATE TABLE ALERT (

   ALERTID VARCHAR(36) NOT NULL,
   USERID VARCHAR(36) NOT NULL,
   ENDPOINTID VARCHAR(36) NOT NULL,
   ALERTNAME VARCHAR(255) NOT NULL,
   PROPERTY VARCHAR(36) NOT NULL,
   OPERATOR VARCHAR(10) NOT NULL,
   THRESHOLD VARCHAR(255) NOT NULL,
   TYPE VARCHAR(10) NOT NULL,
   RECIPIENT VARCHAR(255) NOT NULL,
   TEXT VARCHAR(255) NOT NULL,
   CHECKPATHID VARCHAR(36) NOT NULL,
   PRIMARY KEY (ALERTID)
);



CREATE TABLE LOGICTEMPLATE (

   TEMPLATEID VARCHAR(36) NOT NULL,
   CHECKPATHID VARCHAR(36) NOT NULL,
   CATEGORYID VARCHAR(36) NOT NULL,
   TEMPLATENAME VARCHAR(255) NOT NULL,
   PRIMARY KEY (TEMPLATEID)
);

CREATE TABLE LOGICTEMPLATE_ENDPOINTCLASS_LINK (

   LINKID VARCHAR(36) NOT NULL,
   TEMPLATEID VARCHAR(36) NOT NULL,
   ENDPOINTCLASSID VARCHAR(36) NOT NULL,
   PRIMARY KEY (TEMPLATEID)
);

CREATE TABLE FAVORITES (

   FAVORITEID VARCHAR(36) NOT NULL,
   USERID VARCHAR(36) NOT NULL,
   NAME VARCHAR(255) NOT NULL,
   TARGETTYPE VARCHAR(10) NOT NULL,
   TARGETID VARCHAR(255) NOT NULL,
   PRIMARY KEY (FAVORITEID)
);



