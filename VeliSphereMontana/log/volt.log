2015-03-24 11:44:49,265   INFO  [Estimated Time Updater] HOST: 51660941 estimated time update.
2015-03-24 12:03:09,120   INFO  [Estimated Time Updater] HOST: 95005 estimated time update.
2015-03-24 12:27:34,142   INFO  [Estimated Time Updater] HOST: 94972 estimated time update.
2015-03-24 12:33:04,124   INFO  [Periodic Work] HOST: Host id of this node is: 0
2015-03-24 12:33:04,124   INFO  [Periodic Work] HOST: URL of deployment info: deployment.xml
2015-03-24 12:33:04,124   INFO  [Periodic Work] HOST: Cluster uptime: 2 days 17:28:16.272
2015-03-24 12:33:04,124   INFO  [Periodic Work] HOST: Database start action is Create.
2015-03-24 12:33:04,124   INFO  [Periodic Work] HOST: PID of this Volt process is 14556
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: Listening for native wire protocol clients on port 21212.
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: Listening for admin wire protocol clients on port 21211.
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: Local machine HTTP monitoring is listening on port 8080.
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: Maximum usable Java heap set to 2031 mb.
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: Minimum required Java heap for catalog and server config is 664 MB.
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: Detection of network partitions in the cluster is enabled.
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: Client authentication is not enabled. Anonymous clients accepted.
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: No schedule set for automated snapshots.
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: Using "voltdbroot" for voltdbroot directory.
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: CPU INFO:         2 Cores, 2 Sockets, 2 Hardware Threads
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: CPU DESC:         Intel(R) Xeon(R) CPU E31220 @ 3.10GHz 8192 KB cache
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: HOST MEMORY (MB): 1873
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: OS PROFILE:       Linux 2.6.32-504.3.3.el6.x86_64 amd64 en_US
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: JAVA VERSION:     1.7.0_51
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2015-03-24 12:33:04,125   INFO  [Periodic Work] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2015-03-24 12:33:04,126   INFO  [Periodic Work] HOST:   Host id: 0 with interfaces: 16.1.1.84 2a02:8070:8480:5100:20c:29ff:fe1b:e41%2 21212,21211,8080 [SELF]
2015-03-24 12:33:04,131   INFO  [Periodic Work] HOST: Elastic duration set to 50 milliseconds
2015-03-24 12:33:04,131   INFO  [Periodic Work] HOST: Elastic throughput set to 2 mb/s
2015-03-24 12:33:04,131   INFO  [Periodic Work] HOST: Max temptable size set to 100 mb
2015-03-24 12:33:04,131   INFO  [Periodic Work] HOST: Snapshot priority set to 6 [0 - 10]
2015-03-24 12:53:12,309   INFO  [Estimated Time Updater] HOST: 95107 estimated time update.
2015-03-24 13:17:31,413   INFO  [Estimated Time Updater] HOST: 95076 estimated time update.
2015-03-24 13:29:38,213   WARN  [Thread-0] CONSOLE: The VoltDB server will shut down due to a control-C or other JVM exit.
2015-03-24 14:34:04,278   ERROR [main] COMPILER: [null:108]: DDL Error: "object name already exists: ENDPOINTSTATE" in statement starting on lineno: 108
2015-03-24 13:34:05,366   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2015-03-24 13:34:05,395   INFO  [main] CONSOLE: Build: 4.9.2 voltdb-4.9.2-0-g1469703-local Community Edition
2015-03-24 13:34:05,395   INFO  [main] HOST: Command line arguments: org.voltdb.VoltDB create catalog /home/thorsten/git/velimontana/VeliSphereMontana/catalog.jar deployment deployment.xml host localhost
2015-03-24 13:34:05,423   INFO  [main] HOST: Command line JVM arguments: -Xmx2048m -Djava.awt.headless=true -Dsun.net.inetaddr.ttl=300 -Dsun.net.inetaddr.negative.ttl=3600 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:+UseTLAB -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+UseCondCardMark -Dsun.rmi.dgc.server.gcInterval=9223372036854775807 -Dsun.rmi.dgc.client.gcInterval=9223372036854775807 -XX:CMSWaitDuration=120000 -XX:CMSMaxAbortablePrecleanTime=120000 -XX:+ExplicitGCInvokesConcurrent -XX:+CMSScavengeBeforeRemark -XX:+CMSClassUnloadingEnabled -XX:PermSize=64m -Dlog4j.configuration=file:///home/thorsten/voltdb-4.9.2/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.9.2/voltdb
2015-03-24 13:34:05,423   INFO  [main] HOST: Command line JVM classpath: /home/thorsten/voltdb-4.9.2/voltdb/voltdb-4.9.2.jar:/home/thorsten/voltdb-4.9.2/lib/jackson-core-asl-1.9.13.jar:/home/thorsten/voltdb-4.9.2/lib/httpasyncclient-4.0.1.jar:/home/thorsten/voltdb-4.9.2/lib/jna.jar:/home/thorsten/voltdb-4.9.2/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.9.2/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.9.2/lib/httpcore-4.3.2.jar:/home/thorsten/voltdb-4.9.2/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.9.2/lib/commons-logging-1.1.3.jar:/home/thorsten/voltdb-4.9.2/lib/kafka_2.8.0-0.8.1.jar:/home/thorsten/voltdb-4.9.2/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.9.2/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.9.2/lib/commons-codec-1.6.jar:/home/thorsten/voltdb-4.9.2/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.9.2/lib/avro-1.7.7.jar:/home/thorsten/voltdb-4.9.2/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.9.2/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.9.2/lib/scala-library.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.9.2/lib/jsch-0.1.51.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/httpcore-nio-4.3.2.jar:/home/thorsten/voltdb-4.9.2/lib/jline-2.10.jar:/home/thorsten/voltdb-4.9.2/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.9.2/lib/jackson-mapper-asl-1.9.13.jar:/home/thorsten/voltdb-4.9.2/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.9.2/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/httpclient-4.3.2.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/zmq-2.1.11.jar:/home/thorsten/voltdb-4.9.2/lib/metrics-core-2.2.0.jar
2015-03-24 13:34:05,456   INFO  [main] NETWORK: Default network thread count: 2
2015-03-24 13:34:05,577   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2015-03-24 13:34:05,577   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2015-03-24 13:34:05,590   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2015-03-24 13:34:05,671   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2015-03-24 13:34:05,706   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2015-03-24 13:34:05,858   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@2a975b0e
2015-03-24 13:34:05,865   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2015-03-24 13:34:05,876   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:39754
2015-03-24 13:34:05,876   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2015-03-24 13:34:05,905   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:39754
2015-03-24 13:34:05,927   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1a8cabdc28800000, negotiated timeout = 6000
2015-03-24 13:34:05,927   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x1a8cabdc28800000 with negotiated timeout 6000 for client /127.0.0.1:39754
2015-03-24 13:34:05,992   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2015-03-24 13:34:06,026   INFO  [main] HOST: Host id of this node is: 0
2015-03-24 13:34:06,026   INFO  [main] CONSOLE: Host id of this node is: 0
2015-03-24 13:34:06,214   INFO  [main] HOST: URL of deployment: deployment.xml
2015-03-24 13:34:06,726   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2015-03-24 13:34:07,272   INFO  [main] HOST: Searching for license file located /home/thorsten/git/velimontana/VeliSphereMontana/license.xml
2015-03-24 13:34:07,304   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2015-03-24 13:34:09,477   INFO  [main] EXPORT: System is not using any export functionality.
2015-03-24 13:34:09,486   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2015-03-24 13:34:09,755   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.9.2). A confirmation message will follow if the loading is successful.
2015-03-24 13:34:09,917   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.9.2.
2015-03-24 13:34:10,265   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2015-03-24 13:34:10,526   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2015-03-24 13:34:10,591   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2015-03-24 13:34:10,626   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2015-03-24 13:34:10,635   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2015-03-24 13:34:10,636   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2015-03-24 13:34:10,640   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2015-03-24 13:34:10,799   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 160 ms.
2015-03-24 13:34:10,799   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 169 ms.
2015-03-24 13:34:10,802   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 211 ms.
2015-03-24 13:34:10,822   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-03-24 13:34:10,822   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-03-24 13:34:10,822   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-03-24 13:34:10,833   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2015-03-24 13:34:10,835   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 14 ms.
2015-03-24 13:34:10,842   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-03-24 13:34:10,901   INFO  [main] HOST: Database start action is Create.
2015-03-24 13:34:11,017   INFO  [main] HOST: PID of this Volt process is 19055
2015-03-24 13:34:11,017   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2015-03-24 13:34:11,018   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2015-03-24 13:34:11,018   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2015-03-24 13:34:11,018   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2015-03-24 13:34:11,018   INFO  [main] HOST: Maximum usable Java heap set to 2031 mb.
2015-03-24 13:34:11,018   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 664 MB.
2015-03-24 13:34:11,018   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2015-03-24 13:34:11,019   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2015-03-24 13:34:11,019   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2015-03-24 13:34:11,019   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2015-03-24 13:34:11,019   INFO  [main] HOST: No schedule set for automated snapshots.
2015-03-24 13:34:11,019   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2015-03-24 13:34:11,019   INFO  [main] HOST: CPU INFO:         2 Cores, 2 Sockets, 2 Hardware Threads
2015-03-24 13:34:11,019   INFO  [main] HOST: CPU DESC:         Intel(R) Xeon(R) CPU E31220 @ 3.10GHz 8192 KB cache
2015-03-24 13:34:11,019   INFO  [main] HOST: HOST MEMORY (MB): 1873
2015-03-24 13:34:11,019   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-504.3.3.el6.x86_64 amd64 en_US
2015-03-24 13:34:11,020   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2015-03-24 13:34:11,020   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2015-03-24 13:34:11,020   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2015-03-24 13:34:11,021   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2015-03-24 13:34:11,022   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.84 2a02:8070:8480:5100:20c:29ff:fe1b:e41%2 21212,21211,8080 [SELF]
2015-03-24 13:34:11,022   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2015-03-24 13:34:11,022   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2015-03-24 13:34:11,053   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2015-03-24 13:34:11,055   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2015-03-24 13:34:11,068   INFO  [Thread-9] HOST: Logging config info
2015-03-24 13:34:11,212   INFO  [Thread-10] CONSOLE: Server completed initialization.
2015-03-24 13:43:22,519   INFO  [Estimated Time Updater] HOST: 95085 estimated time update.
2015-03-24 13:45:48,156   WARN  [Thread-0] CONSOLE: The VoltDB server will shut down due to a control-C or other JVM exit.
2015-03-24 14:46:13,612   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-03-24 14:46:13,629   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINTPROPERTYLOG_ENTRYID_ENDPOINTID on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-03-24 14:46:13,762   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_USER_USERID on table: USER of type: BALANCED_TREE
2015-03-24 14:46:13,763   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINT_USER_LINK_LINKID on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2015-03-24 14:46:13,767   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINT_SPHERE_LINK_LINKID on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2015-03-24 14:46:13,771   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_SPHERE_USER_LINK_LINKID_SPHEREID on table: SPHERE_USER_LINK of type: BALANCED_TREE
2015-03-24 14:46:13,771   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_SPHERE_SPHEREID on table: SPHERE of type: BALANCED_TREE
2015-03-24 14:46:13,771   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINTCLASS_ENDPOINTCLASSID on table: ENDPOINTCLASS of type: BALANCED_TREE
2015-03-24 14:46:13,774   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2015-03-24 14:46:13,774   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINT_ENDPOINTID on table: ENDPOINT of type: BALANCED_TREE
2015-03-24 14:46:13,775   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2015-03-24 14:46:13,776   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2015-03-24 14:46:13,776   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_PROPERTY_PROPERTYID on table: PROPERTY of type: BALANCED_TREE
2015-03-24 14:46:13,777   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_PROPERTYCLASS_PROPERTYCLASSID on table: PROPERTYCLASS of type: BALANCED_TREE
2015-03-24 14:46:13,777   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MESSAGE_ENDPOINT_LINK_LINKID_ENDPOINTID on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2015-03-24 14:46:13,778   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MESSAGE_MESSAGEID on table: MESSAGE of type: BALANCED_TREE
2015-03-24 14:46:13,778   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MESSAGE_EXPRESSION_LINK_LINKID on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2015-03-24 14:46:13,779   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_EXPRESSION_EXPRESSIONID on table: EXPRESSION of type: BALANCED_TREE
2015-03-24 14:46:13,779   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2015-03-24 14:46:13,780   INFO  [main] COMPILER: [null]: Created index: CHCOMB on table: CHECK of type: BALANCED_TREE
2015-03-24 14:46:13,780   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2015-03-24 14:46:13,780   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2015-03-24 14:46:13,780   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2015-03-24 14:46:13,780   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECK_CHECKID_CHECKPATHID_ENDPOINTID on table: CHECK of type: BALANCED_TREE
2015-03-24 14:46:13,781   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECKSTATE_CHECKID_CHECKPATHID on table: CHECKSTATE of type: BALANCED_TREE
2015-03-24 14:46:13,782   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2015-03-24 14:46:13,782   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2015-03-24 14:46:13,783   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MULTICHECK_MULTICHECKID_CHECKPATHID on table: MULTICHECK of type: BALANCED_TREE
2015-03-24 14:46:13,783   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-03-24 14:46:13,783   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-03-24 14:46:13,783   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MULTICHECK_CHECK_LINK_LINKID_CHECKPATHID on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-03-24 14:46:13,784   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-24 14:46:13,784   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-24 14:46:13,784   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MULTICHECK_MULTICHECK_LINK_LINKID_CHECKPATHID on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-24 14:46:13,785   INFO  [main] COMPILER: [null]: Created index: CPOWNID on table: CHECKPATH of type: BALANCED_TREE
2015-03-24 14:46:13,785   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECKPATH_CHECKPATHID on table: CHECKPATH of type: BALANCED_TREE
2015-03-24 14:46:13,786   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-03-24 14:46:13,786   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-03-24 14:46:13,786   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECKPATH_CHECK_LINK_LINKID_CHECKPATHID on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-03-24 14:46:13,787   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-24 14:46:13,787   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECKPATH_MULTICHECK_LINK_LINKID_CHECKPATHID on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-24 14:46:13,791   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2015-03-24 14:46:13,791   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2015-03-24 14:46:13,791   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ACTION_ACTIONID_CHECKPATHID on table: ACTION of type: BALANCED_TREE
2015-03-24 14:46:13,791   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-03-24 14:46:13,792   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_OUTBOUNDPROPERTYACTION_OUTBOUNDPROPERTYACTIONID_CHECKPATHID on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-03-24 14:46:13,792   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ITEMCOST_ITEMID_PLANID on table: ITEMCOST of type: BALANCED_TREE
2015-03-24 14:46:13,792   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_PLAN_PLANID on table: PLAN of type: BALANCED_TREE
2015-03-24 14:46:13,794   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_UNPROVISIONED_ENDPOINT_UEPID on table: UNPROVISIONED_ENDPOINT of type: BALANCED_TREE
2015-03-24 14:46:13,795   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_VENDOR_VENDORID on table: VENDOR of type: BALANCED_TREE
2015-03-24 14:46:13,826   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 14:46:14,123   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,219   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,307   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,315   INFO  [main] COMPILER: [ACTION.upsert]: Compiling Statement: UPSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 14:46:14,321   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 14:46:14,353   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-03-24 14:46:14,380   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-03-24 14:46:14,380   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-03-24 14:46:14,384   INFO  [main] COMPILER: [CHECK.upsert]: Compiling Statement: UPSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 14:46:14,387   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?, ?);
2015-03-24 14:46:14,488   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-03-24 14:46:14,496   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-03-24 14:46:14,499   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ?, OWNERID = ? WHERE (CHECKPATHID = ?);
2015-03-24 14:46:14,502   INFO  [main] COMPILER: [CHECKPATH.upsert]: Compiling Statement: UPSERT INTO CHECKPATH VALUES (?, ?, ?, ?);
2015-03-24 14:46:14,507   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2015-03-24 14:46:14,510   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,513   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,518   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,567   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.upsert]: Compiling Statement: UPSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2015-03-24 14:46:14,575   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2015-03-24 14:46:14,576   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,579   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,615   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,621   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.upsert]: Compiling Statement: UPSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2015-03-24 14:46:14,624   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2015-03-24 14:46:14,626   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,628   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,630   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,633   INFO  [main] COMPILER: [CHECKSTATE.upsert]: Compiling Statement: UPSERT INTO CHECKSTATE VALUES (?, ?, ?);
2015-03-24 14:46:14,640   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?, ?, ?, ?);
2015-03-24 14:46:14,645   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2015-03-24 14:46:14,649   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ?, ENDPOINTPROVDATE = ?, ENDPOINTSTATE = ?, SECRET = ? WHERE (ENDPOINTID = ?);
2015-03-24 14:46:14,654   INFO  [main] COMPILER: [ENDPOINT.upsert]: Compiling Statement: UPSERT INTO ENDPOINT VALUES (?, ?, ?, ?, ?, ?);
2015-03-24 14:46:14,656   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?, ?, ?);
2015-03-24 14:46:14,660   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-03-24 14:46:14,662   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-03-24 14:46:14,664   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ? WHERE (ENDPOINTCLASSID = ?);
2015-03-24 14:46:14,667   INFO  [main] COMPILER: [ENDPOINTCLASS.upsert]: Compiling Statement: UPSERT INTO ENDPOINTCLASS VALUES (?, ?, ?, ?);
2015-03-24 14:46:14,676   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2015-03-24 14:46:14,678   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-03-24 14:46:14,681   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-03-24 14:46:14,684   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-03-24 14:46:14,688   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.upsert]: Compiling Statement: UPSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2015-03-24 14:46:14,690   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2015-03-24 14:46:14,692   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2015-03-24 14:46:14,694   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2015-03-24 14:46:14,696   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.upsert]: Compiling Statement: UPSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2015-03-24 14:46:14,698   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2015-03-24 14:46:14,700   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2015-03-24 14:46:14,702   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2015-03-24 14:46:14,705   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.upsert]: Compiling Statement: UPSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2015-03-24 14:46:14,709   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2015-03-24 14:46:14,710   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2015-03-24 14:46:14,713   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2015-03-24 14:46:14,715   INFO  [main] COMPILER: [EXPRESSION.upsert]: Compiling Statement: UPSERT INTO EXPRESSION VALUES (?, ?, ?);
2015-03-24 14:46:14,719   INFO  [main] COMPILER: [ITEMCOST.insert]: Compiling Statement: INSERT INTO ITEMCOST VALUES (?, ?, ?, ?);
2015-03-24 14:46:14,810   INFO  [main] COMPILER: [ITEMCOST.delete]: Compiling Statement: DELETE FROM ITEMCOST WHERE (ITEMID = ?) AND (PLANID = ?);
2015-03-24 14:46:14,817   INFO  [main] COMPILER: [ITEMCOST.update]: Compiling Statement: UPDATE ITEMCOST SET ITEMID = ?, PLANID = ?, DESCRIPTION = ?, COST = ? WHERE (ITEMID = ?) AND (PLANID = ?);
2015-03-24 14:46:14,837   INFO  [main] COMPILER: [ITEMCOST.upsert]: Compiling Statement: UPSERT INTO ITEMCOST VALUES (?, ?, ?, ?);
2015-03-24 14:46:14,840   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2015-03-24 14:46:14,842   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2015-03-24 14:46:14,844   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2015-03-24 14:46:14,846   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2015-03-24 14:46:14,848   INFO  [main] COMPILER: [MESSAGE.upsert]: Compiling Statement: UPSERT INTO MESSAGE VALUES (?, ?, ?);
2015-03-24 14:46:14,850   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2015-03-24 14:46:14,851   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-03-24 14:46:14,854   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-03-24 14:46:14,856   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-03-24 14:46:14,858   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.upsert]: Compiling Statement: UPSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2015-03-24 14:46:14,860   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2015-03-24 14:46:14,863   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2015-03-24 14:46:14,872   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2015-03-24 14:46:14,875   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.upsert]: Compiling Statement: UPSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2015-03-24 14:46:14,876   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2015-03-24 14:46:14,878   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,882   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,884   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,887   INFO  [main] COMPILER: [MULTICHECK.upsert]: Compiling Statement: UPSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2015-03-24 14:46:14,889   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2015-03-24 14:46:14,934   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,939   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,946   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,949   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.upsert]: Compiling Statement: UPSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2015-03-24 14:46:14,950   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2015-03-24 14:46:14,952   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,955   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,957   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,960   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.upsert]: Compiling Statement: UPSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2015-03-24 14:46:14,961   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 14:46:14,984   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,989   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,993   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 14:46:14,997   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.upsert]: Compiling Statement: UPSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 14:46:15,005   INFO  [main] COMPILER: [PLAN.insert]: Compiling Statement: INSERT INTO PLAN VALUES (?, ?);
2015-03-24 14:46:15,007   INFO  [main] COMPILER: [PLAN.delete]: Compiling Statement: DELETE FROM PLAN WHERE (PLANID = ?);
2015-03-24 14:46:15,014   INFO  [main] COMPILER: [PLAN.update]: Compiling Statement: UPDATE PLAN SET PLANID = ?, DESCRIPTION = ? WHERE (PLANID = ?);
2015-03-24 14:46:15,017   INFO  [main] COMPILER: [PLAN.upsert]: Compiling Statement: UPSERT INTO PLAN VALUES (?, ?);
2015-03-24 14:46:15,018   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 14:46:15,021   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2015-03-24 14:46:15,031   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2015-03-24 14:46:15,033   INFO  [main] COMPILER: [PROPERTY.upsert]: Compiling Statement: UPSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 14:46:15,042   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2015-03-24 14:46:15,044   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2015-03-24 14:46:15,049   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2015-03-24 14:46:15,089   INFO  [main] COMPILER: [PROPERTYCLASS.upsert]: Compiling Statement: UPSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2015-03-24 14:46:15,094   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2015-03-24 14:46:15,145   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2015-03-24 14:46:15,146   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2015-03-24 14:46:15,148   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2015-03-24 14:46:15,151   INFO  [main] COMPILER: [SPHERE.upsert]: Compiling Statement: UPSERT INTO SPHERE VALUES (?, ?, ?);
2015-03-24 14:46:15,153   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2015-03-24 14:46:15,161   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-03-24 14:46:15,162   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-03-24 14:46:15,165   INFO  [main] COMPILER: [SPHERE_USER_LINK.upsert]: Compiling Statement: UPSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2015-03-24 14:46:15,166   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.insert]: Compiling Statement: INSERT INTO UNPROVISIONED_ENDPOINT VALUES (?, ?, ?, ?, ?);
2015-03-24 14:46:15,168   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.delete]: Compiling Statement: DELETE FROM UNPROVISIONED_ENDPOINT WHERE (UEPID = ?);
2015-03-24 14:46:15,170   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.update]: Compiling Statement: UPDATE UNPROVISIONED_ENDPOINT SET UEPID = ?, IDENTIFIER = ?, ENDPOINTCLASSID = ?, TIME_STAMP = ?, SECRET = ? WHERE (UEPID = ?);
2015-03-24 14:46:15,172   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.upsert]: Compiling Statement: UPSERT INTO UNPROVISIONED_ENDPOINT VALUES (?, ?, ?, ?, ?);
2015-03-24 14:46:15,174   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?, ?);
2015-03-24 14:46:15,175   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2015-03-24 14:46:15,177   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2015-03-24 14:46:15,179   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ?, PLANID = ? WHERE (USERID = ?);
2015-03-24 14:46:15,182   INFO  [main] COMPILER: [USER.upsert]: Compiling Statement: UPSERT INTO USER VALUES (?, ?, ?, ?, ?);
2015-03-24 14:46:15,183   INFO  [main] COMPILER: [VENDOR.insert]: Compiling Statement: INSERT INTO VENDOR VALUES (?, ?, ?);
2015-03-24 14:46:15,185   INFO  [main] COMPILER: [VENDOR.select]: Compiling Statement: SELECT * FROM VENDOR WHERE (VENDORID = ?);
2015-03-24 14:46:15,187   INFO  [main] COMPILER: [VENDOR.delete]: Compiling Statement: DELETE FROM VENDOR WHERE (VENDORID = ?);
2015-03-24 14:46:15,188   INFO  [main] COMPILER: [VENDOR.update]: Compiling Statement: UPDATE VENDOR SET VENDORID = ?, VENDORNAME = ?, VENDORIMAGEURL = ? WHERE (VENDORID = ?);
2015-03-24 14:46:15,190   INFO  [main] COMPILER: [VENDOR.upsert]: Compiling Statement: UPSERT INTO VENDOR VALUES (?, ?, ?);
2015-03-24 14:46:15,326   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2015-03-24 14:46:15,330   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,332   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,333   INFO  [main] COMPILER: [UI_SelectSpheresForUser.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;
2015-03-24 14:46:15,339   WARN  [main] COMPILER: [UI_SelectSpheresForUser.class]: Procedure UI_SelectSpheresForUser has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,339   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,340   INFO  [main] COMPILER: [UI_SelectActionsForCheckpathID.class]: Compiling Statement: SELECT ACTIONID, TARGETENDPOINTID, CHECKPATHNAME FROM ACTION JOIN CHECKPATH ON CHECKPATH.CHECKPATHID = ACTION.CHECKPATHID WHERE ACTION.CHECKPATHID = ? ORDER BY ACTIONID;
2015-03-24 14:46:15,347   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,349   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-03-24 14:46:15,379   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,380   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,381   INFO  [main] COMPILER: [UI_SelectAllVendors.class]: Compiling Statement: SELECT * FROM VENDOR ORDER BY VENDORNAME;
2015-03-24 14:46:15,404   WARN  [main] COMPILER: [UI_SelectAllVendors.class]: Procedure UI_SelectAllVendors has a statement with a non-deterministic result - statement: "SELECT * FROM VENDOR ORDER BY VENDORNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,404   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,412   INFO  [main] COMPILER: [UI_SelectPublicSpheresForUser.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID WHERE SPHERE_USER_LINK.USERID = ? AND SPHERE.PUBLIC = 1 ORDER BY SPHERENAME;
2015-03-24 14:46:15,422   WARN  [main] COMPILER: [UI_SelectPublicSpheresForUser.class]: Procedure UI_SelectPublicSpheresForUser has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID WHERE SPHERE_USER_LINK.USERID = ? AND SPHERE.PUBLIC = 1 ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,422   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,423   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2015-03-24 14:46:15,426   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,426   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,427   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2015-03-24 14:46:15,429   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,432   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2015-03-24 14:46:15,515   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,516   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2015-03-24 14:46:15,535   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: index scan may provide insufficient ordering
2015-03-24 14:46:15,535   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,536   INFO  [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: Compiling Statement: UPDATE SPHERE SET PUBLIC = ? WHERE SPHEREID = ?;
2015-03-24 14:46:15,539   INFO  [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET PUBLIC = ? WHERE SPHEREID = ?;'
2015-03-24 14:46:15,539   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,540   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: UPDATE ACTION SET ACTIONNAME = ?, TARGETENDPOINTID = ?, CHECKID =?, CHECKPATHID = ? WHERE ACTIONID = ?
2015-03-24 14:46:15,543   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, '', '', ?, ?, ?)
2015-03-24 14:46:15,544   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, '', 0, ?, '', ?)
2015-03-24 14:46:15,546   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE OUTBOUNDPROPERTYACTIONID = ?
2015-03-24 14:46:15,559   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,560   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2015-03-24 14:46:15,594   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2015-03-24 14:46:15,594   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,594   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,596   INFO  [main] COMPILER: [UI_SelectUsersWithPublicSpheres.class]: Compiling Statement: SELECT USERID FROM SPHERE_USER_LINK JOIN SPHERE ON SPHERE_USER_LINK.SPHEREID = SPHERE.SPHEREID WHERE SPHERE.PUBLIC = 1 ORDER BY USERID;
2015-03-24 14:46:15,599   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,600   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2015-03-24 14:46:15,602   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,603   INFO  [main] COMPILER: [UI_UpdateEndpointClass.class]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ?  WHERE ENDPOINTCLASSID = ?;
2015-03-24 14:46:15,605   INFO  [main] COMPILER: [UI_UpdateEndpointClass.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 3 of statement ' UPDATE ENDPOINTCLASS SET ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ?  WHERE ENDPOINTCLASSID = ?;'
2015-03-24 14:46:15,605   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,606   INFO  [main] COMPILER: [UI_SelectAllSpheresForUserID.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;
2015-03-24 14:46:15,621   WARN  [main] COMPILER: [UI_SelectAllSpheresForUserID.class]: Procedure UI_SelectAllSpheresForUserID has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,621   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,623   INFO  [main] COMPILER: [UI_SelectActionsForMulticheckID.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.MULTICHECKID = ? ORDER BY ACTION.ACTIONID;
2015-03-24 14:46:15,630   WARN  [main] COMPILER: [UI_SelectActionsForMulticheckID.class]: Procedure UI_SelectActionsForMulticheckID has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.MULTICHECKID = ? ORDER BY ACTION.ACTIONID;", reason: index scan may provide insufficient ordering
2015-03-24 14:46:15,630   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,631   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2015-03-24 14:46:15,634   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,634   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,635   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2015-03-24 14:46:15,637   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,638   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2015-03-24 14:46:15,641   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,642   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2015-03-24 14:46:15,645   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,646   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2015-03-24 14:46:15,670   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,670   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,671   INFO  [main] COMPILER: [UI_UpdateVendor.class]: Compiling Statement: UPDATE VENDOR SET VENDORNAME = ?, VENDORIMAGEURL = ? WHERE VENDORID = ?;
2015-03-24 14:46:15,674   INFO  [main] COMPILER: [UI_UpdateVendor.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement ' UPDATE VENDOR SET VENDORNAME = ?, VENDORIMAGEURL = ? WHERE VENDORID = ?;'
2015-03-24 14:46:15,674   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,675   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2015-03-24 14:46:15,680   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,681   INFO  [main] COMPILER: [UI_SelectSphereForSphereID.class]: Compiling Statement: SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;
2015-03-24 14:46:15,684   INFO  [main] COMPILER: [UI_SelectSphereForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;'
2015-03-24 14:46:15,684   WARN  [main] COMPILER: [UI_SelectSphereForSphereID.class]: Procedure UI_SelectSphereForSphereID has a statement with a non-deterministic result - statement: "SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,684   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,685   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2015-03-24 14:46:15,690   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,691   INFO  [main] COMPILER: [UI_SelectUnprovisionedEPforIdentifier.class]: Compiling Statement: select UEPID, IDENTIFIER, ENDPOINTCLASSNAME, ENDPOINTCLASSID, TIME_STAMP from UNPROVISIONED_ENDPOINT JOIN ENDPOINTCLASS ON UNPROVISIONED_ENDPOINT.ENDPOINTCLASSID = ENDPOINTCLASS.ENDPOINTCLASSID WHERE IDENTIFIER = ?;
2015-03-24 14:46:15,694   WARN  [main] COMPILER: [UI_SelectUnprovisionedEPforIdentifier.class]: Procedure UI_SelectUnprovisionedEPforIdentifier has a statement with a non-deterministic result - statement: "select UEPID, IDENTIFIER, ENDPOINTCLASSNAME, ENDPOINTCLASSID, TIME_STAMP from UNPROVISIONED_ENDPOINT JOIN ENDPOINTCLASS ON UNPROVISIONED_ENDPOINT.ENDPOINTCLASSID = ENDPOINTCLASS.ENDPOINTCLASSID WHERE IDENTIFIER = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,694   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,696   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2015-03-24 14:46:15,698   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,698   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,706   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2015-03-24 14:46:15,715   WARN  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Procedure FindMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,715   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,716   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2015-03-24 14:46:15,719   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,720   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2015-03-24 14:46:15,722   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2015-03-24 14:46:15,722   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,723   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2015-03-24 14:46:15,726   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,727   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2015-03-24 14:46:15,729   WARN  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Procedure UI_SelectCheckForCheckID has a statement with a non-deterministic result - statement: "select checkid, name from check where checkid = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,729   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,730   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2015-03-24 14:46:15,734   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2015-03-24 14:46:15,738   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2015-03-24 14:46:15,738   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,738   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,739   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2015-03-24 14:46:15,742   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,743   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2015-03-24 14:46:15,745   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2015-03-24 14:46:15,745   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,747   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2015-03-24 14:46:15,750   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,751   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE ACTIONID = ?;
2015-03-24 14:46:15,753   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ?;
2015-03-24 14:46:15,758   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: DELETE FROM ACTION WHERE ACTIONID = ?;
2015-03-24 14:46:15,760   WARN  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Procedure UI_DeleteAllActionsForCheckID is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT ACTIONID FROM ACTION WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,760   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,762   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2015-03-24 14:46:15,814   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,814   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,815   INFO  [main] COMPILER: [UI_SelectActionsForCheckID.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.CHECKID = ? ORDER BY ACTION.ACTIONID;
2015-03-24 14:46:15,819   WARN  [main] COMPILER: [UI_SelectActionsForCheckID.class]: Procedure UI_SelectActionsForCheckID has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.CHECKID = ? ORDER BY ACTION.ACTIONID;", reason: index scan may provide insufficient ordering
2015-03-24 14:46:15,825   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,832   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForPropertyID.class]: Compiling Statement: select * from property WHERE propertyid = ? ORDER BY propertyid;
2015-03-24 14:46:15,835   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,836   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2015-03-24 14:46:15,841   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,841   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,845   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2015-03-24 14:46:15,849   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2015-03-24 14:46:15,854   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2015-03-24 14:46:15,856   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2015-03-24 14:46:15,858   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,860   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2015-03-24 14:46:15,862   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,862   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,864   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2015-03-24 14:46:15,873   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2015-03-24 14:46:15,874   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,876   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,877   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2015-03-24 14:46:15,882   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,883   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2015-03-24 14:46:15,885   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,886   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH WHERE OWNERID = ? ORDER BY CHECKPATHNAME;
2015-03-24 14:46:15,889   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH WHERE OWNERID = ? ORDER BY CHECKPATHNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,889   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,890   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2015-03-24 14:46:15,893   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2015-03-24 14:46:15,893   WARN  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Procedure UI_SelectCheckpathForCheckpathID has a statement with a non-deterministic result - statement: "select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,894   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,895   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2015-03-24 14:46:15,897   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,897   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,898   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-03-24 14:46:15,901   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2015-03-24 14:46:15,903   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,905   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,909   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2015-03-24 14:46:15,911   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,911   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,912   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2015-03-24 14:46:15,914   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,931   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2015-03-24 14:46:15,939   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,941   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE LINKID = ?;
2015-03-24 14:46:15,943   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,944   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE ACTIONID = ?;
2015-03-24 14:46:15,946   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ?;
2015-03-24 14:46:15,948   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: DELETE FROM ACTION WHERE ACTIONID = ?;
2015-03-24 14:46:15,950   WARN  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Procedure UI_DeleteAllActionsForMulticheckID is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,950   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,951   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2015-03-24 14:46:15,953   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,954   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,954   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2015-03-24 14:46:15,957   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,957   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,958   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2015-03-24 14:46:15,961   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,962   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2015-03-24 14:46:15,964   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,970   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,972   INFO  [main] COMPILER: [UI_SelectVendorForVendorID.class]: Compiling Statement: SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;
2015-03-24 14:46:15,974   INFO  [main] COMPILER: [UI_SelectVendorForVendorID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;'
2015-03-24 14:46:15,974   WARN  [main] COMPILER: [UI_SelectVendorForVendorID.class]: Procedure UI_SelectVendorForVendorID has a statement with a non-deterministic result - statement: "SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,974   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,975   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2015-03-24 14:46:15,978   WARN  [main] COMPILER: [FindChecksForCheckID.class]: Procedure FindChecksForCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:15,978   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,979   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: UPDATE ACTION SET ACTIONNAME = ?, TARGETENDPOINTID = ?, MULTICHECKID =?, CHECKPATHID = ? WHERE ACTIONID = ?
2015-03-24 14:46:15,981   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, '', '', ?, ?, ?)
2015-03-24 14:46:15,983   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, '', 0, '', ?, ?)
2015-03-24 14:46:15,986   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE OUTBOUNDPROPERTYACTIONID = ?
2015-03-24 14:46:15,989   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,990   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2015-03-24 14:46:15,994   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:15,995   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2015-03-24 14:46:15,997   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2015-03-24 14:46:16,004   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:16,006   INFO  [main] COMPILER: [UI_SelectUserForUserID.class]: Compiling Statement: SELECT USERID, USERNAME, USEREMAIL FROM USER WHERE USERID = ? ORDER BY USERNAME;
2015-03-24 14:46:16,010   INFO  [main] COMPILER: [UI_SelectUserForUserID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT USERID, USERNAME, USEREMAIL FROM USER WHERE USERID = ? ORDER BY USERNAME;'
2015-03-24 14:46:16,010   WARN  [main] COMPILER: [UI_SelectUserForUserID.class]: Procedure UI_SelectUserForUserID has a statement with a non-deterministic result - statement: "SELECT USERID, USERNAME, USEREMAIL FROM USER WHERE USERID = ? ORDER BY USERNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:16,010   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:16,012   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKVALUE, CHECKPATHID;
2015-03-24 14:46:16,015   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKVALUE, CHECKPATHID;", reason: index scan may provide insufficient ordering
2015-03-24 14:46:16,015   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:16,016   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2015-03-24 14:46:16,043   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:16,043   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:16,044   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2015-03-24 14:46:16,095   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2015-03-24 14:46:16,146   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:16,148   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2015-03-24 14:46:16,152   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2015-03-24 14:46:16,155   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2015-03-24 14:46:16,157   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2015-03-24 14:46:16,159   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:16,160   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2015-03-24 14:46:16,162   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2015-03-24 14:46:16,162   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:16,163   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID, ENDPOINTPROVDATE, ENDPOINTSTATE FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2015-03-24 14:46:16,166   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:16,166   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2015-03-24 14:46:16,169   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2015-03-24 14:46:16,169   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:16,169   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2015-03-24 14:46:16,172   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2015-03-24 14:46:16,172   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:16,172   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:16,172   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2015-03-24 14:46:16,177   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 14:46:16,177   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:16,178   INFO  [main] COMPILER: [SRV_UpdateEndpointState.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTSTATE = ? WHERE ENDPOINTID = ?;
2015-03-24 14:46:16,234   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:16,235   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2015-03-24 14:46:16,240   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: index scan may provide insufficient ordering
2015-03-24 14:46:16,240   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 14:46:16,240   INFO  [main] COMPILER: [UI_UpdatePropertyClass.class]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE PROPERTYCLASSID = ?;
2015-03-24 14:46:16,242   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 13:46:18,036   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2015-03-24 13:46:18,073   INFO  [main] CONSOLE: Build: 4.9.2 voltdb-4.9.2-0-g1469703-local Community Edition
2015-03-24 13:46:18,073   INFO  [main] HOST: Command line arguments: org.voltdb.VoltDB create catalog /home/thorsten/git/velimontana/VeliSphereMontana/catalog.jar deployment deployment.xml host localhost
2015-03-24 13:46:18,136   INFO  [main] HOST: Command line JVM arguments: -Xmx2048m -Djava.awt.headless=true -Dsun.net.inetaddr.ttl=300 -Dsun.net.inetaddr.negative.ttl=3600 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:+UseTLAB -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+UseCondCardMark -Dsun.rmi.dgc.server.gcInterval=9223372036854775807 -Dsun.rmi.dgc.client.gcInterval=9223372036854775807 -XX:CMSWaitDuration=120000 -XX:CMSMaxAbortablePrecleanTime=120000 -XX:+ExplicitGCInvokesConcurrent -XX:+CMSScavengeBeforeRemark -XX:+CMSClassUnloadingEnabled -XX:PermSize=64m -Dlog4j.configuration=file:///home/thorsten/voltdb-4.9.2/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.9.2/voltdb
2015-03-24 13:46:18,137   INFO  [main] HOST: Command line JVM classpath: /home/thorsten/voltdb-4.9.2/voltdb/voltdb-4.9.2.jar:/home/thorsten/voltdb-4.9.2/lib/jackson-core-asl-1.9.13.jar:/home/thorsten/voltdb-4.9.2/lib/httpasyncclient-4.0.1.jar:/home/thorsten/voltdb-4.9.2/lib/jna.jar:/home/thorsten/voltdb-4.9.2/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.9.2/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.9.2/lib/httpcore-4.3.2.jar:/home/thorsten/voltdb-4.9.2/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.9.2/lib/commons-logging-1.1.3.jar:/home/thorsten/voltdb-4.9.2/lib/kafka_2.8.0-0.8.1.jar:/home/thorsten/voltdb-4.9.2/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.9.2/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.9.2/lib/commons-codec-1.6.jar:/home/thorsten/voltdb-4.9.2/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.9.2/lib/avro-1.7.7.jar:/home/thorsten/voltdb-4.9.2/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.9.2/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.9.2/lib/scala-library.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.9.2/lib/jsch-0.1.51.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/httpcore-nio-4.3.2.jar:/home/thorsten/voltdb-4.9.2/lib/jline-2.10.jar:/home/thorsten/voltdb-4.9.2/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.9.2/lib/jackson-mapper-asl-1.9.13.jar:/home/thorsten/voltdb-4.9.2/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.9.2/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/httpclient-4.3.2.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/zmq-2.1.11.jar:/home/thorsten/voltdb-4.9.2/lib/metrics-core-2.2.0.jar
2015-03-24 13:46:18,181   INFO  [main] NETWORK: Default network thread count: 2
2015-03-24 13:46:18,299   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2015-03-24 13:46:18,299   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2015-03-24 13:46:18,326   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2015-03-24 13:46:18,387   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2015-03-24 13:46:18,401   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2015-03-24 13:46:18,573   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@38250a08
2015-03-24 13:46:18,579   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2015-03-24 13:46:18,614   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:39755
2015-03-24 13:46:18,614   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2015-03-24 13:46:18,619   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:39755
2015-03-24 13:46:18,640   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1a8cb1733d800000, negotiated timeout = 6000
2015-03-24 13:46:18,644   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x1a8cb1733d800000 with negotiated timeout 6000 for client /127.0.0.1:39755
2015-03-24 13:46:18,690   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2015-03-24 13:46:18,714   INFO  [main] HOST: Host id of this node is: 0
2015-03-24 13:46:18,714   INFO  [main] CONSOLE: Host id of this node is: 0
2015-03-24 13:46:18,831   INFO  [main] HOST: URL of deployment: deployment.xml
2015-03-24 13:46:19,337   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2015-03-24 13:46:19,679   INFO  [main] HOST: Searching for license file located /home/thorsten/git/velimontana/VeliSphereMontana/license.xml
2015-03-24 13:46:19,704   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2015-03-24 13:46:21,615   INFO  [main] EXPORT: System is not using any export functionality.
2015-03-24 13:46:21,631   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2015-03-24 13:46:21,773   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.9.2). A confirmation message will follow if the loading is successful.
2015-03-24 13:46:21,914   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.9.2.
2015-03-24 13:46:22,317   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2015-03-24 13:46:22,589   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2015-03-24 13:46:22,607   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2015-03-24 13:46:22,613   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2015-03-24 13:46:22,628   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2015-03-24 13:46:22,632   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2015-03-24 13:46:22,632   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2015-03-24 13:46:22,659   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 28 ms.
2015-03-24 13:46:22,659   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 31 ms.
2015-03-24 13:46:22,659   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 52 ms.
2015-03-24 13:46:22,669   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-03-24 13:46:22,669   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-03-24 13:46:22,669   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-03-24 13:46:22,684   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2015-03-24 13:46:22,686   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 14 ms.
2015-03-24 13:46:22,694   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-03-24 13:46:22,773   INFO  [main] HOST: Database start action is Create.
2015-03-24 13:46:22,943   INFO  [main] HOST: PID of this Volt process is 19436
2015-03-24 13:46:22,943   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2015-03-24 13:46:22,943   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2015-03-24 13:46:22,943   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2015-03-24 13:46:22,943   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2015-03-24 13:46:22,944   INFO  [main] HOST: Maximum usable Java heap set to 2031 mb.
2015-03-24 13:46:22,944   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 664 MB.
2015-03-24 13:46:22,944   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2015-03-24 13:46:22,944   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2015-03-24 13:46:22,944   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2015-03-24 13:46:22,944   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2015-03-24 13:46:22,944   INFO  [main] HOST: No schedule set for automated snapshots.
2015-03-24 13:46:22,944   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2015-03-24 13:46:22,945   INFO  [main] HOST: CPU INFO:         2 Cores, 2 Sockets, 2 Hardware Threads
2015-03-24 13:46:22,945   INFO  [main] HOST: CPU DESC:         Intel(R) Xeon(R) CPU E31220 @ 3.10GHz 8192 KB cache
2015-03-24 13:46:22,945   INFO  [main] HOST: HOST MEMORY (MB): 1873
2015-03-24 13:46:22,945   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-504.3.3.el6.x86_64 amd64 en_US
2015-03-24 13:46:22,945   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2015-03-24 13:46:22,945   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2015-03-24 13:46:22,945   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2015-03-24 13:46:22,946   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2015-03-24 13:46:22,946   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.84 2a02:8070:8480:5100:20c:29ff:fe1b:e41%2 21212,21211,8080 [SELF]
2015-03-24 13:46:22,947   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2015-03-24 13:46:22,947   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2015-03-24 13:46:22,984   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2015-03-24 13:46:22,984   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2015-03-24 13:46:22,987   INFO  [Thread-9] HOST: Logging config info
2015-03-24 13:46:23,161   INFO  [Thread-10] CONSOLE: Server completed initialization.
2015-03-24 13:57:49,312   WARN  [Volt Server Network - 0] AUTH: Procedure UNPROVISIONED_ENDPOINT.select was not found. This message is rate limited to once every 60 seconds.
2015-03-24 14:07:25,597   INFO  [Estimated Time Updater] HOST: 95050 estimated time update.
2015-03-24 14:33:34,723   INFO  [Estimated Time Updater] HOST: 95080 estimated time update.
2015-03-24 14:57:39,811   INFO  [Estimated Time Updater] HOST: 95028 estimated time update.
2015-03-24 15:01:37,804   WARN  [Thread-0] CONSOLE: The VoltDB server will shut down due to a control-C or other JVM exit.
2015-03-24 16:01:42,263   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-03-24 16:01:42,263   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINTPROPERTYLOG_ENTRYID_ENDPOINTID on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-03-24 16:01:42,345   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_USER_USERID on table: USER of type: BALANCED_TREE
2015-03-24 16:01:42,345   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINT_USER_LINK_LINKID on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2015-03-24 16:01:42,345   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINT_SPHERE_LINK_LINKID on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2015-03-24 16:01:42,345   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_SPHERE_USER_LINK_LINKID_SPHEREID on table: SPHERE_USER_LINK of type: BALANCED_TREE
2015-03-24 16:01:42,345   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_SPHERE_SPHEREID on table: SPHERE of type: BALANCED_TREE
2015-03-24 16:01:42,345   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINTCLASS_ENDPOINTCLASSID on table: ENDPOINTCLASS of type: BALANCED_TREE
2015-03-24 16:01:42,348   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2015-03-24 16:01:42,348   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINT_ENDPOINTID on table: ENDPOINT of type: BALANCED_TREE
2015-03-24 16:01:42,349   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2015-03-24 16:01:42,349   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2015-03-24 16:01:42,349   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_PROPERTY_PROPERTYID on table: PROPERTY of type: BALANCED_TREE
2015-03-24 16:01:42,350   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_PROPERTYCLASS_PROPERTYCLASSID on table: PROPERTYCLASS of type: BALANCED_TREE
2015-03-24 16:01:42,351   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MESSAGE_ENDPOINT_LINK_LINKID_ENDPOINTID on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2015-03-24 16:01:42,352   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MESSAGE_MESSAGEID on table: MESSAGE of type: BALANCED_TREE
2015-03-24 16:01:42,352   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MESSAGE_EXPRESSION_LINK_LINKID on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2015-03-24 16:01:42,353   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_EXPRESSION_EXPRESSIONID on table: EXPRESSION of type: BALANCED_TREE
2015-03-24 16:01:42,354   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2015-03-24 16:01:42,354   INFO  [main] COMPILER: [null]: Created index: CHCOMB on table: CHECK of type: BALANCED_TREE
2015-03-24 16:01:42,354   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2015-03-24 16:01:42,354   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2015-03-24 16:01:42,354   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2015-03-24 16:01:42,354   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECK_CHECKID_CHECKPATHID_ENDPOINTID on table: CHECK of type: BALANCED_TREE
2015-03-24 16:01:42,355   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECKSTATE_CHECKID_CHECKPATHID on table: CHECKSTATE of type: BALANCED_TREE
2015-03-24 16:01:42,357   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2015-03-24 16:01:42,357   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2015-03-24 16:01:42,357   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MULTICHECK_MULTICHECKID_CHECKPATHID on table: MULTICHECK of type: BALANCED_TREE
2015-03-24 16:01:42,358   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-03-24 16:01:42,358   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-03-24 16:01:42,358   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MULTICHECK_CHECK_LINK_LINKID_CHECKPATHID on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-03-24 16:01:42,359   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-24 16:01:42,359   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-24 16:01:42,359   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MULTICHECK_MULTICHECK_LINK_LINKID_CHECKPATHID on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-24 16:01:42,360   INFO  [main] COMPILER: [null]: Created index: CPOWNID on table: CHECKPATH of type: BALANCED_TREE
2015-03-24 16:01:42,360   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECKPATH_CHECKPATHID on table: CHECKPATH of type: BALANCED_TREE
2015-03-24 16:01:42,360   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-03-24 16:01:42,360   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-03-24 16:01:42,361   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECKPATH_CHECK_LINK_LINKID_CHECKPATHID on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-03-24 16:01:42,361   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-24 16:01:42,362   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECKPATH_MULTICHECK_LINK_LINKID_CHECKPATHID on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-24 16:01:42,362   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2015-03-24 16:01:42,362   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2015-03-24 16:01:42,362   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ACTION_ACTIONID_CHECKPATHID on table: ACTION of type: BALANCED_TREE
2015-03-24 16:01:42,363   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-03-24 16:01:42,363   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_OUTBOUNDPROPERTYACTION_OUTBOUNDPROPERTYACTIONID_CHECKPATHID on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-03-24 16:01:42,363   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ITEMCOST_ITEMID_PLANID on table: ITEMCOST of type: BALANCED_TREE
2015-03-24 16:01:42,364   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_PLAN_PLANID on table: PLAN of type: BALANCED_TREE
2015-03-24 16:01:42,366   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_UNPROVISIONED_ENDPOINT_UEPID on table: UNPROVISIONED_ENDPOINT of type: BALANCED_TREE
2015-03-24 16:01:42,366   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_VENDOR_VENDORID on table: VENDOR of type: BALANCED_TREE
2015-03-24 16:01:42,377   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 16:01:42,458   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,475   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,479   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,485   INFO  [main] COMPILER: [ACTION.upsert]: Compiling Statement: UPSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 16:01:42,507   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 16:01:42,508   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:01:42,518   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:01:42,526   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:01:42,531   INFO  [main] COMPILER: [CHECK.upsert]: Compiling Statement: UPSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 16:01:42,546   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?, ?);
2015-03-24 16:01:42,549   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-03-24 16:01:42,555   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-03-24 16:01:42,556   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ?, OWNERID = ? WHERE (CHECKPATHID = ?);
2015-03-24 16:01:42,559   INFO  [main] COMPILER: [CHECKPATH.upsert]: Compiling Statement: UPSERT INTO CHECKPATH VALUES (?, ?, ?, ?);
2015-03-24 16:01:42,564   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2015-03-24 16:01:42,566   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,568   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,570   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,573   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.upsert]: Compiling Statement: UPSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2015-03-24 16:01:42,579   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2015-03-24 16:01:42,580   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,582   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,590   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,593   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.upsert]: Compiling Statement: UPSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2015-03-24 16:01:42,598   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2015-03-24 16:01:42,600   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,602   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,604   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,606   INFO  [main] COMPILER: [CHECKSTATE.upsert]: Compiling Statement: UPSERT INTO CHECKSTATE VALUES (?, ?, ?);
2015-03-24 16:01:42,610   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?, ?, ?, ?);
2015-03-24 16:01:42,613   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2015-03-24 16:01:42,615   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ?, ENDPOINTPROVDATE = ?, ENDPOINTSTATE = ?, SECRET = ? WHERE (ENDPOINTID = ?);
2015-03-24 16:01:42,618   INFO  [main] COMPILER: [ENDPOINT.upsert]: Compiling Statement: UPSERT INTO ENDPOINT VALUES (?, ?, ?, ?, ?, ?);
2015-03-24 16:01:42,620   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?, ?, ?);
2015-03-24 16:01:42,624   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-03-24 16:01:42,625   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-03-24 16:01:42,627   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ? WHERE (ENDPOINTCLASSID = ?);
2015-03-24 16:01:42,629   INFO  [main] COMPILER: [ENDPOINTCLASS.upsert]: Compiling Statement: UPSERT INTO ENDPOINTCLASS VALUES (?, ?, ?, ?);
2015-03-24 16:01:42,631   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2015-03-24 16:01:42,632   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:01:42,634   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:01:42,636   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:01:42,639   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.upsert]: Compiling Statement: UPSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2015-03-24 16:01:42,641   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2015-03-24 16:01:42,643   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2015-03-24 16:01:42,645   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2015-03-24 16:01:42,647   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.upsert]: Compiling Statement: UPSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2015-03-24 16:01:42,649   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2015-03-24 16:01:42,651   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2015-03-24 16:01:42,652   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2015-03-24 16:01:42,657   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.upsert]: Compiling Statement: UPSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2015-03-24 16:01:42,659   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2015-03-24 16:01:42,660   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2015-03-24 16:01:42,662   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2015-03-24 16:01:42,664   INFO  [main] COMPILER: [EXPRESSION.upsert]: Compiling Statement: UPSERT INTO EXPRESSION VALUES (?, ?, ?);
2015-03-24 16:01:42,666   INFO  [main] COMPILER: [ITEMCOST.insert]: Compiling Statement: INSERT INTO ITEMCOST VALUES (?, ?, ?, ?);
2015-03-24 16:01:42,668   INFO  [main] COMPILER: [ITEMCOST.delete]: Compiling Statement: DELETE FROM ITEMCOST WHERE (ITEMID = ?) AND (PLANID = ?);
2015-03-24 16:01:42,674   INFO  [main] COMPILER: [ITEMCOST.update]: Compiling Statement: UPDATE ITEMCOST SET ITEMID = ?, PLANID = ?, DESCRIPTION = ?, COST = ? WHERE (ITEMID = ?) AND (PLANID = ?);
2015-03-24 16:01:42,677   INFO  [main] COMPILER: [ITEMCOST.upsert]: Compiling Statement: UPSERT INTO ITEMCOST VALUES (?, ?, ?, ?);
2015-03-24 16:01:42,679   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2015-03-24 16:01:42,680   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2015-03-24 16:01:42,682   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2015-03-24 16:01:42,684   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2015-03-24 16:01:42,685   INFO  [main] COMPILER: [MESSAGE.upsert]: Compiling Statement: UPSERT INTO MESSAGE VALUES (?, ?, ?);
2015-03-24 16:01:42,687   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2015-03-24 16:01:42,688   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:01:42,690   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:01:42,692   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:01:42,694   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.upsert]: Compiling Statement: UPSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2015-03-24 16:01:42,696   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2015-03-24 16:01:42,697   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2015-03-24 16:01:42,699   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2015-03-24 16:01:42,701   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.upsert]: Compiling Statement: UPSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2015-03-24 16:01:42,703   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2015-03-24 16:01:42,705   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,707   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,709   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,715   INFO  [main] COMPILER: [MULTICHECK.upsert]: Compiling Statement: UPSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2015-03-24 16:01:42,717   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2015-03-24 16:01:42,718   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,721   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,722   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,725   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.upsert]: Compiling Statement: UPSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2015-03-24 16:01:42,726   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2015-03-24 16:01:42,728   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,730   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,731   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,734   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.upsert]: Compiling Statement: UPSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2015-03-24 16:01:42,735   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 16:01:42,737   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,739   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,741   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:01:42,744   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.upsert]: Compiling Statement: UPSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 16:01:42,746   INFO  [main] COMPILER: [PLAN.insert]: Compiling Statement: INSERT INTO PLAN VALUES (?, ?);
2015-03-24 16:01:42,748   INFO  [main] COMPILER: [PLAN.delete]: Compiling Statement: DELETE FROM PLAN WHERE (PLANID = ?);
2015-03-24 16:01:42,750   INFO  [main] COMPILER: [PLAN.update]: Compiling Statement: UPDATE PLAN SET PLANID = ?, DESCRIPTION = ? WHERE (PLANID = ?);
2015-03-24 16:01:42,752   INFO  [main] COMPILER: [PLAN.upsert]: Compiling Statement: UPSERT INTO PLAN VALUES (?, ?);
2015-03-24 16:01:42,753   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 16:01:42,760   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2015-03-24 16:01:42,762   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2015-03-24 16:01:42,765   INFO  [main] COMPILER: [PROPERTY.upsert]: Compiling Statement: UPSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 16:01:42,767   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2015-03-24 16:01:42,768   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2015-03-24 16:01:42,770   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2015-03-24 16:01:42,772   INFO  [main] COMPILER: [PROPERTYCLASS.upsert]: Compiling Statement: UPSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2015-03-24 16:01:42,774   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2015-03-24 16:01:42,775   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2015-03-24 16:01:42,777   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2015-03-24 16:01:42,963   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2015-03-24 16:01:42,963   INFO  [main] COMPILER: [SPHERE.upsert]: Compiling Statement: UPSERT INTO SPHERE VALUES (?, ?, ?);
2015-03-24 16:01:42,963   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2015-03-24 16:01:42,965   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-03-24 16:01:42,967   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-03-24 16:01:42,970   INFO  [main] COMPILER: [SPHERE_USER_LINK.upsert]: Compiling Statement: UPSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2015-03-24 16:01:42,972   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.insert]: Compiling Statement: INSERT INTO UNPROVISIONED_ENDPOINT VALUES (?, ?, ?, ?, ?);
2015-03-24 16:01:42,975   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.delete]: Compiling Statement: DELETE FROM UNPROVISIONED_ENDPOINT WHERE (UEPID = ?);
2015-03-24 16:01:42,977   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.update]: Compiling Statement: UPDATE UNPROVISIONED_ENDPOINT SET UEPID = ?, IDENTIFIER = ?, ENDPOINTCLASSID = ?, TIME_STAMP = ?, SECRET = ? WHERE (UEPID = ?);
2015-03-24 16:01:42,980   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.upsert]: Compiling Statement: UPSERT INTO UNPROVISIONED_ENDPOINT VALUES (?, ?, ?, ?, ?);
2015-03-24 16:01:42,982   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?, ?);
2015-03-24 16:01:42,983   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2015-03-24 16:01:42,985   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2015-03-24 16:01:42,986   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ?, PLANID = ? WHERE (USERID = ?);
2015-03-24 16:01:42,988   INFO  [main] COMPILER: [USER.upsert]: Compiling Statement: UPSERT INTO USER VALUES (?, ?, ?, ?, ?);
2015-03-24 16:01:42,999   INFO  [main] COMPILER: [VENDOR.insert]: Compiling Statement: INSERT INTO VENDOR VALUES (?, ?, ?);
2015-03-24 16:01:43,001   INFO  [main] COMPILER: [VENDOR.select]: Compiling Statement: SELECT * FROM VENDOR WHERE (VENDORID = ?);
2015-03-24 16:01:43,008   INFO  [main] COMPILER: [VENDOR.delete]: Compiling Statement: DELETE FROM VENDOR WHERE (VENDORID = ?);
2015-03-24 16:01:43,042   INFO  [main] COMPILER: [VENDOR.update]: Compiling Statement: UPDATE VENDOR SET VENDORID = ?, VENDORNAME = ?, VENDORIMAGEURL = ? WHERE (VENDORID = ?);
2015-03-24 16:01:43,049   INFO  [main] COMPILER: [VENDOR.upsert]: Compiling Statement: UPSERT INTO VENDOR VALUES (?, ?, ?);
2015-03-24 16:01:43,117   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2015-03-24 16:01:43,177   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,180   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,183   INFO  [main] COMPILER: [UI_SelectSpheresForUser.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;
2015-03-24 16:01:43,199   WARN  [main] COMPILER: [UI_SelectSpheresForUser.class]: Procedure UI_SelectSpheresForUser has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,199   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,200   INFO  [main] COMPILER: [UI_SelectActionsForCheckpathID.class]: Compiling Statement: SELECT ACTIONID, TARGETENDPOINTID, CHECKPATHNAME FROM ACTION JOIN CHECKPATH ON CHECKPATH.CHECKPATHID = ACTION.CHECKPATHID WHERE ACTION.CHECKPATHID = ? ORDER BY ACTIONID;
2015-03-24 16:01:43,207   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,208   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-03-24 16:01:43,210   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,210   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,212   INFO  [main] COMPILER: [UI_SelectAllVendors.class]: Compiling Statement: SELECT * FROM VENDOR ORDER BY VENDORNAME;
2015-03-24 16:01:43,270   WARN  [main] COMPILER: [UI_SelectAllVendors.class]: Procedure UI_SelectAllVendors has a statement with a non-deterministic result - statement: "SELECT * FROM VENDOR ORDER BY VENDORNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,270   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,275   INFO  [main] COMPILER: [UI_SelectPublicSpheresForUser.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID WHERE SPHERE_USER_LINK.USERID = ? AND SPHERE.PUBLIC = 1 ORDER BY SPHERENAME;
2015-03-24 16:01:43,285   WARN  [main] COMPILER: [UI_SelectPublicSpheresForUser.class]: Procedure UI_SelectPublicSpheresForUser has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID WHERE SPHERE_USER_LINK.USERID = ? AND SPHERE.PUBLIC = 1 ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,285   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,286   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2015-03-24 16:01:43,291   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,291   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,293   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2015-03-24 16:01:43,294   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,295   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2015-03-24 16:01:43,298   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,300   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2015-03-24 16:01:43,304   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: index scan may provide insufficient ordering
2015-03-24 16:01:43,304   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,305   INFO  [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: Compiling Statement: UPDATE SPHERE SET PUBLIC = ? WHERE SPHEREID = ?;
2015-03-24 16:01:43,314   INFO  [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET PUBLIC = ? WHERE SPHEREID = ?;'
2015-03-24 16:01:43,314   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,316   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: UPDATE ACTION SET ACTIONNAME = ?, TARGETENDPOINTID = ?, CHECKID =?, CHECKPATHID = ? WHERE ACTIONID = ?
2015-03-24 16:01:43,322   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, '', '', ?, ?, ?)
2015-03-24 16:01:43,329   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, '', 0, ?, '', ?)
2015-03-24 16:01:43,336   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE OUTBOUNDPROPERTYACTIONID = ?
2015-03-24 16:01:43,344   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,345   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2015-03-24 16:01:43,354   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2015-03-24 16:01:43,354   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,355   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,356   INFO  [main] COMPILER: [UI_SelectUsersWithPublicSpheres.class]: Compiling Statement: SELECT USERID FROM SPHERE_USER_LINK JOIN SPHERE ON SPHERE_USER_LINK.SPHEREID = SPHERE.SPHEREID WHERE SPHERE.PUBLIC = 1 ORDER BY USERID;
2015-03-24 16:01:43,366   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,368   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2015-03-24 16:01:43,374   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,375   INFO  [main] COMPILER: [UI_UpdateEndpointClass.class]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ?  WHERE ENDPOINTCLASSID = ?;
2015-03-24 16:01:43,381   INFO  [main] COMPILER: [UI_UpdateEndpointClass.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 3 of statement ' UPDATE ENDPOINTCLASS SET ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ?  WHERE ENDPOINTCLASSID = ?;'
2015-03-24 16:01:43,381   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,382   INFO  [main] COMPILER: [UI_SelectAllSpheresForUserID.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;
2015-03-24 16:01:43,397   WARN  [main] COMPILER: [UI_SelectAllSpheresForUserID.class]: Procedure UI_SelectAllSpheresForUserID has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,397   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,398   INFO  [main] COMPILER: [UI_SelectActionsForMulticheckID.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.MULTICHECKID = ? ORDER BY ACTION.ACTIONID;
2015-03-24 16:01:43,412   WARN  [main] COMPILER: [UI_SelectActionsForMulticheckID.class]: Procedure UI_SelectActionsForMulticheckID has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.MULTICHECKID = ? ORDER BY ACTION.ACTIONID;", reason: index scan may provide insufficient ordering
2015-03-24 16:01:43,412   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,413   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2015-03-24 16:01:43,415   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,415   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,416   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2015-03-24 16:01:43,418   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,419   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2015-03-24 16:01:43,421   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,422   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2015-03-24 16:01:43,424   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,425   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2015-03-24 16:01:43,427   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,427   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,428   INFO  [main] COMPILER: [UI_UpdateVendor.class]: Compiling Statement: UPDATE VENDOR SET VENDORNAME = ?, VENDORIMAGEURL = ? WHERE VENDORID = ?;
2015-03-24 16:01:43,442   INFO  [main] COMPILER: [UI_UpdateVendor.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement ' UPDATE VENDOR SET VENDORNAME = ?, VENDORIMAGEURL = ? WHERE VENDORID = ?;'
2015-03-24 16:01:43,442   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,443   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2015-03-24 16:01:43,445   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,455   INFO  [main] COMPILER: [UI_SelectSphereForSphereID.class]: Compiling Statement: SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;
2015-03-24 16:01:43,458   INFO  [main] COMPILER: [UI_SelectSphereForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;'
2015-03-24 16:01:43,458   WARN  [main] COMPILER: [UI_SelectSphereForSphereID.class]: Procedure UI_SelectSphereForSphereID has a statement with a non-deterministic result - statement: "SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,458   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,459   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2015-03-24 16:01:43,465   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,467   INFO  [main] COMPILER: [UI_SelectUnprovisionedEPforIdentifier.class]: Compiling Statement: select UEPID, IDENTIFIER, ENDPOINTCLASSNAME, ENDPOINTCLASSID, TIME_STAMP from UNPROVISIONED_ENDPOINT JOIN ENDPOINTCLASS ON UNPROVISIONED_ENDPOINT.ENDPOINTCLASSID = ENDPOINTCLASS.ENDPOINTCLASSID WHERE IDENTIFIER = ?;
2015-03-24 16:01:43,470   WARN  [main] COMPILER: [UI_SelectUnprovisionedEPforIdentifier.class]: Procedure UI_SelectUnprovisionedEPforIdentifier has a statement with a non-deterministic result - statement: "select UEPID, IDENTIFIER, ENDPOINTCLASSNAME, ENDPOINTCLASSID, TIME_STAMP from UNPROVISIONED_ENDPOINT JOIN ENDPOINTCLASS ON UNPROVISIONED_ENDPOINT.ENDPOINTCLASSID = ENDPOINTCLASS.ENDPOINTCLASSID WHERE IDENTIFIER = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,470   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,472   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2015-03-24 16:01:43,474   WARN  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Procedure FindMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,474   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,475   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2015-03-24 16:01:43,477   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,477   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,478   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2015-03-24 16:01:43,480   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,481   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2015-03-24 16:01:43,483   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2015-03-24 16:01:43,483   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,485   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2015-03-24 16:01:43,486   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,487   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2015-03-24 16:01:43,489   WARN  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Procedure UI_SelectCheckForCheckID has a statement with a non-deterministic result - statement: "select checkid, name from check where checkid = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,489   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,491   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2015-03-24 16:01:43,494   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2015-03-24 16:01:43,498   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2015-03-24 16:01:43,498   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,498   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,500   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2015-03-24 16:01:43,502   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,503   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2015-03-24 16:01:43,504   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2015-03-24 16:01:43,505   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,506   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2015-03-24 16:01:43,508   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,509   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE ACTIONID = ?;
2015-03-24 16:01:43,511   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ?;
2015-03-24 16:01:43,517   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: DELETE FROM ACTION WHERE ACTIONID = ?;
2015-03-24 16:01:43,519   WARN  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Procedure UI_DeleteAllActionsForCheckID is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT ACTIONID FROM ACTION WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,519   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,522   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2015-03-24 16:01:43,539   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,539   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,540   INFO  [main] COMPILER: [UI_SelectActionsForCheckID.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.CHECKID = ? ORDER BY ACTION.ACTIONID;
2015-03-24 16:01:43,545   WARN  [main] COMPILER: [UI_SelectActionsForCheckID.class]: Procedure UI_SelectActionsForCheckID has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.CHECKID = ? ORDER BY ACTION.ACTIONID;", reason: index scan may provide insufficient ordering
2015-03-24 16:01:43,545   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,546   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForPropertyID.class]: Compiling Statement: select * from property WHERE propertyid = ? ORDER BY propertyid;
2015-03-24 16:01:43,553   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,555   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2015-03-24 16:01:43,558   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,558   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,559   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2015-03-24 16:01:43,561   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2015-03-24 16:01:43,568   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2015-03-24 16:01:43,571   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2015-03-24 16:01:43,573   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,595   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2015-03-24 16:01:43,598   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,598   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,599   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2015-03-24 16:01:43,604   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2015-03-24 16:01:43,604   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,605   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,606   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2015-03-24 16:01:43,609   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,610   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2015-03-24 16:01:43,611   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,612   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH WHERE OWNERID = ? ORDER BY CHECKPATHNAME;
2015-03-24 16:01:43,615   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH WHERE OWNERID = ? ORDER BY CHECKPATHNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,615   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,616   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2015-03-24 16:01:43,618   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2015-03-24 16:01:43,618   WARN  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Procedure UI_SelectCheckpathForCheckpathID has a statement with a non-deterministic result - statement: "select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,618   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,620   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2015-03-24 16:01:43,621   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,621   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,623   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-03-24 16:01:43,624   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2015-03-24 16:01:43,626   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,626   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,628   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2015-03-24 16:01:43,629   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,630   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,631   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2015-03-24 16:01:43,633   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,636   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2015-03-24 16:01:43,640   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,645   INFO  [main] COMPILER: [SEC_SelectSecretForEndpointID.class]: Compiling Statement: SELECT SECRET FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2015-03-24 16:01:43,647   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,648   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE LINKID = ?;
2015-03-24 16:01:43,652   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,657   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE ACTIONID = ?;
2015-03-24 16:01:43,660   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ?;
2015-03-24 16:01:43,662   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: DELETE FROM ACTION WHERE ACTIONID = ?;
2015-03-24 16:01:43,667   WARN  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Procedure UI_DeleteAllActionsForMulticheckID is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,667   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,669   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2015-03-24 16:01:43,670   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,670   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,672   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2015-03-24 16:01:43,674   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,674   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,676   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2015-03-24 16:01:43,678   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,679   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2015-03-24 16:01:43,681   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,681   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,682   INFO  [main] COMPILER: [UI_SelectVendorForVendorID.class]: Compiling Statement: SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;
2015-03-24 16:01:43,685   INFO  [main] COMPILER: [UI_SelectVendorForVendorID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;'
2015-03-24 16:01:43,685   WARN  [main] COMPILER: [UI_SelectVendorForVendorID.class]: Procedure UI_SelectVendorForVendorID has a statement with a non-deterministic result - statement: "SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,685   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,686   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2015-03-24 16:01:43,694   WARN  [main] COMPILER: [FindChecksForCheckID.class]: Procedure FindChecksForCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,695   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,697   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: UPDATE ACTION SET ACTIONNAME = ?, TARGETENDPOINTID = ?, MULTICHECKID =?, CHECKPATHID = ? WHERE ACTIONID = ?
2015-03-24 16:01:43,700   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, '', '', ?, ?, ?)
2015-03-24 16:01:43,703   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, '', 0, '', ?, ?)
2015-03-24 16:01:43,706   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE OUTBOUNDPROPERTYACTIONID = ?
2015-03-24 16:01:43,709   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,710   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2015-03-24 16:01:43,712   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,714   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2015-03-24 16:01:43,721   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2015-03-24 16:01:43,723   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,727   INFO  [main] COMPILER: [UI_SelectUserForUserID.class]: Compiling Statement: SELECT USERID, USERNAME, USEREMAIL FROM USER WHERE USERID = ? ORDER BY USERNAME;
2015-03-24 16:01:43,729   INFO  [main] COMPILER: [UI_SelectUserForUserID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT USERID, USERNAME, USEREMAIL FROM USER WHERE USERID = ? ORDER BY USERNAME;'
2015-03-24 16:01:43,729   WARN  [main] COMPILER: [UI_SelectUserForUserID.class]: Procedure UI_SelectUserForUserID has a statement with a non-deterministic result - statement: "SELECT USERID, USERNAME, USEREMAIL FROM USER WHERE USERID = ? ORDER BY USERNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,730   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,731   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKVALUE, CHECKPATHID;
2015-03-24 16:01:43,738   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKVALUE, CHECKPATHID;", reason: index scan may provide insufficient ordering
2015-03-24 16:01:43,742   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,743   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2015-03-24 16:01:43,762   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,762   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,764   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2015-03-24 16:01:43,822   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2015-03-24 16:01:43,825   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,826   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2015-03-24 16:01:43,828   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2015-03-24 16:01:43,829   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2015-03-24 16:01:43,831   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2015-03-24 16:01:43,832   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,834   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2015-03-24 16:01:43,835   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2015-03-24 16:01:43,835   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,836   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID, ENDPOINTPROVDATE, ENDPOINTSTATE FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2015-03-24 16:01:43,838   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,839   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2015-03-24 16:01:43,845   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2015-03-24 16:01:43,846   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,847   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2015-03-24 16:01:43,849   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2015-03-24 16:01:43,849   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,849   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,850   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2015-03-24 16:01:43,853   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:01:43,854   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:01:43,855   INFO  [main] COMPILER: [SEC_SelectSecretForUEPID.class]: Compiling Statement: SELECT SECRET FROM UNPROVISIONED_ENDPOINT WHERE ENDPOINTID = ? ORDER BY UEPID;
2015-03-24 16:01:43,856   ERROR [main] COMPILER: [SEC_SelectSecretForUEPID.class]: Failed to plan for statement (selectEndpoint) SELECT SECRET FROM UNPROVISIONED_ENDPOINT WHERE ENDPOINTID = ? ORDER BY UEPID; Error: "user lacks privilege or object not found: ENDPOINTID"
2015-03-24 15:01:44,508   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2015-03-24 15:01:44,543   INFO  [main] CONSOLE: Build: 4.9.2 voltdb-4.9.2-0-g1469703-local Community Edition
2015-03-24 15:01:44,543   INFO  [main] HOST: Command line arguments: org.voltdb.VoltDB create catalog /home/thorsten/git/velimontana/VeliSphereMontana/catalog.jar deployment deployment.xml host localhost
2015-03-24 15:01:44,588   INFO  [main] HOST: Command line JVM arguments: -Xmx2048m -Djava.awt.headless=true -Dsun.net.inetaddr.ttl=300 -Dsun.net.inetaddr.negative.ttl=3600 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:+UseTLAB -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+UseCondCardMark -Dsun.rmi.dgc.server.gcInterval=9223372036854775807 -Dsun.rmi.dgc.client.gcInterval=9223372036854775807 -XX:CMSWaitDuration=120000 -XX:CMSMaxAbortablePrecleanTime=120000 -XX:+ExplicitGCInvokesConcurrent -XX:+CMSScavengeBeforeRemark -XX:+CMSClassUnloadingEnabled -XX:PermSize=64m -Dlog4j.configuration=file:///home/thorsten/voltdb-4.9.2/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.9.2/voltdb
2015-03-24 15:01:44,588   INFO  [main] HOST: Command line JVM classpath: /home/thorsten/voltdb-4.9.2/voltdb/voltdb-4.9.2.jar:/home/thorsten/voltdb-4.9.2/lib/jackson-core-asl-1.9.13.jar:/home/thorsten/voltdb-4.9.2/lib/httpasyncclient-4.0.1.jar:/home/thorsten/voltdb-4.9.2/lib/jna.jar:/home/thorsten/voltdb-4.9.2/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.9.2/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.9.2/lib/httpcore-4.3.2.jar:/home/thorsten/voltdb-4.9.2/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.9.2/lib/commons-logging-1.1.3.jar:/home/thorsten/voltdb-4.9.2/lib/kafka_2.8.0-0.8.1.jar:/home/thorsten/voltdb-4.9.2/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.9.2/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.9.2/lib/commons-codec-1.6.jar:/home/thorsten/voltdb-4.9.2/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.9.2/lib/avro-1.7.7.jar:/home/thorsten/voltdb-4.9.2/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.9.2/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.9.2/lib/scala-library.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.9.2/lib/jsch-0.1.51.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/httpcore-nio-4.3.2.jar:/home/thorsten/voltdb-4.9.2/lib/jline-2.10.jar:/home/thorsten/voltdb-4.9.2/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.9.2/lib/jackson-mapper-asl-1.9.13.jar:/home/thorsten/voltdb-4.9.2/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.9.2/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/httpclient-4.3.2.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/zmq-2.1.11.jar:/home/thorsten/voltdb-4.9.2/lib/metrics-core-2.2.0.jar
2015-03-24 15:01:44,635   INFO  [main] NETWORK: Default network thread count: 2
2015-03-24 15:01:44,730   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2015-03-24 15:01:44,730   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2015-03-24 15:01:44,751   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2015-03-24 15:01:44,894   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2015-03-24 15:01:44,903   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2015-03-24 15:01:45,072   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@38250a08
2015-03-24 15:01:45,121   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2015-03-24 15:01:45,157   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:39789
2015-03-24 15:01:45,157   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2015-03-24 15:01:45,187   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:39789
2015-03-24 15:01:45,198   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x1a8cd3fc31800000 with negotiated timeout 6000 for client /127.0.0.1:39789
2015-03-24 15:01:45,198   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1a8cd3fc31800000, negotiated timeout = 6000
2015-03-24 15:01:45,257   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2015-03-24 15:01:45,294   INFO  [main] HOST: Host id of this node is: 0
2015-03-24 15:01:45,294   INFO  [main] CONSOLE: Host id of this node is: 0
2015-03-24 15:01:45,367   INFO  [main] HOST: URL of deployment: deployment.xml
2015-03-24 15:01:45,920   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2015-03-24 15:01:46,284   INFO  [main] HOST: Searching for license file located /home/thorsten/git/velimontana/VeliSphereMontana/license.xml
2015-03-24 15:01:46,316   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2015-03-24 15:01:48,741   INFO  [main] EXPORT: System is not using any export functionality.
2015-03-24 15:01:48,753   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2015-03-24 15:01:48,922   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.9.2). A confirmation message will follow if the loading is successful.
2015-03-24 15:01:49,065   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.9.2.
2015-03-24 15:01:49,463   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2015-03-24 15:01:49,540   WARN  [Thread-0] CONSOLE: The VoltDB server will shut down due to a control-C or other JVM exit.
2015-03-24 16:02:01,431   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-03-24 16:02:01,431   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINTPROPERTYLOG_ENTRYID_ENDPOINTID on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-03-24 16:02:01,437   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_USER_USERID on table: USER of type: BALANCED_TREE
2015-03-24 16:02:01,437   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINT_USER_LINK_LINKID on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2015-03-24 16:02:01,437   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINT_SPHERE_LINK_LINKID on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2015-03-24 16:02:01,437   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_SPHERE_USER_LINK_LINKID_SPHEREID on table: SPHERE_USER_LINK of type: BALANCED_TREE
2015-03-24 16:02:01,437   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_SPHERE_SPHEREID on table: SPHERE of type: BALANCED_TREE
2015-03-24 16:02:01,438   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINTCLASS_ENDPOINTCLASSID on table: ENDPOINTCLASS of type: BALANCED_TREE
2015-03-24 16:02:01,439   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2015-03-24 16:02:01,439   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINT_ENDPOINTID on table: ENDPOINT of type: BALANCED_TREE
2015-03-24 16:02:01,440   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2015-03-24 16:02:01,441   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2015-03-24 16:02:01,441   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_PROPERTY_PROPERTYID on table: PROPERTY of type: BALANCED_TREE
2015-03-24 16:02:01,442   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_PROPERTYCLASS_PROPERTYCLASSID on table: PROPERTYCLASS of type: BALANCED_TREE
2015-03-24 16:02:01,443   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MESSAGE_ENDPOINT_LINK_LINKID_ENDPOINTID on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2015-03-24 16:02:01,444   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MESSAGE_MESSAGEID on table: MESSAGE of type: BALANCED_TREE
2015-03-24 16:02:01,444   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MESSAGE_EXPRESSION_LINK_LINKID on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2015-03-24 16:02:01,445   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_EXPRESSION_EXPRESSIONID on table: EXPRESSION of type: BALANCED_TREE
2015-03-24 16:02:01,446   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2015-03-24 16:02:01,447   INFO  [main] COMPILER: [null]: Created index: CHCOMB on table: CHECK of type: BALANCED_TREE
2015-03-24 16:02:01,447   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2015-03-24 16:02:01,447   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2015-03-24 16:02:01,447   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2015-03-24 16:02:01,447   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECK_CHECKID_CHECKPATHID_ENDPOINTID on table: CHECK of type: BALANCED_TREE
2015-03-24 16:02:01,448   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECKSTATE_CHECKID_CHECKPATHID on table: CHECKSTATE of type: BALANCED_TREE
2015-03-24 16:02:01,450   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2015-03-24 16:02:01,450   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2015-03-24 16:02:01,450   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MULTICHECK_MULTICHECKID_CHECKPATHID on table: MULTICHECK of type: BALANCED_TREE
2015-03-24 16:02:01,451   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-03-24 16:02:01,451   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-03-24 16:02:01,455   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MULTICHECK_CHECK_LINK_LINKID_CHECKPATHID on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-03-24 16:02:01,456   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-24 16:02:01,456   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-24 16:02:01,456   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MULTICHECK_MULTICHECK_LINK_LINKID_CHECKPATHID on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-24 16:02:01,457   INFO  [main] COMPILER: [null]: Created index: CPOWNID on table: CHECKPATH of type: BALANCED_TREE
2015-03-24 16:02:01,457   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECKPATH_CHECKPATHID on table: CHECKPATH of type: BALANCED_TREE
2015-03-24 16:02:01,458   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-03-24 16:02:01,458   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-03-24 16:02:01,458   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECKPATH_CHECK_LINK_LINKID_CHECKPATHID on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-03-24 16:02:01,459   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-24 16:02:01,459   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECKPATH_MULTICHECK_LINK_LINKID_CHECKPATHID on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-24 16:02:01,462   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2015-03-24 16:02:01,462   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2015-03-24 16:02:01,463   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ACTION_ACTIONID_CHECKPATHID on table: ACTION of type: BALANCED_TREE
2015-03-24 16:02:01,468   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-03-24 16:02:01,468   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_OUTBOUNDPROPERTYACTION_OUTBOUNDPROPERTYACTIONID_CHECKPATHID on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-03-24 16:02:01,469   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ITEMCOST_ITEMID_PLANID on table: ITEMCOST of type: BALANCED_TREE
2015-03-24 16:02:01,469   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_PLAN_PLANID on table: PLAN of type: BALANCED_TREE
2015-03-24 16:02:01,470   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_UNPROVISIONED_ENDPOINT_UEPID on table: UNPROVISIONED_ENDPOINT of type: BALANCED_TREE
2015-03-24 16:02:01,470   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_VENDOR_VENDORID on table: VENDOR of type: BALANCED_TREE
2015-03-24 16:02:01,490   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 16:02:01,540   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,562   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,564   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,571   INFO  [main] COMPILER: [ACTION.upsert]: Compiling Statement: UPSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 16:02:01,577   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 16:02:01,580   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:02:01,594   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:02:01,598   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:02:01,602   INFO  [main] COMPILER: [CHECK.upsert]: Compiling Statement: UPSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 16:02:01,607   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?, ?);
2015-03-24 16:02:01,608   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-03-24 16:02:01,611   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-03-24 16:02:01,613   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ?, OWNERID = ? WHERE (CHECKPATHID = ?);
2015-03-24 16:02:01,615   INFO  [main] COMPILER: [CHECKPATH.upsert]: Compiling Statement: UPSERT INTO CHECKPATH VALUES (?, ?, ?, ?);
2015-03-24 16:02:01,620   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2015-03-24 16:02:01,622   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,625   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,627   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,629   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.upsert]: Compiling Statement: UPSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2015-03-24 16:02:01,635   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2015-03-24 16:02:01,636   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,642   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,644   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,647   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.upsert]: Compiling Statement: UPSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2015-03-24 16:02:01,649   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2015-03-24 16:02:01,650   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,653   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,654   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,657   INFO  [main] COMPILER: [CHECKSTATE.upsert]: Compiling Statement: UPSERT INTO CHECKSTATE VALUES (?, ?, ?);
2015-03-24 16:02:01,658   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?, ?, ?, ?);
2015-03-24 16:02:01,661   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2015-03-24 16:02:01,663   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ?, ENDPOINTPROVDATE = ?, ENDPOINTSTATE = ?, SECRET = ? WHERE (ENDPOINTID = ?);
2015-03-24 16:02:01,666   INFO  [main] COMPILER: [ENDPOINT.upsert]: Compiling Statement: UPSERT INTO ENDPOINT VALUES (?, ?, ?, ?, ?, ?);
2015-03-24 16:02:01,668   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?, ?, ?);
2015-03-24 16:02:01,670   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-03-24 16:02:01,672   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-03-24 16:02:01,673   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ? WHERE (ENDPOINTCLASSID = ?);
2015-03-24 16:02:01,675   INFO  [main] COMPILER: [ENDPOINTCLASS.upsert]: Compiling Statement: UPSERT INTO ENDPOINTCLASS VALUES (?, ?, ?, ?);
2015-03-24 16:02:01,676   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2015-03-24 16:02:01,678   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:02:01,680   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:02:01,682   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:02:01,685   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.upsert]: Compiling Statement: UPSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2015-03-24 16:02:01,686   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2015-03-24 16:02:01,688   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2015-03-24 16:02:01,690   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2015-03-24 16:02:01,694   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.upsert]: Compiling Statement: UPSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2015-03-24 16:02:01,696   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2015-03-24 16:02:01,697   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2015-03-24 16:02:01,699   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2015-03-24 16:02:01,701   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.upsert]: Compiling Statement: UPSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2015-03-24 16:02:01,703   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2015-03-24 16:02:01,704   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2015-03-24 16:02:01,706   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2015-03-24 16:02:01,709   INFO  [main] COMPILER: [EXPRESSION.upsert]: Compiling Statement: UPSERT INTO EXPRESSION VALUES (?, ?, ?);
2015-03-24 16:02:01,710   INFO  [main] COMPILER: [ITEMCOST.insert]: Compiling Statement: INSERT INTO ITEMCOST VALUES (?, ?, ?, ?);
2015-03-24 16:02:01,712   INFO  [main] COMPILER: [ITEMCOST.delete]: Compiling Statement: DELETE FROM ITEMCOST WHERE (ITEMID = ?) AND (PLANID = ?);
2015-03-24 16:02:01,714   INFO  [main] COMPILER: [ITEMCOST.update]: Compiling Statement: UPDATE ITEMCOST SET ITEMID = ?, PLANID = ?, DESCRIPTION = ?, COST = ? WHERE (ITEMID = ?) AND (PLANID = ?);
2015-03-24 16:02:01,717   INFO  [main] COMPILER: [ITEMCOST.upsert]: Compiling Statement: UPSERT INTO ITEMCOST VALUES (?, ?, ?, ?);
2015-03-24 16:02:01,718   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2015-03-24 16:02:01,720   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2015-03-24 16:02:01,721   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2015-03-24 16:02:01,723   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2015-03-24 16:02:01,725   INFO  [main] COMPILER: [MESSAGE.upsert]: Compiling Statement: UPSERT INTO MESSAGE VALUES (?, ?, ?);
2015-03-24 16:02:01,726   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2015-03-24 16:02:01,727   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:02:01,729   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:02:01,731   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-03-24 16:02:01,733   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.upsert]: Compiling Statement: UPSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2015-03-24 16:02:01,734   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2015-03-24 16:02:01,736   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2015-03-24 16:02:01,737   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2015-03-24 16:02:01,740   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.upsert]: Compiling Statement: UPSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2015-03-24 16:02:01,741   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2015-03-24 16:02:01,743   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,748   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,750   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,753   INFO  [main] COMPILER: [MULTICHECK.upsert]: Compiling Statement: UPSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2015-03-24 16:02:01,754   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2015-03-24 16:02:01,756   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,758   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,760   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,762   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.upsert]: Compiling Statement: UPSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2015-03-24 16:02:01,764   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2015-03-24 16:02:01,765   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,768   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,769   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,771   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.upsert]: Compiling Statement: UPSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2015-03-24 16:02:01,773   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 16:02:01,774   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,777   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,778   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-24 16:02:01,782   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.upsert]: Compiling Statement: UPSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 16:02:01,784   INFO  [main] COMPILER: [PLAN.insert]: Compiling Statement: INSERT INTO PLAN VALUES (?, ?);
2015-03-24 16:02:01,785   INFO  [main] COMPILER: [PLAN.delete]: Compiling Statement: DELETE FROM PLAN WHERE (PLANID = ?);
2015-03-24 16:02:01,793   INFO  [main] COMPILER: [PLAN.update]: Compiling Statement: UPDATE PLAN SET PLANID = ?, DESCRIPTION = ? WHERE (PLANID = ?);
2015-03-24 16:02:01,795   INFO  [main] COMPILER: [PLAN.upsert]: Compiling Statement: UPSERT INTO PLAN VALUES (?, ?);
2015-03-24 16:02:01,797   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 16:02:01,799   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2015-03-24 16:02:01,801   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2015-03-24 16:02:01,804   INFO  [main] COMPILER: [PROPERTY.upsert]: Compiling Statement: UPSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-24 16:02:01,806   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2015-03-24 16:02:01,807   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2015-03-24 16:02:01,809   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2015-03-24 16:02:01,811   INFO  [main] COMPILER: [PROPERTYCLASS.upsert]: Compiling Statement: UPSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2015-03-24 16:02:01,813   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2015-03-24 16:02:01,814   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2015-03-24 16:02:01,816   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2015-03-24 16:02:01,817   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2015-03-24 16:02:01,819   INFO  [main] COMPILER: [SPHERE.upsert]: Compiling Statement: UPSERT INTO SPHERE VALUES (?, ?, ?);
2015-03-24 16:02:01,820   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2015-03-24 16:02:01,821   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-03-24 16:02:01,823   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-03-24 16:02:01,826   INFO  [main] COMPILER: [SPHERE_USER_LINK.upsert]: Compiling Statement: UPSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2015-03-24 16:02:01,828   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.insert]: Compiling Statement: INSERT INTO UNPROVISIONED_ENDPOINT VALUES (?, ?, ?, ?, ?);
2015-03-24 16:02:01,829   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.delete]: Compiling Statement: DELETE FROM UNPROVISIONED_ENDPOINT WHERE (UEPID = ?);
2015-03-24 16:02:01,831   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.update]: Compiling Statement: UPDATE UNPROVISIONED_ENDPOINT SET UEPID = ?, IDENTIFIER = ?, ENDPOINTCLASSID = ?, TIME_STAMP = ?, SECRET = ? WHERE (UEPID = ?);
2015-03-24 16:02:01,834   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.upsert]: Compiling Statement: UPSERT INTO UNPROVISIONED_ENDPOINT VALUES (?, ?, ?, ?, ?);
2015-03-24 16:02:01,835   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?, ?);
2015-03-24 16:02:01,837   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2015-03-24 16:02:01,841   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2015-03-24 16:02:01,843   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ?, PLANID = ? WHERE (USERID = ?);
2015-03-24 16:02:01,845   INFO  [main] COMPILER: [USER.upsert]: Compiling Statement: UPSERT INTO USER VALUES (?, ?, ?, ?, ?);
2015-03-24 16:02:01,846   INFO  [main] COMPILER: [VENDOR.insert]: Compiling Statement: INSERT INTO VENDOR VALUES (?, ?, ?);
2015-03-24 16:02:01,847   INFO  [main] COMPILER: [VENDOR.select]: Compiling Statement: SELECT * FROM VENDOR WHERE (VENDORID = ?);
2015-03-24 16:02:01,849   INFO  [main] COMPILER: [VENDOR.delete]: Compiling Statement: DELETE FROM VENDOR WHERE (VENDORID = ?);
2015-03-24 16:02:01,850   INFO  [main] COMPILER: [VENDOR.update]: Compiling Statement: UPDATE VENDOR SET VENDORID = ?, VENDORNAME = ?, VENDORIMAGEURL = ? WHERE (VENDORID = ?);
2015-03-24 16:02:01,852   INFO  [main] COMPILER: [VENDOR.upsert]: Compiling Statement: UPSERT INTO VENDOR VALUES (?, ?, ?);
2015-03-24 16:02:01,872   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2015-03-24 16:02:01,876   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:01,878   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,879   INFO  [main] COMPILER: [UI_SelectSpheresForUser.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;
2015-03-24 16:02:01,886   WARN  [main] COMPILER: [UI_SelectSpheresForUser.class]: Procedure UI_SelectSpheresForUser has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:01,886   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,888   INFO  [main] COMPILER: [UI_SelectActionsForCheckpathID.class]: Compiling Statement: SELECT ACTIONID, TARGETENDPOINTID, CHECKPATHNAME FROM ACTION JOIN CHECKPATH ON CHECKPATH.CHECKPATHID = ACTION.CHECKPATHID WHERE ACTION.CHECKPATHID = ? ORDER BY ACTIONID;
2015-03-24 16:02:01,893   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,894   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-03-24 16:02:01,897   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:01,897   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,898   INFO  [main] COMPILER: [UI_SelectAllVendors.class]: Compiling Statement: SELECT * FROM VENDOR ORDER BY VENDORNAME;
2015-03-24 16:02:01,900   WARN  [main] COMPILER: [UI_SelectAllVendors.class]: Procedure UI_SelectAllVendors has a statement with a non-deterministic result - statement: "SELECT * FROM VENDOR ORDER BY VENDORNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:01,900   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,902   INFO  [main] COMPILER: [UI_SelectPublicSpheresForUser.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID WHERE SPHERE_USER_LINK.USERID = ? AND SPHERE.PUBLIC = 1 ORDER BY SPHERENAME;
2015-03-24 16:02:01,915   WARN  [main] COMPILER: [UI_SelectPublicSpheresForUser.class]: Procedure UI_SelectPublicSpheresForUser has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID WHERE SPHERE_USER_LINK.USERID = ? AND SPHERE.PUBLIC = 1 ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:01,916   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,917   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2015-03-24 16:02:01,919   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:01,920   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,921   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2015-03-24 16:02:01,923   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,924   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2015-03-24 16:02:01,926   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,927   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2015-03-24 16:02:01,937   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: index scan may provide insufficient ordering
2015-03-24 16:02:01,937   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,938   INFO  [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: Compiling Statement: UPDATE SPHERE SET PUBLIC = ? WHERE SPHEREID = ?;
2015-03-24 16:02:01,945   INFO  [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET PUBLIC = ? WHERE SPHEREID = ?;'
2015-03-24 16:02:01,945   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,947   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: UPDATE ACTION SET ACTIONNAME = ?, TARGETENDPOINTID = ?, CHECKID =?, CHECKPATHID = ? WHERE ACTIONID = ?
2015-03-24 16:02:01,951   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, '', '', ?, ?, ?)
2015-03-24 16:02:01,953   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, '', 0, ?, '', ?)
2015-03-24 16:02:01,954   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE OUTBOUNDPROPERTYACTIONID = ?
2015-03-24 16:02:01,957   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,958   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2015-03-24 16:02:01,975   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2015-03-24 16:02:01,975   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:01,976   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,977   INFO  [main] COMPILER: [UI_SelectUsersWithPublicSpheres.class]: Compiling Statement: SELECT USERID FROM SPHERE_USER_LINK JOIN SPHERE ON SPHERE_USER_LINK.SPHEREID = SPHERE.SPHEREID WHERE SPHERE.PUBLIC = 1 ORDER BY USERID;
2015-03-24 16:02:01,980   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,981   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2015-03-24 16:02:01,982   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,983   INFO  [main] COMPILER: [UI_UpdateEndpointClass.class]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ?  WHERE ENDPOINTCLASSID = ?;
2015-03-24 16:02:01,988   INFO  [main] COMPILER: [UI_UpdateEndpointClass.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 3 of statement ' UPDATE ENDPOINTCLASS SET ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ?  WHERE ENDPOINTCLASSID = ?;'
2015-03-24 16:02:01,988   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,989   INFO  [main] COMPILER: [UI_SelectAllSpheresForUserID.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;
2015-03-24 16:02:01,998   WARN  [main] COMPILER: [UI_SelectAllSpheresForUserID.class]: Procedure UI_SelectAllSpheresForUserID has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:01,998   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:01,999   INFO  [main] COMPILER: [UI_SelectActionsForMulticheckID.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.MULTICHECKID = ? ORDER BY ACTION.ACTIONID;
2015-03-24 16:02:02,005   WARN  [main] COMPILER: [UI_SelectActionsForMulticheckID.class]: Procedure UI_SelectActionsForMulticheckID has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.MULTICHECKID = ? ORDER BY ACTION.ACTIONID;", reason: index scan may provide insufficient ordering
2015-03-24 16:02:02,005   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,006   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2015-03-24 16:02:02,009   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,009   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,010   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2015-03-24 16:02:02,012   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,014   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2015-03-24 16:02:02,020   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,024   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2015-03-24 16:02:02,026   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,027   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2015-03-24 16:02:02,029   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,029   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,030   INFO  [main] COMPILER: [UI_UpdateVendor.class]: Compiling Statement: UPDATE VENDOR SET VENDORNAME = ?, VENDORIMAGEURL = ? WHERE VENDORID = ?;
2015-03-24 16:02:02,032   INFO  [main] COMPILER: [UI_UpdateVendor.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement ' UPDATE VENDOR SET VENDORNAME = ?, VENDORIMAGEURL = ? WHERE VENDORID = ?;'
2015-03-24 16:02:02,032   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,034   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2015-03-24 16:02:02,035   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,036   INFO  [main] COMPILER: [UI_SelectSphereForSphereID.class]: Compiling Statement: SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;
2015-03-24 16:02:02,042   INFO  [main] COMPILER: [UI_SelectSphereForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;'
2015-03-24 16:02:02,042   WARN  [main] COMPILER: [UI_SelectSphereForSphereID.class]: Procedure UI_SelectSphereForSphereID has a statement with a non-deterministic result - statement: "SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,042   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,045   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2015-03-24 16:02:02,048   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,049   INFO  [main] COMPILER: [UI_SelectUnprovisionedEPforIdentifier.class]: Compiling Statement: select UEPID, IDENTIFIER, ENDPOINTCLASSNAME, ENDPOINTCLASSID, TIME_STAMP from UNPROVISIONED_ENDPOINT JOIN ENDPOINTCLASS ON UNPROVISIONED_ENDPOINT.ENDPOINTCLASSID = ENDPOINTCLASS.ENDPOINTCLASSID WHERE IDENTIFIER = ?;
2015-03-24 16:02:02,052   WARN  [main] COMPILER: [UI_SelectUnprovisionedEPforIdentifier.class]: Procedure UI_SelectUnprovisionedEPforIdentifier has a statement with a non-deterministic result - statement: "select UEPID, IDENTIFIER, ENDPOINTCLASSNAME, ENDPOINTCLASSID, TIME_STAMP from UNPROVISIONED_ENDPOINT JOIN ENDPOINTCLASS ON UNPROVISIONED_ENDPOINT.ENDPOINTCLASSID = ENDPOINTCLASS.ENDPOINTCLASSID WHERE IDENTIFIER = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,053   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,054   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2015-03-24 16:02:02,056   WARN  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Procedure FindMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,057   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,058   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2015-03-24 16:02:02,059   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,060   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,061   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2015-03-24 16:02:02,063   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,064   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2015-03-24 16:02:02,066   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2015-03-24 16:02:02,066   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,068   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2015-03-24 16:02:02,070   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,071   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2015-03-24 16:02:02,074   WARN  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Procedure UI_SelectCheckForCheckID has a statement with a non-deterministic result - statement: "select checkid, name from check where checkid = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,074   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,075   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2015-03-24 16:02:02,079   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2015-03-24 16:02:02,083   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2015-03-24 16:02:02,083   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,083   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,084   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2015-03-24 16:02:02,086   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,087   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2015-03-24 16:02:02,089   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2015-03-24 16:02:02,089   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,090   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2015-03-24 16:02:02,092   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,099   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE ACTIONID = ?;
2015-03-24 16:02:02,102   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ?;
2015-03-24 16:02:02,107   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: DELETE FROM ACTION WHERE ACTIONID = ?;
2015-03-24 16:02:02,109   WARN  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Procedure UI_DeleteAllActionsForCheckID is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT ACTIONID FROM ACTION WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,109   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,110   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2015-03-24 16:02:02,127   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,127   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,128   INFO  [main] COMPILER: [UI_SelectActionsForCheckID.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.CHECKID = ? ORDER BY ACTION.ACTIONID;
2015-03-24 16:02:02,133   WARN  [main] COMPILER: [UI_SelectActionsForCheckID.class]: Procedure UI_SelectActionsForCheckID has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.CHECKID = ? ORDER BY ACTION.ACTIONID;", reason: index scan may provide insufficient ordering
2015-03-24 16:02:02,141   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,142   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForPropertyID.class]: Compiling Statement: select * from property WHERE propertyid = ? ORDER BY propertyid;
2015-03-24 16:02:02,147   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,153   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2015-03-24 16:02:02,159   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,160   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,161   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2015-03-24 16:02:02,163   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2015-03-24 16:02:02,167   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2015-03-24 16:02:02,168   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2015-03-24 16:02:02,170   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,172   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2015-03-24 16:02:02,174   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,174   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,175   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2015-03-24 16:02:02,178   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2015-03-24 16:02:02,178   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,179   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,180   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2015-03-24 16:02:02,182   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,183   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2015-03-24 16:02:02,185   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,186   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH WHERE OWNERID = ? ORDER BY CHECKPATHNAME;
2015-03-24 16:02:02,188   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH WHERE OWNERID = ? ORDER BY CHECKPATHNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,189   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,190   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2015-03-24 16:02:02,193   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2015-03-24 16:02:02,193   WARN  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Procedure UI_SelectCheckpathForCheckpathID has a statement with a non-deterministic result - statement: "select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,193   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,194   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2015-03-24 16:02:02,196   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,197   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,198   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-03-24 16:02:02,200   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2015-03-24 16:02:02,202   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,210   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,211   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2015-03-24 16:02:02,212   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,212   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,213   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2015-03-24 16:02:02,215   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,216   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2015-03-24 16:02:02,218   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,220   INFO  [main] COMPILER: [SEC_SelectSecretForEndpointID.class]: Compiling Statement: SELECT SECRET FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2015-03-24 16:02:02,224   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,225   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE LINKID = ?;
2015-03-24 16:02:02,229   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,231   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE ACTIONID = ?;
2015-03-24 16:02:02,233   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ?;
2015-03-24 16:02:02,235   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: DELETE FROM ACTION WHERE ACTIONID = ?;
2015-03-24 16:02:02,236   WARN  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Procedure UI_DeleteAllActionsForMulticheckID is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,237   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,238   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2015-03-24 16:02:02,239   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,239   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,241   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2015-03-24 16:02:02,243   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,243   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,245   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2015-03-24 16:02:02,247   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,248   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2015-03-24 16:02:02,250   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,250   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,254   INFO  [main] COMPILER: [UI_SelectVendorForVendorID.class]: Compiling Statement: SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;
2015-03-24 16:02:02,256   INFO  [main] COMPILER: [UI_SelectVendorForVendorID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;'
2015-03-24 16:02:02,256   WARN  [main] COMPILER: [UI_SelectVendorForVendorID.class]: Procedure UI_SelectVendorForVendorID has a statement with a non-deterministic result - statement: "SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,257   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,258   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2015-03-24 16:02:02,265   WARN  [main] COMPILER: [FindChecksForCheckID.class]: Procedure FindChecksForCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,266   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,267   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: UPDATE ACTION SET ACTIONNAME = ?, TARGETENDPOINTID = ?, MULTICHECKID =?, CHECKPATHID = ? WHERE ACTIONID = ?
2015-03-24 16:02:02,270   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, '', '', ?, ?, ?)
2015-03-24 16:02:02,271   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, '', 0, '', ?, ?)
2015-03-24 16:02:02,274   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE OUTBOUNDPROPERTYACTIONID = ?
2015-03-24 16:02:02,277   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,278   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2015-03-24 16:02:02,280   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,285   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2015-03-24 16:02:02,293   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2015-03-24 16:02:02,295   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,298   INFO  [main] COMPILER: [UI_SelectUserForUserID.class]: Compiling Statement: SELECT USERID, USERNAME, USEREMAIL FROM USER WHERE USERID = ? ORDER BY USERNAME;
2015-03-24 16:02:02,300   INFO  [main] COMPILER: [UI_SelectUserForUserID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT USERID, USERNAME, USEREMAIL FROM USER WHERE USERID = ? ORDER BY USERNAME;'
2015-03-24 16:02:02,300   WARN  [main] COMPILER: [UI_SelectUserForUserID.class]: Procedure UI_SelectUserForUserID has a statement with a non-deterministic result - statement: "SELECT USERID, USERNAME, USEREMAIL FROM USER WHERE USERID = ? ORDER BY USERNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,300   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,304   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKVALUE, CHECKPATHID;
2015-03-24 16:02:02,310   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKVALUE, CHECKPATHID;", reason: index scan may provide insufficient ordering
2015-03-24 16:02:02,310   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,312   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2015-03-24 16:02:02,334   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,335   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,336   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2015-03-24 16:02:02,356   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2015-03-24 16:02:02,364   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,365   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2015-03-24 16:02:02,370   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2015-03-24 16:02:02,373   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2015-03-24 16:02:02,375   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2015-03-24 16:02:02,377   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,378   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2015-03-24 16:02:02,379   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2015-03-24 16:02:02,382   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,383   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID, ENDPOINTPROVDATE, ENDPOINTSTATE FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2015-03-24 16:02:02,385   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,386   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2015-03-24 16:02:02,388   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2015-03-24 16:02:02,388   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,390   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2015-03-24 16:02:02,392   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2015-03-24 16:02:02,392   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,392   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,393   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2015-03-24 16:02:02,400   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-24 16:02:02,400   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,402   INFO  [main] COMPILER: [SEC_SelectSecretForUEPID.class]: Compiling Statement: SELECT SECRET FROM UNPROVISIONED_ENDPOINT WHERE UEPID = ? ORDER BY UEPID;
2015-03-24 16:02:02,403   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,405   INFO  [main] COMPILER: [SRV_UpdateEndpointState.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTSTATE = ? WHERE ENDPOINTID = ?;
2015-03-24 16:02:02,425   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,427   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2015-03-24 16:02:02,431   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: index scan may provide insufficient ordering
2015-03-24 16:02:02,431   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 16:02:02,433   INFO  [main] COMPILER: [UI_UpdatePropertyClass.class]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE PROPERTYCLASSID = ?;
2015-03-24 16:02:02,444   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-24 15:02:03,628   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2015-03-24 15:02:03,644   INFO  [main] CONSOLE: Build: 4.9.2 voltdb-4.9.2-0-g1469703-local Community Edition
2015-03-24 15:02:03,644   INFO  [main] HOST: Command line arguments: org.voltdb.VoltDB create catalog /home/thorsten/git/velimontana/VeliSphereMontana/catalog.jar deployment deployment.xml host localhost
2015-03-24 15:02:03,645   INFO  [main] HOST: Command line JVM arguments: -Xmx2048m -Djava.awt.headless=true -Dsun.net.inetaddr.ttl=300 -Dsun.net.inetaddr.negative.ttl=3600 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:+UseTLAB -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+UseCondCardMark -Dsun.rmi.dgc.server.gcInterval=9223372036854775807 -Dsun.rmi.dgc.client.gcInterval=9223372036854775807 -XX:CMSWaitDuration=120000 -XX:CMSMaxAbortablePrecleanTime=120000 -XX:+ExplicitGCInvokesConcurrent -XX:+CMSScavengeBeforeRemark -XX:+CMSClassUnloadingEnabled -XX:PermSize=64m -Dlog4j.configuration=file:///home/thorsten/voltdb-4.9.2/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.9.2/voltdb
2015-03-24 15:02:03,645   INFO  [main] HOST: Command line JVM classpath: /home/thorsten/voltdb-4.9.2/voltdb/voltdb-4.9.2.jar:/home/thorsten/voltdb-4.9.2/lib/jackson-core-asl-1.9.13.jar:/home/thorsten/voltdb-4.9.2/lib/httpasyncclient-4.0.1.jar:/home/thorsten/voltdb-4.9.2/lib/jna.jar:/home/thorsten/voltdb-4.9.2/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.9.2/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.9.2/lib/httpcore-4.3.2.jar:/home/thorsten/voltdb-4.9.2/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.9.2/lib/commons-logging-1.1.3.jar:/home/thorsten/voltdb-4.9.2/lib/kafka_2.8.0-0.8.1.jar:/home/thorsten/voltdb-4.9.2/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.9.2/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.9.2/lib/commons-codec-1.6.jar:/home/thorsten/voltdb-4.9.2/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.9.2/lib/avro-1.7.7.jar:/home/thorsten/voltdb-4.9.2/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.9.2/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.9.2/lib/scala-library.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.9.2/lib/jsch-0.1.51.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/httpcore-nio-4.3.2.jar:/home/thorsten/voltdb-4.9.2/lib/jline-2.10.jar:/home/thorsten/voltdb-4.9.2/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.9.2/lib/jackson-mapper-asl-1.9.13.jar:/home/thorsten/voltdb-4.9.2/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.9.2/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/httpclient-4.3.2.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/zmq-2.1.11.jar:/home/thorsten/voltdb-4.9.2/lib/metrics-core-2.2.0.jar
2015-03-24 15:02:03,653   INFO  [main] NETWORK: Default network thread count: 2
2015-03-24 15:02:03,670   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2015-03-24 15:02:03,671   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2015-03-24 15:02:03,673   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2015-03-24 15:02:03,721   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2015-03-24 15:02:03,730   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2015-03-24 15:02:03,785   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@73f43791
2015-03-24 15:02:03,790   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2015-03-24 15:02:03,794   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2015-03-24 15:02:03,794   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:39790
2015-03-24 15:02:03,797   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:39790
2015-03-24 15:02:03,817   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x1a8cd4208a800000 with negotiated timeout 6000 for client /127.0.0.1:39790
2015-03-24 15:02:03,818   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1a8cd4208a800000, negotiated timeout = 6000
2015-03-24 15:02:03,859   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2015-03-24 15:02:03,892   INFO  [main] HOST: Host id of this node is: 0
2015-03-24 15:02:03,892   INFO  [main] CONSOLE: Host id of this node is: 0
2015-03-24 15:02:03,929   INFO  [main] HOST: URL of deployment: deployment.xml
2015-03-24 15:02:04,196   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2015-03-24 15:02:04,432   INFO  [main] HOST: Searching for license file located /home/thorsten/git/velimontana/VeliSphereMontana/license.xml
2015-03-24 15:02:04,463   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2015-03-24 15:02:06,084   INFO  [main] EXPORT: System is not using any export functionality.
2015-03-24 15:02:06,101   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2015-03-24 15:02:06,236   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.9.2). A confirmation message will follow if the loading is successful.
2015-03-24 15:02:06,243   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.9.2.
2015-03-24 15:02:06,812   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2015-03-24 15:02:07,057   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2015-03-24 15:02:07,073   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2015-03-24 15:02:07,084   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2015-03-24 15:02:07,086   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2015-03-24 15:02:07,095   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2015-03-24 15:02:07,098   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2015-03-24 15:02:07,127   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 29 ms.
2015-03-24 15:02:07,127   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 52 ms.
2015-03-24 15:02:07,128   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 45 ms.
2015-03-24 15:02:07,136   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-03-24 15:02:07,136   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-03-24 15:02:07,136   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-03-24 15:02:07,161   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2015-03-24 15:02:07,163   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 27 ms.
2015-03-24 15:02:07,170   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-03-24 15:02:07,278   INFO  [main] HOST: Database start action is Create.
2015-03-24 15:02:07,450   INFO  [main] HOST: PID of this Volt process is 20481
2015-03-24 15:02:07,450   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2015-03-24 15:02:07,450   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2015-03-24 15:02:07,450   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2015-03-24 15:02:07,450   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2015-03-24 15:02:07,450   INFO  [main] HOST: Maximum usable Java heap set to 2031 mb.
2015-03-24 15:02:07,450   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 664 MB.
2015-03-24 15:02:07,451   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2015-03-24 15:02:07,451   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2015-03-24 15:02:07,451   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2015-03-24 15:02:07,451   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2015-03-24 15:02:07,451   INFO  [main] HOST: No schedule set for automated snapshots.
2015-03-24 15:02:07,451   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2015-03-24 15:02:07,452   INFO  [main] HOST: CPU INFO:         2 Cores, 2 Sockets, 2 Hardware Threads
2015-03-24 15:02:07,452   INFO  [main] HOST: CPU DESC:         Intel(R) Xeon(R) CPU E31220 @ 3.10GHz 8192 KB cache
2015-03-24 15:02:07,452   INFO  [main] HOST: HOST MEMORY (MB): 1873
2015-03-24 15:02:07,452   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-504.3.3.el6.x86_64 amd64 en_US
2015-03-24 15:02:07,452   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2015-03-24 15:02:07,452   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2015-03-24 15:02:07,452   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2015-03-24 15:02:07,452   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2015-03-24 15:02:07,453   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.84 2a02:8070:8480:5100:20c:29ff:fe1b:e41%2 21212,21211,8080 [SELF]
2015-03-24 15:02:07,460   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2015-03-24 15:02:07,460   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2015-03-24 15:02:07,499   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2015-03-24 15:02:07,499   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2015-03-24 15:02:07,518   INFO  [Thread-9] HOST: Logging config info
2015-03-24 15:02:07,695   INFO  [Thread-10] CONSOLE: Server completed initialization.
2015-03-24 15:23:39,876   INFO  [Estimated Time Updater] HOST: 95038 estimated time update.
2015-03-24 15:48:26,943   INFO  [Estimated Time Updater] HOST: 95014 estimated time update.
2015-03-24 16:14:18,996   INFO  [Estimated Time Updater] HOST: 95032 estimated time update.
2015-03-24 16:39:06,021   INFO  [Estimated Time Updater] HOST: 94985 estimated time update.
2015-03-24 17:05:02,051   INFO  [Estimated Time Updater] HOST: 95000 estimated time update.
2015-03-24 17:29:12,066   INFO  [Estimated Time Updater] HOST: 94964 estimated time update.
2015-03-24 17:55:18,099   INFO  [Estimated Time Updater] HOST: 94984 estimated time update.
2015-03-24 18:19:27,099   INFO  [Estimated Time Updater] HOST: 94947 estimated time update.
2015-03-24 18:45:26,082   INFO  [Estimated Time Updater] HOST: 94964 estimated time update.
2015-03-24 19:09:39,038   INFO  [Estimated Time Updater] HOST: 94930 estimated time update.
2015-03-24 19:35:44,054   INFO  [Estimated Time Updater] HOST: 94939 estimated time update.
2015-03-24 20:00:17,988   INFO  [Estimated Time Updater] HOST: 94914 estimated time update.
2015-03-24 20:25:42,922   INFO  [Estimated Time Updater] HOST: 94915 estimated time update.
