2014-03-21 15:42:17,112   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 324386112 milliseconds late in updating the estimated time
2014-03-21 12:59:03,014   ERROR [main] COMPILER: [null]: Cannot load class for procedure: BLE_FindActionsForCheckID
2014-03-21 12:59:03,015   ERROR [main] COMPILER: [null]: VoltDB DDL Error: "Cannot load class for procedure: BLE_FindActionsForCheckID" in statement starting on lineno: 358
2014-03-21 12:59:03,015   ERROR [main] COMPILER: Failed to compile XML
2014-03-21 12:59:03,016   ERROR [main] COMPILER: Catalog compilation failed.
2014-03-21 16:59:04,021   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 16:59:04,036   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 16:59:04,045   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 16:59:04,096   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 16:59:04,096   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 16:59:04,102   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 16:59:04,110   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 16:59:04,128   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 16:59:04,128   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 3
2014-03-21 16:59:04,129   INFO  [main] NETWORK: 1 notified of host 0
2014-03-21 16:59:04,146   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-03-21 16:59:04,184   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 16:59:04,347   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 16:59:04,404   FATAL [main] HOST: The PID of this process is 59631
2014-03-21 16:59:04,404   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 16:59:04,404   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 499712      0t0  TCP *:33729 (LISTEN)
2014-03-21 16:59:04,404   FATAL [main] HOST: java      12625 thorsten   34u  IPv6 224212      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 16:59:04,404   FATAL [main] HOST: java      12625 thorsten   40u  IPv6 224219      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 16:59:04,404   FATAL [main] HOST: java      12625 thorsten   54u  IPv6 224226      0t0  TCP *:8080 (LISTEN)
2014-03-21 16:59:04,404   FATAL [main] HOST: java      12625 thorsten   55u  IPv6 224293      0t0  TCP *:21212 (LISTEN)
2014-03-21 16:59:04,404   FATAL [main] HOST: java      12625 thorsten   56u  IPv6 224294      0t0  TCP *:21211 (LISTEN)
2014-03-21 16:59:04,411   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 16:59:04,411   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 16:59:04,749   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-03-21 16:59:04,753   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:40882
2014-03-21 16:59:04,754   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-03-21 16:59:04,760   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-03-21 16:59:04,803   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-03-21 16:59:04,816   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-03-21 16:59:04,816   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-03-21 16:59:04,819   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-03-21 12:59:39,224   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 12:59:39,225   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 12:59:39,231   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 12:59:39,232   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 12:59:39,233   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 12:59:39,236   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 12:59:39,236   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 12:59:39,237   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 12:59:39,238   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 12:59:39,238   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 12:59:39,246   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 12:59:39,247   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 12:59:39,247   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 12:59:39,248   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 12:59:39,250   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 12:59:39,251   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 12:59:39,251   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 12:59:39,252   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 12:59:39,253   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 12:59:39,253   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 12:59:39,253   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 12:59:39,253   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 12:59:39,253   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 12:59:39,254   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 12:59:39,255   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 12:59:39,255   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 12:59:39,255   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 12:59:39,255   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 12:59:39,255   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 12:59:39,256   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 12:59:39,256   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 12:59:39,256   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 12:59:39,256   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 12:59:39,257   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 12:59:39,257   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 12:59:39,257   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 12:59:39,257   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 12:59:39,257   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 12:59:39,258   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 12:59:39,258   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 12:59:39,258   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 12:59:39,259   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: ACTION of type: BALANCED_TREE
2014-03-21 12:59:39,259   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 12:59:39,259   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 12:59:39,259   ERROR [main] COMPILER: [null]: In database, Partition column 'ACTION.CHECKPATHID' is nullable. Partition columns must be constrained "NOT NULL".
2014-03-21 12:59:39,260   ERROR [main] COMPILER: Failed to compile XML
2014-03-21 12:59:39,260   ERROR [main] COMPILER: Catalog compilation failed.
2014-03-21 16:59:40,031   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 16:59:40,037   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 16:59:40,044   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 16:59:40,069   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 16:59:40,069   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 16:59:40,071   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 16:59:40,076   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 16:59:40,084   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 16:59:40,084   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-03-21 16:59:40,084   INFO  [main] NETWORK: 2 notified of host 0
2014-03-21 16:59:40,098   INFO  [ZooKeeperServer] REJOIN: Joining site 2:-1 known  active sites 0:-1, 2:-1
2014-03-21 16:59:40,120   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 16:59:40,180   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 16:59:40,214   FATAL [main] HOST: The PID of this process is 59759
2014-03-21 16:59:40,214   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 16:59:40,214   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 502444      0t0  TCP *:40238 (LISTEN)
2014-03-21 16:59:40,215   FATAL [main] HOST: java      12625 thorsten   34u  IPv6 224212      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 16:59:40,215   FATAL [main] HOST: java      12625 thorsten   40u  IPv6 224219      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 16:59:40,215   FATAL [main] HOST: java      12625 thorsten   54u  IPv6 224226      0t0  TCP *:8080 (LISTEN)
2014-03-21 16:59:40,215   FATAL [main] HOST: java      12625 thorsten   55u  IPv6 224293      0t0  TCP *:21212 (LISTEN)
2014-03-21 16:59:40,215   FATAL [main] HOST: java      12625 thorsten   56u  IPv6 224294      0t0  TCP *:21211 (LISTEN)
2014-03-21 16:59:40,223   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 16:59:40,223   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 16:59:40,559   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:40905
2014-03-21 16:59:40,559   WARN  [Volt Network - 1] NETWORK: Host 2 failed
2014-03-21 16:59:40,560   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 2:-1, reporting: 0:-1, witnessed: true}
2014-03-21 16:59:40,560   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [2:-1]
2014-03-21 16:59:40,566   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 2:-1 to failed sites history
2014-03-21 16:59:40,566   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 2:-1 initiatorSafeInitPoints {2:-1->-1}
2014-03-21 16:59:40,567   WARN  [ZooKeeperServer] NETWORK: Host 2 failed
2014-03-21 13:00:04,851   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:00:04,852   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:00:04,857   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:00:04,858   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:00:04,860   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:00:04,862   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:00:04,862   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:00:04,863   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:00:04,863   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:00:04,863   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:00:04,871   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:00:04,872   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:00:04,872   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:00:04,873   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:00:04,875   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:00:04,876   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:00:04,877   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:00:04,877   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:00:04,878   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:00:04,878   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:00:04,879   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:00:04,879   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:00:04,879   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:00:04,880   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:00:04,881   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:00:04,881   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:00:04,881   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:00:04,881   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:00:04,881   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:00:04,881   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:00:04,882   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:00:04,882   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:00:04,882   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:00:04,882   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:00:04,883   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:00:04,883   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:00:04,883   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:00:04,883   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:00:04,883   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:00:04,884   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:00:04,884   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:00:04,884   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:00:04,885   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:00:04,885   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:00:04,900   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:00:04,965   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:04,980   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:04,985   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ?, EXPIRED = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:04,999   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:00:05,011   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:00:05,018   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:00:05,021   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:00:05,028   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:00:05,030   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:00:05,039   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:00:05,042   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:00:05,045   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:00:05,047   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,060   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,064   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,068   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:00:05,070   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,073   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,082   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,088   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:00:05,090   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,093   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,096   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,100   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:00:05,104   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:00:05,107   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:00:05,112   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:00:05,114   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:00:05,117   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:00:05,121   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:00:05,123   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:00:05,125   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:00:05,129   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:00:05,130   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:00:05,133   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:00:05,135   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:00:05,140   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:00:05,142   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:00:05,146   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:00:05,148   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:00:05,153   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:00:05,156   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:00:05,158   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:00:05,161   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:00:05,162   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:00:05,166   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:00:05,168   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:00:05,170   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:00:05,171   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:00:05,175   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:00:05,177   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:00:05,180   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:00:05,182   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:00:05,186   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:00:05,189   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:00:05,192   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,196   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,198   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,201   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:00:05,203   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,206   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,209   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,212   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:00:05,216   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,219   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,222   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:00:05,225   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:00:05,227   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:00:05,232   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:00:05,234   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:00:05,239   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:00:05,243   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:00:05,246   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:00:05,249   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:00:05,251   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:00:05,253   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:00:05,255   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:00:05,257   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:00:05,261   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:00:05,262   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:00:05,265   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:00:05,269   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:00:05,272   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:00:05,281   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:00:05,284   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:00:05,286   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:00:05,288   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:00:05,290   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:00:05,316   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:00:05,330   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:00:05,332   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:00:05,335   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:00:05,339   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:00:05,342   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:00:05,344   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:00:05,346   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:00:05,349   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:00:05,357   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:00:05,357   ERROR [main] COMPILER: [AME_DetailsForAction.class]: PartitionInfo for procedure AME_DetailsForAction refers to a column in schema which is not a partition key.
2014-03-21 13:00:05,358   ERROR [main] COMPILER: Failed to compile XML
2014-03-21 13:00:05,358   ERROR [main] COMPILER: Catalog compilation failed.
2014-03-21 17:00:06,143   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:00:06,149   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:00:06,156   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:00:06,180   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:00:06,181   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:00:06,183   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 17:00:06,188   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 17:00:06,196   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 17:00:06,196   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-03-21 17:00:06,196   INFO  [main] NETWORK: 3 notified of host 0
2014-03-21 17:00:06,210   INFO  [ZooKeeperServer] REJOIN: Joining site 3:-1 known  active sites 0:-1, 3:-1
2014-03-21 17:00:06,232   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:00:06,273   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 17:00:06,304   FATAL [main] HOST: The PID of this process is 59862
2014-03-21 17:00:06,304   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 17:00:06,305   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 503026      0t0  TCP *:39722 (LISTEN)
2014-03-21 17:00:06,305   FATAL [main] HOST: java      12625 thorsten   34u  IPv6 224212      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 17:00:06,305   FATAL [main] HOST: java      12625 thorsten   40u  IPv6 224219      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 17:00:06,305   FATAL [main] HOST: java      12625 thorsten   54u  IPv6 224226      0t0  TCP *:8080 (LISTEN)
2014-03-21 17:00:06,305   FATAL [main] HOST: java      12625 thorsten   55u  IPv6 224293      0t0  TCP *:21212 (LISTEN)
2014-03-21 17:00:06,305   FATAL [main] HOST: java      12625 thorsten   56u  IPv6 224294      0t0  TCP *:21211 (LISTEN)
2014-03-21 17:00:06,311   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 17:00:06,311   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 17:00:06,646   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:40922
2014-03-21 17:00:06,646   WARN  [Volt Network - 1] NETWORK: Host 3 failed
2014-03-21 17:00:06,646   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 3:-1, reporting: 0:-1, witnessed: true}
2014-03-21 17:00:06,647   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [3:-1]
2014-03-21 17:00:06,652   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 3:-1 to failed sites history
2014-03-21 17:00:06,652   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 3:-1 initiatorSafeInitPoints {3:-1->-1}
2014-03-21 17:00:06,653   WARN  [ZooKeeperServer] NETWORK: Host 3 failed
2014-03-21 13:02:51,816   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:02:51,817   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:02:51,823   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:02:51,823   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:02:51,824   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:02:51,826   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:02:51,827   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:02:51,827   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:02:51,828   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:02:51,828   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:02:51,829   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:02:51,829   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:02:51,829   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:02:51,831   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:02:51,831   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:02:51,832   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:02:51,833   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:02:51,833   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:02:51,835   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:02:51,835   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:02:51,835   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:02:51,835   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:02:51,835   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:02:51,836   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:02:51,838   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:02:51,838   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:02:51,838   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:02:51,839   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:02:51,839   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:02:51,839   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:02:51,840   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:02:51,840   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:02:51,840   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:02:51,840   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:02:51,841   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:02:51,841   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:02:51,841   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:02:51,842   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:02:51,842   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:02:51,843   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:02:51,843   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:02:51,843   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:02:51,844   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:02:51,845   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:02:51,857   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:02:51,921   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:51,935   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:51,939   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ?, EXPIRED = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:51,954   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:02:51,964   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:02:51,970   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:02:51,973   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:02:51,980   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:02:51,982   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:02:51,996   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:02:51,999   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:02:52,001   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:02:52,003   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,007   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,010   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,014   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:02:52,015   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,019   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,026   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,029   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:02:52,031   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,034   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,036   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,039   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:02:52,042   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:02:52,044   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:02:52,048   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:02:52,051   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:02:52,053   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:02:52,057   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:02:52,059   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:02:52,061   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:02:52,065   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:02:52,066   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:02:52,068   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:02:52,070   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:02:52,072   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:02:52,074   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:02:52,077   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:02:52,080   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:02:52,083   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:02:52,085   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:02:52,087   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:02:52,090   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:02:52,091   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:02:52,094   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:02:52,095   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:02:52,097   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:02:52,099   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:02:52,101   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:02:52,103   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:02:52,106   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:02:52,107   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:02:52,110   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:02:52,113   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:02:52,115   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,120   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,123   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,127   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:02:52,129   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,133   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,145   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,147   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:02:52,151   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,154   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,156   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:02:52,160   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:02:52,162   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:02:52,166   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:02:52,169   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:02:52,175   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:02:52,182   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:02:52,184   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:02:52,187   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:02:52,188   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:02:52,190   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:02:52,193   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:02:52,194   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:02:52,200   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:02:52,201   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:02:52,204   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:02:52,206   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:02:52,212   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:02:52,214   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:02:52,217   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:02:52,218   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:02:52,220   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:02:52,222   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:02:52,249   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:02:52,270   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:02:52,282   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:02:52,290   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:02:52,302   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:02:52,305   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:02:52,306   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:02:52,309   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:02:52,312   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:02:52,319   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:02:52,320   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:02:52,328   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:02:52,328   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:02:52,329   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:02:52,332   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:02:52,334   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:02:52,336   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:02:52,340   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:02:52,345   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:02:52,348   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:02:52,352   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:02:52,353   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:02:52,357   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:02:52,373   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:02:52,383   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:02:52,385   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:02:52,395   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:02:52,399   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:02:52,406   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:02:52,407   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:02:52,412   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:02:52,416   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:02:52,421   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:02:52,433   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:02:52,433   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:02:52,434   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:02:52,438   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:02:52,441   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:02:52,442   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:02:52,445   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:02:52,479   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:02:52,480   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:02:52,488   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:02:52,490   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:02:52,503   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:02:52,517   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:02:52,524   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:02:52,527   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:02:52,530   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:02:52,532   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:02:52,539   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:02:52,539   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:02:52,541   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:02:52,544   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:02:52,547   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:02:52,550   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:02:52,552   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:02:52,557   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:02:52,559   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:02:52,574   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:02:52,575   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:02:52,577   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:02:52,578   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:02:52,582   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:02:52,591   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:02:52,592   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:02:52,599   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:02:52,602   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:02:52,608   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:02:52,610   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:02:52,611   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:02:52,626   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:02:52,631   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:02:52,633   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:02:52,635   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:02:52,636   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:02:52,640   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:02:52,645   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:02:52,648   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:02:52,651   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-03-21 13:02:52,654   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:02:52,655   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:02:52,688   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:02:52,689   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:02:52,705   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:02:52,713   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:02:52,726   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:02:52,730   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:02:52,736   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:02:52,741   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:02:52,747   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:02:52,748   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:02:52,751   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:02:52,784   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:02:52,787   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:02:52,788   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:02:52,790   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:02:52,790   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:02:52,792   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:02:52,802   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:02:52,803   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:02:52,808   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:02:54,488   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:02:54,498   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:02:54,504   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:02:54,529   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:02:54,529   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:02:54,531   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 17:02:54,536   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 17:02:54,549   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 17:02:54,549   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-03-21 17:02:54,550   INFO  [main] NETWORK: 4 notified of host 0
2014-03-21 17:02:54,564   INFO  [ZooKeeperServer] REJOIN: Joining site 4:-1 known  active sites 0:-1, 4:-1
2014-03-21 17:02:54,588   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:02:54,635   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 17:02:54,677   FATAL [main] HOST: The PID of this process is 60223
2014-03-21 17:02:54,677   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 17:02:54,678   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 504244      0t0  TCP *:52599 (LISTEN)
2014-03-21 17:02:54,678   FATAL [main] HOST: java      12625 thorsten   34u  IPv6 224212      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 17:02:54,678   FATAL [main] HOST: java      12625 thorsten   40u  IPv6 224219      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 17:02:54,678   FATAL [main] HOST: java      12625 thorsten   54u  IPv6 224226      0t0  TCP *:8080 (LISTEN)
2014-03-21 17:02:54,678   FATAL [main] HOST: java      12625 thorsten   55u  IPv6 224293      0t0  TCP *:21212 (LISTEN)
2014-03-21 17:02:54,678   FATAL [main] HOST: java      12625 thorsten   56u  IPv6 224294      0t0  TCP *:21211 (LISTEN)
2014-03-21 17:02:54,684   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 17:02:54,684   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 17:02:55,015   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41026
2014-03-21 17:02:55,016   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 4:-1, reporting: 0:-1, witnessed: true}
2014-03-21 17:02:55,016   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [4:-1]
2014-03-21 17:02:55,016   WARN  [Volt Network - 0] NETWORK: Host 4 failed
2014-03-21 17:02:55,022   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 4:-1 to failed sites history
2014-03-21 17:02:55,022   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 4:-1 initiatorSafeInitPoints {4:-1->-1}
2014-03-21 17:02:55,022   WARN  [ZooKeeperServer] NETWORK: Host 4 failed
2014-03-21 13:04:15,209   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:04:15,209   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:04:15,216   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:04:15,216   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:04:15,217   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:04:15,219   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:04:15,220   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:04:15,220   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:04:15,221   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:04:15,221   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:04:15,222   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:04:15,222   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:04:15,223   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:04:15,224   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:04:15,224   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:04:15,225   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:04:15,226   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:04:15,227   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:04:15,228   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:04:15,228   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:04:15,228   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:04:15,228   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:04:15,228   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:04:15,229   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:04:15,230   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:04:15,231   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:04:15,231   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:04:15,231   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:04:15,232   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:04:15,232   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:04:15,232   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:04:15,232   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:04:15,233   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:04:15,233   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:04:15,234   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:04:15,234   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:04:15,234   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:04:15,235   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:04:15,235   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:04:15,236   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:04:15,236   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:04:15,236   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:04:15,237   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:04:15,237   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:04:15,257   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:04:15,305   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,320   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,324   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ?, EXPIRED = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,332   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:04:15,336   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:04:15,342   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:04:15,346   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:04:15,352   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:04:15,354   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:04:15,357   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:04:15,360   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:04:15,363   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:04:15,365   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,369   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,374   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,377   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:04:15,379   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,382   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,388   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,394   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:04:15,397   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,401   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,403   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,406   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:04:15,410   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:04:15,413   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:04:15,417   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:04:15,419   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:04:15,422   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:04:15,426   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:04:15,427   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:04:15,430   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:04:15,433   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:04:15,434   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:04:15,438   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:04:15,440   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:04:15,442   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:04:15,443   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:04:15,447   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:04:15,449   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:04:15,454   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:04:15,456   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:04:15,458   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:04:15,461   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:04:15,462   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:04:15,466   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:04:15,468   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:04:15,470   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:04:15,471   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:04:15,475   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:04:15,478   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:04:15,481   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:04:15,483   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:04:15,485   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:04:15,488   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:04:15,490   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,493   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,495   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,498   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:04:15,499   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,502   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,505   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,508   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:04:15,511   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,515   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,516   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:04:15,520   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:04:15,521   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:04:15,524   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:04:15,526   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:04:15,530   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:04:15,535   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:04:15,537   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:04:15,540   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:04:15,542   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:04:15,543   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:04:15,545   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:04:15,546   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:04:15,548   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:04:15,550   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:04:15,552   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:04:15,553   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:04:15,560   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:04:15,562   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:04:15,564   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:04:15,565   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:04:15,567   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:04:15,568   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:04:15,593   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:04:15,601   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:04:15,604   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:04:15,607   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:04:15,612   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:04:15,614   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:04:15,615   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:04:15,618   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:04:15,621   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:04:15,628   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:04:15,629   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:04:15,636   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:04:15,637   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:04:15,638   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:04:15,641   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:04:15,642   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:04:15,647   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:04:15,650   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:04:15,655   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:04:15,658   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:04:15,662   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:04:15,663   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:04:15,665   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:04:15,680   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:04:15,687   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:04:15,688   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:04:15,695   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:04:15,703   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:04:15,706   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:04:15,707   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:04:15,711   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:04:15,714   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:04:15,718   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:04:15,723   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:04:15,723   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:04:15,724   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:04:15,727   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:04:15,730   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:04:15,731   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:04:15,734   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:04:15,756   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:04:15,757   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:04:15,765   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:04:15,767   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:04:15,775   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:04:15,779   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:04:15,783   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:04:15,785   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:04:15,789   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:04:15,790   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:04:15,796   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:04:15,796   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:04:15,797   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:04:15,800   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:04:15,807   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:04:15,809   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:04:15,810   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:04:15,813   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:04:15,814   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:04:15,826   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:04:15,828   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:04:15,834   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:04:15,835   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:04:15,837   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:04:15,840   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:04:15,841   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:04:15,847   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:04:15,852   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:04:15,862   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:04:15,865   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:04:15,866   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:04:15,870   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:04:15,873   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:04:15,874   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:04:15,876   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:04:15,877   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:04:15,880   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:04:15,884   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:04:15,886   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:04:15,889   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID;
2014-03-21 13:04:15,891   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID;", reason: insufficient ordering criteria.
2014-03-21 13:04:15,893   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:04:15,921   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:04:15,922   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:04:15,937   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:04:15,945   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:04:15,947   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:04:15,950   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:04:15,952   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:04:15,956   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:04:15,962   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:04:15,963   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:04:15,966   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:04:15,972   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:04:15,975   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:04:15,976   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:04:15,978   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:04:15,978   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:04:15,979   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:04:15,982   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:04:15,983   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:04:15,987   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:04:17,781   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:04:17,791   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:04:17,800   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:04:17,834   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:04:17,835   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:04:17,837   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 17:04:17,843   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 17:04:17,857   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 17:04:17,857   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 2
2014-03-21 17:04:17,858   INFO  [main] NETWORK: 5 notified of host 0
2014-03-21 17:04:17,872   INFO  [ZooKeeperServer] REJOIN: Joining site 5:-1 known  active sites 0:-1, 5:-1
2014-03-21 17:04:17,909   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:04:17,939   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 17:04:17,978   FATAL [main] HOST: The PID of this process is 60423
2014-03-21 17:04:17,978   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 17:04:17,978   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 505267      0t0  TCP *:60523 (LISTEN)
2014-03-21 17:04:17,979   FATAL [main] HOST: java      12625 thorsten   34u  IPv6 224212      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 17:04:17,979   FATAL [main] HOST: java      12625 thorsten   40u  IPv6 224219      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 17:04:17,979   FATAL [main] HOST: java      12625 thorsten   54u  IPv6 224226      0t0  TCP *:8080 (LISTEN)
2014-03-21 17:04:17,979   FATAL [main] HOST: java      12625 thorsten   55u  IPv6 224293      0t0  TCP *:21212 (LISTEN)
2014-03-21 17:04:17,979   FATAL [main] HOST: java      12625 thorsten   56u  IPv6 224294      0t0  TCP *:21211 (LISTEN)
2014-03-21 17:04:17,984   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 17:04:17,984   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 17:04:18,319   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 5:-1
2014-03-21 17:04:18,320   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41079
2014-03-21 17:04:18,321   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 5:-1, reporting: 0:-1, witnessed: true}
2014-03-21 17:04:18,321   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [5:-1]
2014-03-21 17:04:18,322   WARN  [Volt Network - 0] NETWORK: Host 5 failed
2014-03-21 17:04:18,327   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 5:-1 to failed sites history
2014-03-21 17:04:18,327   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 5:-1 initiatorSafeInitPoints {5:-1->-1}
2014-03-21 17:04:18,328   WARN  [ZooKeeperServer] NETWORK: Host 5 failed
2014-03-21 13:05:56,721   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:05:56,721   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:05:56,727   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:05:56,728   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:05:56,728   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:05:56,730   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:05:56,731   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:05:56,731   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:05:56,732   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:05:56,732   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:05:56,733   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:05:56,733   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:05:56,733   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:05:56,734   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:05:56,735   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:05:56,736   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:05:56,736   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:05:56,737   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:05:56,738   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:05:56,738   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:05:56,738   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:05:56,738   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:05:56,738   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:05:56,739   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:05:56,741   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:05:56,741   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:05:56,741   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:05:56,742   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:05:56,742   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:05:56,742   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:05:56,743   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:05:56,743   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:05:56,743   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:05:56,744   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:05:56,744   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:05:56,744   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:05:56,744   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:05:56,745   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:05:56,745   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:05:56,746   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:05:56,746   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:05:56,747   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:05:56,748   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:05:56,748   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:05:56,761   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:05:56,806   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:56,821   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:56,825   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ?, EXPIRED = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:56,833   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:05:56,838   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:05:56,845   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:05:56,850   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:05:56,857   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:05:56,859   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:05:56,866   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:05:56,869   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:05:56,872   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:05:56,874   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:56,878   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:56,881   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:56,885   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:05:56,887   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:56,890   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:56,897   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:56,903   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:05:56,905   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:56,908   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:56,911   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:56,914   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:05:56,917   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:05:56,919   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:05:56,923   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:05:56,925   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:05:56,927   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:05:56,931   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:05:56,933   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:05:56,935   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:05:56,939   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:05:56,940   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:05:56,943   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:05:56,944   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:05:56,947   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:05:56,948   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:05:56,952   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:05:56,954   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:05:56,958   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:05:56,959   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:05:56,962   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:05:56,965   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:05:56,966   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:05:56,968   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:05:56,970   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:05:56,973   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:05:56,975   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:05:56,977   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:05:56,979   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:05:56,982   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:05:56,983   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:05:56,985   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:05:56,988   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:05:56,990   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:56,993   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:56,995   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:56,998   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:05:56,999   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:57,004   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:57,007   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:57,010   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:05:57,013   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:57,015   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:57,017   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:05:57,021   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:05:57,023   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:05:57,026   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:05:57,028   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:05:57,032   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:05:57,035   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:05:57,039   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:05:57,042   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:05:57,043   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:05:57,046   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:05:57,048   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:05:57,050   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:05:57,053   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:05:57,054   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:05:57,058   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:05:57,059   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:05:57,067   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:05:57,069   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:05:57,071   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:05:57,072   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:05:57,074   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:05:57,076   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:05:57,099   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:05:57,117   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:05:57,123   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:05:57,134   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:05:57,141   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:05:57,146   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:05:57,147   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:05:57,151   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:05:57,154   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:05:57,162   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:05:57,164   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:05:57,171   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:05:57,171   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:05:57,172   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:05:57,175   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:05:57,177   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:05:57,184   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:05:57,187   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:05:57,191   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:05:57,194   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:05:57,203   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:05:57,204   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:05:57,215   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:05:57,232   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:05:57,234   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:05:57,241   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:05:57,245   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:05:57,261   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:05:57,264   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:05:57,276   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:05:57,284   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:05:57,291   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:05:57,297   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:05:57,304   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:05:57,304   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:05:57,306   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:05:57,309   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:05:57,312   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:05:57,313   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:05:57,317   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:05:57,347   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:05:57,348   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:05:57,356   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:05:57,359   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:05:57,366   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:05:57,371   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:05:57,376   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:05:57,379   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:05:57,381   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:05:57,383   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:05:57,388   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:05:57,388   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:05:57,389   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:05:57,392   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:05:57,395   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:05:57,398   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:05:57,399   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:05:57,401   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:05:57,402   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:05:57,416   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:05:57,417   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:05:57,422   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:05:57,423   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:05:57,427   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:05:57,430   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:05:57,431   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:05:57,437   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:05:57,441   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:05:57,446   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:05:57,447   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:05:57,449   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:05:57,452   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:05:57,455   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:05:57,456   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:05:57,463   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:05:57,464   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:05:57,468   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:05:57,472   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:05:57,475   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:05:57,478   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 13:05:57,482   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:05:57,508   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:05:57,509   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:05:57,528   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:05:57,532   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:05:57,538   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:05:57,541   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:05:57,543   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:05:57,546   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:05:57,552   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:05:57,553   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:05:57,566   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:05:57,567   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:05:57,570   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:05:57,571   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:05:57,577   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:05:57,577   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:05:57,578   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:05:57,585   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:05:57,586   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:05:57,591   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:05:59,041   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:05:59,056   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:05:59,063   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:05:59,088   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:05:59,088   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:05:59,090   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 17:05:59,094   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 17:05:59,101   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 17:05:59,102   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-03-21 17:05:59,102   INFO  [main] NETWORK: 6 notified of host 0
2014-03-21 17:05:59,116   INFO  [ZooKeeperServer] REJOIN: Joining site 6:-1 known  active sites 0:-1, 6:-1
2014-03-21 17:05:59,141   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:05:59,178   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 17:05:59,210   FATAL [main] HOST: The PID of this process is 60661
2014-03-21 17:05:59,210   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 17:05:59,210   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 506164      0t0  TCP *:54790 (LISTEN)
2014-03-21 17:05:59,211   FATAL [main] HOST: java      12625 thorsten   34u  IPv6 224212      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 17:05:59,211   FATAL [main] HOST: java      12625 thorsten   40u  IPv6 224219      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 17:05:59,211   FATAL [main] HOST: java      12625 thorsten   54u  IPv6 224226      0t0  TCP *:8080 (LISTEN)
2014-03-21 17:05:59,211   FATAL [main] HOST: java      12625 thorsten   55u  IPv6 224293      0t0  TCP *:21212 (LISTEN)
2014-03-21 17:05:59,211   FATAL [main] HOST: java      12625 thorsten   56u  IPv6 224294      0t0  TCP *:21211 (LISTEN)
2014-03-21 17:05:59,216   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 17:05:59,216   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 17:05:59,548   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 6:-1
2014-03-21 17:05:59,552   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41141
2014-03-21 17:05:59,552   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 6:-1, reporting: 0:-1, witnessed: true}
2014-03-21 17:05:59,553   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [6:-1]
2014-03-21 17:05:59,553   WARN  [Volt Network - 1] NETWORK: Host 6 failed
2014-03-21 17:05:59,558   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 6:-1 to failed sites history
2014-03-21 17:05:59,559   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 6:-1 initiatorSafeInitPoints {6:-1->-1}
2014-03-21 17:05:59,559   WARN  [ZooKeeperServer] NETWORK: Host 6 failed
2014-03-21 13:07:23,394   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:07:23,394   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:07:23,401   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:07:23,401   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:07:23,402   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:07:23,404   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:07:23,405   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:07:23,405   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:07:23,406   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:07:23,406   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:07:23,407   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:07:23,407   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:07:23,407   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:07:23,409   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:07:23,409   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:07:23,411   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:07:23,412   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:07:23,412   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:07:23,413   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:07:23,413   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:07:23,413   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:07:23,413   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:07:23,414   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:07:23,415   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:07:23,416   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:07:23,416   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:07:23,416   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:07:23,417   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:07:23,417   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:07:23,417   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:07:23,419   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:07:23,419   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:07:23,419   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:07:23,420   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:07:23,421   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:07:23,421   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:07:23,421   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:07:23,421   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:07:23,422   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:07:23,423   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:07:23,423   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:07:23,423   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:07:23,424   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:07:23,424   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:07:23,439   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:07:23,516   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,532   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,536   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ?, EXPIRED = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,551   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:07:23,554   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:07:23,561   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:07:23,564   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:07:23,571   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:07:23,572   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:07:23,586   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:07:23,588   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:07:23,591   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:07:23,592   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,596   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,599   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,602   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:07:23,604   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,607   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,617   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,620   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:07:23,622   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,625   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,628   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,630   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:07:23,633   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:07:23,636   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:07:23,639   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:07:23,641   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:07:23,644   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:07:23,647   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:07:23,648   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:07:23,651   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:07:23,654   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:07:23,655   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:07:23,657   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:07:23,659   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:07:23,661   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:07:23,663   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:07:23,666   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:07:23,669   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:07:23,672   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:07:23,674   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:07:23,676   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:07:23,679   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:07:23,680   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:07:23,682   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:07:23,683   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:07:23,686   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:07:23,687   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:07:23,690   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:07:23,692   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:07:23,695   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:07:23,696   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:07:23,698   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:07:23,701   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:07:23,702   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,706   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,708   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,711   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:07:23,712   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,715   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,717   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,720   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:07:23,721   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,724   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,726   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:07:23,728   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:07:23,730   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:07:23,733   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:07:23,735   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:07:23,738   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:07:23,740   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:07:23,742   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:07:23,745   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:07:23,747   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:07:23,749   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:07:23,751   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:07:23,752   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:07:23,754   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:07:23,756   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:07:23,758   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:07:23,759   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:07:23,769   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:07:23,771   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:07:23,773   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:07:23,774   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:07:23,776   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:07:23,777   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:07:23,801   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:07:23,806   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:07:23,810   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:07:23,812   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:07:23,813   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:07:23,816   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:07:23,817   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:07:23,820   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:07:23,824   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:07:23,831   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:07:23,832   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:07:23,839   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:07:23,839   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:07:23,840   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:07:23,843   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:07:23,845   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:07:23,846   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:07:23,849   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:07:23,853   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:07:23,856   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:07:23,858   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:07:23,859   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:07:23,862   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:07:23,868   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:07:23,870   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:07:23,871   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:07:23,875   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:07:23,879   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:07:23,881   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:07:23,883   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:07:23,886   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:07:23,890   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:07:23,895   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:07:23,899   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:07:23,899   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:07:23,900   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:07:23,904   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:07:23,906   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:07:23,908   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:07:23,912   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:07:23,929   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:07:23,930   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:07:23,934   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:07:23,935   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:07:23,938   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:07:23,942   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:07:23,945   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:07:23,947   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:07:23,950   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:07:23,951   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:07:23,955   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:07:23,955   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:07:23,956   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:07:23,959   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:07:23,963   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:07:23,965   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:07:23,966   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:07:23,969   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:07:23,970   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:07:23,973   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:07:23,974   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:07:23,976   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:07:23,977   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:07:23,979   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:07:23,988   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:07:23,989   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:07:23,992   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:07:23,995   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:07:23,998   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:07:23,999   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:07:24,001   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:07:24,004   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:07:24,006   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:07:24,007   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:07:24,009   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:07:24,010   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:07:24,013   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:07:24,017   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:07:24,019   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:07:24,022   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 13:07:24,027   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:07:24,041   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:07:24,042   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:07:24,050   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:07:24,055   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:07:24,057   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:07:24,059   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:07:24,061   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:07:24,074   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:07:24,076   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:07:24,077   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:07:24,089   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:07:24,090   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:07:24,092   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:07:24,093   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:07:24,095   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:07:24,096   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:07:24,097   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:07:24,099   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:07:24,101   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:07:24,106   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:07:25,587   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:07:25,597   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:07:25,607   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:07:25,632   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:07:25,632   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:07:25,634   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-03-21 17:07:25,668   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:07:25,687   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-03-21 17:07:25,755   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-03-21 17:07:25,760   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-03-21 17:07:25,762   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-03-21 17:07:25,762   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:42551
2014-03-21 17:07:25,765   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:42551
2014-03-21 17:07:25,777   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16d97b63e3000000 with negotiated timeout 6000 for client /127.0.0.1:42551
2014-03-21 17:07:25,778   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16d97b63e3000000, negotiated timeout = 6000
2014-03-21 17:07:25,819   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-03-21 17:07:25,842   INFO  [main] HOST: Host id of this node is: 0
2014-03-21 17:07:25,842   INFO  [main] CONSOLE: Host id of this node is: 0
2014-03-21 17:07:25,858   INFO  [main] HOST: URL of deployment: deployment.xml
2014-03-21 17:07:26,173   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-03-21 17:07:27,339   WARN  [qtp786634838-29] HOST: JSON interface: Connection refused
2014-03-21 17:07:30,220   INFO  [main] EXPORT: System is not using any export functionality.
2014-03-21 17:07:30,231   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-03-21 17:07:30,340   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-03-21 17:07:30,357   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-03-21 17:07:31,388   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-03-21 17:07:31,797   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-03-21 17:07:31,850   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-03-21 17:07:31,865   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-03-21 17:07:31,877   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-03-21 17:07:31,902   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-03-21 17:07:31,902   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-03-21 17:07:31,906   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-03-21 17:07:31,914   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 17 ms.
2014-03-21 17:07:31,914   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 16 ms.
2014-03-21 17:07:31,914   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 12 ms.
2014-03-21 17:07:32,120   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:07:32,120   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:07:32,120   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:07:32,126   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-03-21 17:07:32,129   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 44 ms.
2014-03-21 17:07:32,197   WARN  [qtp786634838-29] HOST: JSON interface: Connection refused
2014-03-21 17:07:32,200   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:07:32,263   INFO  [main] HOST: Database start action is Create.
2014-03-21 17:07:32,325   INFO  [main] HOST: PID of this Volt process is 60864
2014-03-21 17:07:32,325   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-03-21 17:07:32,325   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-03-21 17:07:32,325   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-03-21 17:07:32,325   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-03-21 17:07:32,325   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-03-21 17:07:32,325   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-03-21 17:07:32,325   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-03-21 17:07:32,325   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 624 MB.
2014-03-21 17:07:32,326   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-03-21 17:07:32,326   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-03-21 17:07:32,326   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-03-21 17:07:32,326   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-03-21 17:07:32,326   INFO  [main] HOST: No schedule set for automated snapshots.
2014-03-21 17:07:32,326   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-03-21 17:07:32,326   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-03-21 17:07:32,326   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-03-21 17:07:32,326   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-03-21 17:07:32,326   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-431.5.1.el6.x86_64 amd64 en_US
2014-03-21 17:07:32,326   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-03-21 17:07:32,326   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-03-21 17:07:32,326   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-03-21 17:07:32,327   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-03-21 17:07:32,327   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8335:b00:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-03-21 17:07:32,365   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-03-21 17:07:32,365   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-03-21 17:07:32,382   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-03-21 17:07:32,386   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-03-21 17:07:32,392   INFO  [Thread-10] HOST: Logging config info
2014-03-21 17:07:32,530   INFO  [Thread-11] CONSOLE: Server completed initialization.
2014-03-21 17:07:33,230   INFO  [Periodic Priority Work] GC: GC for PS MarkSweep: 232 ms for 1 collections, 454994248 used; max is 1908932608
2014-03-21 13:12:42,994   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:12:42,995   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:12:43,001   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:12:43,002   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:12:43,003   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:12:43,005   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:12:43,006   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:12:43,007   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:12:43,007   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:12:43,007   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:12:43,009   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:12:43,009   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:12:43,009   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:12:43,011   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:12:43,011   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:12:43,012   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:12:43,013   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:12:43,014   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:12:43,015   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:12:43,015   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:12:43,015   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:12:43,015   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:12:43,015   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:12:43,016   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:12:43,018   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:12:43,018   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:12:43,018   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:12:43,019   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:12:43,019   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:12:43,019   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:12:43,020   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:12:43,020   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:12:43,020   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:12:43,021   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:12:43,021   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:12:43,021   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:12:43,022   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:12:43,022   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:12:43,022   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:12:43,023   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:12:43,023   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:12:43,024   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:12:43,025   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:12:43,025   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:12:43,038   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:12:43,120   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,168   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,172   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,180   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:12:43,213   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:12:43,219   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:12:43,222   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:12:43,258   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:12:43,260   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:12:43,263   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:12:43,265   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:12:43,268   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:12:43,305   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,308   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,312   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,316   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:12:43,317   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,320   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,428   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,432   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:12:43,433   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,437   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,439   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,442   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:12:43,445   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:12:43,448   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:12:43,451   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:12:43,453   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:12:43,456   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:12:43,461   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:12:43,463   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:12:43,465   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:12:43,468   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:12:43,469   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:12:43,471   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:12:43,473   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:12:43,475   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:12:43,477   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:12:43,480   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:12:43,483   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:12:43,486   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:12:43,488   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:12:43,490   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:12:43,493   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:12:43,494   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:12:43,497   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:12:43,499   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:12:43,501   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:12:43,502   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:12:43,505   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:12:43,507   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:12:43,510   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:12:43,511   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:12:43,514   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:12:43,516   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:12:43,518   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,521   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,523   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,526   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:12:43,527   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,530   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,533   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,536   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:12:43,537   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,540   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,542   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:12:43,545   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:12:43,547   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:12:43,550   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:12:43,552   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:12:43,555   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:12:43,557   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:12:43,559   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:12:43,563   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:12:43,564   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:12:43,566   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:12:43,569   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:12:43,570   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:12:43,572   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:12:43,574   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:12:43,576   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:12:43,577   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:12:43,584   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:12:43,586   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:12:43,588   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:12:43,589   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:12:43,591   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:12:43,592   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:12:43,617   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:12:43,633   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:12:43,663   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:12:43,666   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:12:43,670   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:12:43,673   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:12:43,674   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:12:43,677   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:12:43,680   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:12:43,687   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:12:43,688   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:12:43,697   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:12:43,697   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:12:43,698   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:12:43,701   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:12:43,703   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:12:43,704   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:12:43,707   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:12:43,710   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:12:43,714   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:12:43,719   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:12:43,720   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:12:43,723   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:12:43,746   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:12:43,747   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:12:43,749   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:12:43,752   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:12:43,756   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:12:43,759   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:12:43,760   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:12:43,764   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:12:43,768   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:12:43,772   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:12:43,777   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:12:43,778   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:12:43,779   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:12:43,782   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:12:43,784   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:12:43,785   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:12:43,789   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:12:43,806   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:12:43,807   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:12:43,815   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:12:43,817   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:12:43,857   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:12:43,862   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:12:43,865   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:12:43,868   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:12:43,872   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:12:43,873   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:12:43,907   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:12:43,907   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:12:43,909   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:12:43,912   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:12:43,915   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:12:43,918   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:12:43,919   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:12:43,955   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:12:43,956   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:12:43,968   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:12:43,969   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:12:43,973   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:12:43,974   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:12:43,980   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:12:44,008   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:12:44,009   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:12:44,016   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:12:44,019   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:12:44,025   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:12:44,027   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:12:44,028   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:12:44,065   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:12:44,067   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:12:44,068   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:12:44,070   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:12:44,071   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:12:44,074   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:12:44,101   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:12:44,104   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:12:44,106   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 13:12:44,140   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:12:44,188   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:12:44,189   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:12:44,236   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:12:44,248   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:12:44,251   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:12:44,253   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:12:44,255   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:12:44,263   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:12:44,269   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:12:44,270   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:12:44,347   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:12:44,349   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:12:44,351   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:12:44,352   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:12:44,357   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:12:44,357   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:12:44,358   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:12:44,366   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:12:44,367   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:12:44,372   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:12:45,950   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:12:45,957   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:12:45,965   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:12:45,995   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:12:45,996   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:12:45,998   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 17:12:46,003   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 17:12:46,017   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 17:12:46,017   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-03-21 17:12:46,017   INFO  [main] NETWORK: 1 notified of host 0
2014-03-21 17:12:46,028   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-03-21 17:12:46,055   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:12:46,099   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 17:12:46,132   FATAL [main] HOST: The PID of this process is 61030
2014-03-21 17:12:46,132   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 17:12:46,132   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 508406      0t0  TCP *:57143 (LISTEN)
2014-03-21 17:12:46,132   FATAL [main] HOST: java      60864 thorsten   34u  IPv6 507458      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 17:12:46,132   FATAL [main] HOST: java      60864 thorsten   40u  IPv6 507465      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 17:12:46,132   FATAL [main] HOST: java      60864 thorsten   54u  IPv6 507472      0t0  TCP *:8080 (LISTEN)
2014-03-21 17:12:46,132   FATAL [main] HOST: java      60864 thorsten   56u  IPv6 507593      0t0  TCP *:21212 (LISTEN)
2014-03-21 17:12:46,132   FATAL [main] HOST: java      60864 thorsten   57u  IPv6 507594      0t0  TCP *:21211 (LISTEN)
2014-03-21 17:12:46,138   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 17:12:46,138   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 17:12:46,470   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41211
2014-03-21 17:12:46,473   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-03-21 17:12:46,476   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-03-21 17:12:46,484   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-03-21 17:12:46,494   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-03-21 17:12:46,494   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-03-21 17:12:46,495   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-03-21 13:13:02,082   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:13:02,082   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:13:02,088   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:13:02,088   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:13:02,089   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:13:02,091   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:13:02,092   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:13:02,092   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:13:02,093   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:13:02,093   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:13:02,094   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:13:02,095   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:13:02,095   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:13:02,096   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:13:02,097   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:13:02,098   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:13:02,098   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:13:02,099   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:13:02,100   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:13:02,100   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:13:02,100   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:13:02,100   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:13:02,100   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:13:02,101   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:13:02,103   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:13:02,103   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:13:02,103   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:13:02,110   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:13:02,110   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:13:02,110   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:13:02,111   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:13:02,111   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:13:02,111   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:13:02,112   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:13:02,112   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:13:02,112   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:13:02,112   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:13:02,113   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:13:02,113   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:13:02,114   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:13:02,114   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:13:02,114   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:13:02,114   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:13:02,115   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:13:02,127   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:13:02,171   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,185   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,189   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,198   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:13:02,202   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:13:02,209   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:13:02,212   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:13:02,219   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:13:02,221   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:13:02,224   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:13:02,227   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:13:02,230   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:13:02,232   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,235   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,238   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,242   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:13:02,244   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,247   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,254   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,259   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:13:02,264   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,268   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,270   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,273   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:13:02,276   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:13:02,279   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:13:02,286   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:13:02,288   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:13:02,292   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:13:02,295   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:13:02,297   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:13:02,299   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:13:02,302   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:13:02,303   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:13:02,305   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:13:02,307   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:13:02,309   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:13:02,311   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:13:02,314   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:13:02,316   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:13:02,320   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:13:02,321   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:13:02,323   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:13:02,326   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:13:02,327   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:13:02,330   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:13:02,332   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:13:02,334   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:13:02,336   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:13:02,338   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:13:02,340   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:13:02,343   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:13:02,344   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:13:02,346   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:13:02,349   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:13:02,351   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,354   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,356   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,359   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:13:02,360   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,363   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,365   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,368   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:13:02,369   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,372   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,374   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:13:02,376   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:13:02,378   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:13:02,381   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:13:02,383   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:13:02,386   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:13:02,388   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:13:02,390   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:13:02,394   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:13:02,396   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:13:02,397   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:13:02,401   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:13:02,402   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:13:02,403   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:13:02,405   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:13:02,407   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:13:02,408   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:13:02,415   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:13:02,417   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:13:02,419   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:13:02,421   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:13:02,422   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:13:02,424   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:13:02,448   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:13:02,453   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:13:02,456   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:13:02,459   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:13:02,460   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:13:02,463   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:13:02,464   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:13:02,467   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:13:02,470   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:13:02,477   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:13:02,479   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:13:02,486   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:13:02,486   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:13:02,487   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:13:02,490   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:13:02,492   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:13:02,493   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:13:02,497   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:13:02,502   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:13:02,505   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:13:02,507   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:13:02,508   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:13:02,511   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:13:02,517   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:13:02,519   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:13:02,520   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:13:02,523   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:13:02,527   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:13:02,529   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:13:02,531   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:13:02,534   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:13:02,538   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:13:02,542   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:13:02,547   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:13:02,547   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:13:02,548   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:13:02,551   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:13:02,554   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:13:02,555   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:13:02,559   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:13:02,576   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:13:02,578   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:13:02,582   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:13:02,584   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:13:02,587   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:13:02,591   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:13:02,594   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:13:02,597   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:13:02,599   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:13:02,600   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:13:02,604   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:13:02,604   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:13:02,605   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:13:02,608   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:13:02,611   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:13:02,613   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:13:02,615   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:13:02,631   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:13:02,632   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:13:02,635   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:13:02,636   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:13:02,638   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:13:02,639   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:13:02,641   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:13:02,643   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:13:02,644   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:13:02,647   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:13:02,650   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:13:02,653   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:13:02,655   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:13:02,656   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:13:02,668   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:13:02,670   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:13:02,672   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:13:02,674   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:13:02,675   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:13:02,678   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:13:02,682   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:13:02,683   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:13:02,686   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 13:13:02,691   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:13:02,719   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:13:02,720   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:13:02,733   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:13:02,737   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:13:02,739   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:13:02,741   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:13:02,743   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:13:02,747   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:13:02,749   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:13:02,750   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:13:02,760   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:13:02,762   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:13:02,764   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:13:02,765   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:13:02,767   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:13:02,767   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:13:02,769   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:13:02,772   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:13:02,773   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:13:02,778   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:13:04,509   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:13:04,517   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:13:04,524   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:13:04,548   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:13:04,548   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:13:04,550   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-03-21 17:13:04,584   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:13:04,602   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-03-21 17:13:04,646   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-03-21 17:13:04,650   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-03-21 17:13:04,652   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:42566
2014-03-21 17:13:04,654   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-03-21 17:13:04,655   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:42566
2014-03-21 17:13:04,666   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16d97df9c8000000 with negotiated timeout 6000 for client /127.0.0.1:42566
2014-03-21 17:13:04,667   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16d97df9c8000000, negotiated timeout = 6000
2014-03-21 17:13:04,705   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-03-21 17:13:04,733   INFO  [main] HOST: Host id of this node is: 0
2014-03-21 17:13:04,733   INFO  [main] CONSOLE: Host id of this node is: 0
2014-03-21 17:13:04,746   INFO  [main] HOST: URL of deployment: deployment.xml
2014-03-21 17:13:04,993   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-03-21 17:13:06,548   INFO  [main] EXPORT: System is not using any export functionality.
2014-03-21 17:13:06,552   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-03-21 17:13:06,644   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-03-21 17:13:06,648   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-03-21 17:13:06,948   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-03-21 17:13:07,092   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-03-21 17:13:07,117   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-03-21 17:13:07,126   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-03-21 17:13:07,131   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-03-21 17:13:07,137   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-03-21 17:13:07,137   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-03-21 17:13:07,147   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-03-21 17:13:07,152   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 6 ms.
2014-03-21 17:13:07,152   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 17 ms.
2014-03-21 17:13:07,153   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 26 ms.
2014-03-21 17:13:07,159   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:13:07,159   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:13:07,159   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:13:07,168   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-03-21 17:13:07,170   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 8 ms.
2014-03-21 17:13:07,179   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:13:07,204   INFO  [main] HOST: Database start action is Create.
2014-03-21 17:13:07,228   INFO  [main] HOST: PID of this Volt process is 61093
2014-03-21 17:13:07,228   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-03-21 17:13:07,228   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-03-21 17:13:07,229   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-03-21 17:13:07,229   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-03-21 17:13:07,229   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-03-21 17:13:07,229   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-03-21 17:13:07,229   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-03-21 17:13:07,229   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 624 MB.
2014-03-21 17:13:07,229   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-03-21 17:13:07,229   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-03-21 17:13:07,229   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-03-21 17:13:07,229   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-03-21 17:13:07,229   INFO  [main] HOST: No schedule set for automated snapshots.
2014-03-21 17:13:07,229   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-03-21 17:13:07,230   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-03-21 17:13:07,230   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-03-21 17:13:07,230   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-03-21 17:13:07,230   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-431.5.1.el6.x86_64 amd64 en_US
2014-03-21 17:13:07,230   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-03-21 17:13:07,230   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-03-21 17:13:07,230   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-03-21 17:13:07,230   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-03-21 17:13:07,230   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8335:b00:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-03-21 17:13:07,233   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-03-21 17:13:07,233   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-03-21 17:13:07,257   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-03-21 17:13:07,258   INFO  [Thread-9] HOST: Logging config info
2014-03-21 17:13:07,259   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-03-21 17:13:07,287   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-03-21 17:14:04,766   WARN  [Volt Network - 0] AUTH: Procedure RULE.insert was not found. This message is rate limited to once every 60 seconds.
2014-03-21 13:14:41,819   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:14:41,820   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:14:41,826   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:14:41,827   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:14:41,829   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:14:41,831   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:14:41,831   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:14:41,832   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:14:41,832   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:14:41,832   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:14:41,837   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:14:41,838   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:14:41,838   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:14:41,839   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:14:41,841   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:14:41,842   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:14:41,842   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:14:41,843   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:14:41,844   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:14:41,844   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:14:41,844   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:14:41,844   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:14:41,844   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:14:41,845   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:14:41,846   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:14:41,846   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:14:41,847   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:14:41,847   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:14:41,847   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:14:41,847   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:14:41,848   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:14:41,848   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:14:41,848   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:14:41,848   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:14:41,849   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:14:41,849   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:14:41,849   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:14:41,849   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:14:41,849   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:14:41,850   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:14:41,850   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:14:41,850   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:14:41,851   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:14:41,851   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:14:41,863   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:14:41,915   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:41,930   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:41,934   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:41,943   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:14:41,947   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:14:41,954   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:14:41,957   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:14:41,964   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:14:41,965   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:14:41,969   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:14:41,971   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:14:41,974   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:14:41,976   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:41,984   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:41,987   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:41,991   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:14:41,993   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:41,996   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:42,005   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:42,009   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:14:42,012   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:42,016   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:42,018   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:42,022   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:14:42,025   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:14:42,028   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:14:42,033   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:14:42,034   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:14:42,037   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:14:42,041   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:14:42,043   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:14:42,045   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:14:42,049   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:14:42,050   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:14:42,052   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:14:42,054   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:14:42,059   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:14:42,061   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:14:42,064   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:14:42,066   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:14:42,072   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:14:42,073   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:14:42,076   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:14:42,078   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:14:42,079   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:14:42,083   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:14:42,085   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:14:42,087   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:14:42,088   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:14:42,092   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:14:42,094   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:14:42,097   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:14:42,099   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:14:42,104   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:14:42,109   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:14:42,111   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:42,114   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:42,116   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:42,119   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:14:42,121   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:42,124   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:42,126   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:42,129   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:14:42,130   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:42,133   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:42,135   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:14:42,138   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:14:42,140   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:14:42,143   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:14:42,145   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:14:42,148   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:14:42,150   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:14:42,152   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:14:42,155   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:14:42,157   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:14:42,159   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:14:42,161   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:14:42,162   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:14:42,164   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:14:42,165   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:14:42,167   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:14:42,169   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:14:42,171   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:14:42,179   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:14:42,182   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:14:42,183   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:14:42,185   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:14:42,187   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:14:42,212   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:14:42,218   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:14:42,236   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:14:42,239   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:14:42,240   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:14:42,243   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:14:42,245   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:14:42,248   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:14:42,251   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:14:42,258   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:14:42,260   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:14:42,267   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:14:42,267   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:14:42,268   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:14:42,271   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:14:42,273   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:14:42,274   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:14:42,277   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:14:42,281   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:14:42,284   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:14:42,286   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:14:42,287   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:14:42,290   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:14:42,297   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:14:42,299   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:14:42,300   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:14:42,303   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:14:42,307   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:14:42,310   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:14:42,311   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:14:42,314   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:14:42,318   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:14:42,322   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:14:42,327   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:14:42,327   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:14:42,328   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:14:42,332   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:14:42,334   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:14:42,335   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:14:42,339   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:14:42,365   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:14:42,367   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:14:42,371   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:14:42,373   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:14:42,414   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:14:42,418   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:14:42,421   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:14:42,424   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:14:42,426   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:14:42,427   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:14:42,469   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:14:42,469   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:14:42,470   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:14:42,477   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:14:42,480   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:14:42,483   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:14:42,484   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:14:42,513   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:14:42,514   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:14:42,525   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:14:42,526   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:14:42,531   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:14:42,532   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:14:42,534   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:14:42,573   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:14:42,574   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:14:42,577   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:14:42,580   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:14:42,583   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:14:42,585   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:14:42,617   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:14:42,621   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:14:42,624   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:14:42,625   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:14:42,628   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:14:42,629   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:14:42,632   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:14:42,666   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:14:42,668   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:14:42,671   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 13:14:42,700   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:14:42,750   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:14:42,752   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:14:42,790   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:14:42,794   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:14:42,797   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:14:42,798   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:14:42,804   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:14:42,868   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:14:42,870   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:14:42,871   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:14:42,970   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:14:42,971   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:14:42,973   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:14:42,974   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:14:42,977   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:14:42,977   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:14:42,978   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:14:42,981   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:14:42,982   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:14:42,987   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:14:44,409   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:14:44,416   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:14:44,423   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:14:44,448   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:14:44,448   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:14:44,450   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 17:14:44,455   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 17:14:44,463   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 17:14:44,463   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-03-21 17:14:44,464   INFO  [main] NETWORK: 1 notified of host 0
2014-03-21 17:14:44,475   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-03-21 17:14:44,506   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:14:44,539   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 17:14:44,570   FATAL [main] HOST: The PID of this process is 61212
2014-03-21 17:14:44,570   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 17:14:44,570   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 509578      0t0  TCP *:40846 (LISTEN)
2014-03-21 17:14:44,570   FATAL [main] HOST: java      61093 thorsten   34u  IPv6 509254      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 17:14:44,571   FATAL [main] HOST: java      61093 thorsten   40u  IPv6 509261      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 17:14:44,571   FATAL [main] HOST: java      61093 thorsten   54u  IPv6 509269      0t0  TCP *:8080 (LISTEN)
2014-03-21 17:14:44,571   FATAL [main] HOST: java      61093 thorsten   55u  IPv6 509336      0t0  TCP *:21212 (LISTEN)
2014-03-21 17:14:44,571   FATAL [main] HOST: java      61093 thorsten   56u  IPv6 509337      0t0  TCP *:21211 (LISTEN)
2014-03-21 17:14:44,577   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 17:14:44,577   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 17:14:44,907   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41218
2014-03-21 17:14:44,907   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-03-21 17:14:44,912   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-03-21 17:14:44,927   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-03-21 17:14:44,936   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-03-21 17:14:44,936   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-03-21 17:14:44,937   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-03-21 13:15:12,536   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:15:12,537   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:15:12,544   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:15:12,545   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:15:12,547   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:15:12,549   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:15:12,550   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:15:12,550   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:15:12,550   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:15:12,551   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:15:12,557   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:15:12,558   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:15:12,558   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:15:12,559   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:15:12,561   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:15:12,562   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:15:12,562   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:15:12,563   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:15:12,564   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:15:12,564   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:15:12,564   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:15:12,564   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:15:12,564   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:15:12,565   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:15:12,566   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:15:12,566   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:15:12,566   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:15:12,566   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:15:12,567   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:15:12,567   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:15:12,567   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:15:12,567   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:15:12,567   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:15:12,568   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:15:12,568   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:15:12,568   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:15:12,568   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:15:12,568   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:15:12,569   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:15:12,569   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:15:12,569   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:15:12,570   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:15:12,570   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:15:12,570   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:15:12,584   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:15:12,649   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,669   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,673   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,688   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:15:12,692   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:15:12,698   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:15:12,702   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:15:12,708   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:15:12,709   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:15:12,716   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:15:12,718   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:15:12,721   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:15:12,723   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,731   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,734   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,738   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:15:12,739   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,743   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,749   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,755   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:15:12,756   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,759   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,762   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,765   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:15:12,768   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:15:12,771   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:15:12,775   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:15:12,777   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:15:12,780   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:15:12,784   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:15:12,787   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:15:12,789   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:15:12,792   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:15:12,793   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:15:12,796   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:15:12,798   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:15:12,802   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:15:12,804   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:15:12,807   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:15:12,809   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:15:12,814   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:15:12,816   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:15:12,818   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:15:12,821   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:15:12,822   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:15:12,824   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:15:12,826   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:15:12,828   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:15:12,830   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:15:12,834   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:15:12,836   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:15:12,839   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:15:12,841   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:15:12,843   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:15:12,846   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:15:12,848   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,851   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,853   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,856   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:15:12,858   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,861   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,864   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,867   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:15:12,870   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,872   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,874   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:15:12,877   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:15:12,879   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:15:12,884   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:15:12,886   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:15:12,889   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:15:12,892   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:15:12,896   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:15:12,900   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:15:12,901   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:15:12,903   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:15:12,905   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:15:12,906   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:15:12,909   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:15:12,911   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:15:12,912   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:15:12,913   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:15:12,916   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:15:12,921   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:15:12,923   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:15:12,925   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:15:12,926   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:15:12,928   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:15:12,951   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:15:12,962   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:15:12,965   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:15:12,967   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:15:12,968   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:15:12,971   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:15:12,972   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:15:12,975   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:15:12,978   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:15:12,985   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:15:12,986   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:15:12,994   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:15:12,994   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:15:12,995   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:15:12,998   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:15:13,000   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:15:13,001   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:15:13,004   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:15:13,009   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:15:13,012   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:15:13,015   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:15:13,016   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:15:13,018   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:15:13,023   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:15:13,025   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:15:13,026   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:15:13,030   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:15:13,034   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:15:13,036   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:15:13,037   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:15:13,044   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:15:13,051   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:15:13,057   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:15:13,062   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:15:13,062   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:15:13,064   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:15:13,073   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:15:13,085   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:15:13,086   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:15:13,089   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:15:13,105   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:15:13,107   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:15:13,112   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:15:13,121   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:15:13,124   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:15:13,127   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:15:13,129   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:15:13,133   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:15:13,135   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:15:13,136   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:15:13,140   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:15:13,140   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:15:13,141   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:15:13,144   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:15:13,150   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:15:13,160   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:15:13,161   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:15:13,164   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:15:13,164   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:15:13,167   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:15:13,168   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:15:13,170   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:15:13,170   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:15:13,173   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:15:13,176   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:15:13,177   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:15:13,180   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:15:13,184   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:15:13,187   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:15:13,188   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:15:13,189   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:15:13,193   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:15:13,195   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:15:13,196   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:15:13,198   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:15:13,199   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:15:13,202   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:15:13,206   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:15:13,208   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:15:13,211   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 13:15:13,217   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:15:13,231   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:15:13,232   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:15:13,245   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:15:13,249   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:15:13,251   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:15:13,252   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:15:13,254   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:15:13,258   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:15:13,259   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:15:13,260   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:15:13,268   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:15:13,269   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:15:13,271   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:15:13,272   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:15:13,277   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:15:13,277   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:15:13,280   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:15:13,283   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:15:13,284   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:15:13,296   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:15:14,907   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:15:14,923   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:15:14,930   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:15:14,955   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:15:14,955   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:15:14,957   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-03-21 17:15:14,990   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:15:15,009   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-03-21 17:15:15,056   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@2a03803
2014-03-21 17:15:15,061   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-03-21 17:15:15,063   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:42572
2014-03-21 17:15:15,065   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-03-21 17:15:15,067   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:42572
2014-03-21 17:15:15,077   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16d97ef87d800000 with negotiated timeout 6000 for client /127.0.0.1:42572
2014-03-21 17:15:15,078   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16d97ef87d800000, negotiated timeout = 6000
2014-03-21 17:15:15,119   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-03-21 17:15:15,160   INFO  [main] HOST: Host id of this node is: 0
2014-03-21 17:15:15,160   INFO  [main] CONSOLE: Host id of this node is: 0
2014-03-21 17:15:15,173   INFO  [main] HOST: URL of deployment: deployment.xml
2014-03-21 17:15:15,393   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-03-21 17:15:16,836   INFO  [main] EXPORT: System is not using any export functionality.
2014-03-21 17:15:16,842   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-03-21 17:15:16,948   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-03-21 17:15:16,953   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-03-21 17:15:17,241   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-03-21 17:15:17,377   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-03-21 17:15:17,402   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-03-21 17:15:17,411   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-03-21 17:15:17,414   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-03-21 17:15:17,423   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-03-21 17:15:17,426   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-03-21 17:15:17,431   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-03-21 17:15:17,437   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 13 ms.
2014-03-21 17:15:17,437   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 7 ms.
2014-03-21 17:15:17,437   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 26 ms.
2014-03-21 17:15:17,448   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:15:17,448   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:15:17,448   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:15:17,456   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-03-21 17:15:17,458   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 9 ms.
2014-03-21 17:15:17,467   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:15:17,492   INFO  [main] HOST: Database start action is Create.
2014-03-21 17:15:17,517   INFO  [main] HOST: PID of this Volt process is 61277
2014-03-21 17:15:17,518   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-03-21 17:15:17,518   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-03-21 17:15:17,518   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-03-21 17:15:17,518   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-03-21 17:15:17,518   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-03-21 17:15:17,518   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-03-21 17:15:17,518   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-03-21 17:15:17,518   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 624 MB.
2014-03-21 17:15:17,518   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-03-21 17:15:17,518   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-03-21 17:15:17,518   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-03-21 17:15:17,519   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-03-21 17:15:17,519   INFO  [main] HOST: No schedule set for automated snapshots.
2014-03-21 17:15:17,519   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-03-21 17:15:17,519   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-03-21 17:15:17,519   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-03-21 17:15:17,519   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-03-21 17:15:17,519   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-431.5.1.el6.x86_64 amd64 en_US
2014-03-21 17:15:17,519   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-03-21 17:15:17,519   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-03-21 17:15:17,519   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-03-21 17:15:17,520   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-03-21 17:15:17,520   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8335:b00:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-03-21 17:15:17,521   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-03-21 17:15:17,521   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-03-21 17:15:17,536   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-03-21 17:15:17,538   INFO  [Thread-9] HOST: Logging config info
2014-03-21 17:15:17,538   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-03-21 17:15:17,564   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-03-21 17:15:45,377   WARN  [Volt Network - 1] AUTH: Error sending procedure ACTION.insert to the correct partition. Make sure parameter values are correct. Parameter value null, partition column CHECKPATHID type 9 Message: Invalid partitionIndex
2014-03-21 13:16:54,832   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:16:54,832   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:16:54,838   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:16:54,839   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:16:54,839   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:16:54,842   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:16:54,842   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:16:54,843   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:16:54,843   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:16:54,843   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:16:54,844   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:16:54,845   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:16:54,845   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:16:54,846   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:16:54,846   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:16:54,847   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:16:54,848   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:16:54,848   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:16:54,849   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:16:54,849   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:16:54,849   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:16:54,849   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:16:54,850   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:16:54,851   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:16:54,852   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:16:54,852   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:16:54,852   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:16:54,853   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:16:54,853   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:16:54,853   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:16:54,854   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:16:54,854   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:16:54,854   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:16:54,855   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:16:54,856   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:16:54,856   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:16:54,856   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:16:54,856   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:16:54,857   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:16:54,858   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:16:54,858   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:16:54,858   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:16:54,859   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:16:54,860   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:16:54,872   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:16:54,919   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:54,935   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:54,939   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:54,948   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:16:54,952   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:16:54,958   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:16:54,962   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:16:54,968   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:16:54,970   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:16:54,974   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:16:54,976   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:16:54,979   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:16:54,982   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:54,986   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:54,989   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:54,993   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:16:54,995   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:54,998   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:55,006   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:55,010   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:16:55,014   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:55,018   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:55,020   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:55,023   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:16:55,027   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:16:55,030   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:16:55,038   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:16:55,040   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:16:55,043   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:16:55,046   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:16:55,049   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:16:55,051   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:16:55,054   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:16:55,055   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:16:55,058   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:16:55,060   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:16:55,065   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:16:55,066   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:16:55,070   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:16:55,072   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:16:55,078   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:16:55,080   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:16:55,082   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:16:55,085   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:16:55,086   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:16:55,090   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:16:55,092   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:16:55,094   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:16:55,096   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:16:55,099   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:16:55,101   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:16:55,104   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:16:55,105   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:16:55,108   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:16:55,111   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:16:55,112   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:55,115   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:55,118   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:55,120   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:16:55,122   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:55,125   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:55,128   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:55,131   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:16:55,135   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:55,137   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:55,139   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:16:55,143   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:16:55,145   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:16:55,148   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:16:55,150   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:16:55,153   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:16:55,158   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:16:55,160   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:16:55,164   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:16:55,165   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:16:55,167   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:16:55,169   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:16:55,170   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:16:55,173   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:16:55,175   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:16:55,177   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:16:55,179   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:16:55,186   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:16:55,188   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:16:55,190   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:16:55,191   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:16:55,193   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:16:55,195   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:16:55,219   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:16:55,234   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:16:55,240   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:16:55,243   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:16:55,244   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:16:55,247   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:16:55,248   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:16:55,251   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:16:55,254   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:16:55,262   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:16:55,264   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:16:55,271   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:16:55,271   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:16:55,272   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:16:55,275   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:16:55,277   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:16:55,278   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:16:55,282   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:16:55,286   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:16:55,289   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:16:55,292   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:16:55,293   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:16:55,296   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:16:55,303   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:16:55,305   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:16:55,306   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:16:55,310   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:16:55,314   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:16:55,316   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:16:55,317   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:16:55,321   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:16:55,325   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:16:55,330   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:16:55,334   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:16:55,335   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:16:55,336   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:16:55,340   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:16:55,343   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:16:55,344   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:16:55,354   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:16:55,376   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:16:55,378   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:16:55,389   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:16:55,395   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:16:55,400   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:16:55,405   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:16:55,412   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:16:55,421   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:16:55,423   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:16:55,424   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:16:55,429   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:16:55,429   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:16:55,430   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:16:55,433   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:16:55,436   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:16:55,439   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:16:55,440   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:16:55,443   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:16:55,444   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:16:55,447   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:16:55,448   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:16:55,458   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:16:55,460   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:16:55,462   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:16:55,468   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:16:55,469   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:16:55,472   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:16:55,476   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:16:55,479   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:16:55,481   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:16:55,482   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:16:55,486   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:16:55,488   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:16:55,490   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:16:55,493   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:16:55,495   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:16:55,498   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:16:55,503   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:16:55,505   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:16:55,508   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 13:16:55,513   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:16:55,541   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:16:55,543   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:16:55,557   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:16:55,564   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:16:55,566   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:16:55,568   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:16:55,570   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:16:55,574   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:16:55,580   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:16:55,581   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:16:55,589   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:16:55,590   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:16:55,592   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:16:55,593   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:16:55,599   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:16:55,599   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:16:55,601   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:16:55,609   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:16:55,610   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:16:55,615   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:16:56,976   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:16:56,986   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:16:56,996   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:16:57,037   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:16:57,037   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:16:57,040   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 17:16:57,046   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 17:16:57,060   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 17:16:57,061   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-03-21 17:16:57,061   INFO  [main] NETWORK: 1 notified of host 0
2014-03-21 17:16:57,073   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-03-21 17:16:57,099   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:16:57,130   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 17:16:57,176   FATAL [main] HOST: The PID of this process is 61388
2014-03-21 17:16:57,176   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 17:16:57,177   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 510749      0t0  TCP *:36338 (LISTEN)
2014-03-21 17:16:57,177   FATAL [main] HOST: java      61277 thorsten   34u  IPv6 510435      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 17:16:57,177   FATAL [main] HOST: java      61277 thorsten   40u  IPv6 510442      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 17:16:57,177   FATAL [main] HOST: java      61277 thorsten   54u  IPv6 510449      0t0  TCP *:8080 (LISTEN)
2014-03-21 17:16:57,177   FATAL [main] HOST: java      61277 thorsten   55u  IPv6 510516      0t0  TCP *:21212 (LISTEN)
2014-03-21 17:16:57,177   FATAL [main] HOST: java      61277 thorsten   56u  IPv6 510517      0t0  TCP *:21211 (LISTEN)
2014-03-21 17:16:57,183   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 17:16:57,183   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 17:16:57,519   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41222
2014-03-21 17:16:57,524   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-03-21 17:16:57,524   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-03-21 17:16:57,534   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-03-21 17:16:57,544   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-03-21 17:16:57,544   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-03-21 17:16:57,544   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-03-21 13:17:06,597   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:17:06,598   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:17:06,604   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:17:06,604   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:17:06,605   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:17:06,607   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:17:06,608   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:17:06,608   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:17:06,608   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:17:06,609   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:17:06,609   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:17:06,610   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:17:06,610   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:17:06,611   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:17:06,611   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:17:06,612   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:17:06,613   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:17:06,613   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:17:06,614   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:17:06,614   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:17:06,615   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:17:06,615   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:17:06,615   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:17:06,616   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:17:06,617   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:17:06,617   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:17:06,617   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:17:06,618   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:17:06,618   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:17:06,619   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:17:06,619   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:17:06,619   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:17:06,620   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:17:06,620   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:17:06,621   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:17:06,621   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:17:06,621   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:17:06,622   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:17:06,622   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:17:06,623   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:17:06,623   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:17:06,623   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:17:06,624   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:17:06,624   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:17:06,638   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:17:06,685   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,700   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,704   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,712   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:17:06,716   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:17:06,722   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:17:06,727   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:17:06,734   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:17:06,736   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:17:06,740   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:17:06,742   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:17:06,745   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:17:06,747   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,751   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,754   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,758   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:17:06,760   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,763   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,770   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,774   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:17:06,776   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,779   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,781   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,784   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:17:06,787   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:17:06,790   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:17:06,794   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:17:06,795   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:17:06,798   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:17:06,801   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:17:06,803   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:17:06,805   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:17:06,808   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:17:06,809   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:17:06,811   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:17:06,813   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:17:06,815   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:17:06,817   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:17:06,821   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:17:06,823   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:17:06,826   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:17:06,828   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:17:06,830   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:17:06,833   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:17:06,834   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:17:06,836   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:17:06,838   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:17:06,840   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:17:06,841   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:17:06,844   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:17:06,846   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:17:06,848   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:17:06,850   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:17:06,852   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:17:06,855   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:17:06,857   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,859   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,861   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,864   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:17:06,866   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,868   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,870   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,873   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:17:06,875   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,877   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,879   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:17:06,882   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:17:06,883   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:17:06,886   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:17:06,888   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:17:06,892   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:17:06,894   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:17:06,896   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:17:06,899   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:17:06,901   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:17:06,902   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:17:06,905   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:17:06,906   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:17:06,908   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:17:06,909   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:17:06,911   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:17:06,912   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:17:06,919   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:17:06,921   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:17:06,924   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:17:06,925   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:17:06,927   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:17:06,928   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:17:06,952   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:17:06,957   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:17:06,960   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:17:06,962   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:17:06,964   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:17:06,966   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:17:06,967   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:17:06,971   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:17:06,974   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:17:06,981   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:17:06,983   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:17:06,991   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:17:06,991   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:17:06,992   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:17:06,995   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:17:06,997   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:17:06,998   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:17:07,002   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:17:07,007   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:17:07,011   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:17:07,013   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:17:07,014   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:17:07,016   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:17:07,023   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:17:07,025   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:17:07,026   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:17:07,030   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:17:07,033   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:17:07,036   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:17:07,037   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:17:07,040   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:17:07,050   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:17:07,055   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:17:07,059   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:17:07,059   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:17:07,060   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:17:07,064   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:17:07,066   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:17:07,068   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:17:07,072   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:17:07,088   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:17:07,090   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:17:07,099   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:17:07,101   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:17:07,107   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:17:07,116   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:17:07,124   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:17:07,127   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:17:07,129   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:17:07,130   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:17:07,134   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:17:07,134   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:17:07,135   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:17:07,138   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:17:07,141   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:17:07,143   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:17:07,144   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:17:07,146   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:17:07,147   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:17:07,157   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:17:07,158   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:17:07,160   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:17:07,161   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:17:07,163   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:17:07,166   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:17:07,167   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:17:07,170   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:17:07,173   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:17:07,177   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:17:07,178   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:17:07,179   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:17:07,183   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:17:07,184   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:17:07,185   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:17:07,188   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:17:07,189   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:17:07,192   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:17:07,196   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:17:07,198   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:17:07,200   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 13:17:07,207   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:17:07,221   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:17:07,223   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:17:07,230   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:17:07,234   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:17:07,236   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:17:07,240   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:17:07,242   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:17:07,246   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:17:07,247   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:17:07,248   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:17:07,260   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:17:07,263   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:17:07,265   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:17:07,267   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:17:07,274   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:17:07,274   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:17:07,275   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:17:07,278   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:17:07,279   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:17:07,284   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:17:08,848   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:17:08,864   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:17:08,870   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:17:08,895   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:17:08,895   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:17:08,898   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-03-21 17:17:08,934   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:17:08,950   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-03-21 17:17:08,996   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-03-21 17:17:09,002   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-03-21 17:17:09,003   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-03-21 17:17:09,003   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:42576
2014-03-21 17:17:09,006   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:42576
2014-03-21 17:17:09,024   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16d97fd707000000 with negotiated timeout 6000 for client /127.0.0.1:42576
2014-03-21 17:17:09,024   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16d97fd707000000, negotiated timeout = 6000
2014-03-21 17:17:09,072   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-03-21 17:17:09,100   INFO  [main] HOST: Host id of this node is: 0
2014-03-21 17:17:09,100   INFO  [main] CONSOLE: Host id of this node is: 0
2014-03-21 17:17:09,113   INFO  [main] HOST: URL of deployment: deployment.xml
2014-03-21 17:17:09,353   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-03-21 17:17:10,875   INFO  [main] EXPORT: System is not using any export functionality.
2014-03-21 17:17:10,879   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-03-21 17:17:10,974   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-03-21 17:17:10,980   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-03-21 17:17:11,253   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-03-21 17:17:11,395   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-03-21 17:17:11,419   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-03-21 17:17:11,428   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-03-21 17:17:11,434   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-03-21 17:17:11,449   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 20 ms.
2014-03-21 17:17:11,450   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-03-21 17:17:11,450   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 9 ms.
2014-03-21 17:17:11,453   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-03-21 17:17:11,458   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:17:11,458   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:17:11,464   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-03-21 17:17:11,464   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 1 ms.
2014-03-21 17:17:11,480   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:17:11,486   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-03-21 17:17:11,490   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 12 ms.
2014-03-21 17:17:11,498   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:17:11,524   INFO  [main] HOST: Database start action is Create.
2014-03-21 17:17:11,552   INFO  [main] HOST: PID of this Volt process is 61450
2014-03-21 17:17:11,552   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-03-21 17:17:11,552   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-03-21 17:17:11,552   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-03-21 17:17:11,552   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-03-21 17:17:11,552   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-03-21 17:17:11,553   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-03-21 17:17:11,553   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-03-21 17:17:11,553   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 624 MB.
2014-03-21 17:17:11,553   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-03-21 17:17:11,553   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-03-21 17:17:11,553   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-03-21 17:17:11,553   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-03-21 17:17:11,553   INFO  [main] HOST: No schedule set for automated snapshots.
2014-03-21 17:17:11,553   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-03-21 17:17:11,554   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-03-21 17:17:11,554   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-03-21 17:17:11,554   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-03-21 17:17:11,554   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-431.5.1.el6.x86_64 amd64 en_US
2014-03-21 17:17:11,554   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-03-21 17:17:11,554   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-03-21 17:17:11,554   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-03-21 17:17:11,554   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-03-21 17:17:11,554   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8335:b00:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-03-21 17:17:11,560   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-03-21 17:17:11,560   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-03-21 17:17:11,576   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-03-21 17:17:11,578   INFO  [Thread-9] HOST: Logging config info
2014-03-21 17:17:11,578   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-03-21 17:17:11,642   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-03-21 13:41:52,897   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:41:52,902   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:41:52,908   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:41:52,909   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:41:52,910   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:41:52,912   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:41:52,912   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:41:52,913   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:41:52,914   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:41:52,914   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:41:52,915   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:41:52,916   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:41:52,916   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:41:52,917   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:41:52,917   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:41:52,919   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:41:52,920   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:41:52,920   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:41:52,922   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:41:52,922   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:41:52,922   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:41:52,922   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:41:52,923   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:41:52,924   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:41:52,925   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:41:52,926   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:41:52,926   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:41:52,927   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:41:52,927   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:41:52,927   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:41:52,928   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:41:52,928   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:41:52,928   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:41:52,930   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:41:52,930   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:41:52,930   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:41:52,931   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:41:52,931   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:41:52,931   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:41:52,932   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:41:52,933   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:41:52,933   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:41:52,934   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:41:52,934   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:41:52,950   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:41:53,025   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,047   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,052   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,060   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:41:53,065   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:41:53,071   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:41:53,083   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:41:53,100   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:41:53,102   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:41:53,106   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:41:53,112   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:41:53,116   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:41:53,120   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,124   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,127   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,131   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:41:53,133   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,136   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,160   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,164   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:41:53,165   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,169   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,172   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,177   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:41:53,181   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:41:53,189   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:41:53,192   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:41:53,195   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:41:53,200   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:41:53,204   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:41:53,207   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:41:53,210   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:41:53,213   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:41:53,214   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:41:53,216   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:41:53,218   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:41:53,221   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:41:53,223   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:41:53,226   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:41:53,230   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:41:53,234   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:41:53,236   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:41:53,239   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:41:53,242   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:41:53,243   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:41:53,247   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:41:53,252   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:41:53,254   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:41:53,256   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:41:53,258   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:41:53,263   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:41:53,266   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:41:53,267   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:41:53,270   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:41:53,273   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:41:53,274   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,279   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,281   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,284   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:41:53,286   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,289   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,292   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,296   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:41:53,301   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,308   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,310   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:41:53,313   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:41:53,316   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:41:53,319   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:41:53,321   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-21 13:41:53,324   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:41:53,327   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:41:53,329   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:41:53,333   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:41:53,335   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:41:53,339   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:41:53,341   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:41:53,342   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:41:53,345   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:41:53,346   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:41:53,348   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:41:53,349   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:41:53,360   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:41:53,361   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:41:53,364   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:41:53,365   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:41:53,368   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:41:53,370   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:41:53,397   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:41:53,402   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:41:53,407   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:41:53,411   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:41:53,412   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:41:53,417   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:41:53,418   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:41:53,422   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:41:53,425   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:41:53,432   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:41:53,432   ERROR [main] COMPILER: [AME_DetailsForAction.class]: PartitionInfo for procedure AME_DetailsForAction refers to a column in schema which is not a partition key.
2014-03-21 13:41:53,433   ERROR [main] COMPILER: Failed to compile XML
2014-03-21 13:41:53,433   ERROR [main] COMPILER: Catalog compilation failed.
2014-03-21 17:41:54,501   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:41:54,507   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:41:54,514   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:41:54,541   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:41:54,541   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:41:54,543   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 17:41:54,548   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 17:41:54,557   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 17:41:54,557   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 2
2014-03-21 17:41:54,558   INFO  [main] NETWORK: 1 notified of host 0
2014-03-21 17:41:54,569   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-03-21 17:41:54,599   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:41:54,761   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 17:41:54,822   FATAL [main] HOST: The PID of this process is 61764
2014-03-21 17:41:54,822   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 17:41:54,822   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 514694      0t0  TCP *:54090 (LISTEN)
2014-03-21 17:41:54,822   FATAL [main] HOST: java      61450 thorsten   34u  IPv6 511596      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 17:41:54,823   FATAL [main] HOST: java      61450 thorsten   40u  IPv6 511603      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 17:41:54,823   FATAL [main] HOST: java      61450 thorsten   54u  IPv6 511610      0t0  TCP *:8080 (LISTEN)
2014-03-21 17:41:54,823   FATAL [main] HOST: java      61450 thorsten   55u  IPv6 511677      0t0  TCP *:21212 (LISTEN)
2014-03-21 17:41:54,823   FATAL [main] HOST: java      61450 thorsten   56u  IPv6 511678      0t0  TCP *:21211 (LISTEN)
2014-03-21 17:41:54,832   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 17:41:54,832   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 17:41:55,166   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41231
2014-03-21 17:41:55,166   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-03-21 17:41:55,169   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-03-21 17:41:55,182   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-03-21 17:41:55,191   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-03-21 17:41:55,191   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-03-21 17:41:55,192   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-03-21 13:44:25,325   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:44:25,325   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:44:25,331   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:44:25,332   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:44:25,334   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:44:25,336   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:44:25,336   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:44:25,337   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:44:25,337   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:44:25,337   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:44:25,346   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:44:25,347   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:44:25,347   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:44:25,348   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:44:25,350   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:44:25,351   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:44:25,351   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:44:25,352   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:44:25,353   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:44:25,353   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:44:25,353   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:44:25,353   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:44:25,353   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:44:25,354   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:44:25,355   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:44:25,355   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:44:25,355   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:44:25,355   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:25,356   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:25,356   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:25,356   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:25,356   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:25,357   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:25,357   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:44:25,357   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:25,357   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:25,357   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:25,358   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:25,358   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:25,360   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:44:25,360   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:44:25,361   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:44:25,362   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:44:25,363   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:44:25,376   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:44:25,428   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,443   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,447   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,455   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:44:25,467   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:25,472   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:25,476   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:25,483   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:44:25,484   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:44:25,487   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:44:25,491   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:44:25,494   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:44:25,499   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,507   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,510   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,514   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:44:25,515   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,540   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,543   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,546   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:44:25,549   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,552   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,554   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,558   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:44:25,561   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:44:25,564   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:44:25,568   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:44:25,570   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:44:25,573   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:44:25,576   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:44:25,578   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:44:25,581   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:44:25,584   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:44:25,585   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:44:25,587   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:44:25,589   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:44:25,591   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:44:25,593   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:25,597   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:25,599   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:25,605   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:44:25,608   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:44:25,612   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:44:25,615   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:44:25,618   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:44:25,621   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:44:25,623   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:44:25,625   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:44:25,626   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:25,629   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:25,632   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:25,634   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:44:25,636   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:44:25,641   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:44:25,646   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:44:25,649   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,653   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,656   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,660   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:44:25,662   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,666   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,674   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,677   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:44:25,679   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,683   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,688   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,691   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:44:25,693   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,699   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,701   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:25,710   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:44:25,716   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:44:25,718   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:44:25,721   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:44:25,723   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:44:25,725   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:44:25,729   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:44:25,730   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:44:25,731   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:44:25,733   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:44:25,742   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:44:25,743   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:44:25,746   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:44:25,747   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:44:25,750   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:44:25,752   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:44:25,754   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:44:25,756   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:44:25,792   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:44:25,799   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:44:25,803   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:44:25,806   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:25,807   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:44:25,810   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:25,811   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:44:25,814   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:44:25,817   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:44:25,835   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:44:25,836   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:44:25,843   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:44:25,843   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:44:25,845   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:44:25,848   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:44:25,850   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:25,857   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:44:25,862   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:44:25,865   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:44:25,872   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:44:25,883   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:25,885   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:44:25,898   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:44:25,916   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:44:25,919   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:25,921   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:44:25,935   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:44:25,941   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:44:25,943   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:44:25,944   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:44:25,948   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:44:25,952   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:44:25,958   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:44:25,963   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:44:25,963   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:25,965   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:44:25,968   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:44:25,971   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:44:25,972   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:44:25,976   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:44:25,998   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:44:26,000   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:44:26,006   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:26,008   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:44:26,023   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:44:26,042   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:44:26,056   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:44:26,067   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:44:26,072   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:26,073   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:44:26,078   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:44:26,078   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:44:26,080   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:44:26,084   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:44:26,098   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:44:26,102   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:26,104   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:44:26,107   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:44:26,114   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:44:26,116   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:26,121   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:44:26,125   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:26,127   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:44:26,131   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:44:26,139   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:26,140   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:44:26,148   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:44:26,152   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:44:26,236   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:44:26,239   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:26,241   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:44:26,246   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:44:26,249   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:26,250   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:44:26,253   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:26,255   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:44:26,260   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:44:26,264   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:44:26,266   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:44:26,269   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 13:44:26,291   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:44:26,324   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:44:26,326   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:44:26,346   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:44:26,355   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:44:26,357   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:44:26,360   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:44:26,363   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:44:26,399   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:44:26,402   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:44:26,405   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:44:26,411   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:26,412   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:44:26,415   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:44:26,416   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:44:26,419   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:44:26,419   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:26,420   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:44:26,431   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:26,432   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:44:26,437   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:44:28,041   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:44:28,050   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:44:28,057   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:44:28,084   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:44:28,085   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:44:28,087   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 17:44:28,093   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 17:44:28,103   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 17:44:28,104   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 2
2014-03-21 17:44:28,104   INFO  [main] NETWORK: 2 notified of host 0
2014-03-21 17:44:28,113   INFO  [ZooKeeperServer] REJOIN: Joining site 2:-1 known  active sites 0:-1, 2:-1
2014-03-21 17:44:28,146   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:44:28,192   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 17:44:28,232   FATAL [main] HOST: The PID of this process is 61841
2014-03-21 17:44:28,232   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 17:44:28,232   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 515970      0t0  TCP *:38918 (LISTEN)
2014-03-21 17:44:28,232   FATAL [main] HOST: java      61450 thorsten   34u  IPv6 511596      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 17:44:28,232   FATAL [main] HOST: java      61450 thorsten   40u  IPv6 511603      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 17:44:28,232   FATAL [main] HOST: java      61450 thorsten   54u  IPv6 511610      0t0  TCP *:8080 (LISTEN)
2014-03-21 17:44:28,232   FATAL [main] HOST: java      61450 thorsten   55u  IPv6 511677      0t0  TCP *:21212 (LISTEN)
2014-03-21 17:44:28,232   FATAL [main] HOST: java      61450 thorsten   56u  IPv6 511678      0t0  TCP *:21211 (LISTEN)
2014-03-21 17:44:28,241   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 17:44:28,241   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 17:44:28,573   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41234
2014-03-21 17:44:28,574   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 2:-1, reporting: 0:-1, witnessed: true}
2014-03-21 17:44:28,574   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [2:-1]
2014-03-21 17:44:28,574   WARN  [Volt Network - 0] NETWORK: Host 2 failed
2014-03-21 17:44:28,579   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 2:-1 to failed sites history
2014-03-21 17:44:28,580   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 2:-1 initiatorSafeInitPoints {2:-1->-1}
2014-03-21 17:44:28,580   WARN  [ZooKeeperServer] NETWORK: Host 2 failed
2014-03-21 13:44:38,586   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:44:38,587   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:44:38,597   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:44:38,598   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:44:38,598   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:44:38,601   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:44:38,601   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:44:38,602   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:44:38,602   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:44:38,603   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:44:38,603   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:44:38,604   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:44:38,604   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:44:38,605   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:44:38,605   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:44:38,606   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:44:38,607   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:44:38,607   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:44:38,608   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:44:38,608   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:44:38,609   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:44:38,609   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:44:38,609   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:44:38,610   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:44:38,611   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:44:38,611   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:44:38,612   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:44:38,612   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:38,612   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:38,613   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:38,613   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:38,614   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:38,614   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:38,614   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:44:38,615   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:38,615   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:38,615   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:38,616   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:38,616   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:44:38,617   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:44:38,617   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:44:38,617   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:44:38,618   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:44:38,619   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:44:38,633   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:44:38,693   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,711   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,715   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,726   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:44:38,730   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:38,737   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:38,742   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:38,749   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:44:38,751   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:44:38,755   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:44:38,758   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:44:38,761   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:44:38,763   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,767   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,772   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,778   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:44:38,780   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,793   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,797   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,800   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:44:38,802   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,806   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,808   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,811   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:44:38,814   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:44:38,820   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:44:38,823   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:44:38,825   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:44:38,828   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:44:38,831   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:44:38,833   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:44:38,835   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:44:38,838   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:44:38,839   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:44:38,845   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:44:38,847   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:44:38,851   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:44:38,853   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:38,857   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:38,859   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:38,865   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:44:38,867   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:44:38,870   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:44:38,876   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:44:38,878   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:44:38,880   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:44:38,881   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:44:38,883   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:44:38,885   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:38,889   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:38,891   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:44:38,895   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:44:38,896   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:44:38,901   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:44:38,904   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:44:38,905   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,908   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,910   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,916   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:44:38,918   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,922   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,924   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,926   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:44:38,928   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,930   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,932   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,935   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:44:38,938   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,942   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,945   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:44:38,949   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:44:38,952   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:44:38,955   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:44:38,959   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:44:38,961   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:44:38,963   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:44:38,966   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:44:38,967   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:44:38,969   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:44:38,971   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:44:38,979   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:44:38,980   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:44:38,982   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:44:38,984   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:44:38,987   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:44:38,988   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:44:38,992   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:44:38,994   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:44:39,023   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:44:39,028   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:44:39,031   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:44:39,033   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:39,034   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:44:39,037   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:39,039   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:44:39,044   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:44:39,048   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:44:39,056   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:44:39,057   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:44:39,065   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:44:39,065   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:44:39,066   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:44:39,069   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:44:39,073   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:39,074   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:44:39,078   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:44:39,083   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:44:39,088   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:44:39,091   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:39,092   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:44:39,096   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:44:39,102   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:44:39,106   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:39,108   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:44:39,111   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:44:39,115   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:44:39,118   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:44:39,119   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:44:39,123   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:44:39,129   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:44:39,139   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:44:39,152   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:44:39,152   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:39,154   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:44:39,165   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:44:39,169   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:44:39,170   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:44:39,178   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:44:39,214   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:44:39,215   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:44:39,219   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:39,220   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:44:39,223   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:44:39,227   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:44:39,230   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:44:39,237   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:44:39,240   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:39,241   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:44:39,244   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:44:39,244   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:44:39,245   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:44:39,248   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:44:39,251   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:44:39,253   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:39,254   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:44:39,259   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:44:39,260   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:44:39,263   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:39,264   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:44:39,275   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:39,276   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:44:39,283   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:44:39,293   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:39,294   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:44:39,297   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:44:39,301   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:44:39,306   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:44:39,308   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:39,309   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:44:39,313   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:44:39,315   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:39,316   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:44:39,319   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:39,321   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:44:39,324   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:44:39,332   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:44:39,336   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:44:39,343   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 13:44:39,347   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:44:39,362   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:44:39,363   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:44:39,373   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:44:39,392   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:44:39,396   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:44:39,398   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:44:39,400   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:44:39,417   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:44:39,419   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:44:39,420   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:44:39,422   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:39,423   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:44:39,425   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:44:39,431   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:44:39,433   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:44:39,433   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:44:39,435   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:44:39,441   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:44:39,442   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:44:39,447   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:44:41,070   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:44:41,076   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:44:41,083   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:44:41,111   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:44:41,111   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:44:41,114   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-03-21 17:44:41,148   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:44:41,168   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-03-21 17:44:41,220   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@2a03803
2014-03-21 17:44:41,225   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-03-21 17:44:41,227   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:42588
2014-03-21 17:44:41,228   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-03-21 17:44:41,230   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:42588
2014-03-21 17:44:41,242   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16d98c7207000000 with negotiated timeout 6000 for client /127.0.0.1:42588
2014-03-21 17:44:41,243   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16d98c7207000000, negotiated timeout = 6000
2014-03-21 17:44:41,291   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-03-21 17:44:41,313   INFO  [main] HOST: Host id of this node is: 0
2014-03-21 17:44:41,313   INFO  [main] CONSOLE: Host id of this node is: 0
2014-03-21 17:44:41,335   INFO  [main] HOST: URL of deployment: deployment.xml
2014-03-21 17:44:41,603   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-03-21 17:44:43,374   INFO  [main] EXPORT: System is not using any export functionality.
2014-03-21 17:44:43,378   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-03-21 17:44:43,478   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-03-21 17:44:43,488   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-03-21 17:44:43,859   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-03-21 17:44:44,028   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-03-21 17:44:44,068   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-03-21 17:44:44,081   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-03-21 17:44:44,087   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-03-21 17:44:44,095   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-03-21 17:44:44,098   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-03-21 17:44:44,104   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-03-21 17:44:44,113   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 17 ms.
2014-03-21 17:44:44,114   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 33 ms.
2014-03-21 17:44:44,113   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 9 ms.
2014-03-21 17:44:44,128   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:44:44,128   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:44:44,128   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:44:44,139   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-03-21 17:44:44,143   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 16 ms.
2014-03-21 17:44:44,155   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:44:44,189   INFO  [main] HOST: Database start action is Create.
2014-03-21 17:44:44,223   INFO  [main] HOST: PID of this Volt process is 61903
2014-03-21 17:44:44,223   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-03-21 17:44:44,223   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-03-21 17:44:44,224   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-03-21 17:44:44,224   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-03-21 17:44:44,224   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-03-21 17:44:44,224   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-03-21 17:44:44,224   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-03-21 17:44:44,224   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 624 MB.
2014-03-21 17:44:44,224   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-03-21 17:44:44,224   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-03-21 17:44:44,224   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-03-21 17:44:44,225   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-03-21 17:44:44,225   INFO  [main] HOST: No schedule set for automated snapshots.
2014-03-21 17:44:44,225   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-03-21 17:44:44,225   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-03-21 17:44:44,225   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-03-21 17:44:44,225   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-03-21 17:44:44,225   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-431.5.1.el6.x86_64 amd64 en_US
2014-03-21 17:44:44,225   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-03-21 17:44:44,225   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-03-21 17:44:44,225   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-03-21 17:44:44,227   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-03-21 17:44:44,227   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8335:b00:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-03-21 17:44:44,227   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-03-21 17:44:44,227   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-03-21 17:44:44,245   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-03-21 17:44:44,247   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-03-21 17:44:44,248   INFO  [Thread-9] HOST: Logging config info
2014-03-21 17:44:44,310   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-03-21 17:45:17,387   WARN  [Volt Network - 1] AUTH: Error sending procedure OUTBOUNDPROPERTYACTION.insert to the correct partition. Make sure parameter values are correct. Parameter value null, partition column CHECKPATHID type 9 Message: Invalid partitionIndex
2014-03-21 13:46:47,502   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:46:47,502   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:46:47,508   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:46:47,509   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:46:47,510   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:46:47,513   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:46:47,513   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:46:47,513   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:46:47,514   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:46:47,514   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:46:47,520   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:46:47,521   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:46:47,521   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:46:47,522   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:46:47,524   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:46:47,525   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:46:47,526   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:46:47,526   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:46:47,527   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:46:47,527   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:46:47,528   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:46:47,528   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:46:47,528   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:46:47,529   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:46:47,530   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:46:47,530   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:46:47,530   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:46:47,531   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:47,531   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:47,531   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:47,531   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:47,531   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:47,531   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:47,532   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:46:47,532   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:47,532   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:47,532   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:47,533   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:47,533   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:47,534   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:46:47,534   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:46:47,534   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:46:47,535   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:46:47,535   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:46:47,548   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:46:47,600   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,615   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,620   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,629   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:46:47,633   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:47,641   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:47,645   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:47,652   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:46:47,653   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:46:47,658   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:46:47,660   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:46:47,664   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:46:47,666   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,671   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,674   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,678   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:46:47,680   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,689   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,692   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,696   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:46:47,701   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,705   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,708   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,711   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:46:47,714   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:46:47,717   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:46:47,722   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:46:47,724   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:46:47,729   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:46:47,732   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:46:47,734   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:46:47,736   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:46:47,739   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:46:47,740   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:46:47,743   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:46:47,745   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:46:47,747   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:46:47,749   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:47,752   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:47,754   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:47,758   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:46:47,760   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:46:47,762   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:46:47,764   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:46:47,766   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:46:47,768   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:46:47,770   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:46:47,772   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:46:47,774   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:47,777   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:47,779   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:47,782   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:46:47,783   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:46:47,785   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:46:47,788   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:46:47,790   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,793   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,795   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,798   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:46:47,799   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,802   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,804   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,807   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:46:47,808   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,811   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,813   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,816   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:46:47,818   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,822   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,824   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:47,828   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:46:47,830   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:46:47,833   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:46:47,836   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:46:47,837   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:46:47,839   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:46:47,842   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:46:47,843   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:46:47,845   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:46:47,846   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:46:47,853   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:46:47,854   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:46:47,856   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:46:47,858   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:46:47,860   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:46:47,861   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:46:47,863   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:46:47,865   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:46:47,896   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:46:47,901   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:46:47,904   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:46:47,906   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:47,907   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:46:47,910   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:47,911   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:46:47,914   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:46:47,917   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:46:47,927   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:46:47,928   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:46:47,935   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:46:47,935   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:46:47,937   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:46:47,939   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:46:47,942   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:47,948   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:46:47,951   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:46:47,955   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:46:47,964   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:46:47,969   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:47,970   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:46:47,973   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:46:47,999   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:46:48,002   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:48,003   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:46:48,010   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:46:48,013   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:46:48,016   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:46:48,017   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:46:48,021   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:46:48,025   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:46:48,032   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:46:48,036   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:46:48,036   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:48,038   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:46:48,043   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:46:48,045   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:46:48,046   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:46:48,053   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:46:48,082   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:46:48,083   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:46:48,090   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:48,093   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:46:48,100   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:46:48,104   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:46:48,111   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:46:48,114   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:46:48,117   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:48,118   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:46:48,121   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:46:48,121   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:46:48,122   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:46:48,126   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:46:48,129   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:46:48,132   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:48,133   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:46:48,143   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:46:48,145   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:46:48,151   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:48,153   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:46:48,156   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:48,157   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:46:48,159   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:46:48,165   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:48,166   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:46:48,172   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:46:48,176   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:46:48,179   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:46:48,181   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:48,181   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:46:48,185   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:46:48,187   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:48,188   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:46:48,191   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:48,192   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:46:48,195   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:46:48,198   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:46:48,200   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:46:48,203   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 13:46:48,208   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:46:48,234   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:46:48,235   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:46:48,250   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:46:48,257   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:46:48,259   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:46:48,261   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:46:48,263   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:46:48,271   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:46:48,281   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:46:48,282   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:46:48,287   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:48,289   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:46:48,295   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:46:48,296   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:46:48,298   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:46:48,298   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:48,299   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:46:48,307   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:48,308   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:46:48,313   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:46:49,875   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:46:49,883   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:46:49,893   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:46:49,918   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:46:49,918   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:46:49,920   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 17:46:49,925   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 17:46:49,934   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 17:46:49,934   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-03-21 17:46:49,934   INFO  [main] NETWORK: 1 notified of host 0
2014-03-21 17:46:49,946   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-03-21 17:46:49,969   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:46:50,021   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 17:46:50,054   FATAL [main] HOST: The PID of this process is 62021
2014-03-21 17:46:50,054   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 17:46:50,054   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 517605      0t0  TCP *:50677 (LISTEN)
2014-03-21 17:46:50,054   FATAL [main] HOST: java      61903 thorsten   34u  IPv6 517038      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 17:46:50,054   FATAL [main] HOST: java      61903 thorsten   40u  IPv6 517045      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 17:46:50,055   FATAL [main] HOST: java      61903 thorsten   54u  IPv6 517052      0t0  TCP *:8080 (LISTEN)
2014-03-21 17:46:50,055   FATAL [main] HOST: java      61903 thorsten   55u  IPv6 517119      0t0  TCP *:21212 (LISTEN)
2014-03-21 17:46:50,055   FATAL [main] HOST: java      61903 thorsten   56u  IPv6 517120      0t0  TCP *:21211 (LISTEN)
2014-03-21 17:46:50,060   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 17:46:50,060   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 17:46:50,391   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-03-21 17:46:50,395   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41238
2014-03-21 17:46:50,403   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-03-21 17:46:50,406   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-03-21 17:46:50,419   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-03-21 17:46:50,430   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-03-21 17:46:50,430   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-03-21 17:46:50,431   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-03-21 13:46:58,142   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:46:58,142   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:46:58,148   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:46:58,148   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:46:58,149   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:46:58,151   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:46:58,152   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:46:58,152   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:46:58,153   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:46:58,153   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:46:58,154   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:46:58,154   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:46:58,154   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:46:58,156   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:46:58,156   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:46:58,157   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:46:58,158   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:46:58,158   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:46:58,160   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:46:58,160   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:46:58,160   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:46:58,160   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:46:58,160   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:46:58,161   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:46:58,163   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:46:58,163   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:46:58,163   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:46:58,164   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:58,164   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:58,164   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:58,165   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:58,165   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:58,165   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:58,171   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:46:58,172   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:58,172   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:58,172   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:58,173   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:58,173   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:46:58,174   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:46:58,174   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:46:58,174   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:46:58,175   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:46:58,176   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:46:58,196   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:46:58,248   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,267   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,271   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,283   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:46:58,293   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:58,299   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:58,303   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:58,309   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:46:58,310   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:46:58,317   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:46:58,319   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:46:58,322   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:46:58,324   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,332   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,335   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,339   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:46:58,340   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,350   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,353   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,356   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:46:58,362   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,365   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,367   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,371   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:46:58,373   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:46:58,376   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:46:58,388   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:46:58,390   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:46:58,393   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:46:58,396   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:46:58,398   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:46:58,400   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:46:58,403   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:46:58,406   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:46:58,408   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:46:58,409   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:46:58,411   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:46:58,413   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:58,416   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:58,418   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:58,423   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:46:58,425   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:46:58,427   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:46:58,430   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:46:58,433   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:46:58,435   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:46:58,437   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:46:58,439   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:46:58,440   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:58,443   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:58,445   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:46:58,447   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:46:58,449   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:46:58,454   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:46:58,457   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:46:58,459   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,461   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,464   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,467   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:46:58,468   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,471   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,474   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,477   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:46:58,481   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,483   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,486   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,488   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:46:58,490   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,497   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,500   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:46:58,505   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:46:58,509   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:46:58,511   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:46:58,514   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:46:58,516   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:46:58,518   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:46:58,521   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:46:58,522   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:46:58,524   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:46:58,525   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:46:58,533   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:46:58,534   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:46:58,536   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:46:58,538   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:46:58,540   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:46:58,541   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:46:58,543   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:46:58,545   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:46:58,580   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:46:58,585   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:46:58,588   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:46:58,590   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:58,591   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:46:58,594   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:58,595   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:46:58,598   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:46:58,601   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:46:58,607   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:46:58,609   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:46:58,618   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:46:58,618   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:46:58,619   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:46:58,622   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:46:58,624   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:58,625   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:46:58,628   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:46:58,632   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:46:58,642   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:46:58,644   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:58,645   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:46:58,648   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:46:58,655   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:46:58,657   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:58,657   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:46:58,661   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:46:58,665   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:46:58,667   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:46:58,668   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:46:58,672   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:46:58,676   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:46:58,681   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:46:58,685   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:46:58,685   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:58,687   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:46:58,692   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:46:58,695   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:46:58,696   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:46:58,706   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:46:58,739   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:46:58,740   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:46:58,748   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:58,750   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:46:58,757   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:46:58,760   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:46:58,766   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:46:58,776   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:46:58,779   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:58,780   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:46:58,783   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:46:58,783   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:46:58,784   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:46:58,787   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:46:58,791   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:46:58,793   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:58,794   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:46:58,807   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:46:58,808   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:46:58,810   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:58,811   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:46:58,817   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:58,818   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:46:58,820   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:46:58,835   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:58,836   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:46:58,845   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:46:58,849   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:46:58,852   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:46:58,854   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:58,854   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:46:58,857   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:46:58,859   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:58,860   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:46:58,862   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:58,864   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:46:58,867   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:46:58,869   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:46:58,871   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:46:58,874   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 13:46:58,879   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:46:58,907   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:46:58,909   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:46:58,923   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:46:58,940   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:46:58,943   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:46:58,945   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:46:58,948   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:46:58,960   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:46:58,962   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:46:58,963   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:46:58,969   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:58,970   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:46:58,972   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:46:58,973   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:46:58,975   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:46:58,976   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:46:58,977   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:46:58,990   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:46:58,991   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:46:58,996   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:47:00,170   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:47:00,177   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:47:00,184   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:47:00,209   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:47:00,209   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:47:00,211   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-03-21 17:47:00,244   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:47:00,259   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-03-21 17:47:00,305   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@2a03803
2014-03-21 17:47:00,310   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-03-21 17:47:00,312   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-03-21 17:47:00,312   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:42592
2014-03-21 17:47:00,314   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:42592
2014-03-21 17:47:00,325   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16d98d81ad000000 with negotiated timeout 6000 for client /127.0.0.1:42592
2014-03-21 17:47:00,325   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16d98d81ad000000, negotiated timeout = 6000
2014-03-21 17:47:00,361   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-03-21 17:47:00,388   INFO  [main] HOST: Host id of this node is: 0
2014-03-21 17:47:00,388   INFO  [main] CONSOLE: Host id of this node is: 0
2014-03-21 17:47:00,401   INFO  [main] HOST: URL of deployment: deployment.xml
2014-03-21 17:47:00,637   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-03-21 17:47:02,185   INFO  [main] EXPORT: System is not using any export functionality.
2014-03-21 17:47:02,195   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-03-21 17:47:02,295   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-03-21 17:47:02,300   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-03-21 17:47:02,583   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-03-21 17:47:02,717   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-03-21 17:47:02,744   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-03-21 17:47:02,755   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-03-21 17:47:02,758   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-03-21 17:47:02,768   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-03-21 17:47:02,769   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-03-21 17:47:02,774   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 8 ms.
2014-03-21 17:47:02,774   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 20 ms.
2014-03-21 17:47:02,785   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:47:02,785   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:47:02,786   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-03-21 17:47:02,786   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 4 ms.
2014-03-21 17:47:02,807   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:47:02,813   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-03-21 17:47:02,815   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 9 ms.
2014-03-21 17:47:02,842   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:47:02,867   INFO  [main] HOST: Database start action is Create.
2014-03-21 17:47:02,890   INFO  [main] HOST: PID of this Volt process is 62084
2014-03-21 17:47:02,890   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-03-21 17:47:02,890   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-03-21 17:47:02,890   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-03-21 17:47:02,890   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-03-21 17:47:02,890   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-03-21 17:47:02,891   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-03-21 17:47:02,891   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-03-21 17:47:02,891   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 624 MB.
2014-03-21 17:47:02,891   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-03-21 17:47:02,891   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-03-21 17:47:02,891   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-03-21 17:47:02,891   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-03-21 17:47:02,891   INFO  [main] HOST: No schedule set for automated snapshots.
2014-03-21 17:47:02,891   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-03-21 17:47:02,892   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-03-21 17:47:02,892   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-03-21 17:47:02,892   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-03-21 17:47:02,892   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-431.5.1.el6.x86_64 amd64 en_US
2014-03-21 17:47:02,892   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-03-21 17:47:02,892   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-03-21 17:47:02,892   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-03-21 17:47:02,892   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-03-21 17:47:02,892   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8335:b00:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-03-21 17:47:02,904   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-03-21 17:47:02,904   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-03-21 17:47:02,919   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-03-21 17:47:02,920   INFO  [Thread-9] HOST: Logging config info
2014-03-21 17:47:02,920   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-03-21 17:47:02,955   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-03-21 17:47:12,273   WARN  [Volt Network - 1] AUTH: Error sending procedure OUTBOUNDPROPERTYACTION.insert to the correct partition. Make sure parameter values are correct. Parameter value null, partition column CHECKPATHID type 9 Message: Invalid partitionIndex
2014-03-21 13:48:09,915   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:48:09,915   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:48:09,925   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:48:09,925   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:48:09,926   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:48:09,931   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:48:09,932   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:48:09,932   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:48:09,932   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:48:09,933   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:48:09,933   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:48:09,934   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:48:09,934   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:48:09,936   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:48:09,936   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:48:09,937   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:48:09,938   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:48:09,938   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:48:09,939   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:48:09,939   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:48:09,939   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:48:09,939   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:48:09,940   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:48:09,941   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:48:09,942   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:48:09,942   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:48:09,942   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:48:09,943   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:09,943   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:09,943   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:09,944   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:09,944   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:09,944   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:09,945   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:48:09,945   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:09,946   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:09,946   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:09,946   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:09,946   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:09,948   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:48:09,948   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:48:09,948   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:48:09,949   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:48:09,949   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:48:09,961   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:48:10,009   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,027   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,031   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,044   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:48:10,054   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:10,059   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:10,064   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:10,070   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:48:10,072   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:48:10,087   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:48:10,090   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:48:10,093   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:48:10,095   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,099   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,105   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,109   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:48:10,111   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,120   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,123   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,126   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:48:10,128   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,131   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,133   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,136   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:48:10,139   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:48:10,142   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:48:10,146   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:48:10,147   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:48:10,150   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:48:10,153   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:48:10,155   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:48:10,158   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:48:10,161   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:48:10,162   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:48:10,164   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:48:10,166   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:48:10,168   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:48:10,170   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:10,173   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:10,176   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:10,179   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:48:10,181   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:48:10,183   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:48:10,186   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:48:10,187   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:48:10,190   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:48:10,191   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:48:10,193   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:48:10,195   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:10,197   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:10,199   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:10,201   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:48:10,203   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:48:10,205   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:48:10,209   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:48:10,211   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,214   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,216   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,219   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:48:10,220   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,224   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,227   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,229   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:48:10,233   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,235   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,237   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,241   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:48:10,243   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,246   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,248   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:10,251   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:48:10,257   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:48:10,259   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:48:10,262   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:48:10,264   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:48:10,265   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:48:10,268   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:48:10,269   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:48:10,272   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:48:10,273   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:48:10,277   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:48:10,278   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:48:10,287   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:48:10,289   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:48:10,291   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:48:10,292   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:48:10,294   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:48:10,296   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:48:10,328   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:48:10,341   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:48:10,345   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:48:10,347   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:10,352   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:48:10,354   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:10,356   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:48:10,358   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:48:10,361   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:48:10,368   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:48:10,369   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:48:10,377   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:48:10,377   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:48:10,379   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:48:10,381   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:48:10,383   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:10,384   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:48:10,387   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:48:10,392   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:48:10,398   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:48:10,400   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:10,402   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:48:10,405   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:48:10,420   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:48:10,422   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:10,423   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:48:10,427   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:48:10,433   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:48:10,437   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:48:10,440   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:48:10,445   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:48:10,452   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:48:10,459   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:48:10,463   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:48:10,464   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:10,465   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:48:10,468   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:48:10,471   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:48:10,472   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:48:10,476   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:48:10,494   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:48:10,495   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:48:10,499   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:10,501   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:48:10,504   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:48:10,515   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:48:10,518   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:48:10,521   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:48:10,523   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:10,524   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:48:10,528   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:48:10,528   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:48:10,529   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:48:10,532   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:48:10,535   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:48:10,538   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:10,539   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:48:10,541   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:48:10,542   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:48:10,544   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:10,545   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:48:10,547   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:10,548   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:48:10,550   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:48:10,553   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:10,554   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:48:10,557   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:48:10,560   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:48:10,563   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:48:10,565   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:10,566   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:48:10,569   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:48:10,572   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:10,573   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:48:10,575   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:10,576   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:48:10,579   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:48:10,583   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:48:10,585   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:48:10,588   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 13:48:10,593   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:48:10,622   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:48:10,623   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:48:10,639   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:48:10,648   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:48:10,650   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:48:10,651   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:48:10,654   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:48:10,657   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:48:10,666   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:48:10,677   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:48:10,679   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:10,680   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:48:10,685   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:48:10,686   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:48:10,689   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:48:10,689   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:10,690   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:48:10,698   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:10,699   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:48:10,704   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:48:12,160   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:48:12,166   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:48:12,173   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:48:12,197   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:48:12,198   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:48:12,200   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 17:48:12,204   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 17:48:12,213   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 17:48:12,213   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-03-21 17:48:12,214   INFO  [main] NETWORK: 1 notified of host 0
2014-03-21 17:48:12,226   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-03-21 17:48:12,255   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:48:12,324   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 17:48:12,356   FATAL [main] HOST: The PID of this process is 62197
2014-03-21 17:48:12,356   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 17:48:12,356   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 518942      0t0  TCP *:54751 (LISTEN)
2014-03-21 17:48:12,356   FATAL [main] HOST: java      62084 thorsten   34u  IPv6 518462      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 17:48:12,356   FATAL [main] HOST: java      62084 thorsten   40u  IPv6 518469      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 17:48:12,356   FATAL [main] HOST: java      62084 thorsten   54u  IPv6 518476      0t0  TCP *:8080 (LISTEN)
2014-03-21 17:48:12,356   FATAL [main] HOST: java      62084 thorsten   55u  IPv6 518543      0t0  TCP *:21212 (LISTEN)
2014-03-21 17:48:12,356   FATAL [main] HOST: java      62084 thorsten   56u  IPv6 518544      0t0  TCP *:21211 (LISTEN)
2014-03-21 17:48:12,362   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 17:48:12,362   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 17:48:12,699   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-03-21 17:48:12,701   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41242
2014-03-21 17:48:12,707   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-03-21 17:48:12,708   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-03-21 17:48:12,729   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-03-21 17:48:12,739   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-03-21 17:48:12,739   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-03-21 17:48:12,740   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-03-21 13:48:20,820   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:48:20,821   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:48:20,827   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:48:20,828   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:48:20,829   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:48:20,831   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:48:20,832   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:48:20,833   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:48:20,833   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:48:20,833   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:48:20,835   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:48:20,837   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:48:20,837   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:48:20,839   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:48:20,840   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:48:20,841   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:48:20,841   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:48:20,842   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:48:20,843   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:48:20,843   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:48:20,843   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:48:20,843   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:48:20,844   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:48:20,845   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:48:20,846   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:48:20,846   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:48:20,846   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:48:20,847   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:20,847   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:20,848   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:20,848   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:20,848   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:20,849   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:20,849   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:48:20,850   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:20,850   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:20,850   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:20,851   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:20,851   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:48:20,852   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:48:20,852   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:48:20,852   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:48:20,854   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:48:20,854   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:48:20,872   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:48:20,932   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:20,957   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:20,961   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:20,969   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:48:20,972   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:20,978   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:20,981   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:20,987   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:48:20,989   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:48:20,992   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:48:20,994   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:48:20,997   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:48:20,999   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,003   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,008   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,012   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:48:21,014   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,021   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,024   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,029   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:48:21,033   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,037   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,040   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,043   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:48:21,047   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:48:21,050   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:48:21,054   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:48:21,056   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:48:21,058   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:48:21,062   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:48:21,064   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:48:21,066   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:48:21,069   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:48:21,070   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:48:21,072   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:48:21,074   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:48:21,078   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:48:21,080   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:21,083   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:21,085   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:21,090   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:48:21,092   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:48:21,094   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:48:21,097   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:48:21,098   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:48:21,100   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:48:21,102   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:48:21,104   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:48:21,105   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:21,107   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:21,109   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:48:21,111   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:48:21,114   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:48:21,115   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:48:21,118   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:48:21,120   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,122   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,124   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,127   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:48:21,128   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,131   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,133   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,136   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:48:21,137   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,139   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,141   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,144   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:48:21,146   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,149   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,151   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:48:21,154   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:48:21,156   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:48:21,158   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:48:21,161   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:48:21,163   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:48:21,165   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:48:21,167   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:48:21,168   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:48:21,170   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:48:21,171   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:48:21,173   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:48:21,174   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:48:21,182   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:48:21,184   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:48:21,186   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:48:21,187   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:48:21,189   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:48:21,191   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:48:21,222   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:48:21,229   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:48:21,232   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:48:21,234   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:21,239   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:48:21,242   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:21,243   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:48:21,246   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:48:21,249   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:48:21,256   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:48:21,257   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:48:21,265   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:48:21,265   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:48:21,266   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:48:21,269   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:48:21,271   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:21,272   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:48:21,275   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:48:21,279   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:48:21,282   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:48:21,285   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:21,286   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:48:21,289   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:48:21,305   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:48:21,312   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:21,314   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:48:21,321   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:48:21,329   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:48:21,334   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:48:21,336   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:48:21,339   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:48:21,350   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:48:21,354   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:48:21,361   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:48:21,361   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:21,362   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:48:21,366   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:48:21,369   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:48:21,370   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:48:21,373   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:48:21,404   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:48:21,405   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:48:21,413   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:21,415   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:48:21,423   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:48:21,427   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:48:21,431   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:48:21,435   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:48:21,440   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:21,441   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:48:21,445   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:48:21,445   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:48:21,448   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:48:21,451   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:48:21,455   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:48:21,457   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:21,458   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:48:21,468   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:48:21,469   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:48:21,472   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:21,479   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:48:21,481   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:21,482   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:48:21,485   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:48:21,487   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:21,488   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:48:21,495   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:48:21,500   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:48:21,503   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:48:21,508   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:21,509   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:48:21,513   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:48:21,515   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:21,516   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:48:21,518   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:21,519   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:48:21,523   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:48:21,526   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:48:21,528   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:48:21,531   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 13:48:21,535   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:48:21,561   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:48:21,562   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:48:21,570   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:48:21,574   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:48:21,575   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:48:21,577   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:48:21,580   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:48:21,583   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:48:21,584   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:48:21,591   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:48:21,593   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:21,594   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:48:21,604   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:48:21,605   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:48:21,608   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:48:21,608   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:48:21,609   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:48:21,619   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:48:21,620   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:48:21,625   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:48:23,224   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:48:23,231   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:48:23,237   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:48:23,261   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:48:23,262   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:48:23,264   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-03-21 17:48:23,297   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:48:23,314   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-03-21 17:48:23,362   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@b926d29
2014-03-21 17:48:23,367   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-03-21 17:48:23,369   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:42596
2014-03-21 17:48:23,369   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-03-21 17:48:23,373   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:42596
2014-03-21 17:48:23,384   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16d98e23e6800000 with negotiated timeout 6000 for client /127.0.0.1:42596
2014-03-21 17:48:23,384   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16d98e23e6800000, negotiated timeout = 6000
2014-03-21 17:48:23,428   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-03-21 17:48:23,461   INFO  [main] HOST: Host id of this node is: 0
2014-03-21 17:48:23,461   INFO  [main] CONSOLE: Host id of this node is: 0
2014-03-21 17:48:23,476   INFO  [main] HOST: URL of deployment: deployment.xml
2014-03-21 17:48:23,698   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-03-21 17:48:25,099   INFO  [main] EXPORT: System is not using any export functionality.
2014-03-21 17:48:25,106   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-03-21 17:48:25,232   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-03-21 17:48:25,237   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-03-21 17:48:25,519   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-03-21 17:48:25,665   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-03-21 17:48:25,685   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-03-21 17:48:25,700   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-03-21 17:48:25,700   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-03-21 17:48:25,711   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-03-21 17:48:25,711   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-03-21 17:48:25,720   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 11 ms.
2014-03-21 17:48:25,720   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 25 ms.
2014-03-21 17:48:25,722   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-03-21 17:48:25,722   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 2 ms.
2014-03-21 17:48:25,729   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:48:25,730   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:48:25,730   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:48:25,748   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-03-21 17:48:25,751   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 15 ms.
2014-03-21 17:48:25,758   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:48:25,790   INFO  [main] HOST: Database start action is Create.
2014-03-21 17:48:25,816   INFO  [main] HOST: PID of this Volt process is 62258
2014-03-21 17:48:25,816   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-03-21 17:48:25,816   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-03-21 17:48:25,816   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-03-21 17:48:25,816   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-03-21 17:48:25,816   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-03-21 17:48:25,816   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-03-21 17:48:25,816   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-03-21 17:48:25,816   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 624 MB.
2014-03-21 17:48:25,817   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-03-21 17:48:25,817   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-03-21 17:48:25,817   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-03-21 17:48:25,817   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-03-21 17:48:25,817   INFO  [main] HOST: No schedule set for automated snapshots.
2014-03-21 17:48:25,817   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-03-21 17:48:25,817   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-03-21 17:48:25,817   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-03-21 17:48:25,817   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-03-21 17:48:25,817   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-431.5.1.el6.x86_64 amd64 en_US
2014-03-21 17:48:25,817   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-03-21 17:48:25,817   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-03-21 17:48:25,817   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-03-21 17:48:25,818   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-03-21 17:48:25,818   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8335:b00:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-03-21 17:48:25,825   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-03-21 17:48:25,825   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-03-21 17:48:25,843   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-03-21 17:48:25,844   INFO  [Thread-9] HOST: Logging config info
2014-03-21 17:48:25,844   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-03-21 17:48:25,878   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-03-21 17:48:39,781   WARN  [Volt Network - 1] AUTH: Error sending procedure OUTBOUNDPROPERTYACTION.insert to the correct partition. Make sure parameter values are correct. Parameter value null, partition column CHECKPATHID type 9 Message: Invalid partitionIndex
2014-03-21 13:50:15,980   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:50:15,980   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:50:15,986   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:50:15,987   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:50:15,991   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:50:15,993   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:50:15,994   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:50:15,994   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:50:15,995   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:50:15,995   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:50:16,001   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:50:16,001   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:50:16,002   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:50:16,003   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:50:16,005   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:50:16,006   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:50:16,006   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:50:16,007   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:50:16,008   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:50:16,008   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:50:16,008   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:50:16,008   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:50:16,008   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:50:16,010   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:50:16,011   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:50:16,011   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:50:16,011   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:50:16,012   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:16,012   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:16,012   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:16,013   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:16,013   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:16,013   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:16,013   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:50:16,014   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:16,014   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:16,014   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:16,014   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:16,014   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:16,015   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:50:16,015   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:50:16,016   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:50:16,016   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:50:16,016   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:50:16,028   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:50:16,098   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,117   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,122   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,134   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:50:16,139   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:16,145   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:16,149   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:16,155   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:50:16,157   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:50:16,167   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:50:16,171   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:50:16,174   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:50:16,176   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,184   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,189   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,193   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:50:16,194   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,198   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,206   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,211   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:50:16,216   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,220   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,223   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,226   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:50:16,229   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:50:16,232   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:50:16,238   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:50:16,240   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:50:16,243   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:50:16,247   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:50:16,249   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:50:16,251   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:50:16,254   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:50:16,256   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:50:16,258   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:50:16,260   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:50:16,264   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:50:16,266   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:16,269   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:16,271   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:16,277   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:50:16,279   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:50:16,281   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:50:16,284   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:50:16,285   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:50:16,287   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:50:16,289   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:50:16,291   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:50:16,293   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:16,296   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:16,298   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:16,301   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:50:16,303   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:50:16,307   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:50:16,311   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:50:16,313   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,316   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,318   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,321   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:50:16,322   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,325   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,328   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,331   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:50:16,334   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,337   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,339   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,342   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:50:16,344   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,349   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,351   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:16,354   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:50:16,360   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:50:16,362   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:50:16,365   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:50:16,366   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:50:16,368   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:50:16,371   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:50:16,372   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:50:16,375   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:50:16,376   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:50:16,380   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:50:16,381   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:50:16,390   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:50:16,392   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:50:16,394   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:50:16,395   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:50:16,397   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:50:16,399   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:50:16,430   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:50:16,434   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:50:16,438   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:50:16,441   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:16,442   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:50:16,445   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:16,446   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:50:16,449   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:50:16,452   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:50:16,458   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:50:16,459   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:50:16,467   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:50:16,467   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:50:16,468   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:50:16,471   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:50:16,473   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:16,474   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:50:16,482   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:50:16,486   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:50:16,498   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:50:16,501   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:16,502   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:50:16,507   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:50:16,524   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:50:16,528   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:16,529   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:50:16,535   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:50:16,540   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:50:16,543   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:50:16,544   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:50:16,548   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:50:16,552   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:50:16,557   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:50:16,563   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:50:16,563   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:16,565   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:50:16,568   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:50:16,571   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:50:16,573   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:50:16,581   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:50:16,608   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:50:16,609   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:50:16,617   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:16,619   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:50:16,627   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:50:16,631   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:50:16,634   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:50:16,637   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:50:16,642   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:16,644   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:50:16,648   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:50:16,648   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:50:16,650   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:50:16,654   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:50:16,657   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:50:16,661   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:16,662   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:50:16,672   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:50:16,673   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:50:16,675   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:16,676   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:50:16,683   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:16,686   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:50:16,689   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:50:16,692   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:16,693   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:50:16,700   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:50:16,703   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:50:16,706   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:50:16,711   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:16,712   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:50:16,715   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:50:16,717   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:16,718   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:50:16,720   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:16,721   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:50:16,724   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:50:16,728   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:50:16,730   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:50:16,732   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 13:50:16,741   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:50:16,766   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:50:16,767   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:50:16,783   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:50:16,792   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:50:16,798   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:50:16,799   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:50:16,802   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:50:16,805   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:50:16,816   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:50:16,817   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:50:16,827   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:16,828   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:50:16,834   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:50:16,835   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:50:16,838   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:50:16,838   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:16,839   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:50:16,848   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:16,849   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:50:16,854   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:50:18,239   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:50:18,248   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:50:18,254   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:50:18,278   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:50:18,279   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:50:18,281   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 17:50:18,287   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 17:50:18,295   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 17:50:18,296   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-03-21 17:50:18,296   INFO  [main] NETWORK: 1 notified of host 0
2014-03-21 17:50:18,307   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-03-21 17:50:18,335   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:50:18,393   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 17:50:18,432   FATAL [main] HOST: The PID of this process is 62377
2014-03-21 17:50:18,432   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 17:50:18,432   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 520133      0t0  TCP *:56782 (LISTEN)
2014-03-21 17:50:18,432   FATAL [main] HOST: java      62258 thorsten   34u  IPv6 519745      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 17:50:18,432   FATAL [main] HOST: java      62258 thorsten   40u  IPv6 519752      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 17:50:18,432   FATAL [main] HOST: java      62258 thorsten   54u  IPv6 519759      0t0  TCP *:8080 (LISTEN)
2014-03-21 17:50:18,432   FATAL [main] HOST: java      62258 thorsten   55u  IPv6 519826      0t0  TCP *:21212 (LISTEN)
2014-03-21 17:50:18,432   FATAL [main] HOST: java      62258 thorsten   56u  IPv6 519827      0t0  TCP *:21211 (LISTEN)
2014-03-21 17:50:18,438   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 17:50:18,438   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 17:50:18,770   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-03-21 17:50:18,774   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41246
2014-03-21 17:50:18,782   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-03-21 17:50:18,784   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-03-21 17:50:18,798   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-03-21 17:50:18,808   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-03-21 17:50:18,808   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-03-21 17:50:18,809   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-03-21 13:50:30,505   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:50:30,505   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 13:50:30,511   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 13:50:30,512   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 13:50:30,513   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 13:50:30,515   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 13:50:30,518   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 13:50:30,518   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 13:50:30,519   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:50:30,519   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 13:50:30,527   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:50:30,528   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:50:30,528   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 13:50:30,529   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 13:50:30,529   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 13:50:30,530   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 13:50:30,531   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 13:50:30,532   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 13:50:30,533   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:50:30,533   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 13:50:30,533   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 13:50:30,533   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 13:50:30,533   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 13:50:30,534   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 13:50:30,540   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:50:30,540   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:50:30,541   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 13:50:30,541   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:30,541   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:30,542   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:30,542   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:30,542   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:30,542   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:30,543   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 13:50:30,544   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:30,544   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:30,544   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:30,544   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:30,544   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 13:50:30,545   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:50:30,545   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 13:50:30,545   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 13:50:30,546   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:50:30,546   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 13:50:30,559   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:50:30,612   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,630   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,635   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,650   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:50:30,654   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:30,659   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:30,663   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:30,669   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 13:50:30,671   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:50:30,678   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 13:50:30,680   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 13:50:30,683   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:50:30,685   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,692   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,695   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,699   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 13:50:30,701   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,704   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,711   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,717   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 13:50:30,718   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,721   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,724   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,727   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 13:50:30,731   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 13:50:30,733   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 13:50:30,738   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 13:50:30,740   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 13:50:30,743   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 13:50:30,746   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:50:30,748   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 13:50:30,751   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 13:50:30,754   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 13:50:30,756   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:50:30,758   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:50:30,760   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 13:50:30,762   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 13:50:30,764   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:30,768   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:30,770   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:30,775   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 13:50:30,777   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 13:50:30,779   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 13:50:30,781   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 13:50:30,783   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:50:30,785   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 13:50:30,788   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 13:50:30,790   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 13:50:30,791   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:30,794   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:30,797   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 13:50:30,800   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 13:50:30,802   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 13:50:30,805   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 13:50:30,808   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 13:50:30,810   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,814   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,816   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,819   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:50:30,820   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,823   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,825   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,829   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 13:50:30,831   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,834   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,837   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,840   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:50:30,841   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,845   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,847   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 13:50:30,851   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 13:50:30,854   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 13:50:30,856   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 13:50:30,859   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 13:50:30,861   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:50:30,864   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 13:50:30,866   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 13:50:30,867   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:50:30,870   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 13:50:30,871   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 13:50:30,874   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 13:50:30,875   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:50:30,886   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:50:30,887   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 13:50:30,890   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 13:50:30,891   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 13:50:30,893   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 13:50:30,895   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 13:50:30,920   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 13:50:30,925   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 13:50:30,929   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:50:30,933   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:30,934   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 13:50:30,937   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:30,938   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 13:50:30,941   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:50:30,945   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 13:50:30,952   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 13:50:30,953   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 13:50:30,961   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 13:50:30,961   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 13:50:30,962   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 13:50:30,965   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:50:30,967   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:30,968   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 13:50:30,971   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:50:30,975   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 13:50:30,978   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 13:50:30,980   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:30,982   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 13:50:30,985   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 13:50:30,991   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 13:50:30,993   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:30,994   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:50:30,998   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 13:50:31,001   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 13:50:31,006   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 13:50:31,008   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 13:50:31,012   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 13:50:31,017   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 13:50:31,021   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 13:50:31,026   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 13:50:31,026   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:31,027   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 13:50:31,031   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 13:50:31,034   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:50:31,035   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 13:50:31,039   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:50:31,057   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:50:31,058   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 13:50:31,062   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:31,064   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 13:50:31,066   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 13:50:31,070   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:50:31,078   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:50:31,082   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 13:50:31,085   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:31,086   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 13:50:31,090   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 13:50:31,090   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 13:50:31,091   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 13:50:31,095   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 13:50:31,098   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 13:50:31,100   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:31,101   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 13:50:31,104   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 13:50:31,105   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 13:50:31,111   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:31,112   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 13:50:31,114   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:31,115   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 13:50:31,124   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 13:50:31,126   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:31,127   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 13:50:31,130   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 13:50:31,133   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:50:31,136   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 13:50:31,139   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:31,140   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 13:50:31,143   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 13:50:31,145   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:31,146   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 13:50:31,148   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:31,149   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:50:31,152   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 13:50:31,156   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 13:50:31,157   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 13:50:31,161   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 13:50:31,166   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 13:50:31,191   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 13:50:31,192   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 13:50:31,200   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 13:50:31,204   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 13:50:31,206   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 13:50:31,208   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 13:50:31,211   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 13:50:31,214   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 13:50:31,216   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 13:50:31,225   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 13:50:31,227   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:31,228   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 13:50:31,233   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 13:50:31,234   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 13:50:31,253   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 13:50:31,253   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 13:50:31,254   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 13:50:31,257   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 13:50:31,258   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 13:50:31,268   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 17:50:32,851   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 17:50:32,860   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 17:50:32,866   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 17:50:32,891   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 17:50:32,892   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 17:50:32,894   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-03-21 17:50:32,929   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 17:50:32,946   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-03-21 17:50:32,991   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@485fd4e6
2014-03-21 17:50:32,996   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-03-21 17:50:32,998   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:42600
2014-03-21 17:50:32,999   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-03-21 17:50:33,001   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:42600
2014-03-21 17:50:33,017   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16d98f2114800000 with negotiated timeout 6000 for client /127.0.0.1:42600
2014-03-21 17:50:33,017   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16d98f2114800000, negotiated timeout = 6000
2014-03-21 17:50:33,067   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-03-21 17:50:33,089   INFO  [main] HOST: Host id of this node is: 0
2014-03-21 17:50:33,090   INFO  [main] CONSOLE: Host id of this node is: 0
2014-03-21 17:50:33,103   INFO  [main] HOST: URL of deployment: deployment.xml
2014-03-21 17:50:33,312   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-03-21 17:50:34,723   INFO  [main] EXPORT: System is not using any export functionality.
2014-03-21 17:50:34,726   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-03-21 17:50:34,834   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-03-21 17:50:34,841   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-03-21 17:50:35,131   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-03-21 17:50:35,270   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-03-21 17:50:35,295   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-03-21 17:50:35,311   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-03-21 17:50:35,313   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-03-21 17:50:35,324   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-03-21 17:50:35,325   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-03-21 17:50:35,326   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 3 ms.
2014-03-21 17:50:35,326   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 21 ms.
2014-03-21 17:50:35,340   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:50:35,340   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:50:35,340   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-03-21 17:50:35,340   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 3 ms.
2014-03-21 17:50:35,354   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:50:35,360   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-03-21 17:50:35,362   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 8 ms.
2014-03-21 17:50:35,375   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 17:50:35,395   INFO  [main] HOST: Database start action is Create.
2014-03-21 17:50:35,419   INFO  [main] HOST: PID of this Volt process is 62438
2014-03-21 17:50:35,419   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-03-21 17:50:35,419   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-03-21 17:50:35,419   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-03-21 17:50:35,419   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-03-21 17:50:35,419   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-03-21 17:50:35,420   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-03-21 17:50:35,420   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-03-21 17:50:35,420   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 624 MB.
2014-03-21 17:50:35,420   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-03-21 17:50:35,420   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-03-21 17:50:35,420   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-03-21 17:50:35,420   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-03-21 17:50:35,420   INFO  [main] HOST: No schedule set for automated snapshots.
2014-03-21 17:50:35,420   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-03-21 17:50:35,420   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-03-21 17:50:35,421   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-03-21 17:50:35,421   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-03-21 17:50:35,421   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-431.5.1.el6.x86_64 amd64 en_US
2014-03-21 17:50:35,421   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-03-21 17:50:35,421   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-03-21 17:50:35,421   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-03-21 17:50:35,421   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-03-21 17:50:35,421   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8335:b00:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-03-21 17:50:35,422   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-03-21 17:50:35,422   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-03-21 17:50:35,438   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-03-21 17:50:35,440   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-03-21 17:50:35,442   INFO  [Thread-9] HOST: Logging config info
2014-03-21 17:50:35,475   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-03-21 14:06:52,090   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 14:06:52,091   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 14:06:52,097   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 14:06:52,098   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 14:06:52,100   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 14:06:52,102   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 14:06:52,103   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 14:06:52,103   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 14:06:52,103   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 14:06:52,104   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 14:06:52,110   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:06:52,112   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:06:52,112   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:06:52,113   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 14:06:52,115   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 14:06:52,116   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 14:06:52,117   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 14:06:52,117   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 14:06:52,118   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 14:06:52,119   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 14:06:52,119   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 14:06:52,119   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 14:06:52,119   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 14:06:52,120   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 14:06:52,121   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:06:52,121   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:06:52,121   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:06:52,121   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:06:52,122   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:06:52,122   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:06:52,122   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:06:52,122   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:06:52,122   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:06:52,123   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 14:06:52,123   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:06:52,123   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:06:52,123   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:06:52,124   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:06:52,124   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:06:52,124   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 14:06:52,124   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 14:06:52,125   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 14:06:52,125   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 14:06:52,125   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 14:06:52,137   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:06:52,194   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,218   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,222   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,233   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:06:52,243   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:06:52,249   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:06:52,253   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:06:52,259   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 14:06:52,261   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 14:06:52,268   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 14:06:52,270   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 14:06:52,274   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 14:06:52,276   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,279   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,283   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,287   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 14:06:52,288   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,291   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,299   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,303   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 14:06:52,309   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,312   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,315   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,318   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 14:06:52,321   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 14:06:52,325   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 14:06:52,334   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 14:06:52,336   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 14:06:52,339   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 14:06:52,342   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 14:06:52,344   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 14:06:52,347   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 14:06:52,350   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 14:06:52,351   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:06:52,354   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:06:52,355   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:06:52,360   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 14:06:52,362   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:06:52,365   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:06:52,367   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:06:52,373   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 14:06:52,375   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 14:06:52,377   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 14:06:52,380   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 14:06:52,382   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 14:06:52,384   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 14:06:52,386   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 14:06:52,388   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 14:06:52,389   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:06:52,392   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:06:52,395   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:06:52,398   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 14:06:52,399   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 14:06:52,404   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 14:06:52,407   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 14:06:52,409   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,412   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,414   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,417   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 14:06:52,418   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,422   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,425   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,427   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 14:06:52,431   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,433   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,436   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,438   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:06:52,440   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,445   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,447   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:06:52,451   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:06:52,456   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 14:06:52,458   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 14:06:52,463   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 14:06:52,465   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 14:06:52,467   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 14:06:52,470   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 14:06:52,471   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 14:06:52,474   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 14:06:52,476   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 14:06:52,477   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 14:06:52,479   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:06:52,488   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:06:52,489   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:06:52,492   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 14:06:52,493   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 14:06:52,495   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 14:06:52,496   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 14:06:52,533   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 14:06:52,544   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 14:06:52,551   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 14:06:52,553   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:06:52,554   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 14:06:52,557   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 14:06:52,558   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 14:06:52,560   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 14:06:52,564   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 14:06:52,573   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 14:06:52,574   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 14:06:52,582   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 14:06:52,582   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 14:06:52,583   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 14:06:52,586   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 14:06:52,588   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:06:52,589   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 14:06:52,592   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 14:06:52,596   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 14:06:52,600   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 14:06:52,603   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 14:06:52,604   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 14:06:52,606   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 14:06:52,623   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 14:06:52,625   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 14:06:52,626   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 14:06:52,630   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 14:06:52,634   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 14:06:52,637   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 14:06:52,638   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 14:06:52,641   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 14:06:52,644   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 14:06:52,648   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 14:06:52,653   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 14:06:52,653   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:06:52,654   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 14:06:52,657   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 14:06:52,660   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 14:06:52,661   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 14:06:52,665   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 14:06:52,686   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 14:06:52,687   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 14:06:52,692   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:06:52,693   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 14:06:52,696   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 14:06:52,699   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 14:06:52,701   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 14:06:52,704   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 14:06:52,707   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:06:52,708   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 14:06:52,727   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 14:06:52,727   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 14:06:52,728   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 14:06:52,740   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 14:06:52,746   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 14:06:52,749   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 14:06:52,750   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 14:06:52,761   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 14:06:52,762   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 14:06:52,769   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:06:52,770   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 14:06:52,772   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 14:06:52,773   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 14:06:52,792   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 14:06:52,795   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:06:52,796   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 14:06:52,803   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 14:06:52,807   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 14:06:52,810   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 14:06:52,815   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:06:52,816   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 14:06:52,820   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 14:06:52,822   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:06:52,824   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 14:06:52,826   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:06:52,827   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 14:06:52,842   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 14:06:52,846   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 14:06:52,848   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 14:06:52,851   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 14:06:52,856   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 14:06:52,923   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 14:06:52,925   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 14:06:52,932   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 14:06:52,936   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 14:06:52,938   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 14:06:52,940   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 14:06:52,943   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 14:06:52,946   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 14:06:52,948   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 14:06:52,963   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 14:06:52,965   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 14:06:52,966   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 14:06:52,970   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 14:06:52,974   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 14:06:52,980   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 14:06:52,980   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:06:52,981   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 14:06:52,990   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:06:52,992   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 14:06:52,996   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 18:06:54,710   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 18:06:54,719   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 18:06:54,726   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 18:06:54,752   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 18:06:54,752   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 18:06:54,754   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 18:06:54,759   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 18:06:54,768   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 18:06:54,768   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 2
2014-03-21 18:06:54,768   INFO  [main] NETWORK: 1 notified of host 0
2014-03-21 18:06:54,782   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-03-21 18:06:54,811   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 18:06:54,914   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 18:06:54,947   FATAL [main] HOST: The PID of this process is 62673
2014-03-21 18:06:54,947   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 18:06:54,947   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 522913      0t0  TCP *:42341 (LISTEN)
2014-03-21 18:06:54,947   FATAL [main] HOST: java      62438 thorsten   34u  IPv6 520979      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 18:06:54,948   FATAL [main] HOST: java      62438 thorsten   40u  IPv6 520986      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 18:06:54,948   FATAL [main] HOST: java      62438 thorsten   54u  IPv6 520993      0t0  TCP *:8080 (LISTEN)
2014-03-21 18:06:54,948   FATAL [main] HOST: java      62438 thorsten   55u  IPv6 521060      0t0  TCP *:21212 (LISTEN)
2014-03-21 18:06:54,948   FATAL [main] HOST: java      62438 thorsten   56u  IPv6 521061      0t0  TCP *:21211 (LISTEN)
2014-03-21 18:06:54,954   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 18:06:54,954   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 18:06:55,286   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41250
2014-03-21 18:06:55,289   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-03-21 18:06:55,291   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-03-21 18:06:55,300   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-03-21 18:06:55,310   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-03-21 18:06:55,310   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-03-21 18:06:55,311   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-03-21 14:07:05,920   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 14:07:05,923   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 14:07:05,930   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 14:07:05,930   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 14:07:05,931   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 14:07:05,933   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 14:07:05,934   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 14:07:05,934   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 14:07:05,934   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 14:07:05,935   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 14:07:05,935   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:07:05,936   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:07:05,936   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:07:05,937   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 14:07:05,937   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 14:07:05,938   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 14:07:05,939   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 14:07:05,939   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 14:07:05,940   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 14:07:05,941   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 14:07:05,941   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 14:07:05,941   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 14:07:05,941   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 14:07:05,942   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 14:07:05,943   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:07:05,943   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:07:05,944   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:07:05,944   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:07:05,944   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:07:05,945   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:07:05,945   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:07:05,945   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:07:05,946   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:07:05,946   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 14:07:05,947   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:07:05,947   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:07:05,947   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:07:05,948   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:07:05,948   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:07:05,949   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 14:07:05,949   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 14:07:05,949   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 14:07:05,950   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 14:07:05,950   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 14:07:05,966   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:07:06,020   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,035   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,039   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,048   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:07:06,052   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:07:06,058   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:07:06,063   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:07:06,069   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 14:07:06,071   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 14:07:06,074   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 14:07:06,077   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 14:07:06,080   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 14:07:06,082   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,086   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,089   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,093   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 14:07:06,095   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,098   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,108   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,111   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 14:07:06,113   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,117   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,119   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,122   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 14:07:06,125   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 14:07:06,127   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 14:07:06,131   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 14:07:06,133   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 14:07:06,136   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 14:07:06,139   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 14:07:06,141   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 14:07:06,143   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 14:07:06,146   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 14:07:06,147   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:07:06,150   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:07:06,151   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:07:06,154   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 14:07:06,155   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:07:06,159   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:07:06,161   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:07:06,164   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 14:07:06,166   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 14:07:06,168   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 14:07:06,171   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 14:07:06,172   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 14:07:06,175   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 14:07:06,176   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 14:07:06,178   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 14:07:06,180   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:07:06,183   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:07:06,185   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:07:06,187   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 14:07:06,188   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 14:07:06,190   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 14:07:06,193   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 14:07:06,195   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,198   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,200   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,203   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 14:07:06,204   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,207   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,209   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,212   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 14:07:06,214   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,216   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,218   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,221   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:07:06,223   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,226   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,227   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:07:06,231   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:07:06,234   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 14:07:06,236   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 14:07:06,239   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 14:07:06,241   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 14:07:06,243   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 14:07:06,245   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 14:07:06,246   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 14:07:06,249   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 14:07:06,250   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 14:07:06,252   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 14:07:06,253   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:07:06,262   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:07:06,264   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:07:06,266   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 14:07:06,268   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 14:07:06,270   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 14:07:06,271   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 14:07:06,295   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 14:07:06,300   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 14:07:06,303   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 14:07:06,306   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:07:06,307   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 14:07:06,310   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 14:07:06,311   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 14:07:06,315   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 14:07:06,318   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 14:07:06,325   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 14:07:06,326   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 14:07:06,334   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 14:07:06,334   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 14:07:06,335   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 14:07:06,338   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 14:07:06,340   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:07:06,341   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 14:07:06,344   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 14:07:06,348   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 14:07:06,351   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 14:07:06,354   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 14:07:06,355   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 14:07:06,357   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 14:07:06,364   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 14:07:06,366   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 14:07:06,367   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 14:07:06,370   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 14:07:06,374   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 14:07:06,380   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 14:07:06,381   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 14:07:06,385   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 14:07:06,390   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 14:07:06,394   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 14:07:06,399   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 14:07:06,399   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:07:06,400   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 14:07:06,404   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 14:07:06,406   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 14:07:06,407   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 14:07:06,411   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 14:07:06,435   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 14:07:06,437   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 14:07:06,441   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:07:06,443   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 14:07:06,445   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 14:07:06,449   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 14:07:06,451   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 14:07:06,454   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 14:07:06,457   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:07:06,458   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 14:07:06,462   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 14:07:06,462   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 14:07:06,464   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 14:07:06,469   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 14:07:06,475   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 14:07:06,477   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 14:07:06,479   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 14:07:06,481   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 14:07:06,482   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 14:07:06,485   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:07:06,486   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 14:07:06,488   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 14:07:06,489   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 14:07:06,491   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 14:07:06,494   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:07:06,495   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 14:07:06,498   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 14:07:06,501   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 14:07:06,503   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 14:07:06,506   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:07:06,507   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 14:07:06,510   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 14:07:06,512   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:07:06,518   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 14:07:06,521   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:07:06,522   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 14:07:06,527   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 14:07:06,530   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 14:07:06,532   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 14:07:06,535   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 14:07:06,540   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 14:07:06,563   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 14:07:06,564   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 14:07:06,577   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 14:07:06,588   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 14:07:06,590   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 14:07:06,591   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 14:07:06,599   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 14:07:06,603   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 14:07:06,614   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 14:07:06,634   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 14:07:06,636   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 14:07:06,637   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 14:07:06,643   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 14:07:06,644   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 14:07:06,647   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 14:07:06,647   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:07:06,648   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 14:07:06,655   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:07:06,656   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 14:07:06,661   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 18:07:08,337   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 18:07:08,344   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 18:07:08,350   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 18:07:08,375   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 18:07:08,376   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 18:07:08,378   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-03-21 18:07:08,413   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 18:07:08,426   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-03-21 18:07:08,474   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-03-21 18:07:08,480   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-03-21 18:07:08,482   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-03-21 18:07:08,482   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:42604
2014-03-21 18:07:08,484   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:42604
2014-03-21 18:07:08,495   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16d996b962000000 with negotiated timeout 6000 for client /127.0.0.1:42604
2014-03-21 18:07:08,496   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16d996b962000000, negotiated timeout = 6000
2014-03-21 18:07:08,538   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-03-21 18:07:08,566   INFO  [main] HOST: Host id of this node is: 0
2014-03-21 18:07:08,566   INFO  [main] CONSOLE: Host id of this node is: 0
2014-03-21 18:07:08,580   INFO  [main] HOST: URL of deployment: deployment.xml
2014-03-21 18:07:08,809   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-03-21 18:07:10,331   INFO  [main] EXPORT: System is not using any export functionality.
2014-03-21 18:07:10,335   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-03-21 18:07:10,436   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-03-21 18:07:10,443   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-03-21 18:07:10,736   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-03-21 18:07:10,882   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-03-21 18:07:10,901   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-03-21 18:07:10,912   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-03-21 18:07:10,916   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-03-21 18:07:10,929   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-03-21 18:07:10,931   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-03-21 18:07:10,932   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 4 ms.
2014-03-21 18:07:10,932   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 21 ms.
2014-03-21 18:07:10,943   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 18:07:10,943   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 18:07:10,947   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-03-21 18:07:10,947   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 7 ms.
2014-03-21 18:07:10,961   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 18:07:10,977   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-03-21 18:07:10,979   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 16 ms.
2014-03-21 18:07:10,987   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 18:07:11,013   INFO  [main] HOST: Database start action is Create.
2014-03-21 18:07:11,038   INFO  [main] HOST: PID of this Volt process is 62736
2014-03-21 18:07:11,038   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-03-21 18:07:11,038   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-03-21 18:07:11,038   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-03-21 18:07:11,038   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-03-21 18:07:11,039   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-03-21 18:07:11,039   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-03-21 18:07:11,039   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-03-21 18:07:11,039   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 624 MB.
2014-03-21 18:07:11,039   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-03-21 18:07:11,039   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-03-21 18:07:11,039   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-03-21 18:07:11,039   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-03-21 18:07:11,039   INFO  [main] HOST: No schedule set for automated snapshots.
2014-03-21 18:07:11,039   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-03-21 18:07:11,040   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-03-21 18:07:11,040   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-03-21 18:07:11,040   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-03-21 18:07:11,040   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-431.5.1.el6.x86_64 amd64 en_US
2014-03-21 18:07:11,040   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-03-21 18:07:11,040   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-03-21 18:07:11,040   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-03-21 18:07:11,040   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-03-21 18:07:11,040   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8335:b00:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-03-21 18:07:11,041   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-03-21 18:07:11,041   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-03-21 18:07:11,057   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-03-21 18:07:11,058   INFO  [Thread-9] HOST: Logging config info
2014-03-21 18:07:11,058   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-03-21 18:07:11,083   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-03-21 18:08:06,559   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 28348 milliseconds late in updating the estimated time
2014-03-21 14:19:20,415   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 14:19:20,415   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 14:19:20,422   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 14:19:20,422   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 14:19:20,423   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 14:19:20,425   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 14:19:20,426   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 14:19:20,426   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 14:19:20,427   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 14:19:20,427   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 14:19:20,428   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:19:20,428   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:19:20,429   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:19:20,430   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 14:19:20,430   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 14:19:20,431   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 14:19:20,432   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 14:19:20,433   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 14:19:20,435   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 14:19:20,436   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 14:19:20,436   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 14:19:20,436   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 14:19:20,436   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 14:19:20,437   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 14:19:20,438   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:19:20,438   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:19:20,439   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:19:20,439   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:20,439   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:20,440   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:20,440   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:20,440   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:20,441   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:20,449   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 14:19:20,449   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:20,449   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:20,449   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:20,450   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:20,450   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:20,452   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 14:19:20,452   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 14:19:20,453   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 14:19:20,453   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 14:19:20,453   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 14:19:20,469   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:19:20,526   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,546   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,551   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,560   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:19:20,566   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:20,572   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:20,576   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:20,582   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 14:19:20,584   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 14:19:20,591   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 14:19:20,593   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 14:19:20,597   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 14:19:20,599   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,602   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,605   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,609   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 14:19:20,611   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,615   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,622   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,628   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 14:19:20,633   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,637   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,639   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,643   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 14:19:20,647   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 14:19:20,649   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 14:19:20,655   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 14:19:20,657   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 14:19:20,660   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 14:19:20,664   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 14:19:20,666   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 14:19:20,668   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 14:19:20,672   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 14:19:20,673   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:19:20,675   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:19:20,677   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:19:20,681   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 14:19:20,683   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:20,686   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:20,688   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:20,694   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 14:19:20,695   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 14:19:20,698   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 14:19:20,700   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 14:19:20,703   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 14:19:20,705   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 14:19:20,707   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 14:19:20,709   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 14:19:20,710   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:20,716   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:20,718   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:20,721   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 14:19:20,723   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 14:19:20,727   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 14:19:20,729   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 14:19:20,731   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,734   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,736   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,740   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 14:19:20,741   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,744   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,746   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,749   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 14:19:20,750   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,753   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,755   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,758   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:19:20,760   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,765   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,767   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:20,771   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:19:20,776   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 14:19:20,778   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 14:19:20,781   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 14:19:20,782   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 14:19:20,784   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 14:19:20,787   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 14:19:20,788   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 14:19:20,791   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 14:19:20,792   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 14:19:20,794   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 14:19:20,795   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:19:20,803   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:19:20,805   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:19:20,808   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 14:19:20,809   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 14:19:20,811   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 14:19:20,813   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 14:19:20,845   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 14:19:20,850   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 14:19:20,854   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 14:19:20,856   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:20,859   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 14:19:20,862   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:20,863   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 14:19:20,866   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 14:19:20,869   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 14:19:20,875   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 14:19:20,877   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 14:19:20,886   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 14:19:20,886   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 14:19:20,887   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 14:19:20,890   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 14:19:20,892   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:20,893   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 14:19:20,896   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 14:19:20,900   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 14:19:20,906   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 14:19:20,909   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:20,911   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 14:19:20,914   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 14:19:20,930   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 14:19:20,938   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:20,939   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 14:19:20,943   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 14:19:20,948   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 14:19:20,951   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 14:19:20,952   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 14:19:20,955   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 14:19:20,960   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 14:19:20,964   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 14:19:20,971   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 14:19:20,971   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:20,973   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 14:19:20,977   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 14:19:20,979   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 14:19:20,980   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 14:19:20,984   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 14:19:21,023   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 14:19:21,024   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 14:19:21,037   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:21,039   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 14:19:21,046   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 14:19:21,052   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 14:19:21,054   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 14:19:21,061   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 14:19:21,065   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:21,080   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 14:19:21,084   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 14:19:21,084   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 14:19:21,085   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 14:19:21,094   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 14:19:21,099   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 14:19:21,105   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:21,106   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 14:19:21,131   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 14:19:21,132   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 14:19:21,148   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:21,149   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 14:19:21,154   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:21,155   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 14:19:21,163   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 14:19:21,166   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:21,167   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 14:19:21,178   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 14:19:21,187   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 14:19:21,190   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 14:19:21,196   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:21,197   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 14:19:21,210   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 14:19:21,218   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:21,219   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 14:19:21,229   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:21,230   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 14:19:21,234   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 14:19:21,241   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 14:19:21,244   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 14:19:21,251   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 14:19:21,267   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 14:19:21,297   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 14:19:21,299   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 14:19:21,314   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 14:19:21,323   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 14:19:21,325   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 14:19:21,327   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 14:19:21,330   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 14:19:21,334   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 14:19:21,340   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 14:19:21,348   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 14:19:21,350   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:21,351   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 14:19:21,358   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 14:19:21,360   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 14:19:21,362   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 14:19:21,362   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:21,363   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 14:19:21,371   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:21,372   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 14:19:21,377   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 18:19:22,803   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 18:19:22,809   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 18:19:22,816   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 18:19:22,841   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 18:19:22,841   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 18:19:22,843   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 18:19:22,848   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 18:19:22,857   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 18:19:22,857   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-03-21 18:19:22,857   INFO  [main] NETWORK: 1 notified of host 0
2014-03-21 18:19:22,868   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-03-21 18:19:22,895   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 18:19:22,978   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 18:19:23,012   FATAL [main] HOST: The PID of this process is 63891
2014-03-21 18:19:23,012   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 18:19:23,012   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 527249      0t0  TCP *:39800 (LISTEN)
2014-03-21 18:19:23,012   FATAL [main] HOST: java      62736 thorsten   34u  IPv6 523879      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 18:19:23,012   FATAL [main] HOST: java      62736 thorsten   40u  IPv6 523886      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 18:19:23,012   FATAL [main] HOST: java      62736 thorsten   54u  IPv6 523893      0t0  TCP *:8080 (LISTEN)
2014-03-21 18:19:23,012   FATAL [main] HOST: java      62736 thorsten   55u  IPv6 523960      0t0  TCP *:21212 (LISTEN)
2014-03-21 18:19:23,012   FATAL [main] HOST: java      62736 thorsten   56u  IPv6 523961      0t0  TCP *:21211 (LISTEN)
2014-03-21 18:19:23,018   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 18:19:23,018   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 18:19:23,349   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-03-21 18:19:23,350   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41621
2014-03-21 18:19:23,350   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-03-21 18:19:23,354   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-03-21 18:19:23,367   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-03-21 18:19:23,376   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-03-21 18:19:23,376   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-03-21 18:19:23,377   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-03-21 14:19:36,726   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 14:19:36,726   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 14:19:36,732   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 14:19:36,733   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 14:19:36,734   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 14:19:36,736   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 14:19:36,736   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 14:19:36,737   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 14:19:36,737   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 14:19:36,737   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 14:19:36,738   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:19:36,739   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:19:36,739   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:19:36,740   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 14:19:36,740   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 14:19:36,741   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 14:19:36,742   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 14:19:36,742   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 14:19:36,743   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 14:19:36,743   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 14:19:36,743   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 14:19:36,744   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 14:19:36,744   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 14:19:36,745   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 14:19:36,746   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:19:36,746   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:19:36,747   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:19:36,747   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:36,747   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:36,748   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:36,748   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:36,748   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:36,749   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:36,749   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 14:19:36,750   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:36,750   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:36,750   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:36,751   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:36,751   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:19:36,752   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 14:19:36,752   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 14:19:36,752   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 14:19:36,753   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 14:19:36,753   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 14:19:36,767   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:19:36,819   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:36,838   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:36,842   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:36,854   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:19:36,859   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:36,868   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:36,872   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:36,879   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 14:19:36,880   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 14:19:36,887   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 14:19:36,889   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 14:19:36,892   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 14:19:36,894   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:36,901   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:36,905   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:36,909   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 14:19:36,911   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:36,914   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:36,922   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:36,926   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 14:19:36,931   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:36,935   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:36,937   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:36,940   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 14:19:36,943   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 14:19:36,946   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 14:19:36,957   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 14:19:36,959   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 14:19:36,962   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 14:19:36,965   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 14:19:36,967   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 14:19:36,969   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 14:19:36,972   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 14:19:36,974   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:19:36,976   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:19:36,978   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:19:36,983   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 14:19:36,985   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:36,988   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:36,991   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:36,996   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 14:19:36,997   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 14:19:37,000   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 14:19:37,002   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 14:19:37,005   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 14:19:37,007   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 14:19:37,009   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 14:19:37,011   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 14:19:37,013   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:37,016   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:37,018   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:19:37,021   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 14:19:37,023   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 14:19:37,028   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 14:19:37,031   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 14:19:37,033   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:37,036   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:37,038   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:37,041   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 14:19:37,043   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:37,046   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:37,049   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:37,051   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 14:19:37,054   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:37,057   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:37,059   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:37,062   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:19:37,064   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:37,070   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:37,072   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:19:37,075   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:19:37,080   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 14:19:37,082   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 14:19:37,086   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 14:19:37,088   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 14:19:37,090   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 14:19:37,092   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 14:19:37,093   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 14:19:37,096   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 14:19:37,097   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 14:19:37,099   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 14:19:37,100   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:19:37,107   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:19:37,109   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:19:37,111   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 14:19:37,113   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 14:19:37,115   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 14:19:37,116   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 14:19:37,149   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 14:19:37,155   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 14:19:37,159   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 14:19:37,162   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:37,166   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 14:19:37,169   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:37,170   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 14:19:37,173   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 14:19:37,176   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 14:19:37,183   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 14:19:37,184   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 14:19:37,191   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 14:19:37,192   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 14:19:37,193   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 14:19:37,196   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 14:19:37,197   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:37,204   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 14:19:37,207   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 14:19:37,211   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 14:19:37,217   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 14:19:37,219   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:37,221   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 14:19:37,224   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 14:19:37,246   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 14:19:37,254   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:37,255   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 14:19:37,266   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 14:19:37,273   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 14:19:37,275   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 14:19:37,276   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 14:19:37,280   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 14:19:37,285   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 14:19:37,289   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 14:19:37,293   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 14:19:37,293   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:37,294   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 14:19:37,297   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 14:19:37,300   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 14:19:37,300   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 14:19:37,305   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 14:19:37,321   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 14:19:37,322   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 14:19:37,327   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:37,329   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 14:19:37,331   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 14:19:37,335   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 14:19:37,338   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 14:19:37,341   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 14:19:37,344   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:37,346   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 14:19:37,350   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 14:19:37,350   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 14:19:37,351   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 14:19:37,354   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 14:19:37,358   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 14:19:37,360   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:37,361   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 14:19:37,364   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 14:19:37,365   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 14:19:37,367   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:37,368   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 14:19:37,370   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:37,371   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 14:19:37,374   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 14:19:37,377   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:37,378   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 14:19:37,380   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 14:19:37,387   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 14:19:37,400   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 14:19:37,405   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:37,406   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 14:19:37,415   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 14:19:37,417   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:37,418   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 14:19:37,426   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:37,427   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 14:19:37,431   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 14:19:37,435   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 14:19:37,437   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 14:19:37,440   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 14:19:37,446   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 14:19:37,461   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 14:19:37,462   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 14:19:37,471   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 14:19:37,480   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 14:19:37,482   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 14:19:37,484   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 14:19:37,486   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 14:19:37,489   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 14:19:37,491   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 14:19:37,500   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 14:19:37,502   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:37,503   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 14:19:37,513   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 14:19:37,514   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 14:19:37,516   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 14:19:37,516   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:19:37,517   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 14:19:37,536   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:19:37,537   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 14:19:37,542   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 18:19:39,232   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 18:19:39,238   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 18:19:39,245   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 18:19:39,269   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 18:19:39,269   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 18:19:39,272   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-03-21 18:19:39,306   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 18:19:39,321   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-03-21 18:19:39,369   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-03-21 18:19:39,374   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-03-21 18:19:39,376   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:42987
2014-03-21 18:19:39,378   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-03-21 18:19:39,380   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:42987
2014-03-21 18:19:39,391   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16d99c73fa000000 with negotiated timeout 6000 for client /127.0.0.1:42987
2014-03-21 18:19:39,391   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16d99c73fa000000, negotiated timeout = 6000
2014-03-21 18:19:39,434   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-03-21 18:19:39,450   INFO  [main] HOST: Host id of this node is: 0
2014-03-21 18:19:39,450   INFO  [main] CONSOLE: Host id of this node is: 0
2014-03-21 18:19:39,469   INFO  [main] HOST: URL of deployment: deployment.xml
2014-03-21 18:19:39,688   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-03-21 18:19:41,184   WARN  [qtp1150819606-29] HOST: JSON interface: Connection refused
2014-03-21 18:19:41,270   INFO  [main] EXPORT: System is not using any export functionality.
2014-03-21 18:19:41,275   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-03-21 18:19:41,375   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-03-21 18:19:41,379   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-03-21 18:19:41,673   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-03-21 18:19:41,809   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-03-21 18:19:41,828   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-03-21 18:19:41,837   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-03-21 18:19:41,845   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-03-21 18:19:41,853   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-03-21 18:19:41,854   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-03-21 18:19:41,857   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 6 ms.
2014-03-21 18:19:41,859   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 21 ms.
2014-03-21 18:19:41,868   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 18:19:41,868   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 18:19:41,871   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-03-21 18:19:41,871   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 4 ms.
2014-03-21 18:19:41,879   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 18:19:41,888   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-03-21 18:19:41,890   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 7 ms.
2014-03-21 18:19:41,904   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 18:19:41,933   INFO  [main] HOST: Database start action is Create.
2014-03-21 18:19:41,959   INFO  [main] HOST: PID of this Volt process is 63969
2014-03-21 18:19:41,959   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-03-21 18:19:41,959   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-03-21 18:19:41,959   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-03-21 18:19:41,959   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-03-21 18:19:41,959   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-03-21 18:19:41,959   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-03-21 18:19:41,959   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-03-21 18:19:41,959   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 624 MB.
2014-03-21 18:19:41,960   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-03-21 18:19:41,960   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-03-21 18:19:41,960   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-03-21 18:19:41,960   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-03-21 18:19:41,960   INFO  [main] HOST: No schedule set for automated snapshots.
2014-03-21 18:19:41,960   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-03-21 18:19:41,960   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-03-21 18:19:41,960   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-03-21 18:19:41,960   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-03-21 18:19:41,960   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-431.5.1.el6.x86_64 amd64 en_US
2014-03-21 18:19:41,960   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-03-21 18:19:41,960   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-03-21 18:19:41,960   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-03-21 18:19:41,961   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-03-21 18:19:41,961   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8335:b00:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-03-21 18:19:41,967   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-03-21 18:19:41,967   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-03-21 18:19:41,983   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-03-21 18:19:41,984   INFO  [Thread-10] HOST: Logging config info
2014-03-21 18:19:41,985   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-03-21 18:19:42,016   INFO  [Thread-11] CONSOLE: Server completed initialization.
2014-03-21 14:21:57,147   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 14:21:57,147   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 14:21:57,154   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 14:21:57,154   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 14:21:57,155   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 14:21:57,158   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 14:21:57,158   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 14:21:57,159   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 14:21:57,159   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 14:21:57,159   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 14:21:57,160   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:21:57,160   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:21:57,161   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:21:57,162   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 14:21:57,162   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 14:21:57,163   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 14:21:57,163   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 14:21:57,164   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 14:21:57,165   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 14:21:57,165   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 14:21:57,165   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 14:21:57,165   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 14:21:57,165   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 14:21:57,166   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 14:21:57,168   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:21:57,168   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:21:57,168   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:21:57,169   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:21:57,169   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:21:57,169   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:21:57,170   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:21:57,170   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:21:57,170   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:21:57,171   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 14:21:57,171   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:21:57,171   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:21:57,171   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:21:57,172   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:21:57,172   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:21:57,173   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 14:21:57,173   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 14:21:57,173   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 14:21:57,175   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 14:21:57,175   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 14:21:57,190   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:21:57,256   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,270   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,275   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,290   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:21:57,293   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:21:57,300   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:21:57,304   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:21:57,310   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 14:21:57,312   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 14:21:57,319   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 14:21:57,322   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 14:21:57,325   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 14:21:57,327   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,330   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,334   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,338   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 14:21:57,339   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,342   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,345   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,356   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 14:21:57,361   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,365   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,367   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,370   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 14:21:57,373   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 14:21:57,377   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 14:21:57,389   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 14:21:57,391   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 14:21:57,394   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 14:21:57,397   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 14:21:57,399   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 14:21:57,401   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 14:21:57,404   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 14:21:57,407   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:21:57,410   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:21:57,411   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:21:57,413   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 14:21:57,415   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:21:57,418   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:21:57,421   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:21:57,425   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 14:21:57,429   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 14:21:57,431   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 14:21:57,434   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 14:21:57,435   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 14:21:57,438   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 14:21:57,439   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 14:21:57,441   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 14:21:57,443   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:21:57,446   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:21:57,449   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:21:57,453   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 14:21:57,455   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 14:21:57,457   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 14:21:57,461   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 14:21:57,463   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,466   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,468   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,472   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 14:21:57,473   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,477   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,482   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,484   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 14:21:57,488   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,491   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,493   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,496   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:21:57,498   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,503   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,506   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:21:57,510   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:21:57,515   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 14:21:57,517   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 14:21:57,521   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 14:21:57,522   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 14:21:57,524   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 14:21:57,527   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 14:21:57,528   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 14:21:57,529   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 14:21:57,531   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 14:21:57,534   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 14:21:57,535   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:21:57,539   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:21:57,544   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:21:57,547   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 14:21:57,548   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 14:21:57,550   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 14:21:57,551   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 14:21:57,587   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 14:21:57,592   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 14:21:57,595   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 14:21:57,598   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:21:57,600   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 14:21:57,603   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 14:21:57,604   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 14:21:57,607   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 14:21:57,610   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 14:21:57,617   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 14:21:57,619   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 14:21:57,629   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 14:21:57,629   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 14:21:57,630   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 14:21:57,633   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 14:21:57,635   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:21:57,636   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 14:21:57,639   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 14:21:57,643   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 14:21:57,650   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 14:21:57,653   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 14:21:57,654   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 14:21:57,657   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 14:21:57,675   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 14:21:57,677   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 14:21:57,678   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 14:21:57,682   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 14:21:57,686   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 14:21:57,688   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 14:21:57,689   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 14:21:57,692   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 14:21:57,696   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 14:21:57,701   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 14:21:57,705   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 14:21:57,706   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:21:57,707   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 14:21:57,710   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 14:21:57,713   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 14:21:57,713   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 14:21:57,718   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 14:21:57,734   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 14:21:57,735   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 14:21:57,742   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:21:57,744   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 14:21:57,746   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 14:21:57,750   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 14:21:57,753   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 14:21:57,756   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 14:21:57,759   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:21:57,760   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 14:21:57,763   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 14:21:57,764   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 14:21:57,765   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 14:21:57,768   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 14:21:57,771   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 14:21:57,773   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 14:21:57,774   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 14:21:57,776   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 14:21:57,777   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 14:21:57,780   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:21:57,780   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 14:21:57,783   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 14:21:57,784   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 14:21:57,786   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 14:21:57,788   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:21:57,790   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 14:21:57,793   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 14:21:57,796   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 14:21:57,800   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 14:21:57,802   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:21:57,803   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 14:21:57,807   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 14:21:57,809   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:21:57,810   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 14:21:57,812   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:21:57,813   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 14:21:57,815   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 14:21:57,819   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 14:21:57,821   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 14:21:57,825   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 14:21:57,829   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 14:21:57,843   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 14:21:57,844   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 14:21:57,864   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 14:21:57,874   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 14:21:57,876   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 14:21:57,880   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 14:21:57,883   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 14:21:57,886   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 14:21:57,893   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 14:21:57,894   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 14:21:57,896   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 14:21:57,897   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 14:21:57,911   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 14:21:57,912   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 14:21:57,914   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 14:21:57,914   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:21:57,915   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 14:21:57,924   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:21:57,925   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 14:21:57,929   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 18:21:59,579   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 18:21:59,589   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 18:21:59,599   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 18:21:59,624   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 18:21:59,624   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 18:21:59,626   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-03-21 18:21:59,631   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-03-21 18:21:59,639   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-03-21 18:21:59,639   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-03-21 18:21:59,640   INFO  [main] NETWORK: 1 notified of host 0
2014-03-21 18:21:59,650   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-03-21 18:21:59,675   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 18:21:59,710   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-03-21 18:21:59,742   FATAL [main] HOST: The PID of this process is 64112
2014-03-21 18:21:59,742   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-03-21 18:21:59,742   FATAL [main] HOST: java       2447 thorsten   97u  IPv6 528588      0t0  TCP *:51492 (LISTEN)
2014-03-21 18:21:59,742   FATAL [main] HOST: java      63969 thorsten   34u  IPv6 528157      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-03-21 18:21:59,742   FATAL [main] HOST: java      63969 thorsten   40u  IPv6 528164      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-03-21 18:21:59,742   FATAL [main] HOST: java      63969 thorsten   54u  IPv6 528171      0t0  TCP *:8080 (LISTEN)
2014-03-21 18:21:59,742   FATAL [main] HOST: java      63969 thorsten   56u  IPv6 528244      0t0  TCP *:21212 (LISTEN)
2014-03-21 18:21:59,742   FATAL [main] HOST: java      63969 thorsten   57u  IPv6 528245      0t0  TCP *:21211 (LISTEN)
2014-03-21 18:21:59,748   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-03-21 18:21:59,748   FATAL [main] HOST: java.net.BindException: Address already in use
2014-03-21 18:22:00,078   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41646
2014-03-21 18:22:00,078   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-03-21 18:22:00,081   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-03-21 18:22:00,082   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-03-21 18:22:00,092   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-03-21 18:22:00,101   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-03-21 18:22:00,102   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-03-21 18:22:00,102   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-03-21 14:22:20,507   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 14:22:20,507   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-21 14:22:20,513   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-21 14:22:20,514   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-21 14:22:20,516   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-21 14:22:20,518   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-21 14:22:20,518   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-21 14:22:20,519   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-21 14:22:20,519   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 14:22:20,519   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-21 14:22:20,526   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:22:20,527   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:22:20,527   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-21 14:22:20,535   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-21 14:22:20,536   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-21 14:22:20,537   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-21 14:22:20,537   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-21 14:22:20,538   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-21 14:22:20,539   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-21 14:22:20,539   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-21 14:22:20,539   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-21 14:22:20,539   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-21 14:22:20,539   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-21 14:22:20,540   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-21 14:22:20,541   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:22:20,541   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:22:20,541   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2014-03-21 14:22:20,542   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:22:20,542   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:22:20,542   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:22:20,542   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:22:20,542   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:22:20,542   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:22:20,543   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2014-03-21 14:22:20,543   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:22:20,543   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:22:20,543   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-21 14:22:20,544   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:22:20,544   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-21 14:22:20,544   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 14:22:20,544   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2014-03-21 14:22:20,545   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2014-03-21 14:22:20,545   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 14:22:20,545   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-21 14:22:20,557   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:22:20,601   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,617   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,622   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,630   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:22:20,634   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:22:20,641   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:22:20,647   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:22:20,653   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-21 14:22:20,655   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 14:22:20,662   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-21 14:22:20,665   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-21 14:22:20,668   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-21 14:22:20,670   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,677   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,680   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,684   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-21 14:22:20,685   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,695   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,698   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,703   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-21 14:22:20,705   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,708   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,710   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,714   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-21 14:22:20,717   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-21 14:22:20,719   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-21 14:22:20,724   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-21 14:22:20,725   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-21 14:22:20,728   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-21 14:22:20,731   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-21 14:22:20,733   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-21 14:22:20,735   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-21 14:22:20,738   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-21 14:22:20,739   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:22:20,742   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:22:20,743   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-21 14:22:20,747   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-21 14:22:20,749   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:22:20,752   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:22:20,754   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:22:20,760   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-21 14:22:20,761   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-21 14:22:20,763   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-21 14:22:20,766   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-21 14:22:20,767   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 14:22:20,769   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-21 14:22:20,771   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-21 14:22:20,773   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-21 14:22:20,774   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:22:20,776   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:22:20,778   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-21 14:22:20,785   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-21 14:22:20,787   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-21 14:22:20,789   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-21 14:22:20,792   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-21 14:22:20,794   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,796   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,798   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,801   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 14:22:20,803   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,806   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,808   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,811   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-21 14:22:20,812   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,815   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,817   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,819   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:22:20,823   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,826   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,828   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2014-03-21 14:22:20,831   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-21 14:22:20,833   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-21 14:22:20,835   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-21 14:22:20,838   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-21 14:22:20,840   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-21 14:22:20,842   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-21 14:22:20,844   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-21 14:22:20,845   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 14:22:20,847   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-21 14:22:20,848   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-21 14:22:20,850   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-21 14:22:20,851   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:22:20,858   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:22:20,861   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-21 14:22:20,863   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-21 14:22:20,864   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-21 14:22:20,866   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-21 14:22:20,867   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-21 14:22:20,891   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-21 14:22:20,895   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-21 14:22:20,898   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 14:22:20,901   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:22:20,902   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-21 14:22:20,905   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-21 14:22:20,906   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-21 14:22:20,909   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2014-03-21 14:22:20,912   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-21 14:22:20,919   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-21 14:22:20,920   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-21 14:22:20,928   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-21 14:22:20,928   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-21 14:22:20,929   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2014-03-21 14:22:20,933   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-21 14:22:20,935   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:22:20,937   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-21 14:22:20,940   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 14:22:20,944   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-21 14:22:20,956   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-21 14:22:20,959   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-21 14:22:20,960   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-21 14:22:20,968   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-21 14:22:20,981   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-21 14:22:20,983   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 14:22:20,984   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 14:22:20,998   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-21 14:22:21,001   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-21 14:22:21,007   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-21 14:22:21,009   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2014-03-21 14:22:21,012   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-21 14:22:21,016   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-21 14:22:21,020   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-21 14:22:21,024   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-21 14:22:21,024   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:22:21,025   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-21 14:22:21,029   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-21 14:22:21,031   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-21 14:22:21,032   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-21 14:22:21,043   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-21 14:22:21,060   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 14:22:21,061   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-21 14:22:21,066   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:22:21,068   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-21 14:22:21,070   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-21 14:22:21,073   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 14:22:21,076   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 14:22:21,078   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-21 14:22:21,081   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:22:21,082   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-21 14:22:21,085   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-21 14:22:21,085   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2014-03-21 14:22:21,086   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-21 14:22:21,090   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-21 14:22:21,092   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-21 14:22:21,094   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-21 14:22:21,095   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-21 14:22:21,098   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-21 14:22:21,099   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-21 14:22:21,101   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:22:21,102   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-21 14:22:21,104   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-21 14:22:21,105   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-21 14:22:21,108   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-21 14:22:21,111   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:22:21,112   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-21 14:22:21,114   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-21 14:22:21,118   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 14:22:21,121   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-21 14:22:21,123   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:22:21,124   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-21 14:22:21,128   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-21 14:22:21,129   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:22:21,130   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-21 14:22:21,132   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:22:21,138   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-21 14:22:21,142   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-21 14:22:21,146   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-21 14:22:21,148   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-21 14:22:21,151   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKPATHID, OPERATOR, CHECKVALUE;
2014-03-21 14:22:21,156   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-21 14:22:21,172   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-21 14:22:21,173   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2014-03-21 14:22:21,186   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2014-03-21 14:22:21,190   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-21 14:22:21,192   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-21 14:22:21,194   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-21 14:22:21,198   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-21 14:22:21,202   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-21 14:22:21,204   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-21 14:22:21,216   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-21 14:22:21,219   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-21 14:22:21,220   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-21 14:22:21,222   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-21 14:22:21,223   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-21 14:22:21,226   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-21 14:22:21,226   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-21 14:22:21,227   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-21 14:22:21,230   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-21 14:22:21,231   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-21 14:22:21,244   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-21 18:22:22,543   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-21 18:22:22,549   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-21 18:22:22,556   INFO  [main] NETWORK: Default network thread count: 2
2014-03-21 18:22:22,580   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-21 18:22:22,580   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-21 18:22:22,582   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-03-21 18:22:22,618   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-21 18:22:22,633   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-03-21 18:22:22,678   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-03-21 18:22:22,683   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-03-21 18:22:22,685   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:43000
2014-03-21 18:22:22,686   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-03-21 18:22:22,688   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:43000
2014-03-21 18:22:22,699   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16d99db2f0000000 with negotiated timeout 6000 for client /127.0.0.1:43000
2014-03-21 18:22:22,700   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16d99db2f0000000, negotiated timeout = 6000
2014-03-21 18:22:22,743   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-03-21 18:22:22,757   INFO  [main] HOST: Host id of this node is: 0
2014-03-21 18:22:22,757   INFO  [main] CONSOLE: Host id of this node is: 0
2014-03-21 18:22:22,771   INFO  [main] HOST: URL of deployment: deployment.xml
2014-03-21 18:22:23,014   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-03-21 18:22:24,432   INFO  [main] EXPORT: System is not using any export functionality.
2014-03-21 18:22:24,443   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-03-21 18:22:24,536   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-03-21 18:22:24,540   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-03-21 18:22:24,828   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-03-21 18:22:24,968   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-03-21 18:22:24,989   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-03-21 18:22:25,000   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-03-21 18:22:25,004   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-03-21 18:22:25,014   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-03-21 18:22:25,015   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-03-21 18:22:25,023   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-03-21 18:22:25,026   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 3 ms.
2014-03-21 18:22:25,027   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 15 ms.
2014-03-21 18:22:25,027   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 28 ms.
2014-03-21 18:22:25,035   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 18:22:25,035   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 18:22:25,035   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 18:22:25,045   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-03-21 18:22:25,047   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 12 ms.
2014-03-21 18:22:25,067   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-21 18:22:25,095   INFO  [main] HOST: Database start action is Create.
2014-03-21 18:22:25,120   INFO  [main] HOST: PID of this Volt process is 64178
2014-03-21 18:22:25,120   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-03-21 18:22:25,120   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-03-21 18:22:25,120   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-03-21 18:22:25,120   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-03-21 18:22:25,120   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-03-21 18:22:25,120   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-03-21 18:22:25,120   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-03-21 18:22:25,120   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 624 MB.
2014-03-21 18:22:25,121   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-03-21 18:22:25,121   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-03-21 18:22:25,121   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-03-21 18:22:25,121   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-03-21 18:22:25,121   INFO  [main] HOST: No schedule set for automated snapshots.
2014-03-21 18:22:25,121   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-03-21 18:22:25,121   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-03-21 18:22:25,121   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-03-21 18:22:25,121   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-03-21 18:22:25,122   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-431.5.1.el6.x86_64 amd64 en_US
2014-03-21 18:22:25,122   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-03-21 18:22:25,122   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-03-21 18:22:25,122   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-03-21 18:22:25,122   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-03-21 18:22:25,123   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8335:b00:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-03-21 18:22:25,128   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-03-21 18:22:25,129   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-03-21 18:22:25,146   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-03-21 18:22:25,148   INFO  [Thread-9] HOST: Logging config info
2014-03-21 18:22:25,148   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-03-21 18:22:25,184   INFO  [Thread-10] CONSOLE: Server completed initialization.
