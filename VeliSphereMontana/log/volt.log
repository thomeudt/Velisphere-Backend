2015-01-04 19:16:53,627   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 75445270 milliseconds late in updating the estimated time
2015-01-04 19:25:22,782   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 48493 milliseconds late in updating the estimated time
2015-01-04 19:43:17,285   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 48485 milliseconds late in updating the estimated time
2015-01-04 20:01:31,784   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 48478 milliseconds late in updating the estimated time
2015-01-04 20:18:49,326   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 48523 milliseconds late in updating the estimated time
2015-01-04 20:33:47,472   INFO  [Periodic Priority Work] GC: GC for PS Scavenge: 275 ms for 1 collections, 42503984 used; max is 1908932608
2015-01-04 20:35:54,919   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 48492 milliseconds late in updating the estimated time
2015-01-04 20:37:13,340   INFO  [Periodic Work] HOST: Host id of this node is: 0
2015-01-04 20:37:13,368   INFO  [Periodic Work] HOST: URL of deployment info: deployment.xml
2015-01-04 20:37:13,369   INFO  [Periodic Work] HOST: Database start action is Create.
2015-01-04 20:37:13,369   INFO  [Periodic Work] HOST: PID of this Volt process is 4977
2015-01-04 20:37:13,369   INFO  [Periodic Work] HOST: Listening for native wire protocol clients on port 21212.
2015-01-04 20:37:13,369   INFO  [Periodic Work] HOST: Listening for admin wire protocol clients on port 21211.
2015-01-04 20:37:13,369   INFO  [Periodic Work] HOST: Local machine HTTP monitoring is listening on port 8080.
2015-01-04 20:37:13,369   INFO  [Periodic Work] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2015-01-04 20:37:13,369   INFO  [Periodic Work] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2015-01-04 20:37:13,369   INFO  [Periodic Work] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2015-01-04 20:37:13,369   INFO  [Periodic Work] HOST: Maximum usable Java heap set to 1820 mb.
2015-01-04 20:37:13,369   INFO  [Periodic Work] HOST: Minimum required Java heap for catalog and server config is 664 MB.
2015-01-04 20:37:13,370   INFO  [Periodic Work] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2015-01-04 20:37:13,370   INFO  [Periodic Work] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2015-01-04 20:37:13,370   INFO  [Periodic Work] HOST: Detection of network partitions in the cluster is enabled.
2015-01-04 20:37:13,370   INFO  [Periodic Work] HOST: Client authentication is not enabled. Anonymous clients accepted.
2015-01-04 20:37:13,370   INFO  [Periodic Work] HOST: No schedule set for automated snapshots.
2015-01-04 20:37:13,370   INFO  [Periodic Work] HOST: Using "voltdbroot" for voltdbroot directory.
2015-01-04 20:37:13,370   INFO  [Periodic Work] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2015-01-04 20:37:13,370   INFO  [Periodic Work] HOST: CPU DESC:         Intel(R) Xeon(R) CPU E31220 @ 3.10GHz 8192 KB cache
2015-01-04 20:37:13,370   INFO  [Periodic Work] HOST: HOST MEMORY (MB): 1873
2015-01-04 20:37:13,370   INFO  [Periodic Work] HOST: OS PROFILE:       Linux 2.6.32-431.29.2.el6.x86_64 amd64 en_US
2015-01-04 20:37:13,370   INFO  [Periodic Work] HOST: JAVA VERSION:     1.7.0_51
2015-01-04 20:37:13,370   INFO  [Periodic Work] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2015-01-04 20:37:13,370   INFO  [Periodic Work] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2015-01-04 20:37:13,371   INFO  [Periodic Work] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2015-01-04 20:37:13,371   INFO  [Periodic Work] HOST:   Host id: 0 with interfaces: 16.1.1.115 2a02:8070:84c0:ac00:20c:29ff:fe1b:e41%2 21212,21211,8080 [SELF]
2015-01-04 21:49:20,957   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-01-04 21:49:20,970   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-01-04 21:49:21,063   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2015-01-04 21:49:21,064   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2015-01-04 21:49:21,078   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2015-01-04 21:49:21,079   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2015-01-04 21:49:21,079   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2015-01-04 21:49:21,080   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2015-01-04 21:49:21,091   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2015-01-04 21:49:21,091   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2015-01-04 21:49:21,092   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2015-01-04 21:49:21,092   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2015-01-04 21:49:21,092   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2015-01-04 21:49:21,093   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2015-01-04 21:49:21,094   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2015-01-04 21:49:21,095   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2015-01-04 21:49:21,095   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2015-01-04 21:49:21,096   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2015-01-04 21:49:21,097   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2015-01-04 21:49:21,097   INFO  [main] COMPILER: [null]: Created index: CHCOMB on table: CHECK of type: BALANCED_TREE
2015-01-04 21:49:21,098   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2015-01-04 21:49:21,098   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2015-01-04 21:49:21,098   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2015-01-04 21:49:21,098   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2015-01-04 21:49:21,099   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2015-01-04 21:49:21,101   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2015-01-04 21:49:21,101   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2015-01-04 21:49:21,101   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2015-01-04 21:49:21,102   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-01-04 21:49:21,102   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-01-04 21:49:21,102   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-01-04 21:49:21,103   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-04 21:49:21,103   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-04 21:49:21,103   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-04 21:49:21,104   INFO  [main] COMPILER: [null]: Created index: CPOWNID on table: CHECKPATH of type: BALANCED_TREE
2015-01-04 21:49:21,104   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2015-01-04 21:49:21,105   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-01-04 21:49:21,105   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-01-04 21:49:21,105   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-01-04 21:49:21,105   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-04 21:49:21,106   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-04 21:49:21,106   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2015-01-04 21:49:21,106   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2015-01-04 21:49:21,106   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2015-01-04 21:49:21,107   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-01-04 21:49:21,107   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-01-04 21:49:21,108   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ITEMCOST of type: BALANCED_TREE
2015-01-04 21:49:21,108   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: PLAN of type: BALANCED_TREE
2015-01-04 21:49:21,109   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10138_10139 on table: UNPROVISIONED_ENDPOINT of type: BALANCED_TREE
2015-01-04 21:49:21,109   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10142_10143 on table: VENDOR of type: BALANCED_TREE
2015-01-04 21:49:21,142   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-01-04 21:49:21,448   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,478   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,483   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,492   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2015-01-04 21:49:21,504   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-01-04 21:49:21,511   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-01-04 21:49:21,516   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-01-04 21:49:21,526   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?, ?);
2015-01-04 21:49:21,528   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-01-04 21:49:21,534   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-01-04 21:49:21,537   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ?, OWNERID = ? WHERE (CHECKPATHID = ?);
2015-01-04 21:49:21,542   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2015-01-04 21:49:21,545   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,549   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,552   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,556   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2015-01-04 21:49:21,559   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,562   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,565   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,583   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2015-01-04 21:49:21,585   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,589   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,591   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,594   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?, ?);
2015-01-04 21:49:21,635   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2015-01-04 21:49:21,640   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ?, ENDPOINTPROVDATE = ? WHERE (ENDPOINTID = ?);
2015-01-04 21:49:21,645   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2015-01-04 21:49:21,647   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2015-01-04 21:49:21,650   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2015-01-04 21:49:21,653   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2015-01-04 21:49:21,656   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2015-01-04 21:49:21,658   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2015-01-04 21:49:21,662   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?, ?, ?);
2015-01-04 21:49:21,663   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-01-04 21:49:21,666   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-01-04 21:49:21,668   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ? WHERE (ENDPOINTCLASSID = ?);
2015-01-04 21:49:21,671   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2015-01-04 21:49:21,673   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-01-04 21:49:21,676   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-01-04 21:49:21,679   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-01-04 21:49:21,682   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2015-01-04 21:49:21,684   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2015-01-04 21:49:21,686   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2015-01-04 21:49:21,690   INFO  [main] COMPILER: [ITEMCOST.insert]: Compiling Statement: INSERT INTO ITEMCOST VALUES (?, ?, ?, ?);
2015-01-04 21:49:21,692   INFO  [main] COMPILER: [ITEMCOST.delete]: Compiling Statement: DELETE FROM ITEMCOST WHERE (ITEMID = ?) AND (PLANID = ?);
2015-01-04 21:49:21,695   INFO  [main] COMPILER: [ITEMCOST.update]: Compiling Statement: UPDATE ITEMCOST SET ITEMID = ?, PLANID = ?, DESCRIPTION = ?, COST = ? WHERE (ITEMID = ?) AND (PLANID = ?);
2015-01-04 21:49:21,699   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2015-01-04 21:49:21,701   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2015-01-04 21:49:21,703   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2015-01-04 21:49:21,705   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2015-01-04 21:49:21,707   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2015-01-04 21:49:21,709   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-01-04 21:49:21,711   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-01-04 21:49:21,713   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-01-04 21:49:21,716   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2015-01-04 21:49:21,718   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2015-01-04 21:49:21,720   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2015-01-04 21:49:21,722   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2015-01-04 21:49:21,724   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,727   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,729   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,733   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2015-01-04 21:49:21,734   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,737   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,739   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,748   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2015-01-04 21:49:21,752   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,754   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,756   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,762   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-01-04 21:49:21,769   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,773   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,775   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-04 21:49:21,778   INFO  [main] COMPILER: [PLAN.insert]: Compiling Statement: INSERT INTO PLAN VALUES (?, ?);
2015-01-04 21:49:21,820   INFO  [main] COMPILER: [PLAN.delete]: Compiling Statement: DELETE FROM PLAN WHERE (PLANID = ?);
2015-01-04 21:49:21,824   INFO  [main] COMPILER: [PLAN.update]: Compiling Statement: UPDATE PLAN SET PLANID = ?, DESCRIPTION = ? WHERE (PLANID = ?);
2015-01-04 21:49:21,829   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-01-04 21:49:21,831   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2015-01-04 21:49:21,833   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2015-01-04 21:49:21,836   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2015-01-04 21:49:21,838   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2015-01-04 21:49:21,840   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2015-01-04 21:49:21,843   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2015-01-04 21:49:21,844   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2015-01-04 21:49:21,846   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2015-01-04 21:49:21,848   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2015-01-04 21:49:21,850   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2015-01-04 21:49:21,851   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-01-04 21:49:21,854   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-01-04 21:49:21,856   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-01-04 21:49:21,858   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.insert]: Compiling Statement: INSERT INTO UNPROVISIONED_ENDPOINT VALUES (?, ?, ?, ?);
2015-01-04 21:49:21,862   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.delete]: Compiling Statement: DELETE FROM UNPROVISIONED_ENDPOINT WHERE (UEPID = ?);
2015-01-04 21:49:21,865   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.update]: Compiling Statement: UPDATE UNPROVISIONED_ENDPOINT SET UEPID = ?, IDENTIFIER = ?, ENDPOINTCLASSID = ?, TIME_STAMP = ? WHERE (UEPID = ?);
2015-01-04 21:49:21,870   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?, ?);
2015-01-04 21:49:21,873   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2015-01-04 21:49:21,875   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2015-01-04 21:49:21,877   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ?, PLANID = ? WHERE (USERID = ?);
2015-01-04 21:49:21,882   INFO  [main] COMPILER: [VENDOR.insert]: Compiling Statement: INSERT INTO VENDOR VALUES (?, ?, ?);
2015-01-04 21:49:21,889   INFO  [main] COMPILER: [VENDOR.select]: Compiling Statement: SELECT * FROM VENDOR WHERE (VENDORID = ?);
2015-01-04 21:49:21,894   INFO  [main] COMPILER: [VENDOR.delete]: Compiling Statement: DELETE FROM VENDOR WHERE (VENDORID = ?);
2015-01-04 21:49:21,902   INFO  [main] COMPILER: [VENDOR.update]: Compiling Statement: UPDATE VENDOR SET VENDORID = ?, VENDORNAME = ?, VENDORIMAGEURL = ? WHERE (VENDORID = ?);
2015-01-04 21:49:22,017   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2015-01-04 21:49:22,022   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,036   INFO  [main] COMPILER: [UI_SelectActionsForCheckpathID.class]: Compiling Statement: SELECT ACTIONID, TARGETENDPOINTID FROM ACTION WHERE CHECKPATHID = ? ORDER BY ACTIONID;
2015-01-04 21:49:22,040   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-01-04 21:49:22,043   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-04 21:49:22,045   INFO  [main] COMPILER: [UI_SelectAllVendors.class]: Compiling Statement: SELECT * FROM VENDOR ORDER BY VENDORNAME;
2015-01-04 21:49:22,057   WARN  [main] COMPILER: [UI_SelectAllVendors.class]: Procedure UI_SelectAllVendors has a statement with a non-deterministic result - statement: "SELECT * FROM VENDOR ORDER BY VENDORNAME;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,060   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2015-01-04 21:49:22,063   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,064   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2015-01-04 21:49:22,078   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2015-01-04 21:49:22,103   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2015-01-04 21:49:22,110   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,112   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: UPDATE ACTION SET ACTIONNAME = ?, TARGETENDPOINTID = ?, CHECKID =?, CHECKPATHID = ? WHERE ACTIONID = ?
2015-01-04 21:49:22,120   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, '', '', ?, ?, ?)
2015-01-04 21:49:22,129   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, '', 0, ?, '', ?)
2015-01-04 21:49:22,132   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE OUTBOUNDPROPERTYACTIONID = ?
2015-01-04 21:49:22,136   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2015-01-04 21:49:22,149   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2015-01-04 21:49:22,149   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,150   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2015-01-04 21:49:22,156   INFO  [main] COMPILER: [UI_UpdateEndpointClass.class]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ?  WHERE ENDPOINTCLASSID = ?;
2015-01-04 21:49:22,161   INFO  [main] COMPILER: [UI_UpdateEndpointClass.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 3 of statement ' UPDATE ENDPOINTCLASS SET ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ?  WHERE ENDPOINTCLASSID = ?;'
2015-01-04 21:49:22,162   INFO  [main] COMPILER: [UI_SelectAllSpheresForUserID.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;
2015-01-04 21:49:22,167   WARN  [main] COMPILER: [UI_SelectAllSpheresForUserID.class]: Procedure UI_SelectAllSpheresForUserID has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,172   INFO  [main] COMPILER: [UI_SelectActionsForMulticheckID.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.MULTICHECKID = ? ORDER BY ACTION.ACTIONID;
2015-01-04 21:49:22,179   WARN  [main] COMPILER: [UI_SelectActionsForMulticheckID.class]: Procedure UI_SelectActionsForMulticheckID has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.MULTICHECKID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,181   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2015-01-04 21:49:22,184   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,186   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2015-01-04 21:49:22,189   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2015-01-04 21:49:22,197   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2015-01-04 21:49:22,200   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2015-01-04 21:49:22,203   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,204   INFO  [main] COMPILER: [UI_UpdateVendor.class]: Compiling Statement: UPDATE VENDOR SET VENDORNAME = ?, VENDORIMAGEURL = ? WHERE VENDORID = ?;
2015-01-04 21:49:22,212   INFO  [main] COMPILER: [UI_UpdateVendor.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement ' UPDATE VENDOR SET VENDORNAME = ?, VENDORIMAGEURL = ? WHERE VENDORID = ?;'
2015-01-04 21:49:22,214   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2015-01-04 21:49:22,217   INFO  [main] COMPILER: [UI_SelectSphereForSphereID.class]: Compiling Statement: SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;
2015-01-04 21:49:22,225   INFO  [main] COMPILER: [UI_SelectSphereForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;'
2015-01-04 21:49:22,225   WARN  [main] COMPILER: [UI_SelectSphereForSphereID.class]: Procedure UI_SelectSphereForSphereID has a statement with a non-deterministic result - statement: "SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,226   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2015-01-04 21:49:22,230   INFO  [main] COMPILER: [UI_SelectUnprovisionedEPforIdentifier.class]: Compiling Statement: select UEPID, IDENTIFIER, ENDPOINTCLASSNAME, ENDPOINTCLASSID, TIME_STAMP from UNPROVISIONED_ENDPOINT JOIN ENDPOINTCLASS ON UNPROVISIONED_ENDPOINT.ENDPOINTCLASSID = ENDPOINTCLASS.ENDPOINTCLASSID WHERE IDENTIFIER = ?;
2015-01-04 21:49:22,243   WARN  [main] COMPILER: [UI_SelectUnprovisionedEPforIdentifier.class]: Procedure UI_SelectUnprovisionedEPforIdentifier has a statement with a non-deterministic result - statement: "select UEPID, IDENTIFIER, ENDPOINTCLASSNAME, ENDPOINTCLASSID, TIME_STAMP from UNPROVISIONED_ENDPOINT JOIN ENDPOINTCLASS ON UNPROVISIONED_ENDPOINT.ENDPOINTCLASSID = ENDPOINTCLASS.ENDPOINTCLASSID WHERE IDENTIFIER = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-04 21:49:22,245   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2015-01-04 21:49:22,247   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,249   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2015-01-04 21:49:22,257   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2015-01-04 21:49:22,261   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2015-01-04 21:49:22,263   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2015-01-04 21:49:22,264   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2015-01-04 21:49:22,270   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2015-01-04 21:49:22,273   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2015-01-04 21:49:22,277   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2015-01-04 21:49:22,282   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2015-01-04 21:49:22,282   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-04 21:49:22,283   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2015-01-04 21:49:22,286   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2015-01-04 21:49:22,288   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2015-01-04 21:49:22,290   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2015-01-04 21:49:22,293   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE ACTIONID = ?;
2015-01-04 21:49:22,295   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ?;
2015-01-04 21:49:22,297   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: DELETE FROM ACTION WHERE ACTIONID = ?;
2015-01-04 21:49:22,302   WARN  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Procedure UI_DeleteAllActionsForCheckID is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT ACTIONID FROM ACTION WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-04 21:49:22,304   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2015-01-04 21:49:22,331   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,338   INFO  [main] COMPILER: [UI_SelectActionsForCheckID.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.CHECKID = ? ORDER BY ACTION.ACTIONID;
2015-01-04 21:49:22,343   WARN  [main] COMPILER: [UI_SelectActionsForCheckID.class]: Procedure UI_SelectActionsForCheckID has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.CHECKID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,345   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForPropertyID.class]: Compiling Statement: select * from property WHERE propertyid = ? ORDER BY propertyid;
2015-01-04 21:49:22,348   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2015-01-04 21:49:22,351   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-04 21:49:22,353   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2015-01-04 21:49:22,355   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2015-01-04 21:49:22,359   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2015-01-04 21:49:22,361   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2015-01-04 21:49:22,369   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2015-01-04 21:49:22,371   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-04 21:49:22,372   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2015-01-04 21:49:22,375   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2015-01-04 21:49:22,375   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2015-01-04 21:49:22,376   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2015-01-04 21:49:22,381   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2015-01-04 21:49:22,383   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH WHERE OWNERID = ? ORDER BY CHECKPATHNAME;
2015-01-04 21:49:22,387   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH WHERE OWNERID = ? ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,389   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2015-01-04 21:49:22,391   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2015-01-04 21:49:22,392   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2015-01-04 21:49:22,395   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-04 21:49:22,404   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2015-01-04 21:49:22,406   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,408   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-01-04 21:49:22,410   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2015-01-04 21:49:22,418   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-04 21:49:22,419   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2015-01-04 21:49:22,422   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2015-01-04 21:49:22,426   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2015-01-04 21:49:22,429   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE ACTIONID = ?;
2015-01-04 21:49:22,438   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ?;
2015-01-04 21:49:22,441   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: DELETE FROM ACTION WHERE ACTIONID = ?;
2015-01-04 21:49:22,449   WARN  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Procedure UI_DeleteAllActionsForMulticheckID is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-04 21:49:22,451   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2015-01-04 21:49:22,452   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,454   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2015-01-04 21:49:22,458   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-04 21:49:22,461   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2015-01-04 21:49:22,464   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2015-01-04 21:49:22,466   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-04 21:49:22,467   INFO  [main] COMPILER: [UI_SelectVendorForVendorID.class]: Compiling Statement: SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;
2015-01-04 21:49:22,470   INFO  [main] COMPILER: [UI_SelectVendorForVendorID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;'
2015-01-04 21:49:22,470   WARN  [main] COMPILER: [UI_SelectVendorForVendorID.class]: Procedure UI_SelectVendorForVendorID has a statement with a non-deterministic result - statement: "SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,471   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2015-01-04 21:49:22,475   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: UPDATE ACTION SET ACTIONNAME = ?, TARGETENDPOINTID = ?, MULTICHECKID =?, CHECKPATHID = ? WHERE ACTIONID = ?
2015-01-04 21:49:22,478   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, '', '', ?, ?, ?)
2015-01-04 21:49:22,488   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, '', 0, '', ?, ?)
2015-01-04 21:49:22,493   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE OUTBOUNDPROPERTYACTIONID = ?
2015-01-04 21:49:22,496   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2015-01-04 21:49:22,503   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2015-01-04 21:49:22,505   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2015-01-04 21:49:22,512   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKVALUE, CHECKPATHID;
2015-01-04 21:49:22,519   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKVALUE, CHECKPATHID;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,521   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2015-01-04 21:49:22,546   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,559   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2015-01-04 21:49:22,571   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2015-01-04 21:49:22,575   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2015-01-04 21:49:22,576   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2015-01-04 21:49:22,578   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2015-01-04 21:49:22,580   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2015-01-04 21:49:22,583   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2015-01-04 21:49:22,585   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2015-01-04 21:49:22,586   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID, ENDPOINTPROVDATE FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2015-01-04 21:49:22,588   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID, ENDPOINTPROVDATE FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,589   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2015-01-04 21:49:22,591   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2015-01-04 21:49:22,592   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2015-01-04 21:49:22,594   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2015-01-04 21:49:22,594   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,595   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2015-01-04 21:49:22,598   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-04 21:49:22,600   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2015-01-04 21:49:22,604   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2015-01-04 21:49:22,605   INFO  [main] COMPILER: [UI_UpdatePropertyClass.class]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE PROPERTYCLASSID = ?;
2015-01-04 20:49:24,411   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2015-01-04 20:49:24,483   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2015-01-04 20:49:24,523   INFO  [main] NETWORK: Default network thread count: 2
2015-01-04 20:49:24,607   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2015-01-04 20:49:24,607   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2015-01-04 20:49:24,629   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2015-01-04 20:49:24,676   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2015-01-04 20:49:24,697   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2015-01-04 20:49:24,875   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2015-01-04 20:49:24,889   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2015-01-04 20:49:24,899   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2015-01-04 20:49:24,899   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:38937
2015-01-04 20:49:24,903   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:38937
2015-01-04 20:49:24,916   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x19c207efd4000000 with negotiated timeout 6000 for client /127.0.0.1:38937
2015-01-04 20:49:24,916   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x19c207efd4000000, negotiated timeout = 6000
2015-01-04 20:49:24,967   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2015-01-04 20:49:24,987   INFO  [main] HOST: Host id of this node is: 0
2015-01-04 20:49:24,987   INFO  [main] CONSOLE: Host id of this node is: 0
2015-01-04 20:49:25,050   INFO  [main] HOST: URL of deployment: deployment.xml
2015-01-04 20:49:25,594   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2015-01-04 20:49:27,803   INFO  [main] EXPORT: System is not using any export functionality.
2015-01-04 20:49:27,817   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2015-01-04 20:49:28,028   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2015-01-04 20:49:28,126   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2015-01-04 20:49:28,451   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2015-01-04 20:49:28,604   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2015-01-04 20:49:28,630   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2015-01-04 20:49:28,645   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2015-01-04 20:49:28,645   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2015-01-04 20:49:28,656   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2015-01-04 20:49:28,656   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2015-01-04 20:49:28,670   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2015-01-04 20:49:28,675   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 21 ms.
2015-01-04 20:49:28,675   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 6 ms.
2015-01-04 20:49:28,676   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 35 ms.
2015-01-04 20:49:28,690   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-04 20:49:28,690   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-04 20:49:28,690   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-04 20:49:28,701   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2015-01-04 20:49:28,702   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 13 ms.
2015-01-04 20:49:28,716   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-04 20:49:28,752   INFO  [main] HOST: Database start action is Create.
2015-01-04 20:49:28,814   INFO  [main] HOST: PID of this Volt process is 23650
2015-01-04 20:49:28,814   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2015-01-04 20:49:28,814   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2015-01-04 20:49:28,814   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2015-01-04 20:49:28,814   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2015-01-04 20:49:28,814   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2015-01-04 20:49:28,814   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2015-01-04 20:49:28,814   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2015-01-04 20:49:28,814   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 664 MB.
2015-01-04 20:49:28,815   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2015-01-04 20:49:28,815   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2015-01-04 20:49:28,815   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2015-01-04 20:49:28,815   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2015-01-04 20:49:28,815   INFO  [main] HOST: No schedule set for automated snapshots.
2015-01-04 20:49:28,815   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2015-01-04 20:49:28,815   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2015-01-04 20:49:28,815   INFO  [main] HOST: CPU DESC:         Intel(R) Xeon(R) CPU E31220 @ 3.10GHz 8192 KB cache
2015-01-04 20:49:28,815   INFO  [main] HOST: HOST MEMORY (MB): 1873
2015-01-04 20:49:28,815   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-431.29.2.el6.x86_64 amd64 en_US
2015-01-04 20:49:28,815   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2015-01-04 20:49:28,815   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2015-01-04 20:49:28,815   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2015-01-04 20:49:28,817   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2015-01-04 20:49:28,817   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.115 2a02:8070:84c0:ac00:20c:29ff:fe1b:e41%2 21212,21211,8080 [SELF]
2015-01-04 20:49:28,817   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2015-01-04 20:49:28,817   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2015-01-04 20:49:28,857   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2015-01-04 20:49:28,862   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2015-01-04 20:49:28,863   INFO  [Thread-9] HOST: Logging config info
2015-01-04 20:49:28,982   INFO  [Thread-10] CONSOLE: Server completed initialization.
2015-01-04 20:53:30,453   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 48493 milliseconds late in updating the estimated time
2015-01-04 21:10:40,158   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 48503 milliseconds late in updating the estimated time
2015-01-04 21:17:59,927   INFO  [Periodic Priority Work] GC: GC for PS MarkSweep: 315 ms for 1 collections, 32388664 used; max is 1908932608
2015-01-04 21:18:00,195   INFO  [Periodic Priority Work] GC: GC for PS Scavenge: 255 ms for 1 collections, 59498464 used; max is 1908932608
2015-01-04 21:28:12,624   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 48515 milliseconds late in updating the estimated time
