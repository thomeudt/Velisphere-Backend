2015-01-17 11:37:51,829   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 19238 milliseconds late in updating the estimated time
2015-01-17 11:38:33,658   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 46530348 milliseconds late in updating the estimated time
2015-01-17 11:53:41,653   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 58080 milliseconds late in updating the estimated time
2015-01-17 12:05:00,801   INFO  [Periodic Priority Work] GC: GC for PS MarkSweep: 18380 ms for 1 collections, 25942776 used; max is 1908932608
2015-01-17 12:05:00,801   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 18509 milliseconds late in updating the estimated time
2015-01-17 12:05:02,521   INFO  [Periodic Priority Work] GC: GC for PS Scavenge: 820 ms for 1 collections, 26899728 used; max is 1908932608
2015-01-17 12:10:29,776   INFO  [Periodic Priority Work] GC: GC for PS Scavenge: 648 ms for 1 collections, 26973880 used; max is 1908932608
2015-01-17 12:12:12,742   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 58054 milliseconds late in updating the estimated time
2015-01-17 13:14:41,293   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-01-17 13:14:41,295   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-01-17 13:14:42,204   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2015-01-17 13:14:42,206   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2015-01-17 13:14:42,272   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2015-01-17 13:14:42,273   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2015-01-17 13:14:42,274   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2015-01-17 13:14:42,276   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2015-01-17 13:14:42,278   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2015-01-17 13:14:42,278   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2015-01-17 13:14:42,279   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2015-01-17 13:14:42,279   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2015-01-17 13:14:42,280   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2015-01-17 13:14:42,283   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2015-01-17 13:14:42,283   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2015-01-17 13:14:42,284   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2015-01-17 13:14:42,285   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2015-01-17 13:14:42,285   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2015-01-17 13:14:42,286   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2015-01-17 13:14:42,287   INFO  [main] COMPILER: [null]: Created index: CHCOMB on table: CHECK of type: BALANCED_TREE
2015-01-17 13:14:42,287   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2015-01-17 13:14:42,287   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2015-01-17 13:14:42,287   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2015-01-17 13:14:42,287   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2015-01-17 13:14:42,288   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2015-01-17 13:14:42,290   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2015-01-17 13:14:42,290   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2015-01-17 13:14:42,290   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2015-01-17 13:14:42,291   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:14:42,291   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:14:42,291   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:14:42,292   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 13:14:42,292   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 13:14:42,292   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 13:14:42,293   INFO  [main] COMPILER: [null]: Created index: CPOWNID on table: CHECKPATH of type: BALANCED_TREE
2015-01-17 13:14:42,293   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2015-01-17 13:14:42,294   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:14:42,294   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:14:42,294   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:14:42,295   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 13:14:42,295   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 13:14:42,296   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2015-01-17 13:14:42,296   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2015-01-17 13:14:42,296   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2015-01-17 13:14:42,297   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-01-17 13:14:42,297   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-01-17 13:14:42,297   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ITEMCOST of type: BALANCED_TREE
2015-01-17 13:14:42,298   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: PLAN of type: BALANCED_TREE
2015-01-17 13:14:42,298   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10138_10139 on table: UNPROVISIONED_ENDPOINT of type: BALANCED_TREE
2015-01-17 13:14:42,299   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10142_10143 on table: VENDOR of type: BALANCED_TREE
2015-01-17 13:14:42,344   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-01-17 13:14:42,711   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:42,736   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:42,760   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:42,770   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2015-01-17 13:14:42,791   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:14:42,807   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:14:42,820   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:14:42,837   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?, ?);
2015-01-17 13:14:42,839   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-01-17 13:14:42,847   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-01-17 13:14:42,849   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ?, OWNERID = ? WHERE (CHECKPATHID = ?);
2015-01-17 13:14:42,852   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2015-01-17 13:14:42,853   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:42,857   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:42,862   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:42,870   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2015-01-17 13:14:42,872   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:42,878   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:42,881   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:42,888   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2015-01-17 13:14:43,618   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:43,621   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:43,624   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:43,628   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?, ?);
2015-01-17 13:14:43,631   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2015-01-17 13:14:43,634   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ?, ENDPOINTPROVDATE = ? WHERE (ENDPOINTID = ?);
2015-01-17 13:14:43,638   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2015-01-17 13:14:43,640   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2015-01-17 13:14:43,645   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2015-01-17 13:14:43,648   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2015-01-17 13:14:43,650   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2015-01-17 13:14:43,653   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2015-01-17 13:14:43,656   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?, ?, ?);
2015-01-17 13:14:43,661   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-01-17 13:14:43,663   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-01-17 13:14:43,665   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ? WHERE (ENDPOINTCLASSID = ?);
2015-01-17 13:14:43,668   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2015-01-17 13:14:43,670   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:14:43,673   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:14:43,678   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:14:43,681   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2015-01-17 13:14:43,683   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2015-01-17 13:14:43,686   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2015-01-17 13:14:43,689   INFO  [main] COMPILER: [ITEMCOST.insert]: Compiling Statement: INSERT INTO ITEMCOST VALUES (?, ?, ?, ?);
2015-01-17 13:14:43,711   INFO  [main] COMPILER: [ITEMCOST.delete]: Compiling Statement: DELETE FROM ITEMCOST WHERE (ITEMID = ?) AND (PLANID = ?);
2015-01-17 13:14:43,716   INFO  [main] COMPILER: [ITEMCOST.update]: Compiling Statement: UPDATE ITEMCOST SET ITEMID = ?, PLANID = ?, DESCRIPTION = ?, COST = ? WHERE (ITEMID = ?) AND (PLANID = ?);
2015-01-17 13:14:43,722   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2015-01-17 13:14:43,728   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2015-01-17 13:14:43,740   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2015-01-17 13:14:43,745   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2015-01-17 13:14:43,747   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2015-01-17 13:14:43,748   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:14:43,753   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:14:43,755   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:14:43,758   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2015-01-17 13:14:43,759   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2015-01-17 13:14:43,762   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2015-01-17 13:14:43,765   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2015-01-17 13:14:43,772   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:43,776   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:43,778   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:43,782   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2015-01-17 13:14:43,783   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:43,786   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:43,788   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:43,791   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2015-01-17 13:14:43,792   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:43,795   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:43,797   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:43,808   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-01-17 13:14:43,810   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:43,814   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:43,817   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:14:43,820   INFO  [main] COMPILER: [PLAN.insert]: Compiling Statement: INSERT INTO PLAN VALUES (?, ?);
2015-01-17 13:14:43,822   INFO  [main] COMPILER: [PLAN.delete]: Compiling Statement: DELETE FROM PLAN WHERE (PLANID = ?);
2015-01-17 13:14:43,825   INFO  [main] COMPILER: [PLAN.update]: Compiling Statement: UPDATE PLAN SET PLANID = ?, DESCRIPTION = ? WHERE (PLANID = ?);
2015-01-17 13:14:43,829   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-01-17 13:14:44,090   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2015-01-17 13:14:44,094   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2015-01-17 13:14:44,099   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2015-01-17 13:14:44,101   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2015-01-17 13:14:44,103   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2015-01-17 13:14:44,107   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2015-01-17 13:14:44,108   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2015-01-17 13:14:44,118   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2015-01-17 13:14:44,120   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2015-01-17 13:14:44,128   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2015-01-17 13:14:44,129   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-01-17 13:14:44,132   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-01-17 13:14:44,134   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-01-17 13:14:44,136   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.insert]: Compiling Statement: INSERT INTO UNPROVISIONED_ENDPOINT VALUES (?, ?, ?, ?);
2015-01-17 13:14:44,179   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.delete]: Compiling Statement: DELETE FROM UNPROVISIONED_ENDPOINT WHERE (UEPID = ?);
2015-01-17 13:14:44,191   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.update]: Compiling Statement: UPDATE UNPROVISIONED_ENDPOINT SET UEPID = ?, IDENTIFIER = ?, ENDPOINTCLASSID = ?, TIME_STAMP = ? WHERE (UEPID = ?);
2015-01-17 13:14:44,193   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?, ?);
2015-01-17 13:14:44,195   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2015-01-17 13:14:44,197   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2015-01-17 13:14:44,202   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ?, PLANID = ? WHERE (USERID = ?);
2015-01-17 13:14:44,205   INFO  [main] COMPILER: [VENDOR.insert]: Compiling Statement: INSERT INTO VENDOR VALUES (?, ?, ?);
2015-01-17 13:14:44,229   INFO  [main] COMPILER: [VENDOR.select]: Compiling Statement: SELECT * FROM VENDOR WHERE (VENDORID = ?);
2015-01-17 13:14:44,232   INFO  [main] COMPILER: [VENDOR.delete]: Compiling Statement: DELETE FROM VENDOR WHERE (VENDORID = ?);
2015-01-17 13:14:44,233   INFO  [main] COMPILER: [VENDOR.update]: Compiling Statement: UPDATE VENDOR SET VENDORID = ?, VENDORNAME = ?, VENDORIMAGEURL = ? WHERE (VENDORID = ?);
2015-01-17 13:14:44,621   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2015-01-17 13:14:44,629   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2015-01-17 13:14:44,641   INFO  [main] COMPILER: [UI_SelectActionsForCheckpathID.class]: Compiling Statement: SELECT ACTIONID, TARGETENDPOINTID, CHECKPATHNAME FROM ACTION JOIN CHECKPATH ON CHECKPATH.CHECKPATHID = ACTION.CHECKPATHID WHERE ACTION.CHECKPATHID = ? ORDER BY ACTIONID;
2015-01-17 13:14:44,656   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-01-17 13:14:44,658   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:14:44,673   INFO  [main] COMPILER: [UI_SelectAllVendors.class]: Compiling Statement: SELECT * FROM VENDOR ORDER BY VENDORNAME;
2015-01-17 13:14:44,676   WARN  [main] COMPILER: [UI_SelectAllVendors.class]: Procedure UI_SelectAllVendors has a statement with a non-deterministic result - statement: "SELECT * FROM VENDOR ORDER BY VENDORNAME;", reason: insufficient ordering criteria.
2015-01-17 13:14:44,677   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2015-01-17 13:14:44,685   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2015-01-17 13:14:44,687   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2015-01-17 13:14:44,690   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2015-01-17 13:14:44,700   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2015-01-17 13:14:44,707   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2015-01-17 13:14:44,708   INFO  [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: Compiling Statement: UPDATE SPHERE SET PUBLIC = ? WHERE SPHEREID = ?;
2015-01-17 13:14:44,712   INFO  [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET PUBLIC = ? WHERE SPHEREID = ?;'
2015-01-17 13:14:44,712   ERROR [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: Procedure: UI_UpdatePublicStateForSphereID has a parameter with a boxed type: Integer. Replace this parameter with the corresponding primitive type and the procedure may compile.
2015-01-17 13:14:44,713   ERROR [main] COMPILER: Failed to compile XML
2015-01-17 13:14:44,713   ERROR [main] COMPILER: Catalog compilation failed.
2015-01-17 12:15:01,008   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2015-01-17 12:15:01,033   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2015-01-17 12:15:01,074   INFO  [main] NETWORK: Default network thread count: 2
2015-01-17 12:15:01,178   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2015-01-17 12:15:01,179   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2015-01-17 12:15:01,201   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2015-01-17 12:15:01,263   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2015-01-17 12:15:01,278   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2015-01-17 12:15:01,437   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@156f6adb
2015-01-17 12:15:01,449   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2015-01-17 12:15:01,479   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:42703
2015-01-17 12:15:01,482   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2015-01-17 12:15:01,486   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:42703
2015-01-17 12:15:01,513   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x19e295cdb7800000 with negotiated timeout 6000 for client /127.0.0.1:42703
2015-01-17 12:15:01,513   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x19e295cdb7800000, negotiated timeout = 6000
2015-01-17 12:15:01,569   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2015-01-17 12:15:01,603   INFO  [main] HOST: Host id of this node is: 0
2015-01-17 12:15:01,603   INFO  [main] CONSOLE: Host id of this node is: 0
2015-01-17 12:15:01,627   INFO  [main] HOST: URL of deployment: deployment.xml
2015-01-17 12:15:02,232   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2015-01-17 12:15:09,153   INFO  [main] EXPORT: System is not using any export functionality.
2015-01-17 12:15:09,158   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2015-01-17 12:15:09,465   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2015-01-17 12:15:09,542   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2015-01-17 12:15:10,387   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2015-01-17 12:15:10,682   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2015-01-17 12:15:10,701   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2015-01-17 12:15:10,717   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2015-01-17 12:15:10,721   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2015-01-17 12:15:10,729   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2015-01-17 12:15:10,735   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2015-01-17 12:15:10,745   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 17 ms.
2015-01-17 12:15:10,753   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 37 ms.
2015-01-17 12:15:10,754   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-17 12:15:10,754   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2015-01-17 12:15:10,754   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 3 ms.
2015-01-17 12:15:10,765   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-17 12:15:10,765   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-17 12:15:10,769   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2015-01-17 12:15:10,772   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 9 ms.
2015-01-17 12:15:10,784   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-17 12:15:10,822   INFO  [main] HOST: Database start action is Create.
2015-01-17 12:15:10,865   INFO  [main] HOST: PID of this Volt process is 16669
2015-01-17 12:15:10,865   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2015-01-17 12:15:10,865   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2015-01-17 12:15:10,865   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2015-01-17 12:15:10,865   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2015-01-17 12:15:10,865   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2015-01-17 12:15:10,865   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2015-01-17 12:15:10,866   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2015-01-17 12:15:10,866   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 664 MB.
2015-01-17 12:15:10,866   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2015-01-17 12:15:10,866   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2015-01-17 12:15:10,866   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2015-01-17 12:15:10,866   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2015-01-17 12:15:10,866   INFO  [main] HOST: No schedule set for automated snapshots.
2015-01-17 12:15:10,866   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2015-01-17 12:15:10,867   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2015-01-17 12:15:10,867   INFO  [main] HOST: CPU DESC:         Intel(R) Xeon(R) CPU E31220 @ 3.10GHz 8192 KB cache
2015-01-17 12:15:10,867   INFO  [main] HOST: HOST MEMORY (MB): 1873
2015-01-17 12:15:10,867   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-431.29.2.el6.x86_64 amd64 en_US
2015-01-17 12:15:10,867   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2015-01-17 12:15:10,867   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2015-01-17 12:15:10,867   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2015-01-17 12:15:10,867   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2015-01-17 12:15:10,868   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.115 2a02:8070:84c3:6000:20c:29ff:fe1b:e41%2 21212,21211,8080 [SELF]
2015-01-17 12:15:10,868   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2015-01-17 12:15:10,868   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2015-01-17 12:15:10,885   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2015-01-17 12:15:10,889   INFO  [Thread-9] HOST: Logging config info
2015-01-17 12:15:11,012   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2015-01-17 12:15:11,067   INFO  [Thread-10] CONSOLE: Server completed initialization.
2015-01-17 13:15:30,682   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-01-17 13:15:30,683   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-01-17 13:15:30,690   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2015-01-17 13:15:30,690   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2015-01-17 13:15:30,693   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2015-01-17 13:15:30,693   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2015-01-17 13:15:30,694   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2015-01-17 13:15:30,695   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2015-01-17 13:15:30,695   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2015-01-17 13:15:30,695   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2015-01-17 13:15:30,696   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2015-01-17 13:15:30,697   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2015-01-17 13:15:30,697   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2015-01-17 13:15:30,698   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2015-01-17 13:15:30,699   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2015-01-17 13:15:30,700   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2015-01-17 13:15:30,700   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2015-01-17 13:15:30,701   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2015-01-17 13:15:30,702   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2015-01-17 13:15:30,703   INFO  [main] COMPILER: [null]: Created index: CHCOMB on table: CHECK of type: BALANCED_TREE
2015-01-17 13:15:30,703   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2015-01-17 13:15:30,703   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2015-01-17 13:15:30,703   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2015-01-17 13:15:30,703   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2015-01-17 13:15:30,705   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2015-01-17 13:15:30,707   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2015-01-17 13:15:30,707   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2015-01-17 13:15:30,707   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2015-01-17 13:15:30,708   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:15:30,708   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:15:30,708   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:15:30,709   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 13:15:30,709   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 13:15:30,709   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 13:15:30,710   INFO  [main] COMPILER: [null]: Created index: CPOWNID on table: CHECKPATH of type: BALANCED_TREE
2015-01-17 13:15:30,710   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2015-01-17 13:15:30,711   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:15:30,711   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:15:30,711   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:15:30,712   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 13:15:30,712   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 13:15:30,714   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2015-01-17 13:15:30,714   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2015-01-17 13:15:30,714   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2015-01-17 13:15:30,715   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-01-17 13:15:30,716   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-01-17 13:15:30,717   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ITEMCOST of type: BALANCED_TREE
2015-01-17 13:15:30,717   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: PLAN of type: BALANCED_TREE
2015-01-17 13:15:30,718   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10138_10139 on table: UNPROVISIONED_ENDPOINT of type: BALANCED_TREE
2015-01-17 13:15:30,719   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10142_10143 on table: VENDOR of type: BALANCED_TREE
2015-01-17 13:15:30,733   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-01-17 13:15:30,801   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:30,824   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:30,828   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:30,836   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2015-01-17 13:15:30,840   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:15:30,847   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:15:30,852   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:15:30,859   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?, ?);
2015-01-17 13:15:30,861   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-01-17 13:15:30,865   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-01-17 13:15:30,867   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ?, OWNERID = ? WHERE (CHECKPATHID = ?);
2015-01-17 13:15:30,870   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2015-01-17 13:15:30,872   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:30,875   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:30,879   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:30,889   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2015-01-17 13:15:30,890   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:30,894   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:30,897   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:30,900   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2015-01-17 13:15:30,902   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:30,906   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:30,908   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:30,912   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?, ?);
2015-01-17 13:15:30,915   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2015-01-17 13:15:30,918   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ?, ENDPOINTPROVDATE = ? WHERE (ENDPOINTID = ?);
2015-01-17 13:15:30,922   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2015-01-17 13:15:30,924   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2015-01-17 13:15:30,928   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2015-01-17 13:15:30,936   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2015-01-17 13:15:30,938   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2015-01-17 13:15:30,941   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2015-01-17 13:15:30,988   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?, ?, ?);
2015-01-17 13:15:30,991   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-01-17 13:15:30,996   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-01-17 13:15:30,998   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ? WHERE (ENDPOINTCLASSID = ?);
2015-01-17 13:15:31,001   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2015-01-17 13:15:31,004   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:15:31,011   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:15:31,013   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:15:31,016   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2015-01-17 13:15:31,018   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2015-01-17 13:15:31,021   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2015-01-17 13:15:31,026   INFO  [main] COMPILER: [ITEMCOST.insert]: Compiling Statement: INSERT INTO ITEMCOST VALUES (?, ?, ?, ?);
2015-01-17 13:15:31,029   INFO  [main] COMPILER: [ITEMCOST.delete]: Compiling Statement: DELETE FROM ITEMCOST WHERE (ITEMID = ?) AND (PLANID = ?);
2015-01-17 13:15:31,038   INFO  [main] COMPILER: [ITEMCOST.update]: Compiling Statement: UPDATE ITEMCOST SET ITEMID = ?, PLANID = ?, DESCRIPTION = ?, COST = ? WHERE (ITEMID = ?) AND (PLANID = ?);
2015-01-17 13:15:31,086   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2015-01-17 13:15:31,088   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2015-01-17 13:15:31,091   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2015-01-17 13:15:31,092   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2015-01-17 13:15:31,095   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2015-01-17 13:15:31,096   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:15:31,099   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:15:31,101   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:15:31,104   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2015-01-17 13:15:31,105   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2015-01-17 13:15:31,108   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2015-01-17 13:15:31,110   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2015-01-17 13:15:31,112   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:31,116   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:31,118   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:31,121   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2015-01-17 13:15:31,123   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:31,126   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:31,128   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:31,135   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2015-01-17 13:15:31,139   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:31,142   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:31,144   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:31,152   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-01-17 13:15:31,157   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:31,160   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:31,163   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:15:31,167   INFO  [main] COMPILER: [PLAN.insert]: Compiling Statement: INSERT INTO PLAN VALUES (?, ?);
2015-01-17 13:15:31,169   INFO  [main] COMPILER: [PLAN.delete]: Compiling Statement: DELETE FROM PLAN WHERE (PLANID = ?);
2015-01-17 13:15:31,171   INFO  [main] COMPILER: [PLAN.update]: Compiling Statement: UPDATE PLAN SET PLANID = ?, DESCRIPTION = ? WHERE (PLANID = ?);
2015-01-17 13:15:31,174   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-01-17 13:15:31,176   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2015-01-17 13:15:31,181   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2015-01-17 13:15:31,220   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2015-01-17 13:15:31,255   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2015-01-17 13:15:31,257   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2015-01-17 13:15:31,284   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2015-01-17 13:15:31,287   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2015-01-17 13:15:31,299   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2015-01-17 13:15:31,301   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2015-01-17 13:15:31,305   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2015-01-17 13:15:31,307   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-01-17 13:15:31,314   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-01-17 13:15:31,316   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-01-17 13:15:31,319   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.insert]: Compiling Statement: INSERT INTO UNPROVISIONED_ENDPOINT VALUES (?, ?, ?, ?);
2015-01-17 13:15:31,320   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.delete]: Compiling Statement: DELETE FROM UNPROVISIONED_ENDPOINT WHERE (UEPID = ?);
2015-01-17 13:15:31,325   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.update]: Compiling Statement: UPDATE UNPROVISIONED_ENDPOINT SET UEPID = ?, IDENTIFIER = ?, ENDPOINTCLASSID = ?, TIME_STAMP = ? WHERE (UEPID = ?);
2015-01-17 13:15:31,328   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?, ?);
2015-01-17 13:15:31,329   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2015-01-17 13:15:31,332   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2015-01-17 13:15:31,334   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ?, PLANID = ? WHERE (USERID = ?);
2015-01-17 13:15:31,337   INFO  [main] COMPILER: [VENDOR.insert]: Compiling Statement: INSERT INTO VENDOR VALUES (?, ?, ?);
2015-01-17 13:15:31,346   INFO  [main] COMPILER: [VENDOR.select]: Compiling Statement: SELECT * FROM VENDOR WHERE (VENDORID = ?);
2015-01-17 13:15:31,348   INFO  [main] COMPILER: [VENDOR.delete]: Compiling Statement: DELETE FROM VENDOR WHERE (VENDORID = ?);
2015-01-17 13:15:31,353   INFO  [main] COMPILER: [VENDOR.update]: Compiling Statement: UPDATE VENDOR SET VENDORID = ?, VENDORNAME = ?, VENDORIMAGEURL = ? WHERE (VENDORID = ?);
2015-01-17 13:15:31,401   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2015-01-17 13:15:31,416   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2015-01-17 13:15:31,419   INFO  [main] COMPILER: [UI_SelectActionsForCheckpathID.class]: Compiling Statement: SELECT ACTIONID, TARGETENDPOINTID, CHECKPATHNAME FROM ACTION JOIN CHECKPATH ON CHECKPATH.CHECKPATHID = ACTION.CHECKPATHID WHERE ACTION.CHECKPATHID = ? ORDER BY ACTIONID;
2015-01-17 13:15:31,428   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-01-17 13:15:31,431   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:15:31,435   INFO  [main] COMPILER: [UI_SelectAllVendors.class]: Compiling Statement: SELECT * FROM VENDOR ORDER BY VENDORNAME;
2015-01-17 13:15:31,437   WARN  [main] COMPILER: [UI_SelectAllVendors.class]: Procedure UI_SelectAllVendors has a statement with a non-deterministic result - statement: "SELECT * FROM VENDOR ORDER BY VENDORNAME;", reason: insufficient ordering criteria.
2015-01-17 13:15:31,439   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2015-01-17 13:15:31,445   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2015-01-17 13:15:31,447   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2015-01-17 13:15:31,451   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2015-01-17 13:15:31,461   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2015-01-17 13:15:31,477   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2015-01-17 13:15:31,481   INFO  [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: Compiling Statement: UPDATE SPHERE SET PUBLIC = ? WHERE SPHEREID = ?;
2015-01-17 13:15:31,485   INFO  [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET PUBLIC = ? WHERE SPHEREID = ?;'
2015-01-17 13:15:31,486   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: UPDATE ACTION SET ACTIONNAME = ?, TARGETENDPOINTID = ?, CHECKID =?, CHECKPATHID = ? WHERE ACTIONID = ?
2015-01-17 13:15:31,522   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, '', '', ?, ?, ?)
2015-01-17 13:15:31,526   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, '', 0, ?, '', ?)
2015-01-17 13:15:31,529   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE OUTBOUNDPROPERTYACTIONID = ?
2015-01-17 13:15:31,534   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2015-01-17 13:15:31,553   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2015-01-17 13:15:31,553   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2015-01-17 13:15:31,554   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2015-01-17 13:15:31,596   INFO  [main] COMPILER: [UI_UpdateEndpointClass.class]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ?  WHERE ENDPOINTCLASSID = ?;
2015-01-17 13:15:31,598   INFO  [main] COMPILER: [UI_UpdateEndpointClass.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 3 of statement ' UPDATE ENDPOINTCLASS SET ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ?  WHERE ENDPOINTCLASSID = ?;'
2015-01-17 13:15:31,600   INFO  [main] COMPILER: [UI_SelectAllSpheresForUserID.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;
2015-01-17 13:15:31,604   WARN  [main] COMPILER: [UI_SelectAllSpheresForUserID.class]: Procedure UI_SelectAllSpheresForUserID has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2015-01-17 13:15:31,605   INFO  [main] COMPILER: [UI_SelectActionsForMulticheckID.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.MULTICHECKID = ? ORDER BY ACTION.ACTIONID;
2015-01-17 13:15:31,617   WARN  [main] COMPILER: [UI_SelectActionsForMulticheckID.class]: Procedure UI_SelectActionsForMulticheckID has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.MULTICHECKID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2015-01-17 13:15:31,619   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2015-01-17 13:15:31,629   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2015-01-17 13:15:31,630   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2015-01-17 13:15:31,638   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2015-01-17 13:15:31,651   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2015-01-17 13:15:31,655   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2015-01-17 13:15:31,664   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2015-01-17 13:15:31,665   INFO  [main] COMPILER: [UI_UpdateVendor.class]: Compiling Statement: UPDATE VENDOR SET VENDORNAME = ?, VENDORIMAGEURL = ? WHERE VENDORID = ?;
2015-01-17 13:15:31,673   INFO  [main] COMPILER: [UI_UpdateVendor.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement ' UPDATE VENDOR SET VENDORNAME = ?, VENDORIMAGEURL = ? WHERE VENDORID = ?;'
2015-01-17 13:15:31,675   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2015-01-17 13:15:31,685   INFO  [main] COMPILER: [UI_SelectSphereForSphereID.class]: Compiling Statement: SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;
2015-01-17 13:15:31,688   INFO  [main] COMPILER: [UI_SelectSphereForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;'
2015-01-17 13:15:31,688   WARN  [main] COMPILER: [UI_SelectSphereForSphereID.class]: Procedure UI_SelectSphereForSphereID has a statement with a non-deterministic result - statement: "SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2015-01-17 13:15:31,691   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2015-01-17 13:15:31,705   INFO  [main] COMPILER: [UI_SelectUnprovisionedEPforIdentifier.class]: Compiling Statement: select UEPID, IDENTIFIER, ENDPOINTCLASSNAME, ENDPOINTCLASSID, TIME_STAMP from UNPROVISIONED_ENDPOINT JOIN ENDPOINTCLASS ON UNPROVISIONED_ENDPOINT.ENDPOINTCLASSID = ENDPOINTCLASS.ENDPOINTCLASSID WHERE IDENTIFIER = ?;
2015-01-17 13:15:31,714   WARN  [main] COMPILER: [UI_SelectUnprovisionedEPforIdentifier.class]: Procedure UI_SelectUnprovisionedEPforIdentifier has a statement with a non-deterministic result - statement: "select UEPID, IDENTIFIER, ENDPOINTCLASSNAME, ENDPOINTCLASSID, TIME_STAMP from UNPROVISIONED_ENDPOINT JOIN ENDPOINTCLASS ON UNPROVISIONED_ENDPOINT.ENDPOINTCLASSID = ENDPOINTCLASS.ENDPOINTCLASSID WHERE IDENTIFIER = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:15:31,716   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2015-01-17 13:15:31,718   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2015-01-17 13:15:31,725   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2015-01-17 13:15:31,732   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2015-01-17 13:15:31,741   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2015-01-17 13:15:31,778   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2015-01-17 13:15:31,780   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2015-01-17 13:15:31,784   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2015-01-17 13:15:31,787   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2015-01-17 13:15:31,792   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2015-01-17 13:15:31,797   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2015-01-17 13:15:31,797   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:15:31,798   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2015-01-17 13:15:31,802   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2015-01-17 13:15:31,804   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2015-01-17 13:15:31,805   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2015-01-17 13:15:31,810   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE ACTIONID = ?;
2015-01-17 13:15:31,812   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ?;
2015-01-17 13:15:31,816   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: DELETE FROM ACTION WHERE ACTIONID = ?;
2015-01-17 13:15:31,818   WARN  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Procedure UI_DeleteAllActionsForCheckID is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT ACTIONID FROM ACTION WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:15:31,820   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2015-01-17 13:15:31,862   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2015-01-17 13:15:31,867   INFO  [main] COMPILER: [UI_SelectActionsForCheckID.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.CHECKID = ? ORDER BY ACTION.ACTIONID;
2015-01-17 13:15:31,873   WARN  [main] COMPILER: [UI_SelectActionsForCheckID.class]: Procedure UI_SelectActionsForCheckID has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.CHECKID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2015-01-17 13:15:31,874   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForPropertyID.class]: Compiling Statement: select * from property WHERE propertyid = ? ORDER BY propertyid;
2015-01-17 13:15:31,879   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2015-01-17 13:15:31,883   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:15:31,884   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2015-01-17 13:15:31,895   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2015-01-17 13:15:31,899   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2015-01-17 13:15:31,923   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2015-01-17 13:15:31,969   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2015-01-17 13:15:31,972   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:15:31,974   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2015-01-17 13:15:31,979   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2015-01-17 13:15:31,979   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2015-01-17 13:15:31,980   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2015-01-17 13:15:31,985   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2015-01-17 13:15:31,993   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH WHERE OWNERID = ? ORDER BY CHECKPATHNAME;
2015-01-17 13:15:31,996   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH WHERE OWNERID = ? ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2015-01-17 13:15:31,997   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2015-01-17 13:15:32,003   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2015-01-17 13:15:32,004   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2015-01-17 13:15:32,016   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:15:32,018   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-01-17 13:15:32,021   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2015-01-17 13:15:32,032   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:15:32,034   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2015-01-17 13:15:32,036   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2015-01-17 13:15:32,038   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2015-01-17 13:15:32,041   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2015-01-17 13:15:32,045   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2015-01-17 13:15:32,054   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE ACTIONID = ?;
2015-01-17 13:15:32,056   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ?;
2015-01-17 13:15:32,062   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: DELETE FROM ACTION WHERE ACTIONID = ?;
2015-01-17 13:15:32,064   WARN  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Procedure UI_DeleteAllActionsForMulticheckID is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:15:32,066   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2015-01-17 13:15:32,068   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2015-01-17 13:15:32,069   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2015-01-17 13:15:32,071   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:15:32,073   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2015-01-17 13:15:32,077   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2015-01-17 13:15:32,080   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:15:32,081   INFO  [main] COMPILER: [UI_SelectVendorForVendorID.class]: Compiling Statement: SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;
2015-01-17 13:15:32,084   INFO  [main] COMPILER: [UI_SelectVendorForVendorID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;'
2015-01-17 13:15:32,084   WARN  [main] COMPILER: [UI_SelectVendorForVendorID.class]: Procedure UI_SelectVendorForVendorID has a statement with a non-deterministic result - statement: "SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;", reason: insufficient ordering criteria.
2015-01-17 13:15:32,085   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2015-01-17 13:15:32,100   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: UPDATE ACTION SET ACTIONNAME = ?, TARGETENDPOINTID = ?, MULTICHECKID =?, CHECKPATHID = ? WHERE ACTIONID = ?
2015-01-17 13:15:32,103   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, '', '', ?, ?, ?)
2015-01-17 13:15:32,108   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, '', 0, '', ?, ?)
2015-01-17 13:15:32,117   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE OUTBOUNDPROPERTYACTIONID = ?
2015-01-17 13:15:32,126   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2015-01-17 13:15:32,130   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2015-01-17 13:15:32,132   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2015-01-17 13:15:32,138   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKVALUE, CHECKPATHID;
2015-01-17 13:15:32,142   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKVALUE, CHECKPATHID;", reason: insufficient ordering criteria.
2015-01-17 13:15:32,143   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2015-01-17 13:15:32,174   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2015-01-17 13:15:32,184   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2015-01-17 13:15:32,206   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2015-01-17 13:15:32,245   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2015-01-17 13:15:32,247   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2015-01-17 13:15:32,249   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2015-01-17 13:15:32,252   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2015-01-17 13:15:32,255   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2015-01-17 13:15:32,257   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2015-01-17 13:15:32,259   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID, ENDPOINTPROVDATE FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2015-01-17 13:15:32,265   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID, ENDPOINTPROVDATE FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2015-01-17 13:15:32,267   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2015-01-17 13:15:32,269   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2015-01-17 13:15:32,271   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2015-01-17 13:15:32,273   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2015-01-17 13:15:32,274   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2015-01-17 13:15:32,275   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2015-01-17 13:15:32,284   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:15:32,286   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2015-01-17 13:15:32,291   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2015-01-17 13:15:32,296   INFO  [main] COMPILER: [UI_UpdatePropertyClass.class]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE PROPERTYCLASSID = ?;
2015-01-17 12:16:08,278   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2015-01-17 12:16:08,287   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2015-01-17 12:16:08,297   INFO  [main] NETWORK: Default network thread count: 2
2015-01-17 12:16:08,336   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2015-01-17 12:16:08,337   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2015-01-17 12:16:08,343   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2015-01-17 12:16:08,388   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2015-01-17 12:16:08,398   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2015-01-17 12:16:08,459   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@19193d1f
2015-01-17 12:16:08,464   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2015-01-17 12:16:08,470   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:42720
2015-01-17 12:16:08,472   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2015-01-17 12:16:08,474   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:42720
2015-01-17 12:16:08,497   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x19e296508d800000, negotiated timeout = 6000
2015-01-17 12:16:08,499   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x19e296508d800000 with negotiated timeout 6000 for client /127.0.0.1:42720
2015-01-17 12:16:08,558   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2015-01-17 12:16:08,593   INFO  [main] HOST: Host id of this node is: 0
2015-01-17 12:16:08,593   INFO  [main] CONSOLE: Host id of this node is: 0
2015-01-17 12:16:08,608   INFO  [main] HOST: URL of deployment: deployment.xml
2015-01-17 12:16:08,931   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2015-01-17 12:16:12,374   INFO  [main] EXPORT: System is not using any export functionality.
2015-01-17 12:16:12,387   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2015-01-17 12:16:12,544   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2015-01-17 12:16:12,549   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2015-01-17 12:16:13,490   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2015-01-17 12:16:14,224   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2015-01-17 12:16:14,247   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2015-01-17 12:16:14,256   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2015-01-17 12:16:14,278   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2015-01-17 12:16:14,278   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2015-01-17 12:16:14,278   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2015-01-17 12:16:14,290   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2015-01-17 12:16:14,298   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 20 ms.
2015-01-17 12:16:14,298   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 8 ms.
2015-01-17 12:16:14,298   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 41 ms.
2015-01-17 12:16:14,315   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-17 12:16:14,315   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-17 12:16:14,315   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-17 12:16:14,329   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2015-01-17 12:16:14,331   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 17 ms.
2015-01-17 12:16:14,344   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-17 12:16:14,376   INFO  [main] HOST: Database start action is Create.
2015-01-17 12:16:14,608   INFO  [main] HOST: PID of this Volt process is 16999
2015-01-17 12:16:14,608   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2015-01-17 12:16:14,608   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2015-01-17 12:16:14,609   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2015-01-17 12:16:14,609   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2015-01-17 12:16:14,609   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2015-01-17 12:16:14,609   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2015-01-17 12:16:14,609   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2015-01-17 12:16:14,609   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 664 MB.
2015-01-17 12:16:14,609   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2015-01-17 12:16:14,609   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2015-01-17 12:16:14,610   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2015-01-17 12:16:14,610   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2015-01-17 12:16:14,610   INFO  [main] HOST: No schedule set for automated snapshots.
2015-01-17 12:16:14,610   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2015-01-17 12:16:14,610   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2015-01-17 12:16:14,610   INFO  [main] HOST: CPU DESC:         Intel(R) Xeon(R) CPU E31220 @ 3.10GHz 8192 KB cache
2015-01-17 12:16:14,610   INFO  [main] HOST: HOST MEMORY (MB): 1873
2015-01-17 12:16:14,610   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-431.29.2.el6.x86_64 amd64 en_US
2015-01-17 12:16:14,610   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2015-01-17 12:16:14,610   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2015-01-17 12:16:14,610   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2015-01-17 12:16:14,612   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2015-01-17 12:16:14,612   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.115 2a02:8070:84c3:6000:20c:29ff:fe1b:e41%2 21212,21211,8080 [SELF]
2015-01-17 12:16:14,612   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2015-01-17 12:16:14,612   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2015-01-17 12:16:14,714   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2015-01-17 12:16:14,738   INFO  [Thread-10] HOST: Logging config info
2015-01-17 12:16:14,953   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2015-01-17 12:16:15,070   INFO  [Thread-11] CONSOLE: Server completed initialization.
2015-01-17 12:22:44,537   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 2580 milliseconds late in updating the estimated time
2015-01-17 12:46:09,342   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 2282 milliseconds late in updating the estimated time
2015-01-17 12:47:58,375   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 2112 milliseconds late in updating the estimated time
2015-01-17 12:48:29,290   INFO  [Periodic Priority Work] GC: GC for PS Scavenge: 20853 ms for 1 collections, 43089424 used; max is 1908932608
2015-01-17 12:48:31,851   WARN  [Client authenticator - 24] HOST: Exception authenticating and registering user in ClientAcceptor
java.io.IOException: Connection reset by peer
	at sun.nio.ch.FileDispatcherImpl.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:47)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:487)
	at org.voltdb.ClientInterface$ClientAcceptor.authenticate(ClientInterface.java:672)
	at org.voltdb.ClientInterface$ClientAcceptor.access$300(ClientInterface.java:236)
	at org.voltdb.ClientInterface$ClientAcceptor$AuthRunnable.run(ClientInterface.java:324)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at org.voltcore.utils.CoreUtils$1$1.run(CoreUtils.java:274)
	at java.lang.Thread.run(Thread.java:744)
2015-01-17 12:48:31,851   WARN  [Client authenticator - 23] HOST: Exception authenticating and registering user in ClientAcceptor
java.io.IOException: Connection reset by peer
	at sun.nio.ch.FileDispatcherImpl.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:47)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:487)
	at org.voltdb.ClientInterface$ClientAcceptor.authenticate(ClientInterface.java:672)
	at org.voltdb.ClientInterface$ClientAcceptor.access$300(ClientInterface.java:236)
	at org.voltdb.ClientInterface$ClientAcceptor$AuthRunnable.run(ClientInterface.java:324)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at org.voltcore.utils.CoreUtils$1$1.run(CoreUtils.java:274)
	at java.lang.Thread.run(Thread.java:744)
2015-01-17 13:56:47,134   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-01-17 13:56:47,179   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-01-17 13:56:48,037   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2015-01-17 13:56:48,039   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2015-01-17 13:56:48,233   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2015-01-17 13:56:48,235   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2015-01-17 13:56:48,236   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2015-01-17 13:56:48,237   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2015-01-17 13:56:48,249   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2015-01-17 13:56:48,249   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2015-01-17 13:56:48,250   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2015-01-17 13:56:48,251   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2015-01-17 13:56:48,251   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2015-01-17 13:56:48,252   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2015-01-17 13:56:48,253   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2015-01-17 13:56:48,254   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2015-01-17 13:56:48,254   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2015-01-17 13:56:48,255   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2015-01-17 13:56:48,256   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2015-01-17 13:56:48,257   INFO  [main] COMPILER: [null]: Created index: CHCOMB on table: CHECK of type: BALANCED_TREE
2015-01-17 13:56:48,257   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2015-01-17 13:56:48,257   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2015-01-17 13:56:48,257   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2015-01-17 13:56:48,257   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2015-01-17 13:56:48,258   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2015-01-17 13:56:48,260   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2015-01-17 13:56:48,260   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2015-01-17 13:56:48,260   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2015-01-17 13:56:48,261   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:56:48,261   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:56:48,262   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:56:48,262   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 13:56:48,262   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 13:56:48,262   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 13:56:48,263   INFO  [main] COMPILER: [null]: Created index: CPOWNID on table: CHECKPATH of type: BALANCED_TREE
2015-01-17 13:56:48,263   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2015-01-17 13:56:48,263   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:56:48,264   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:56:48,264   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-01-17 13:56:48,264   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 13:56:48,264   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 13:56:48,265   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2015-01-17 13:56:48,265   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2015-01-17 13:56:48,265   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2015-01-17 13:56:48,266   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-01-17 13:56:48,266   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-01-17 13:56:48,267   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ITEMCOST of type: BALANCED_TREE
2015-01-17 13:56:48,267   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: PLAN of type: BALANCED_TREE
2015-01-17 13:56:48,267   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10138_10139 on table: UNPROVISIONED_ENDPOINT of type: BALANCED_TREE
2015-01-17 13:56:48,268   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10142_10143 on table: VENDOR of type: BALANCED_TREE
2015-01-17 13:56:48,521   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-01-17 13:56:50,437   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:50,794   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:50,955   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:51,034   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2015-01-17 13:56:51,187   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:56:51,313   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:56:51,361   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:56:51,452   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?, ?);
2015-01-17 13:56:51,685   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-01-17 13:56:51,769   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-01-17 13:56:51,864   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ?, OWNERID = ? WHERE (CHECKPATHID = ?);
2015-01-17 13:56:51,885   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2015-01-17 13:56:51,890   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:51,946   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:51,983   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:52,065   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2015-01-17 13:56:52,154   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:52,193   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:52,259   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:52,364   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2015-01-17 13:56:52,386   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:52,443   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:52,468   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:52,510   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?, ?);
2015-01-17 13:56:52,651   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2015-01-17 13:56:52,689   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ?, ENDPOINTPROVDATE = ? WHERE (ENDPOINTID = ?);
2015-01-17 13:56:52,758   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2015-01-17 13:56:52,762   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2015-01-17 13:56:52,765   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2015-01-17 13:56:52,807   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2015-01-17 13:56:52,829   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2015-01-17 13:56:52,911   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2015-01-17 13:56:53,012   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?, ?, ?);
2015-01-17 13:56:53,040   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-01-17 13:56:53,106   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-01-17 13:56:53,119   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ? WHERE (ENDPOINTCLASSID = ?);
2015-01-17 13:56:53,152   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2015-01-17 13:56:53,183   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:56:53,260   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:56:53,314   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:56:53,399   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2015-01-17 13:56:53,437   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2015-01-17 13:56:53,455   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2015-01-17 13:56:53,533   INFO  [main] COMPILER: [ITEMCOST.insert]: Compiling Statement: INSERT INTO ITEMCOST VALUES (?, ?, ?, ?);
2015-01-17 13:56:53,597   INFO  [main] COMPILER: [ITEMCOST.delete]: Compiling Statement: DELETE FROM ITEMCOST WHERE (ITEMID = ?) AND (PLANID = ?);
2015-01-17 13:56:53,612   INFO  [main] COMPILER: [ITEMCOST.update]: Compiling Statement: UPDATE ITEMCOST SET ITEMID = ?, PLANID = ?, DESCRIPTION = ?, COST = ? WHERE (ITEMID = ?) AND (PLANID = ?);
2015-01-17 13:56:53,645   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2015-01-17 13:56:53,769   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2015-01-17 13:56:53,780   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2015-01-17 13:56:53,787   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2015-01-17 13:56:53,823   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2015-01-17 13:56:53,827   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:56:53,884   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:56:54,015   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-01-17 13:56:54,298   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2015-01-17 13:56:54,327   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2015-01-17 13:56:54,332   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2015-01-17 13:56:54,473   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2015-01-17 13:56:54,509   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:54,522   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:54,526   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:54,539   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2015-01-17 13:56:54,548   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:54,565   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:54,574   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:54,606   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2015-01-17 13:56:54,659   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:54,690   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:54,732   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:54,745   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-01-17 13:56:54,923   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:54,977   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:55,013   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 13:56:55,062   INFO  [main] COMPILER: [PLAN.insert]: Compiling Statement: INSERT INTO PLAN VALUES (?, ?);
2015-01-17 13:56:55,064   INFO  [main] COMPILER: [PLAN.delete]: Compiling Statement: DELETE FROM PLAN WHERE (PLANID = ?);
2015-01-17 13:56:55,097   INFO  [main] COMPILER: [PLAN.update]: Compiling Statement: UPDATE PLAN SET PLANID = ?, DESCRIPTION = ? WHERE (PLANID = ?);
2015-01-17 13:56:55,187   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-01-17 13:56:55,239   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2015-01-17 13:56:55,268   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2015-01-17 13:56:55,331   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2015-01-17 13:56:55,760   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2015-01-17 13:56:55,889   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2015-01-17 13:56:55,931   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2015-01-17 13:56:55,974   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2015-01-17 13:56:56,001   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2015-01-17 13:56:56,024   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2015-01-17 13:56:56,035   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2015-01-17 13:56:56,055   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-01-17 13:56:56,116   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-01-17 13:56:56,125   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-01-17 13:56:56,134   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.insert]: Compiling Statement: INSERT INTO UNPROVISIONED_ENDPOINT VALUES (?, ?, ?, ?);
2015-01-17 13:56:56,137   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.delete]: Compiling Statement: DELETE FROM UNPROVISIONED_ENDPOINT WHERE (UEPID = ?);
2015-01-17 13:56:56,152   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.update]: Compiling Statement: UPDATE UNPROVISIONED_ENDPOINT SET UEPID = ?, IDENTIFIER = ?, ENDPOINTCLASSID = ?, TIME_STAMP = ? WHERE (UEPID = ?);
2015-01-17 13:56:56,165   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?, ?);
2015-01-17 13:56:56,197   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2015-01-17 13:56:56,246   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2015-01-17 13:56:56,300   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ?, PLANID = ? WHERE (USERID = ?);
2015-01-17 13:56:56,328   INFO  [main] COMPILER: [VENDOR.insert]: Compiling Statement: INSERT INTO VENDOR VALUES (?, ?, ?);
2015-01-17 13:56:56,338   INFO  [main] COMPILER: [VENDOR.select]: Compiling Statement: SELECT * FROM VENDOR WHERE (VENDORID = ?);
2015-01-17 13:56:56,363   INFO  [main] COMPILER: [VENDOR.delete]: Compiling Statement: DELETE FROM VENDOR WHERE (VENDORID = ?);
2015-01-17 13:56:56,378   INFO  [main] COMPILER: [VENDOR.update]: Compiling Statement: UPDATE VENDOR SET VENDORID = ?, VENDORNAME = ?, VENDORIMAGEURL = ? WHERE (VENDORID = ?);
2015-01-17 13:56:58,190   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2015-01-17 13:56:58,345   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2015-01-17 13:56:58,355   INFO  [main] COMPILER: [UI_SelectActionsForCheckpathID.class]: Compiling Statement: SELECT ACTIONID, TARGETENDPOINTID, CHECKPATHNAME FROM ACTION JOIN CHECKPATH ON CHECKPATH.CHECKPATHID = ACTION.CHECKPATHID WHERE ACTION.CHECKPATHID = ? ORDER BY ACTIONID;
2015-01-17 13:56:58,692   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-01-17 13:56:58,833   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:56:58,835   INFO  [main] COMPILER: [UI_SelectAllVendors.class]: Compiling Statement: SELECT * FROM VENDOR ORDER BY VENDORNAME;
2015-01-17 13:56:58,841   WARN  [main] COMPILER: [UI_SelectAllVendors.class]: Procedure UI_SelectAllVendors has a statement with a non-deterministic result - statement: "SELECT * FROM VENDOR ORDER BY VENDORNAME;", reason: insufficient ordering criteria.
2015-01-17 13:56:58,843   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2015-01-17 13:56:58,871   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2015-01-17 13:56:58,874   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2015-01-17 13:56:58,909   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2015-01-17 13:56:59,147   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2015-01-17 13:56:59,315   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2015-01-17 13:56:59,327   INFO  [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: Compiling Statement: UPDATE SPHERE SET PUBLIC = ? WHERE SPHEREID = ?;
2015-01-17 13:56:59,360   INFO  [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET PUBLIC = ? WHERE SPHEREID = ?;'
2015-01-17 13:56:59,362   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: UPDATE ACTION SET ACTIONNAME = ?, TARGETENDPOINTID = ?, CHECKID =?, CHECKPATHID = ? WHERE ACTIONID = ?
2015-01-17 13:56:59,376   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, '', '', ?, ?, ?)
2015-01-17 13:56:59,422   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, '', 0, ?, '', ?)
2015-01-17 13:56:59,445   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE OUTBOUNDPROPERTYACTIONID = ?
2015-01-17 13:56:59,489   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2015-01-17 13:56:59,583   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2015-01-17 13:56:59,583   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2015-01-17 13:56:59,586   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2015-01-17 13:56:59,619   INFO  [main] COMPILER: [UI_UpdateEndpointClass.class]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ?  WHERE ENDPOINTCLASSID = ?;
2015-01-17 13:56:59,670   INFO  [main] COMPILER: [UI_UpdateEndpointClass.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 3 of statement ' UPDATE ENDPOINTCLASS SET ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ?  WHERE ENDPOINTCLASSID = ?;'
2015-01-17 13:56:59,672   INFO  [main] COMPILER: [UI_SelectAllSpheresForUserID.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;
2015-01-17 13:56:59,681   WARN  [main] COMPILER: [UI_SelectAllSpheresForUserID.class]: Procedure UI_SelectAllSpheresForUserID has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2015-01-17 13:56:59,682   INFO  [main] COMPILER: [UI_SelectActionsForMulticheckID.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.MULTICHECKID = ? ORDER BY ACTION.ACTIONID;
2015-01-17 13:56:59,746   WARN  [main] COMPILER: [UI_SelectActionsForMulticheckID.class]: Procedure UI_SelectActionsForMulticheckID has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.MULTICHECKID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2015-01-17 13:56:59,749   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2015-01-17 13:56:59,818   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2015-01-17 13:56:59,821   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2015-01-17 13:56:59,876   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2015-01-17 13:56:59,971   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2015-01-17 13:57:00,301   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2015-01-17 13:57:00,378   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2015-01-17 13:57:00,380   INFO  [main] COMPILER: [UI_UpdateVendor.class]: Compiling Statement: UPDATE VENDOR SET VENDORNAME = ?, VENDORIMAGEURL = ? WHERE VENDORID = ?;
2015-01-17 13:57:00,473   INFO  [main] COMPILER: [UI_UpdateVendor.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement ' UPDATE VENDOR SET VENDORNAME = ?, VENDORIMAGEURL = ? WHERE VENDORID = ?;'
2015-01-17 13:57:00,475   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2015-01-17 13:57:00,530   INFO  [main] COMPILER: [UI_SelectSphereForSphereID.class]: Compiling Statement: SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;
2015-01-17 13:57:00,586   INFO  [main] COMPILER: [UI_SelectSphereForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;'
2015-01-17 13:57:00,586   WARN  [main] COMPILER: [UI_SelectSphereForSphereID.class]: Procedure UI_SelectSphereForSphereID has a statement with a non-deterministic result - statement: "SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2015-01-17 13:57:00,597   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2015-01-17 13:57:00,698   INFO  [main] COMPILER: [UI_SelectUnprovisionedEPforIdentifier.class]: Compiling Statement: select UEPID, IDENTIFIER, ENDPOINTCLASSNAME, ENDPOINTCLASSID, TIME_STAMP from UNPROVISIONED_ENDPOINT JOIN ENDPOINTCLASS ON UNPROVISIONED_ENDPOINT.ENDPOINTCLASSID = ENDPOINTCLASS.ENDPOINTCLASSID WHERE IDENTIFIER = ?;
2015-01-17 13:57:00,704   WARN  [main] COMPILER: [UI_SelectUnprovisionedEPforIdentifier.class]: Procedure UI_SelectUnprovisionedEPforIdentifier has a statement with a non-deterministic result - statement: "select UEPID, IDENTIFIER, ENDPOINTCLASSNAME, ENDPOINTCLASSID, TIME_STAMP from UNPROVISIONED_ENDPOINT JOIN ENDPOINTCLASS ON UNPROVISIONED_ENDPOINT.ENDPOINTCLASSID = ENDPOINTCLASS.ENDPOINTCLASSID WHERE IDENTIFIER = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:57:00,705   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2015-01-17 13:57:00,816   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2015-01-17 13:57:00,817   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2015-01-17 13:57:00,831   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2015-01-17 13:57:00,864   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2015-01-17 13:57:00,869   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2015-01-17 13:57:00,870   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2015-01-17 13:57:00,896   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2015-01-17 13:57:00,911   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2015-01-17 13:57:00,922   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2015-01-17 13:57:00,938   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2015-01-17 13:57:00,938   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:57:00,939   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2015-01-17 13:57:00,970   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2015-01-17 13:57:00,996   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2015-01-17 13:57:00,998   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2015-01-17 13:57:01,156   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE ACTIONID = ?;
2015-01-17 13:57:01,319   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ?;
2015-01-17 13:57:01,350   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: DELETE FROM ACTION WHERE ACTIONID = ?;
2015-01-17 13:57:01,374   WARN  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Procedure UI_DeleteAllActionsForCheckID is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT ACTIONID FROM ACTION WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:57:01,377   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2015-01-17 13:57:01,416   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2015-01-17 13:57:01,418   INFO  [main] COMPILER: [UI_SelectActionsForCheckID.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.CHECKID = ? ORDER BY ACTION.ACTIONID;
2015-01-17 13:57:01,449   WARN  [main] COMPILER: [UI_SelectActionsForCheckID.class]: Procedure UI_SelectActionsForCheckID has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.CHECKID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2015-01-17 13:57:01,452   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForPropertyID.class]: Compiling Statement: select * from property WHERE propertyid = ? ORDER BY propertyid;
2015-01-17 13:57:01,477   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2015-01-17 13:57:01,514   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:57:01,518   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2015-01-17 13:57:01,611   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2015-01-17 13:57:01,691   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2015-01-17 13:57:01,735   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2015-01-17 13:57:01,815   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2015-01-17 13:57:01,819   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:57:01,820   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2015-01-17 13:57:02,075   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2015-01-17 13:57:02,075   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2015-01-17 13:57:02,077   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2015-01-17 13:57:02,169   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2015-01-17 13:57:02,293   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH WHERE OWNERID = ? ORDER BY CHECKPATHNAME;
2015-01-17 13:57:02,346   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH WHERE OWNERID = ? ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2015-01-17 13:57:02,347   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2015-01-17 13:57:02,397   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2015-01-17 13:57:02,407   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2015-01-17 13:57:02,452   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:57:02,455   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-01-17 13:57:02,477   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2015-01-17 13:57:02,480   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:57:02,481   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2015-01-17 13:57:02,490   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2015-01-17 13:57:02,496   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2015-01-17 13:57:02,536   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2015-01-17 13:57:02,613   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2015-01-17 13:57:02,621   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE ACTIONID = ?;
2015-01-17 13:57:02,623   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ?;
2015-01-17 13:57:02,655   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: DELETE FROM ACTION WHERE ACTIONID = ?;
2015-01-17 13:57:02,726   WARN  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Procedure UI_DeleteAllActionsForMulticheckID is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:57:02,729   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2015-01-17 13:57:02,843   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2015-01-17 13:57:02,845   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2015-01-17 13:57:02,870   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:57:02,873   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2015-01-17 13:57:03,046   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2015-01-17 13:57:03,059   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:57:03,062   INFO  [main] COMPILER: [UI_SelectVendorForVendorID.class]: Compiling Statement: SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;
2015-01-17 13:57:03,088   INFO  [main] COMPILER: [UI_SelectVendorForVendorID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;'
2015-01-17 13:57:03,089   WARN  [main] COMPILER: [UI_SelectVendorForVendorID.class]: Procedure UI_SelectVendorForVendorID has a statement with a non-deterministic result - statement: "SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;", reason: insufficient ordering criteria.
2015-01-17 13:57:03,113   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2015-01-17 13:57:03,149   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: UPDATE ACTION SET ACTIONNAME = ?, TARGETENDPOINTID = ?, MULTICHECKID =?, CHECKPATHID = ? WHERE ACTIONID = ?
2015-01-17 13:57:03,235   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, '', '', ?, ?, ?)
2015-01-17 13:57:03,254   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, '', 0, '', ?, ?)
2015-01-17 13:57:03,275   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE OUTBOUNDPROPERTYACTIONID = ?
2015-01-17 13:57:03,287   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2015-01-17 13:57:03,303   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2015-01-17 13:57:03,330   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2015-01-17 13:57:03,455   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKVALUE, CHECKPATHID;
2015-01-17 13:57:03,505   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKVALUE, CHECKPATHID;", reason: insufficient ordering criteria.
2015-01-17 13:57:03,507   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2015-01-17 13:57:03,651   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2015-01-17 13:57:03,657   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2015-01-17 13:57:03,839   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2015-01-17 13:57:04,033   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2015-01-17 13:57:04,112   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2015-01-17 13:57:04,122   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2015-01-17 13:57:04,146   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2015-01-17 13:57:04,169   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2015-01-17 13:57:04,316   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2015-01-17 13:57:04,319   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID, ENDPOINTPROVDATE FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2015-01-17 13:57:04,551   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID, ENDPOINTPROVDATE FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2015-01-17 13:57:04,553   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2015-01-17 13:57:04,621   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2015-01-17 13:57:04,623   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2015-01-17 13:57:04,700   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2015-01-17 13:57:04,700   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2015-01-17 13:57:04,709   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2015-01-17 13:57:04,741   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 13:57:04,745   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2015-01-17 13:57:04,832   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2015-01-17 13:57:04,833   INFO  [main] COMPILER: [UI_UpdatePropertyClass.class]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE PROPERTYCLASSID = ?;
2015-01-17 12:57:13,143   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2015-01-17 12:57:13,626   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2015-01-17 12:57:13,683   INFO  [main] NETWORK: Default network thread count: 2
2015-01-17 12:57:14,153   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2015-01-17 12:57:14,153   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2015-01-17 12:57:14,518   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2015-01-17 12:57:15,635   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2015-01-17 12:57:15,906   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2015-01-17 12:57:17,516   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@2a03803
2015-01-17 12:57:17,591   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2015-01-17 12:57:17,734   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2015-01-17 12:57:17,734   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:42835
2015-01-17 12:57:17,739   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:42835
2015-01-17 12:57:17,754   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x19e2a92756000000 with negotiated timeout 6000 for client /127.0.0.1:42835
2015-01-17 12:57:17,754   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x19e2a92756000000, negotiated timeout = 6000
2015-01-17 12:57:18,169   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2015-01-17 12:57:18,469   INFO  [main] HOST: Host id of this node is: 0
2015-01-17 12:57:18,469   INFO  [main] CONSOLE: Host id of this node is: 0
2015-01-17 12:57:19,040   INFO  [main] HOST: URL of deployment: deployment.xml
2015-01-17 12:57:25,827   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2015-01-17 12:57:51,522   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 2411 milliseconds late in updating the estimated time
2015-01-17 12:58:05,140   INFO  [main] EXPORT: System is not using any export functionality.
2015-01-17 12:58:10,288   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2015-01-17 12:58:15,581   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2015-01-17 12:58:20,163   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2015-01-17 12:58:21,220   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2015-01-17 12:58:21,706   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2015-01-17 12:58:21,831   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2015-01-17 12:58:21,842   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2015-01-17 12:58:22,118   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2015-01-17 12:58:22,119   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2015-01-17 12:58:22,122   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2015-01-17 12:58:22,288   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2015-01-17 12:58:22,691   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 864 ms.
2015-01-17 12:58:22,692   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 572 ms.
2015-01-17 12:58:22,692   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 577 ms.
2015-01-17 12:58:22,896   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-17 12:58:22,896   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-17 12:58:22,896   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-17 12:58:23,087   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2015-01-17 12:58:23,202   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 314 ms.
2015-01-17 12:58:23,230   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-17 12:58:24,398   INFO  [main] HOST: Database start action is Create.
2015-01-17 12:58:25,604   INFO  [Periodic Priority Work] GC: GC for PS MarkSweep: 4924 ms for 2 collections, 32146344 used; max is 1908932608
2015-01-17 12:58:25,886   INFO  [main] HOST: PID of this Volt process is 31141
2015-01-17 12:58:25,886   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2015-01-17 12:58:25,886   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2015-01-17 12:58:25,887   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2015-01-17 12:58:25,887   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2015-01-17 12:58:25,887   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2015-01-17 12:58:25,887   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2015-01-17 12:58:25,887   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2015-01-17 12:58:25,887   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 664 MB.
2015-01-17 12:58:25,889   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2015-01-17 12:58:25,889   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2015-01-17 12:58:25,889   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2015-01-17 12:58:25,889   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2015-01-17 12:58:25,889   INFO  [main] HOST: No schedule set for automated snapshots.
2015-01-17 12:58:25,889   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2015-01-17 12:58:25,890   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2015-01-17 12:58:25,890   INFO  [main] HOST: CPU DESC:         Intel(R) Xeon(R) CPU E31220 @ 3.10GHz 8192 KB cache
2015-01-17 12:58:25,891   INFO  [main] HOST: HOST MEMORY (MB): 1873
2015-01-17 12:58:25,891   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-431.29.2.el6.x86_64 amd64 en_US
2015-01-17 12:58:25,891   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2015-01-17 12:58:25,891   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2015-01-17 12:58:25,891   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2015-01-17 12:58:25,893   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2015-01-17 12:58:25,893   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.115 2a02:8070:84c3:6000:20c:29ff:fe1b:e41%2 21212,21211,8080 [SELF]
2015-01-17 12:58:25,903   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2015-01-17 12:58:25,903   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2015-01-17 12:58:26,172   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2015-01-17 12:58:26,219   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2015-01-17 12:58:26,176   INFO  [Thread-9] HOST: Logging config info
2015-01-17 12:58:26,580   INFO  [Thread-10] CONSOLE: Server completed initialization.
2015-01-17 13:03:02,364   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 2615 milliseconds late in updating the estimated time
2015-01-17 17:16:34,395   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-01-17 17:16:34,429   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-01-17 17:16:34,538   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2015-01-17 17:16:34,539   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2015-01-17 17:16:34,555   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2015-01-17 17:16:34,556   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2015-01-17 17:16:34,557   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2015-01-17 17:16:34,558   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2015-01-17 17:16:34,565   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2015-01-17 17:16:34,565   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2015-01-17 17:16:34,566   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2015-01-17 17:16:34,567   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2015-01-17 17:16:34,567   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2015-01-17 17:16:34,568   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2015-01-17 17:16:34,569   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2015-01-17 17:16:34,570   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2015-01-17 17:16:34,570   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2015-01-17 17:16:34,571   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2015-01-17 17:16:34,572   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2015-01-17 17:16:34,572   INFO  [main] COMPILER: [null]: Created index: CHCOMB on table: CHECK of type: BALANCED_TREE
2015-01-17 17:16:34,572   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2015-01-17 17:16:34,573   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2015-01-17 17:16:34,573   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2015-01-17 17:16:34,573   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2015-01-17 17:16:34,574   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2015-01-17 17:16:34,576   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2015-01-17 17:16:34,576   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2015-01-17 17:16:34,576   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: MULTICHECK of type: BALANCED_TREE
2015-01-17 17:16:34,577   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-01-17 17:16:34,577   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-01-17 17:16:34,577   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10100_10101 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-01-17 17:16:34,578   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 17:16:34,578   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 17:16:34,578   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10106_10107 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 17:16:34,579   INFO  [main] COMPILER: [null]: Created index: CPOWNID on table: CHECKPATH of type: BALANCED_TREE
2015-01-17 17:16:34,579   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: CHECKPATH of type: BALANCED_TREE
2015-01-17 17:16:34,580   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-01-17 17:16:34,580   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-01-17 17:16:34,580   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-01-17 17:16:34,581   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 17:16:34,581   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10119_10120 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-01-17 17:16:34,582   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2015-01-17 17:16:34,582   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2015-01-17 17:16:34,582   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10124_10125 on table: ACTION of type: BALANCED_TREE
2015-01-17 17:16:34,584   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-01-17 17:16:34,584   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10129_10130 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-01-17 17:16:34,584   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ITEMCOST of type: BALANCED_TREE
2015-01-17 17:16:34,585   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: PLAN of type: BALANCED_TREE
2015-01-17 17:16:34,585   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10138_10139 on table: UNPROVISIONED_ENDPOINT of type: BALANCED_TREE
2015-01-17 17:16:34,586   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10142_10143 on table: VENDOR of type: BALANCED_TREE
2015-01-17 17:16:34,626   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-01-17 17:16:34,906   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:34,938   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:34,943   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:34,951   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2015-01-17 17:16:34,955   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-01-17 17:16:34,962   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-01-17 17:16:34,967   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-01-17 17:16:34,974   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?, ?);
2015-01-17 17:16:34,976   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-01-17 17:16:34,979   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-01-17 17:16:34,981   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ?, OWNERID = ? WHERE (CHECKPATHID = ?);
2015-01-17 17:16:34,985   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2015-01-17 17:16:34,986   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:34,990   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:34,994   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:34,998   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2015-01-17 17:16:35,000   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,003   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,006   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,015   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2015-01-17 17:16:35,017   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,021   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,023   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,027   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?, ?);
2015-01-17 17:16:35,030   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2015-01-17 17:16:35,033   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ?, ENDPOINTPROVDATE = ? WHERE (ENDPOINTID = ?);
2015-01-17 17:16:35,036   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2015-01-17 17:16:35,038   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2015-01-17 17:16:35,041   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2015-01-17 17:16:35,044   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2015-01-17 17:16:35,046   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2015-01-17 17:16:35,049   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2015-01-17 17:16:35,052   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?, ?, ?);
2015-01-17 17:16:35,054   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-01-17 17:16:35,057   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-01-17 17:16:35,059   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ? WHERE (ENDPOINTCLASSID = ?);
2015-01-17 17:16:35,061   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2015-01-17 17:16:35,063   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-01-17 17:16:35,067   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-01-17 17:16:35,069   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-01-17 17:16:35,072   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2015-01-17 17:16:35,074   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2015-01-17 17:16:35,076   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2015-01-17 17:16:35,079   INFO  [main] COMPILER: [ITEMCOST.insert]: Compiling Statement: INSERT INTO ITEMCOST VALUES (?, ?, ?, ?);
2015-01-17 17:16:35,085   INFO  [main] COMPILER: [ITEMCOST.delete]: Compiling Statement: DELETE FROM ITEMCOST WHERE (ITEMID = ?) AND (PLANID = ?);
2015-01-17 17:16:35,088   INFO  [main] COMPILER: [ITEMCOST.update]: Compiling Statement: UPDATE ITEMCOST SET ITEMID = ?, PLANID = ?, DESCRIPTION = ?, COST = ? WHERE (ITEMID = ?) AND (PLANID = ?);
2015-01-17 17:16:35,092   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2015-01-17 17:16:35,093   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2015-01-17 17:16:35,096   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2015-01-17 17:16:35,098   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2015-01-17 17:16:35,101   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2015-01-17 17:16:35,103   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-01-17 17:16:35,106   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-01-17 17:16:35,108   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-01-17 17:16:35,111   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2015-01-17 17:16:35,112   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2015-01-17 17:16:35,114   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2015-01-17 17:16:35,117   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2015-01-17 17:16:35,120   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,124   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,126   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,129   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2015-01-17 17:16:35,131   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,134   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,136   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,143   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2015-01-17 17:16:35,144   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,147   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,149   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,152   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-01-17 17:16:35,154   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,157   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,159   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-01-17 17:16:35,162   INFO  [main] COMPILER: [PLAN.insert]: Compiling Statement: INSERT INTO PLAN VALUES (?, ?);
2015-01-17 17:16:35,182   INFO  [main] COMPILER: [PLAN.delete]: Compiling Statement: DELETE FROM PLAN WHERE (PLANID = ?);
2015-01-17 17:16:35,186   INFO  [main] COMPILER: [PLAN.update]: Compiling Statement: UPDATE PLAN SET PLANID = ?, DESCRIPTION = ? WHERE (PLANID = ?);
2015-01-17 17:16:35,191   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-01-17 17:16:35,195   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2015-01-17 17:16:35,198   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2015-01-17 17:16:35,201   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2015-01-17 17:16:35,202   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2015-01-17 17:16:35,204   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2015-01-17 17:16:35,207   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2015-01-17 17:16:35,208   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2015-01-17 17:16:35,210   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2015-01-17 17:16:35,212   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2015-01-17 17:16:35,214   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2015-01-17 17:16:35,215   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-01-17 17:16:35,217   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-01-17 17:16:35,219   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-01-17 17:16:35,221   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.insert]: Compiling Statement: INSERT INTO UNPROVISIONED_ENDPOINT VALUES (?, ?, ?, ?);
2015-01-17 17:16:35,227   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.delete]: Compiling Statement: DELETE FROM UNPROVISIONED_ENDPOINT WHERE (UEPID = ?);
2015-01-17 17:16:35,229   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.update]: Compiling Statement: UPDATE UNPROVISIONED_ENDPOINT SET UEPID = ?, IDENTIFIER = ?, ENDPOINTCLASSID = ?, TIME_STAMP = ? WHERE (UEPID = ?);
2015-01-17 17:16:35,236   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?, ?);
2015-01-17 17:16:35,237   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2015-01-17 17:16:35,240   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2015-01-17 17:16:35,247   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ?, PLANID = ? WHERE (USERID = ?);
2015-01-17 17:16:35,256   INFO  [main] COMPILER: [VENDOR.insert]: Compiling Statement: INSERT INTO VENDOR VALUES (?, ?, ?);
2015-01-17 17:16:35,257   INFO  [main] COMPILER: [VENDOR.select]: Compiling Statement: SELECT * FROM VENDOR WHERE (VENDORID = ?);
2015-01-17 17:16:35,259   INFO  [main] COMPILER: [VENDOR.delete]: Compiling Statement: DELETE FROM VENDOR WHERE (VENDORID = ?);
2015-01-17 17:16:35,261   INFO  [main] COMPILER: [VENDOR.update]: Compiling Statement: UPDATE VENDOR SET VENDORID = ?, VENDORNAME = ?, VENDORIMAGEURL = ? WHERE (VENDORID = ?);
2015-01-17 17:16:35,391   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2015-01-17 17:16:35,401   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,410   INFO  [main] COMPILER: [UI_SelectSpheresForUser.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;
2015-01-17 17:16:35,422   WARN  [main] COMPILER: [UI_SelectSpheresForUser.class]: Procedure UI_SelectSpheresForUser has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,426   INFO  [main] COMPILER: [UI_SelectActionsForCheckpathID.class]: Compiling Statement: SELECT ACTIONID, TARGETENDPOINTID, CHECKPATHNAME FROM ACTION JOIN CHECKPATH ON CHECKPATH.CHECKPATHID = ACTION.CHECKPATHID WHERE ACTION.CHECKPATHID = ? ORDER BY ACTIONID;
2015-01-17 17:16:35,443   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-01-17 17:16:35,453   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 17:16:35,455   INFO  [main] COMPILER: [UI_SelectAllVendors.class]: Compiling Statement: SELECT * FROM VENDOR ORDER BY VENDORNAME;
2015-01-17 17:16:35,463   WARN  [main] COMPILER: [UI_SelectAllVendors.class]: Procedure UI_SelectAllVendors has a statement with a non-deterministic result - statement: "SELECT * FROM VENDOR ORDER BY VENDORNAME;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,466   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2015-01-17 17:16:35,468   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,471   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2015-01-17 17:16:35,475   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2015-01-17 17:16:35,484   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2015-01-17 17:16:35,497   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,499   INFO  [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: Compiling Statement: UPDATE SPHERE SET PUBLIC = ? WHERE SPHEREID = ?;
2015-01-17 17:16:35,503   INFO  [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET PUBLIC = ? WHERE SPHEREID = ?;'
2015-01-17 17:16:35,505   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: UPDATE ACTION SET ACTIONNAME = ?, TARGETENDPOINTID = ?, CHECKID =?, CHECKPATHID = ? WHERE ACTIONID = ?
2015-01-17 17:16:35,508   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, '', '', ?, ?, ?)
2015-01-17 17:16:35,512   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, '', 0, ?, '', ?)
2015-01-17 17:16:35,516   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE OUTBOUNDPROPERTYACTIONID = ?
2015-01-17 17:16:35,524   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2015-01-17 17:16:35,539   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2015-01-17 17:16:35,539   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,541   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2015-01-17 17:16:35,554   INFO  [main] COMPILER: [UI_UpdateEndpointClass.class]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ?  WHERE ENDPOINTCLASSID = ?;
2015-01-17 17:16:35,560   INFO  [main] COMPILER: [UI_UpdateEndpointClass.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 3 of statement ' UPDATE ENDPOINTCLASS SET ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ?  WHERE ENDPOINTCLASSID = ?;'
2015-01-17 17:16:35,561   INFO  [main] COMPILER: [UI_SelectAllSpheresForUserID.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;
2015-01-17 17:16:35,568   WARN  [main] COMPILER: [UI_SelectAllSpheresForUserID.class]: Procedure UI_SelectAllSpheresForUserID has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,569   INFO  [main] COMPILER: [UI_SelectActionsForMulticheckID.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.MULTICHECKID = ? ORDER BY ACTION.ACTIONID;
2015-01-17 17:16:35,586   WARN  [main] COMPILER: [UI_SelectActionsForMulticheckID.class]: Procedure UI_SelectActionsForMulticheckID has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.MULTICHECKID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,587   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2015-01-17 17:16:35,593   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,598   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2015-01-17 17:16:35,601   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2015-01-17 17:16:35,609   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2015-01-17 17:16:35,612   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2015-01-17 17:16:35,617   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,621   INFO  [main] COMPILER: [UI_UpdateVendor.class]: Compiling Statement: UPDATE VENDOR SET VENDORNAME = ?, VENDORIMAGEURL = ? WHERE VENDORID = ?;
2015-01-17 17:16:35,629   INFO  [main] COMPILER: [UI_UpdateVendor.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement ' UPDATE VENDOR SET VENDORNAME = ?, VENDORIMAGEURL = ? WHERE VENDORID = ?;'
2015-01-17 17:16:35,631   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2015-01-17 17:16:35,633   INFO  [main] COMPILER: [UI_SelectSphereForSphereID.class]: Compiling Statement: SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;
2015-01-17 17:16:35,642   INFO  [main] COMPILER: [UI_SelectSphereForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;'
2015-01-17 17:16:35,642   WARN  [main] COMPILER: [UI_SelectSphereForSphereID.class]: Procedure UI_SelectSphereForSphereID has a statement with a non-deterministic result - statement: "SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,643   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2015-01-17 17:16:35,647   INFO  [main] COMPILER: [UI_SelectUnprovisionedEPforIdentifier.class]: Compiling Statement: select UEPID, IDENTIFIER, ENDPOINTCLASSNAME, ENDPOINTCLASSID, TIME_STAMP from UNPROVISIONED_ENDPOINT JOIN ENDPOINTCLASS ON UNPROVISIONED_ENDPOINT.ENDPOINTCLASSID = ENDPOINTCLASS.ENDPOINTCLASSID WHERE IDENTIFIER = ?;
2015-01-17 17:16:35,655   WARN  [main] COMPILER: [UI_SelectUnprovisionedEPforIdentifier.class]: Procedure UI_SelectUnprovisionedEPforIdentifier has a statement with a non-deterministic result - statement: "select UEPID, IDENTIFIER, ENDPOINTCLASSNAME, ENDPOINTCLASSID, TIME_STAMP from UNPROVISIONED_ENDPOINT JOIN ENDPOINTCLASS ON UNPROVISIONED_ENDPOINT.ENDPOINTCLASSID = ENDPOINTCLASS.ENDPOINTCLASSID WHERE IDENTIFIER = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 17:16:35,657   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2015-01-17 17:16:35,659   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,660   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2015-01-17 17:16:35,664   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2015-01-17 17:16:35,668   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2015-01-17 17:16:35,670   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2015-01-17 17:16:35,671   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2015-01-17 17:16:35,674   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2015-01-17 17:16:35,679   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2015-01-17 17:16:35,683   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2015-01-17 17:16:35,707   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2015-01-17 17:16:35,707   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 17:16:35,710   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2015-01-17 17:16:35,715   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2015-01-17 17:16:35,717   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2015-01-17 17:16:35,718   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2015-01-17 17:16:35,722   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE ACTIONID = ?;
2015-01-17 17:16:35,725   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ?;
2015-01-17 17:16:35,728   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: DELETE FROM ACTION WHERE ACTIONID = ?;
2015-01-17 17:16:35,736   WARN  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Procedure UI_DeleteAllActionsForCheckID is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT ACTIONID FROM ACTION WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 17:16:35,739   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2015-01-17 17:16:35,776   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,777   INFO  [main] COMPILER: [UI_SelectActionsForCheckID.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.CHECKID = ? ORDER BY ACTION.ACTIONID;
2015-01-17 17:16:35,782   WARN  [main] COMPILER: [UI_SelectActionsForCheckID.class]: Procedure UI_SelectActionsForCheckID has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.CHECKID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,784   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForPropertyID.class]: Compiling Statement: select * from property WHERE propertyid = ? ORDER BY propertyid;
2015-01-17 17:16:35,793   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2015-01-17 17:16:35,796   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 17:16:35,798   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2015-01-17 17:16:35,800   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2015-01-17 17:16:35,804   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2015-01-17 17:16:35,808   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2015-01-17 17:16:35,811   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2015-01-17 17:16:35,813   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 17:16:35,814   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2015-01-17 17:16:35,821   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2015-01-17 17:16:35,821   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: index scan may provide insufficient ordering
2015-01-17 17:16:35,823   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2015-01-17 17:16:35,826   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2015-01-17 17:16:35,829   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH WHERE OWNERID = ? ORDER BY CHECKPATHNAME;
2015-01-17 17:16:35,831   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH WHERE OWNERID = ? ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,832   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2015-01-17 17:16:35,834   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2015-01-17 17:16:35,835   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2015-01-17 17:16:35,837   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 17:16:35,838   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-01-17 17:16:35,840   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2015-01-17 17:16:35,842   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 17:16:35,844   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2015-01-17 17:16:35,851   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,853   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2015-01-17 17:16:35,856   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2015-01-17 17:16:35,860   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2015-01-17 17:16:35,862   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE ACTIONID = ?;
2015-01-17 17:16:35,864   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ?;
2015-01-17 17:16:35,867   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: DELETE FROM ACTION WHERE ACTIONID = ?;
2015-01-17 17:16:35,869   WARN  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Procedure UI_DeleteAllActionsForMulticheckID is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 17:16:35,871   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2015-01-17 17:16:35,872   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,873   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2015-01-17 17:16:35,875   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 17:16:35,876   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2015-01-17 17:16:35,880   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2015-01-17 17:16:35,881   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 17:16:35,883   INFO  [main] COMPILER: [UI_SelectVendorForVendorID.class]: Compiling Statement: SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;
2015-01-17 17:16:35,886   INFO  [main] COMPILER: [UI_SelectVendorForVendorID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;'
2015-01-17 17:16:35,886   WARN  [main] COMPILER: [UI_SelectVendorForVendorID.class]: Procedure UI_SelectVendorForVendorID has a statement with a non-deterministic result - statement: "SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,888   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2015-01-17 17:16:35,891   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: UPDATE ACTION SET ACTIONNAME = ?, TARGETENDPOINTID = ?, MULTICHECKID =?, CHECKPATHID = ? WHERE ACTIONID = ?
2015-01-17 17:16:35,899   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, '', '', ?, ?, ?)
2015-01-17 17:16:35,904   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, '', 0, '', ?, ?)
2015-01-17 17:16:35,910   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE OUTBOUNDPROPERTYACTIONID = ?
2015-01-17 17:16:35,914   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2015-01-17 17:16:35,917   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2015-01-17 17:16:35,920   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2015-01-17 17:16:35,923   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKVALUE, CHECKPATHID;
2015-01-17 17:16:35,933   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKVALUE, CHECKPATHID;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,945   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2015-01-17 17:16:35,966   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2015-01-17 17:16:35,968   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2015-01-17 17:16:35,985   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2015-01-17 17:16:35,989   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2015-01-17 17:16:35,991   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2015-01-17 17:16:35,997   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2015-01-17 17:16:35,999   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2015-01-17 17:16:36,003   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2015-01-17 17:16:36,005   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2015-01-17 17:16:36,006   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID, ENDPOINTPROVDATE FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2015-01-17 17:16:36,009   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID, ENDPOINTPROVDATE FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2015-01-17 17:16:36,010   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2015-01-17 17:16:36,017   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2015-01-17 17:16:36,019   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2015-01-17 17:16:36,021   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2015-01-17 17:16:36,021   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2015-01-17 17:16:36,023   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2015-01-17 17:16:36,026   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2015-01-17 17:16:36,028   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2015-01-17 17:16:36,041   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2015-01-17 17:16:36,043   INFO  [main] COMPILER: [UI_UpdatePropertyClass.class]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE PROPERTYCLASSID = ?;
2015-01-17 16:16:37,422   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2015-01-17 16:16:37,460   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2015-01-17 16:16:37,500   INFO  [main] NETWORK: Default network thread count: 2
2015-01-17 16:16:37,584   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2015-01-17 16:16:37,584   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2015-01-17 16:16:37,607   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2015-01-17 16:16:37,659   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2015-01-17 16:16:37,682   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2015-01-17 16:16:37,843   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2015-01-17 16:16:37,858   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2015-01-17 16:16:37,881   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:42850
2015-01-17 16:16:37,883   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2015-01-17 16:16:37,887   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:42850
2015-01-17 16:16:37,909   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x19e30466ff800000 with negotiated timeout 6000 for client /127.0.0.1:42850
2015-01-17 16:16:37,909   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x19e30466ff800000, negotiated timeout = 6000
2015-01-17 16:16:37,972   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2015-01-17 16:16:37,993   INFO  [main] HOST: Host id of this node is: 0
2015-01-17 16:16:37,993   INFO  [main] CONSOLE: Host id of this node is: 0
2015-01-17 16:16:38,060   INFO  [main] HOST: URL of deployment: deployment.xml
2015-01-17 16:16:38,580   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2015-01-17 16:16:40,984   INFO  [main] EXPORT: System is not using any export functionality.
2015-01-17 16:16:40,989   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2015-01-17 16:16:41,222   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2015-01-17 16:16:41,567   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2015-01-17 16:16:41,573   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2015-01-17 16:16:43,665   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2015-01-17 16:16:43,703   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2015-01-17 16:16:43,717   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2015-01-17 16:16:43,726   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2015-01-17 16:16:43,729   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2015-01-17 16:16:43,744   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2015-01-17 16:16:43,749   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2015-01-17 16:16:43,767   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 39 ms.
2015-01-17 16:16:43,767   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 19 ms.
2015-01-17 16:16:43,767   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 52 ms.
2015-01-17 16:16:43,782   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-17 16:16:43,782   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-17 16:16:43,782   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-17 16:16:43,799   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2015-01-17 16:16:43,801   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 18 ms.
2015-01-17 16:16:43,809   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-01-17 16:16:43,867   INFO  [main] HOST: Database start action is Create.
2015-01-17 16:16:44,141   INFO  [main] HOST: PID of this Volt process is 10651
2015-01-17 16:16:44,142   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2015-01-17 16:16:44,142   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2015-01-17 16:16:44,142   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2015-01-17 16:16:44,142   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2015-01-17 16:16:44,142   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2015-01-17 16:16:44,142   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2015-01-17 16:16:44,142   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2015-01-17 16:16:44,142   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 664 MB.
2015-01-17 16:16:44,143   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2015-01-17 16:16:44,143   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2015-01-17 16:16:44,143   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2015-01-17 16:16:44,143   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2015-01-17 16:16:44,143   INFO  [main] HOST: No schedule set for automated snapshots.
2015-01-17 16:16:44,143   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2015-01-17 16:16:44,143   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2015-01-17 16:16:44,143   INFO  [main] HOST: CPU DESC:         Intel(R) Xeon(R) CPU E31220 @ 3.10GHz 8192 KB cache
2015-01-17 16:16:44,143   INFO  [main] HOST: HOST MEMORY (MB): 1873
2015-01-17 16:16:44,143   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-431.29.2.el6.x86_64 amd64 en_US
2015-01-17 16:16:44,144   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2015-01-17 16:16:44,144   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2015-01-17 16:16:44,144   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2015-01-17 16:16:44,144   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2015-01-17 16:16:44,145   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.115 2a02:8070:84c3:6000:20c:29ff:fe1b:e41%2 21212,21211,8080 [SELF]
2015-01-17 16:16:44,145   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2015-01-17 16:16:44,145   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2015-01-17 16:16:44,173   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2015-01-17 16:16:44,174   INFO  [Thread-9] HOST: Logging config info
2015-01-17 16:16:44,175   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2015-01-17 16:16:44,215   INFO  [Thread-10] CONSOLE: Server completed initialization.
