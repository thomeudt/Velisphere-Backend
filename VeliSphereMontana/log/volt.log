2015-03-19 20:28:19,582   INFO  [Estimated Time Updater] HOST: 22217 estimated time update.
2015-03-19 20:28:23,807   INFO  [Estimated Time Updater] HOST: 82784832 estimated time update.
2015-03-19 20:34:23,997   WARN  [qtp229487066-2892] HOST: JSON interface exception: No connections.
2015-03-19 20:36:38,015   WARN  [Thread-0] CONSOLE: The VoltDB server will shut down due to a control-C or other JVM exit.
2015-03-19 21:38:22,668   INFO  [main] COMPILER: [null]: Created index: IDXTSTAMP on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-03-19 21:38:22,668   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINTPROPERTYLOG_ENTRYID_ENDPOINTID on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2015-03-19 21:38:22,777   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_USER_USERID on table: USER of type: BALANCED_TREE
2015-03-19 21:38:22,778   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINT_USER_LINK_LINKID on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2015-03-19 21:38:22,787   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINT_SPHERE_LINK_LINKID on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2015-03-19 21:38:22,789   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_SPHERE_USER_LINK_LINKID_SPHEREID on table: SPHERE_USER_LINK of type: BALANCED_TREE
2015-03-19 21:38:22,789   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_SPHERE_SPHEREID on table: SPHERE of type: BALANCED_TREE
2015-03-19 21:38:22,790   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINTCLASS_ENDPOINTCLASSID on table: ENDPOINTCLASS of type: BALANCED_TREE
2015-03-19 21:38:22,791   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2015-03-19 21:38:22,791   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ENDPOINT_ENDPOINTID on table: ENDPOINT of type: BALANCED_TREE
2015-03-19 21:38:22,792   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2015-03-19 21:38:22,793   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2015-03-19 21:38:22,793   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_PROPERTY_PROPERTYID on table: PROPERTY of type: BALANCED_TREE
2015-03-19 21:38:22,794   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_PROPERTYCLASS_PROPERTYCLASSID on table: PROPERTYCLASS of type: BALANCED_TREE
2015-03-19 21:38:22,795   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MESSAGE_ENDPOINT_LINK_LINKID_ENDPOINTID on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2015-03-19 21:38:22,796   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MESSAGE_MESSAGEID on table: MESSAGE of type: BALANCED_TREE
2015-03-19 21:38:22,796   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MESSAGE_EXPRESSION_LINK_LINKID on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2015-03-19 21:38:22,797   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_EXPRESSION_EXPRESSIONID on table: EXPRESSION of type: BALANCED_TREE
2015-03-19 21:38:22,798   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2015-03-19 21:38:22,798   INFO  [main] COMPILER: [null]: Created index: CHCOMB on table: CHECK of type: BALANCED_TREE
2015-03-19 21:38:22,798   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2015-03-19 21:38:22,798   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2015-03-19 21:38:22,798   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2015-03-19 21:38:22,798   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECK_CHECKID_CHECKPATHID_ENDPOINTID on table: CHECK of type: BALANCED_TREE
2015-03-19 21:38:22,802   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECKSTATE_CHECKID_CHECKPATHID on table: CHECKSTATE of type: BALANCED_TREE
2015-03-19 21:38:22,804   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2015-03-19 21:38:22,804   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2015-03-19 21:38:22,804   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MULTICHECK_MULTICHECKID_CHECKPATHID on table: MULTICHECK of type: BALANCED_TREE
2015-03-19 21:38:22,805   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-03-19 21:38:22,805   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-03-19 21:38:22,805   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MULTICHECK_CHECK_LINK_LINKID_CHECKPATHID on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2015-03-19 21:38:22,806   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-19 21:38:22,806   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-19 21:38:22,806   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_MULTICHECK_MULTICHECK_LINK_LINKID_CHECKPATHID on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-19 21:38:22,807   INFO  [main] COMPILER: [null]: Created index: CPOWNID on table: CHECKPATH of type: BALANCED_TREE
2015-03-19 21:38:22,807   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECKPATH_CHECKPATHID on table: CHECKPATH of type: BALANCED_TREE
2015-03-19 21:38:22,808   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-03-19 21:38:22,808   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-03-19 21:38:22,808   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECKPATH_CHECK_LINK_LINKID_CHECKPATHID on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2015-03-19 21:38:22,809   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-19 21:38:22,809   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_CHECKPATH_MULTICHECK_LINK_LINKID_CHECKPATHID on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2015-03-19 21:38:22,810   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: ACTION of type: BALANCED_TREE
2015-03-19 21:38:22,810   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: ACTION of type: BALANCED_TREE
2015-03-19 21:38:22,810   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ACTION_ACTIONID_CHECKPATHID on table: ACTION of type: BALANCED_TREE
2015-03-19 21:38:22,811   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-03-19 21:38:22,812   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_OUTBOUNDPROPERTYACTION_OUTBOUNDPROPERTYACTIONID_CHECKPATHID on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2015-03-19 21:38:22,812   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_ITEMCOST_ITEMID_PLANID on table: ITEMCOST of type: BALANCED_TREE
2015-03-19 21:38:22,813   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_PLAN_PLANID on table: PLAN of type: BALANCED_TREE
2015-03-19 21:38:22,813   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_UNPROVISIONED_ENDPOINT_UEPID on table: UNPROVISIONED_ENDPOINT of type: BALANCED_TREE
2015-03-19 21:38:22,814   INFO  [main] COMPILER: [null]: Created index: VOLTDB_AUTOGEN_IDX_PK_VENDOR_VENDORID on table: VENDOR of type: BALANCED_TREE
2015-03-19 21:38:22,853   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-19 21:38:23,176   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:23,272   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:23,314   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (ACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:23,327   INFO  [main] COMPILER: [ACTION.upsert]: Compiling Statement: UPSERT INTO ACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-19 21:38:23,334   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2015-03-19 21:38:23,337   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-03-19 21:38:23,359   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-03-19 21:38:23,364   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2015-03-19 21:38:23,371   INFO  [main] COMPILER: [CHECK.upsert]: Compiling Statement: UPSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2015-03-19 21:38:23,374   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?, ?);
2015-03-19 21:38:23,481   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-03-19 21:38:23,489   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2015-03-19 21:38:23,492   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ?, OWNERID = ? WHERE (CHECKPATHID = ?);
2015-03-19 21:38:23,495   INFO  [main] COMPILER: [CHECKPATH.upsert]: Compiling Statement: UPSERT INTO CHECKPATH VALUES (?, ?, ?, ?);
2015-03-19 21:38:23,590   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2015-03-19 21:38:23,647   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:23,653   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:23,660   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:23,666   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.upsert]: Compiling Statement: UPSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2015-03-19 21:38:23,674   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2015-03-19 21:38:23,676   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:23,681   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:23,690   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:23,724   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.upsert]: Compiling Statement: UPSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2015-03-19 21:38:23,746   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2015-03-19 21:38:23,749   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:23,757   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:23,760   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:23,770   INFO  [main] COMPILER: [CHECKSTATE.upsert]: Compiling Statement: UPSERT INTO CHECKSTATE VALUES (?, ?, ?);
2015-03-19 21:38:23,772   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?, ?, ?);
2015-03-19 21:38:23,778   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2015-03-19 21:38:23,781   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ?, ENDPOINTPROVDATE = ?, ENDPOINTSTATE = ? WHERE (ENDPOINTID = ?);
2015-03-19 21:38:23,786   INFO  [main] COMPILER: [ENDPOINT.upsert]: Compiling Statement: UPSERT INTO ENDPOINT VALUES (?, ?, ?, ?, ?);
2015-03-19 21:38:23,788   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?, ?, ?);
2015-03-19 21:38:23,790   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-03-19 21:38:23,802   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2015-03-19 21:38:23,805   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ? WHERE (ENDPOINTCLASSID = ?);
2015-03-19 21:38:23,808   INFO  [main] COMPILER: [ENDPOINTCLASS.upsert]: Compiling Statement: UPSERT INTO ENDPOINTCLASS VALUES (?, ?, ?, ?);
2015-03-19 21:38:23,811   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2015-03-19 21:38:23,815   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-03-19 21:38:23,819   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-03-19 21:38:23,822   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2015-03-19 21:38:23,827   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.upsert]: Compiling Statement: UPSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2015-03-19 21:38:23,830   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2015-03-19 21:38:23,832   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2015-03-19 21:38:23,835   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2015-03-19 21:38:23,839   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.upsert]: Compiling Statement: UPSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2015-03-19 21:38:23,841   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2015-03-19 21:38:23,844   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2015-03-19 21:38:23,848   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2015-03-19 21:38:23,851   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.upsert]: Compiling Statement: UPSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2015-03-19 21:38:23,853   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2015-03-19 21:38:23,856   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2015-03-19 21:38:23,859   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2015-03-19 21:38:23,864   INFO  [main] COMPILER: [EXPRESSION.upsert]: Compiling Statement: UPSERT INTO EXPRESSION VALUES (?, ?, ?);
2015-03-19 21:38:23,872   INFO  [main] COMPILER: [ITEMCOST.insert]: Compiling Statement: INSERT INTO ITEMCOST VALUES (?, ?, ?, ?);
2015-03-19 21:38:23,883   INFO  [main] COMPILER: [ITEMCOST.delete]: Compiling Statement: DELETE FROM ITEMCOST WHERE (ITEMID = ?) AND (PLANID = ?);
2015-03-19 21:38:23,887   INFO  [main] COMPILER: [ITEMCOST.update]: Compiling Statement: UPDATE ITEMCOST SET ITEMID = ?, PLANID = ?, DESCRIPTION = ?, COST = ? WHERE (ITEMID = ?) AND (PLANID = ?);
2015-03-19 21:38:23,890   INFO  [main] COMPILER: [ITEMCOST.upsert]: Compiling Statement: UPSERT INTO ITEMCOST VALUES (?, ?, ?, ?);
2015-03-19 21:38:23,892   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2015-03-19 21:38:23,894   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2015-03-19 21:38:23,897   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2015-03-19 21:38:23,899   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2015-03-19 21:38:23,902   INFO  [main] COMPILER: [MESSAGE.upsert]: Compiling Statement: UPSERT INTO MESSAGE VALUES (?, ?, ?);
2015-03-19 21:38:23,904   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2015-03-19 21:38:23,905   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-03-19 21:38:23,908   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-03-19 21:38:23,911   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2015-03-19 21:38:23,917   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.upsert]: Compiling Statement: UPSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2015-03-19 21:38:23,918   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2015-03-19 21:38:23,921   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2015-03-19 21:38:23,929   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2015-03-19 21:38:23,936   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.upsert]: Compiling Statement: UPSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2015-03-19 21:38:23,941   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2015-03-19 21:38:23,943   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:23,947   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:23,951   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:23,959   INFO  [main] COMPILER: [MULTICHECK.upsert]: Compiling Statement: UPSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2015-03-19 21:38:24,070   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2015-03-19 21:38:24,072   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:24,077   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:24,083   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:24,091   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.upsert]: Compiling Statement: UPSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2015-03-19 21:38:24,094   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2015-03-19 21:38:24,097   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:24,100   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:24,102   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:24,105   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.upsert]: Compiling Statement: UPSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2015-03-19 21:38:24,107   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-19 21:38:24,109   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:24,112   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:24,115   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CURRENTSTATEENDPOINTID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (CHECKPATHID = ?);
2015-03-19 21:38:24,119   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.upsert]: Compiling Statement: UPSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-19 21:38:24,121   INFO  [main] COMPILER: [PLAN.insert]: Compiling Statement: INSERT INTO PLAN VALUES (?, ?);
2015-03-19 21:38:24,122   INFO  [main] COMPILER: [PLAN.delete]: Compiling Statement: DELETE FROM PLAN WHERE (PLANID = ?);
2015-03-19 21:38:24,132   INFO  [main] COMPILER: [PLAN.update]: Compiling Statement: UPDATE PLAN SET PLANID = ?, DESCRIPTION = ? WHERE (PLANID = ?);
2015-03-19 21:38:24,135   INFO  [main] COMPILER: [PLAN.upsert]: Compiling Statement: UPSERT INTO PLAN VALUES (?, ?);
2015-03-19 21:38:24,140   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-19 21:38:24,144   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2015-03-19 21:38:24,149   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2015-03-19 21:38:24,159   INFO  [main] COMPILER: [PROPERTY.upsert]: Compiling Statement: UPSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2015-03-19 21:38:24,168   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2015-03-19 21:38:24,171   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2015-03-19 21:38:24,174   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2015-03-19 21:38:24,184   INFO  [main] COMPILER: [PROPERTYCLASS.upsert]: Compiling Statement: UPSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2015-03-19 21:38:24,187   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2015-03-19 21:38:24,189   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2015-03-19 21:38:24,197   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2015-03-19 21:38:24,199   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2015-03-19 21:38:24,203   INFO  [main] COMPILER: [SPHERE.upsert]: Compiling Statement: UPSERT INTO SPHERE VALUES (?, ?, ?);
2015-03-19 21:38:24,205   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2015-03-19 21:38:24,214   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-03-19 21:38:24,216   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2015-03-19 21:38:24,221   INFO  [main] COMPILER: [SPHERE_USER_LINK.upsert]: Compiling Statement: UPSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2015-03-19 21:38:24,223   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.insert]: Compiling Statement: INSERT INTO UNPROVISIONED_ENDPOINT VALUES (?, ?, ?, ?);
2015-03-19 21:38:24,230   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.delete]: Compiling Statement: DELETE FROM UNPROVISIONED_ENDPOINT WHERE (UEPID = ?);
2015-03-19 21:38:24,232   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.update]: Compiling Statement: UPDATE UNPROVISIONED_ENDPOINT SET UEPID = ?, IDENTIFIER = ?, ENDPOINTCLASSID = ?, TIME_STAMP = ? WHERE (UEPID = ?);
2015-03-19 21:38:24,241   INFO  [main] COMPILER: [UNPROVISIONED_ENDPOINT.upsert]: Compiling Statement: UPSERT INTO UNPROVISIONED_ENDPOINT VALUES (?, ?, ?, ?);
2015-03-19 21:38:24,243   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?, ?);
2015-03-19 21:38:24,245   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2015-03-19 21:38:24,249   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2015-03-19 21:38:24,251   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ?, PLANID = ? WHERE (USERID = ?);
2015-03-19 21:38:24,254   INFO  [main] COMPILER: [USER.upsert]: Compiling Statement: UPSERT INTO USER VALUES (?, ?, ?, ?, ?);
2015-03-19 21:38:24,256   INFO  [main] COMPILER: [VENDOR.insert]: Compiling Statement: INSERT INTO VENDOR VALUES (?, ?, ?);
2015-03-19 21:38:24,264   INFO  [main] COMPILER: [VENDOR.select]: Compiling Statement: SELECT * FROM VENDOR WHERE (VENDORID = ?);
2015-03-19 21:38:24,266   INFO  [main] COMPILER: [VENDOR.delete]: Compiling Statement: DELETE FROM VENDOR WHERE (VENDORID = ?);
2015-03-19 21:38:24,268   INFO  [main] COMPILER: [VENDOR.update]: Compiling Statement: UPDATE VENDOR SET VENDORID = ?, VENDORNAME = ?, VENDORIMAGEURL = ? WHERE (VENDORID = ?);
2015-03-19 21:38:24,271   INFO  [main] COMPILER: [VENDOR.upsert]: Compiling Statement: UPSERT INTO VENDOR VALUES (?, ?, ?);
2015-03-19 21:38:24,488   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2015-03-19 21:38:24,493   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,494   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,496   INFO  [main] COMPILER: [UI_SelectSpheresForUser.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;
2015-03-19 21:38:24,509   WARN  [main] COMPILER: [UI_SelectSpheresForUser.class]: Procedure UI_SelectSpheresForUser has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,509   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,511   INFO  [main] COMPILER: [UI_SelectActionsForCheckpathID.class]: Compiling Statement: SELECT ACTIONID, TARGETENDPOINTID, CHECKPATHNAME FROM ACTION JOIN CHECKPATH ON CHECKPATH.CHECKPATHID = ACTION.CHECKPATHID WHERE ACTION.CHECKPATHID = ? ORDER BY ACTIONID;
2015-03-19 21:38:24,517   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,518   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-03-19 21:38:24,528   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,528   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,529   INFO  [main] COMPILER: [UI_SelectAllVendors.class]: Compiling Statement: SELECT * FROM VENDOR ORDER BY VENDORNAME;
2015-03-19 21:38:24,532   WARN  [main] COMPILER: [UI_SelectAllVendors.class]: Procedure UI_SelectAllVendors has a statement with a non-deterministic result - statement: "SELECT * FROM VENDOR ORDER BY VENDORNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,532   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,541   INFO  [main] COMPILER: [UI_SelectPublicSpheresForUser.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID WHERE SPHERE_USER_LINK.USERID = ? AND SPHERE.PUBLIC = 1 ORDER BY SPHERENAME;
2015-03-19 21:38:24,548   WARN  [main] COMPILER: [UI_SelectPublicSpheresForUser.class]: Procedure UI_SelectPublicSpheresForUser has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID WHERE SPHERE_USER_LINK.USERID = ? AND SPHERE.PUBLIC = 1 ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,548   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,549   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2015-03-19 21:38:24,552   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,552   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,553   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2015-03-19 21:38:24,612   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,613   INFO  [main] COMPILER: [BLE_FindActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ? ORDER BY ACTIONID;
2015-03-19 21:38:24,683   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,684   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2015-03-19 21:38:24,703   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: index scan may provide insufficient ordering
2015-03-19 21:38:24,703   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,704   INFO  [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: Compiling Statement: UPDATE SPHERE SET PUBLIC = ? WHERE SPHEREID = ?;
2015-03-19 21:38:24,707   INFO  [main] COMPILER: [UI_UpdatePublicStateForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET PUBLIC = ? WHERE SPHEREID = ?;'
2015-03-19 21:38:24,707   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,709   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: UPDATE ACTION SET ACTIONNAME = ?, TARGETENDPOINTID = ?, CHECKID =?, CHECKPATHID = ? WHERE ACTIONID = ?
2015-03-19 21:38:24,712   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, '', '', ?, ?, ?)
2015-03-19 21:38:24,715   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, '', 0, ?, '', ?)
2015-03-19 21:38:24,717   INFO  [main] COMPILER: [UI_UpsertActionsForCheckID.class]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE OUTBOUNDPROPERTYACTIONID = ?
2015-03-19 21:38:24,720   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,722   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2015-03-19 21:38:24,734   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2015-03-19 21:38:24,734   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,734   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,735   INFO  [main] COMPILER: [UI_SelectUsersWithPublicSpheres.class]: Compiling Statement: SELECT USERID FROM SPHERE_USER_LINK JOIN SPHERE ON SPHERE_USER_LINK.SPHEREID = SPHERE.SPHEREID WHERE SPHERE.PUBLIC = 1 ORDER BY USERID;
2015-03-19 21:38:24,739   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,740   INFO  [main] COMPILER: [BLE_FindActionsForMultiCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ? ORDER BY ACTIONID;
2015-03-19 21:38:24,743   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,745   INFO  [main] COMPILER: [UI_UpdateEndpointClass.class]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ?  WHERE ENDPOINTCLASSID = ?;
2015-03-19 21:38:24,747   INFO  [main] COMPILER: [UI_UpdateEndpointClass.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 3 of statement ' UPDATE ENDPOINTCLASS SET ENDPOINTCLASSNAME = ?, ENDPOINTCLASSIMAGEURL = ?, VENDORID = ?  WHERE ENDPOINTCLASSID = ?;'
2015-03-19 21:38:24,747   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,748   INFO  [main] COMPILER: [UI_SelectAllSpheresForUserID.class]: Compiling Statement: SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;
2015-03-19 21:38:24,766   WARN  [main] COMPILER: [UI_SelectAllSpheresForUserID.class]: Procedure UI_SelectAllSpheresForUserID has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE JOIN SPHERE_USER_LINK ON SPHERE.SPHEREID = SPHERE_USER_LINK.SPHEREID AND SPHERE_USER_LINK.USERID = ? ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,766   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,767   INFO  [main] COMPILER: [UI_SelectActionsForMulticheckID.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.MULTICHECKID = ? ORDER BY ACTION.ACTIONID;
2015-03-19 21:38:24,773   WARN  [main] COMPILER: [UI_SelectActionsForMulticheckID.class]: Procedure UI_SelectActionsForMulticheckID has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.MULTICHECKID = ? ORDER BY ACTION.ACTIONID;", reason: index scan may provide insufficient ordering
2015-03-19 21:38:24,773   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,774   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2015-03-19 21:38:24,777   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,777   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,778   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2015-03-19 21:38:24,780   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,782   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2015-03-19 21:38:24,784   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,795   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2015-03-19 21:38:24,802   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,804   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2015-03-19 21:38:24,820   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,820   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,821   INFO  [main] COMPILER: [UI_UpdateVendor.class]: Compiling Statement: UPDATE VENDOR SET VENDORNAME = ?, VENDORIMAGEURL = ? WHERE VENDORID = ?;
2015-03-19 21:38:24,827   INFO  [main] COMPILER: [UI_UpdateVendor.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement ' UPDATE VENDOR SET VENDORNAME = ?, VENDORIMAGEURL = ? WHERE VENDORID = ?;'
2015-03-19 21:38:24,827   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,828   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2015-03-19 21:38:24,830   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,831   INFO  [main] COMPILER: [UI_SelectSphereForSphereID.class]: Compiling Statement: SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;
2015-03-19 21:38:24,834   INFO  [main] COMPILER: [UI_SelectSphereForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;'
2015-03-19 21:38:24,834   WARN  [main] COMPILER: [UI_SelectSphereForSphereID.class]: Procedure UI_SelectSphereForSphereID has a statement with a non-deterministic result - statement: "SELECT SPHERENAME, PUBLIC FROM SPHERE WHERE SPHEREID = ? ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,834   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,835   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2015-03-19 21:38:24,839   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,842   INFO  [main] COMPILER: [UI_SelectUnprovisionedEPforIdentifier.class]: Compiling Statement: select UEPID, IDENTIFIER, ENDPOINTCLASSNAME, ENDPOINTCLASSID, TIME_STAMP from UNPROVISIONED_ENDPOINT JOIN ENDPOINTCLASS ON UNPROVISIONED_ENDPOINT.ENDPOINTCLASSID = ENDPOINTCLASS.ENDPOINTCLASSID WHERE IDENTIFIER = ?;
2015-03-19 21:38:24,846   WARN  [main] COMPILER: [UI_SelectUnprovisionedEPforIdentifier.class]: Procedure UI_SelectUnprovisionedEPforIdentifier has a statement with a non-deterministic result - statement: "select UEPID, IDENTIFIER, ENDPOINTCLASSNAME, ENDPOINTCLASSID, TIME_STAMP from UNPROVISIONED_ENDPOINT JOIN ENDPOINTCLASS ON UNPROVISIONED_ENDPOINT.ENDPOINTCLASSID = ENDPOINTCLASS.ENDPOINTCLASSID WHERE IDENTIFIER = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,847   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,848   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2015-03-19 21:38:24,850   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,850   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,851   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2015-03-19 21:38:24,859   WARN  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Procedure FindMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,859   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,860   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2015-03-19 21:38:24,863   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,865   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2015-03-19 21:38:24,868   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2015-03-19 21:38:24,868   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,869   INFO  [main] COMPILER: [UI_DeleteCheckState.class]: Compiling Statement: DELETE FROM CHECKSTATE WHERE CHECKID = ?;
2015-03-19 21:38:24,871   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,873   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2015-03-19 21:38:24,876   WARN  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Procedure UI_SelectCheckForCheckID has a statement with a non-deterministic result - statement: "select checkid, name from check where checkid = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,876   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,877   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2015-03-19 21:38:24,882   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2015-03-19 21:38:24,889   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2015-03-19 21:38:24,889   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,889   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,891   INFO  [main] COMPILER: [UI_DeleteMulticheck.class]: Compiling Statement: DELETE FROM MULTICHECK WHERE MULTICHECKID = ?;
2015-03-19 21:38:24,894   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,896   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2015-03-19 21:38:24,899   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2015-03-19 21:38:24,899   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,900   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2015-03-19 21:38:24,903   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,904   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE ACTIONID = ?;
2015-03-19 21:38:24,906   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE CHECKID = ?;
2015-03-19 21:38:24,912   INFO  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Compiling Statement: DELETE FROM ACTION WHERE ACTIONID = ?;
2015-03-19 21:38:24,915   WARN  [main] COMPILER: [UI_DeleteAllActionsForCheckID.class]: Procedure UI_DeleteAllActionsForCheckID is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT ACTIONID FROM ACTION WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,915   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,920   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2015-03-19 21:38:24,939   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,939   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,941   INFO  [main] COMPILER: [UI_SelectActionsForCheckID.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.CHECKID = ? ORDER BY ACTION.ACTIONID;
2015-03-19 21:38:24,949   WARN  [main] COMPILER: [UI_SelectActionsForCheckID.class]: Procedure UI_SelectActionsForCheckID has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.ACTIONNAME, ACTION.TARGETENDPOINTID, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND ACTION.CHECKID = ? ORDER BY ACTION.ACTIONID;", reason: index scan may provide insufficient ordering
2015-03-19 21:38:24,950   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,951   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForPropertyID.class]: Compiling Statement: select * from property WHERE propertyid = ? ORDER BY propertyid;
2015-03-19 21:38:24,954   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,955   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2015-03-19 21:38:24,959   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,959   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,961   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2015-03-19 21:38:24,982   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2015-03-19 21:38:24,985   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2015-03-19 21:38:24,987   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2015-03-19 21:38:24,989   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,990   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2015-03-19 21:38:24,993   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,993   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:24,995   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2015-03-19 21:38:24,999   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2015-03-19 21:38:24,999   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:24,999   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,001   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2015-03-19 21:38:25,009   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,010   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2015-03-19 21:38:25,013   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,014   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH WHERE OWNERID = ? ORDER BY CHECKPATHNAME;
2015-03-19 21:38:25,017   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH WHERE OWNERID = ? ORDER BY CHECKPATHNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:25,018   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,019   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2015-03-19 21:38:25,022   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2015-03-19 21:38:25,022   WARN  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Procedure UI_SelectCheckpathForCheckpathID has a statement with a non-deterministic result - statement: "select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:25,022   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,023   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2015-03-19 21:38:25,026   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:25,026   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,027   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2015-03-19 21:38:25,030   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2015-03-19 21:38:25,032   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:25,045   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,046   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2015-03-19 21:38:25,049   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:25,049   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,050   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2015-03-19 21:38:25,052   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,100   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2015-03-19 21:38:25,105   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,107   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE LINKID = ?;
2015-03-19 21:38:25,109   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,110   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE ACTIONID = ?;
2015-03-19 21:38:25,112   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ?;
2015-03-19 21:38:25,114   INFO  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Compiling Statement: DELETE FROM ACTION WHERE ACTIONID = ?;
2015-03-19 21:38:25,117   WARN  [main] COMPILER: [UI_DeleteAllActionsForMulticheckID.class]: Procedure UI_DeleteAllActionsForMulticheckID is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT ACTIONID FROM ACTION WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:25,123   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,124   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2015-03-19 21:38:25,126   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:25,127   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,128   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2015-03-19 21:38:25,150   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:25,150   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,153   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2015-03-19 21:38:25,158   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,159   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2015-03-19 21:38:25,161   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:25,162   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,163   INFO  [main] COMPILER: [UI_SelectVendorForVendorID.class]: Compiling Statement: SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;
2015-03-19 21:38:25,167   INFO  [main] COMPILER: [UI_SelectVendorForVendorID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;'
2015-03-19 21:38:25,168   WARN  [main] COMPILER: [UI_SelectVendorForVendorID.class]: Procedure UI_SelectVendorForVendorID has a statement with a non-deterministic result - statement: "SELECT VENDORID, VENDORNAME, VENDORIMAGEURL FROM VENDOR WHERE VENDORID = ? ORDER BY VENDORNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:25,168   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,169   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2015-03-19 21:38:25,172   WARN  [main] COMPILER: [FindChecksForCheckID.class]: Procedure FindChecksForCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:25,172   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,173   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: UPDATE ACTION SET ACTIONNAME = ?, TARGETENDPOINTID = ?, MULTICHECKID =?, CHECKPATHID = ? WHERE ACTIONID = ?
2015-03-19 21:38:25,176   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, '', '', ?, ?, ?)
2015-03-19 21:38:25,177   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, '', 0, '', ?, ?)
2015-03-19 21:38:25,182   INFO  [main] COMPILER: [UI_UpsertActionsForMulticheckID.class]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ?, CHECKPATHID = ? WHERE OUTBOUNDPROPERTYACTIONID = ?
2015-03-19 21:38:25,185   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,186   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2015-03-19 21:38:25,189   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,190   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2015-03-19 21:38:25,193   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2015-03-19 21:38:25,195   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,197   INFO  [main] COMPILER: [UI_SelectUserForUserID.class]: Compiling Statement: SELECT USERID, USERNAME, USEREMAIL FROM USER WHERE USERID = ? ORDER BY USERNAME;
2015-03-19 21:38:25,199   INFO  [main] COMPILER: [UI_SelectUserForUserID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT USERID, USERNAME, USEREMAIL FROM USER WHERE USERID = ? ORDER BY USERNAME;'
2015-03-19 21:38:25,199   WARN  [main] COMPILER: [UI_SelectUserForUserID.class]: Procedure UI_SelectUserForUserID has a statement with a non-deterministic result - statement: "SELECT USERID, USERNAME, USEREMAIL FROM USER WHERE USERID = ? ORDER BY USERNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:25,199   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,201   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKVALUE, CHECKPATHID;
2015-03-19 21:38:25,204   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID, CHECKVALUE, CHECKPATHID;", reason: index scan may provide insufficient ordering
2015-03-19 21:38:25,204   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,207   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2015-03-19 21:38:25,232   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:25,232   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,234   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, CURRENT_TIMESTAMP);
2015-03-19 21:38:25,248   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE TIME_STAMP < TO_TIMESTAMP(Second, SINCE_EPOCH(Second,CURRENT_TIMESTAMP) - 127800) AND PROPERTYID = ?;
2015-03-19 21:38:25,316   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,319   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2015-03-19 21:38:25,323   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2015-03-19 21:38:25,327   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2015-03-19 21:38:25,329   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2015-03-19 21:38:25,331   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,332   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2015-03-19 21:38:25,335   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2015-03-19 21:38:25,335   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,336   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID, ENDPOINTPROVDATE FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2015-03-19 21:38:25,338   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,339   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2015-03-19 21:38:25,342   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2015-03-19 21:38:25,342   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,343   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2015-03-19 21:38:25,346   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2015-03-19 21:38:25,346   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME, ENDPOINTCLASSIMAGEURL, VENDORID FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:25,346   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,347   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2015-03-19 21:38:25,351   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2015-03-19 21:38:25,351   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,352   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2015-03-19 21:38:25,365   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: index scan may provide insufficient ordering
2015-03-19 21:38:25,365   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 21:38:25,367   INFO  [main] COMPILER: [UI_UpdatePropertyClass.class]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE PROPERTYCLASSID = ?;
2015-03-19 21:38:25,369   INFO  [main] org.voltdb.compiler.VoltCompiler: sun.misc.Launcher.AppClassLoader
2015-03-19 20:38:27,479   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2015-03-19 20:38:27,522   INFO  [main] CONSOLE: Build: 4.9.2 voltdb-4.9.2-0-g1469703-local Community Edition
2015-03-19 20:38:27,523   INFO  [main] HOST: Command line arguments: org.voltdb.VoltDB create catalog /home/thorsten/git/velimontana/VeliSphereMontana/catalog.jar deployment deployment.xml host localhost
2015-03-19 20:38:27,568   INFO  [main] HOST: Command line JVM arguments: -Xmx2048m -Djava.awt.headless=true -Dsun.net.inetaddr.ttl=300 -Dsun.net.inetaddr.negative.ttl=3600 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -XX:+CMSParallelRemarkEnabled -XX:+UseTLAB -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+UseCondCardMark -Dsun.rmi.dgc.server.gcInterval=9223372036854775807 -Dsun.rmi.dgc.client.gcInterval=9223372036854775807 -XX:CMSWaitDuration=120000 -XX:CMSMaxAbortablePrecleanTime=120000 -XX:+ExplicitGCInvokesConcurrent -XX:+CMSScavengeBeforeRemark -XX:+CMSClassUnloadingEnabled -XX:PermSize=64m -Dlog4j.configuration=file:///home/thorsten/voltdb-4.9.2/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.9.2/voltdb
2015-03-19 20:38:27,569   INFO  [main] HOST: Command line JVM classpath: /home/thorsten/voltdb-4.9.2/voltdb/voltdb-4.9.2.jar:/home/thorsten/voltdb-4.9.2/lib/jackson-core-asl-1.9.13.jar:/home/thorsten/voltdb-4.9.2/lib/httpasyncclient-4.0.1.jar:/home/thorsten/voltdb-4.9.2/lib/jna.jar:/home/thorsten/voltdb-4.9.2/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.9.2/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.9.2/lib/httpcore-4.3.2.jar:/home/thorsten/voltdb-4.9.2/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.9.2/lib/commons-logging-1.1.3.jar:/home/thorsten/voltdb-4.9.2/lib/kafka_2.8.0-0.8.1.jar:/home/thorsten/voltdb-4.9.2/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.9.2/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.9.2/lib/commons-codec-1.6.jar:/home/thorsten/voltdb-4.9.2/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.9.2/lib/avro-1.7.7.jar:/home/thorsten/voltdb-4.9.2/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.9.2/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.9.2/lib/scala-library.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.9.2/lib/jsch-0.1.51.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/httpcore-nio-4.3.2.jar:/home/thorsten/voltdb-4.9.2/lib/jline-2.10.jar:/home/thorsten/voltdb-4.9.2/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.9.2/lib/jackson-mapper-asl-1.9.13.jar:/home/thorsten/voltdb-4.9.2/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.9.2/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/httpclient-4.3.2.jar:/home/thorsten/voltdb-4.9.2/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.9.2/lib/zmq-2.1.11.jar:/home/thorsten/voltdb-4.9.2/lib/metrics-core-2.2.0.jar
2015-03-19 20:38:27,610   INFO  [main] NETWORK: Default network thread count: 2
2015-03-19 20:38:27,692   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2015-03-19 20:38:27,692   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2015-03-19 20:38:27,699   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2015-03-19 20:38:27,791   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2015-03-19 20:38:27,834   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2015-03-19 20:38:27,948   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@1c459fc2
2015-03-19 20:38:27,954   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2015-03-19 20:38:27,957   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:39535
2015-03-19 20:38:27,959   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2015-03-19 20:38:27,961   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:39535
2015-03-19 20:38:27,985   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1a808e38bc800000, negotiated timeout = 6000
2015-03-19 20:38:27,988   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x1a808e38bc800000 with negotiated timeout 6000 for client /127.0.0.1:39535
2015-03-19 20:38:28,042   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2015-03-19 20:38:28,069   INFO  [main] HOST: Host id of this node is: 0
2015-03-19 20:38:28,069   INFO  [main] CONSOLE: Host id of this node is: 0
2015-03-19 20:38:28,177   INFO  [main] HOST: URL of deployment: deployment.xml
2015-03-19 20:38:28,795   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2015-03-19 20:38:29,260   INFO  [main] HOST: Searching for license file located /home/thorsten/git/velimontana/VeliSphereMontana/license.xml
2015-03-19 20:38:29,284   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2015-03-19 20:38:31,334   INFO  [main] EXPORT: System is not using any export functionality.
2015-03-19 20:38:31,367   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2015-03-19 20:38:31,615   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.9.2). A confirmation message will follow if the loading is successful.
2015-03-19 20:38:32,037   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.9.2.
2015-03-19 20:38:32,113   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2015-03-19 20:38:32,464   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2015-03-19 20:38:32,475   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2015-03-19 20:38:32,482   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2015-03-19 20:38:32,484   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2015-03-19 20:38:32,484   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2015-03-19 20:38:32,492   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2015-03-19 20:38:33,079   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 588 ms.
2015-03-19 20:38:33,080   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 605 ms.
2015-03-19 20:38:33,081   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 599 ms.
2015-03-19 20:38:33,089   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-03-19 20:38:33,089   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-03-19 20:38:33,090   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-03-19 20:38:33,101   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2015-03-19 20:38:33,103   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 13 ms.
2015-03-19 20:38:33,115   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2015-03-19 20:38:33,170   INFO  [main] HOST: Database start action is Create.
2015-03-19 20:38:33,347   INFO  [main] HOST: PID of this Volt process is 9008
2015-03-19 20:38:33,347   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2015-03-19 20:38:33,347   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2015-03-19 20:38:33,347   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2015-03-19 20:38:33,347   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2015-03-19 20:38:33,347   INFO  [main] HOST: Maximum usable Java heap set to 2031 mb.
2015-03-19 20:38:33,347   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 664 MB.
2015-03-19 20:38:33,348   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2015-03-19 20:38:33,348   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2015-03-19 20:38:33,348   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2015-03-19 20:38:33,348   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2015-03-19 20:38:33,348   INFO  [main] HOST: No schedule set for automated snapshots.
2015-03-19 20:38:33,348   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2015-03-19 20:38:33,348   INFO  [main] HOST: CPU INFO:         2 Cores, 2 Sockets, 2 Hardware Threads
2015-03-19 20:38:33,348   INFO  [main] HOST: CPU DESC:         Intel(R) Xeon(R) CPU E31220 @ 3.10GHz 8192 KB cache
2015-03-19 20:38:33,348   INFO  [main] HOST: HOST MEMORY (MB): 1873
2015-03-19 20:38:33,348   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-504.3.3.el6.x86_64 amd64 en_US
2015-03-19 20:38:33,348   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2015-03-19 20:38:33,348   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2015-03-19 20:38:33,348   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2015-03-19 20:38:33,359   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2015-03-19 20:38:33,359   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.84 2a02:8070:8480:5100:20c:29ff:fe1b:e41%2 21212,21211,8080 [SELF]
2015-03-19 20:38:33,360   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2015-03-19 20:38:33,360   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2015-03-19 20:38:33,384   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2015-03-19 20:38:33,388   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2015-03-19 20:38:33,404   INFO  [Thread-9] HOST: Logging config info
2015-03-19 20:38:33,605   INFO  [Thread-10] CONSOLE: Server completed initialization.
2015-03-19 20:38:40,596   WARN  [Thread-0] CONSOLE: The VoltDB server will shut down due to a control-C or other JVM exit.
