2014-02-27 00:00:30,001   INFO  [Periodic Work] HOST: Host id of this node is: 0
2014-02-27 00:00:30,005   INFO  [Periodic Work] HOST: URL of deployment info: deployment.xml
2014-02-27 00:00:30,005   INFO  [Periodic Work] HOST: Database start action is Create.
2014-02-27 00:00:30,005   INFO  [Periodic Work] HOST: PID of this Volt process is 46371
2014-02-27 00:00:30,005   INFO  [Periodic Work] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 00:00:30,005   INFO  [Periodic Work] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 00:00:30,005   INFO  [Periodic Work] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 00:00:30,005   INFO  [Periodic Work] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 00:00:30,006   INFO  [Periodic Work] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 00:00:30,006   INFO  [Periodic Work] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 00:00:30,006   INFO  [Periodic Work] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 00:00:30,006   INFO  [Periodic Work] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 00:00:30,006   INFO  [Periodic Work] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 00:00:30,006   INFO  [Periodic Work] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 00:00:30,006   INFO  [Periodic Work] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 00:00:30,006   INFO  [Periodic Work] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 00:00:30,006   INFO  [Periodic Work] HOST: No schedule set for automated snapshots.
2014-02-27 00:00:30,006   INFO  [Periodic Work] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 00:00:30,007   INFO  [Periodic Work] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 00:00:30,007   INFO  [Periodic Work] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 00:00:30,007   INFO  [Periodic Work] HOST: HOST MEMORY (MB): 2703
2014-02-27 00:00:30,007   INFO  [Periodic Work] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 00:00:30,007   INFO  [Periodic Work] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 00:00:30,007   INFO  [Periodic Work] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 00:00:30,007   INFO  [Periodic Work] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 00:00:30,007   INFO  [Periodic Work] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 00:00:30,007   INFO  [Periodic Work] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-26 22:41:24,872   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-26 22:41:24,916   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-26 22:41:24,916   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-26 22:41:24,920   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,920   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,921   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,921   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-26 22:41:24,927   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-26 22:41:24,928   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 22:41:24,928   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 22:41:24,929   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 22:41:24,929   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 22:41:24,930   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-26 22:41:24,932   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-26 22:41:24,933   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,933   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-26 22:41:24,934   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,934   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-26 22:41:24,936   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-26 22:41:24,936   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-26 22:41:24,936   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-26 22:41:24,936   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-26 22:41:24,937   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-26 22:41:24,937   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,938   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 22:41:24,938   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 22:41:24,938   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-26 22:41:24,938   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 22:41:24,939   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 22:41:24,939   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 22:41:24,939   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,939   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,939   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,940   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,940   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,940   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,940   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-26 22:41:24,940   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,941   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,941   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,941   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,941   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,942   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-26 22:41:24,942   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 22:41:24,942   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 22:41:24,943   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,943   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 22:41:24,959   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-26 22:41:25,039   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 22:41:25,055   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 22:41:25,060   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-26 22:41:25,072   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 22:41:25,080   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:41:25,109   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:41:25,142   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:41:25,339   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-26 22:41:25,392   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 22:41:25,466   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 22:41:25,476   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-26 22:41:25,485   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-26 22:41:25,490   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:41:25,497   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:41:25,505   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:41:25,511   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 22:41:25,513   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:41:25,518   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:41:25,521   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:41:25,527   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-26 22:41:25,555   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-26 22:41:25,563   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-26 22:41:25,567   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-26 22:41:25,571   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-26 22:41:25,575   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-26 22:41:25,579   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-26 22:41:25,582   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-26 22:41:25,586   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-26 22:41:25,590   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-26 22:41:25,593   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 22:41:25,596   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 22:41:25,598   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-26 22:41:25,601   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 22:41:25,604   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:41:25,608   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:41:25,611   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:41:25,615   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-26 22:41:25,618   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-26 22:41:25,624   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-26 22:41:25,628   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-26 22:41:25,631   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 22:41:25,638   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 22:41:25,641   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 22:41:25,646   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-26 22:41:25,648   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 22:41:25,652   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 22:41:25,654   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-26 22:41:25,657   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-26 22:41:25,660   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:41:25,664   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:41:25,666   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:41:25,670   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-26 22:41:25,673   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-26 22:41:25,676   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-26 22:41:25,681   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 22:41:25,684   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:41:25,687   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:41:25,707   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:41:25,711   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 22:41:25,713   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:41:25,717   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:41:25,721   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:41:25,727   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 22:41:25,729   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:41:25,733   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:41:25,736   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:41:25,739   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 22:41:25,742   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 22:41:25,746   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 22:41:25,750   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 22:41:25,754   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 22:41:25,759   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-26 22:41:25,766   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-26 22:41:25,770   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-26 22:41:25,772   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-26 22:41:25,776   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-26 22:41:25,780   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-26 22:41:25,781   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-26 22:41:25,784   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-26 22:41:25,786   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-26 22:41:25,791   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-26 22:41:25,793   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:41:25,796   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:41:25,798   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:41:25,808   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 22:41:25,810   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:41:25,813   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:41:25,815   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:41:25,818   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-26 22:41:25,820   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 22:41:25,831   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 22:41:25,834   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-26 22:41:25,836   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-26 22:41:25,838   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 22:41:25,841   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 22:41:25,843   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 22:41:25,846   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-26 22:41:25,848   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-26 22:41:25,851   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-26 22:41:25,853   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-26 22:41:25,923   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-26 22:41:25,929   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 22:41:25,932   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-26 22:41:25,937   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 22:41:25,940   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:41:25,942   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-26 22:41:25,945   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-26 22:41:25,946   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-26 22:41:25,950   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-26 22:41:25,959   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-26 22:41:25,960   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-26 22:41:25,963   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:41:25,965   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-26 22:41:25,973   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-26 22:41:25,973   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-26 22:41:25,974   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-26 22:41:25,977   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 22:41:25,978   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-26 22:41:25,982   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-26 22:41:25,986   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 22:41:25,991   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-26 22:41:25,994   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-26 22:41:25,995   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-26 22:41:25,999   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-26 22:41:26,003   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-26 22:41:26,004   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-26 22:41:26,011   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-26 22:41:26,013   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 22:41:26,014   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-26 22:41:26,026   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-26 22:41:26,030   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-26 22:41:26,035   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:41:26,036   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-26 22:41:26,045   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-26 22:41:26,046   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-26 22:41:26,052   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-26 22:41:26,055   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:41:26,056   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-26 22:41:26,063   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-26 22:41:26,080   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-26 22:41:26,080   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:41:26,081   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-26 22:41:26,086   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-26 22:41:26,087   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-26 22:41:26,101   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-26 22:41:26,110   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-26 22:41:26,111   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-26 22:41:26,137   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 22:41:26,138   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-26 22:41:26,151   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:41:26,153   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-26 22:41:26,156   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 22:41:26,159   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-26 22:41:26,161   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 22:41:26,164   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 22:41:26,169   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-26 22:41:26,172   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:41:26,174   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-26 22:41:26,189   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-26 22:41:26,189   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-26 22:41:26,195   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-26 22:41:26,199   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-26 22:41:26,203   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-26 22:41:26,206   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-26 22:41:26,208   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-26 22:41:26,211   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-26 22:41:26,212   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-26 22:41:26,215   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:41:26,216   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-26 22:41:26,219   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-26 22:41:26,220   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 22:41:26,223   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-26 22:41:26,226   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:41:26,227   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-26 22:41:26,235   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 22:41:26,241   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-26 22:41:26,244   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 22:41:26,245   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-26 22:41:26,249   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 22:41:26,256   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:41:26,257   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 22:41:26,263   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:41:26,264   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-26 22:41:26,268   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-26 22:41:26,280   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-26 22:41:26,283   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-26 22:41:26,286   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-26 22:41:26,291   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-26 22:41:26,295   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-26 22:41:26,305   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-26 22:41:26,315   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 22:41:26,316   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-26 22:41:26,368   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 22:41:26,369   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 22:41:26,373   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-26 22:41:26,376   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 22:41:26,384   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 22:41:26,386   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-26 22:41:26,389   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 22:41:26,394   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-26 22:41:26,400   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-26 22:41:26,401   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-26 22:41:26,404   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 22:41:26,405   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-26 22:41:26,408   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-26 22:41:26,409   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-26 22:41:26,412   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-26 22:41:26,412   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 22:41:26,413   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-26 22:41:26,416   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:41:26,417   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-26 22:41:26,426   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 03:41:27,856   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 03:41:27,869   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 03:41:27,879   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 03:41:27,951   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 03:41:27,951   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 03:41:27,958   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 03:41:27,966   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 03:41:27,975   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 03:41:27,975   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 2
2014-02-27 03:41:27,976   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 03:41:27,996   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 03:41:28,024   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 03:41:28,159   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 03:41:28,212   FATAL [main] HOST: The PID of this process is 13906
2014-02-27 03:41:28,212   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 03:41:28,212   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 940032      0t0  TCP *:49548 (LISTEN)
2014-02-27 03:41:28,212   FATAL [main] HOST: java      46371 thorsten   34u  IPv6 898411      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 03:41:28,212   FATAL [main] HOST: java      46371 thorsten   40u  IPv6 898418      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 03:41:28,212   FATAL [main] HOST: java      46371 thorsten   54u  IPv6 898425      0t0  TCP *:8080 (LISTEN)
2014-02-27 03:41:28,212   FATAL [main] HOST: java      46371 thorsten   56u  IPv6 898494      0t0  TCP *:21212 (LISTEN)
2014-02-27 03:41:28,212   FATAL [main] HOST: java      46371 thorsten   57u  IPv6 898495      0t0  TCP *:21211 (LISTEN)
2014-02-27 03:41:28,222   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 03:41:28,223   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 03:41:28,564   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:37339
2014-02-27 03:41:28,572   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 03:41:28,573   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 03:41:28,590   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 03:41:28,601   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 03:41:28,601   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 03:41:28,603   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 03:42:28,309   WARN  [StatsAgent] HOST: OPS request for StatsAgent, 11826 timed out, sending error to client
2014-02-26 22:42:36,031   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-26 22:42:36,041   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-26 22:42:36,042   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-26 22:42:36,045   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,045   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,046   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,046   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-26 22:42:36,052   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-26 22:42:36,053   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 22:42:36,053   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 22:42:36,054   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 22:42:36,054   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 22:42:36,055   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-26 22:42:36,055   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-26 22:42:36,056   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,056   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-26 22:42:36,057   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,057   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-26 22:42:36,059   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-26 22:42:36,059   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-26 22:42:36,059   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-26 22:42:36,059   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-26 22:42:36,060   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-26 22:42:36,061   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,061   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 22:42:36,061   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 22:42:36,062   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-26 22:42:36,062   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 22:42:36,062   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 22:42:36,063   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 22:42:36,063   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,063   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,064   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,064   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,064   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,065   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,065   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-26 22:42:36,065   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,065   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,065   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,066   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,066   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,066   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-26 22:42:36,067   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 22:42:36,067   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 22:42:36,067   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,067   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 22:42:36,079   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-26 22:42:36,121   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 22:42:36,134   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 22:42:36,137   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-26 22:42:36,142   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 22:42:36,147   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:42:36,154   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:42:36,158   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:42:36,166   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-26 22:42:36,168   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 22:42:36,171   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 22:42:36,173   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-26 22:42:36,176   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-26 22:42:36,177   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:42:36,182   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:42:36,186   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:42:36,190   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 22:42:36,191   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:42:36,194   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:42:36,197   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:42:36,205   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-26 22:42:36,208   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-26 22:42:36,211   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-26 22:42:36,216   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-26 22:42:36,218   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-26 22:42:36,220   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-26 22:42:36,224   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-26 22:42:36,225   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-26 22:42:36,228   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-26 22:42:36,231   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-26 22:42:36,232   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 22:42:36,234   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 22:42:36,236   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-26 22:42:36,238   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 22:42:36,240   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:42:36,243   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:42:36,245   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:42:36,248   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-26 22:42:36,250   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-26 22:42:36,252   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-26 22:42:36,257   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-26 22:42:36,259   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 22:42:36,263   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 22:42:36,265   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 22:42:36,268   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-26 22:42:36,269   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 22:42:36,271   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 22:42:36,273   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-26 22:42:36,275   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-26 22:42:36,276   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:42:36,279   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:42:36,280   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:42:36,283   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-26 22:42:36,284   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-26 22:42:36,287   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-26 22:42:36,291   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 22:42:36,294   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:42:36,297   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:42:36,299   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:42:36,302   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 22:42:36,304   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:42:36,306   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:42:36,308   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:42:36,318   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 22:42:36,320   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:42:36,323   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:42:36,326   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:42:36,329   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 22:42:36,330   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 22:42:36,334   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 22:42:36,338   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 22:42:36,341   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 22:42:36,346   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-26 22:42:36,353   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-26 22:42:36,356   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-26 22:42:36,358   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-26 22:42:36,360   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-26 22:42:36,362   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-26 22:42:36,363   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-26 22:42:36,365   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-26 22:42:36,367   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-26 22:42:36,371   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-26 22:42:36,372   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:42:36,378   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:42:36,380   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:42:36,382   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 22:42:36,384   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:42:36,386   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:42:36,387   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:42:36,389   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-26 22:42:36,390   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 22:42:36,405   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 22:42:36,407   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-26 22:42:36,408   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-26 22:42:36,418   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 22:42:36,424   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 22:42:36,426   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 22:42:36,428   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-26 22:42:36,433   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-26 22:42:36,435   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-26 22:42:36,438   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-26 22:42:36,466   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-26 22:42:36,472   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 22:42:36,475   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-26 22:42:36,486   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 22:42:36,489   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:42:36,490   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-26 22:42:36,493   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-26 22:42:36,494   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-26 22:42:36,497   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-26 22:42:36,503   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-26 22:42:36,505   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-26 22:42:36,507   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:42:36,509   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-26 22:42:36,518   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-26 22:42:36,518   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-26 22:42:36,520   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-26 22:42:36,521   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 22:42:36,522   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-26 22:42:36,525   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-26 22:42:36,528   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 22:42:36,531   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-26 22:42:36,533   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-26 22:42:36,534   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-26 22:42:36,537   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-26 22:42:36,539   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-26 22:42:36,540   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-26 22:42:36,546   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-26 22:42:36,548   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 22:42:36,549   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-26 22:42:36,552   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-26 22:42:36,556   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-26 22:42:36,558   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:42:36,559   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-26 22:42:36,562   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-26 22:42:36,563   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-26 22:42:36,567   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-26 22:42:36,569   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:42:36,570   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-26 22:42:36,574   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-26 22:42:36,580   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-26 22:42:36,580   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:42:36,581   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-26 22:42:36,583   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-26 22:42:36,584   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-26 22:42:36,588   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-26 22:42:36,591   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-26 22:42:36,592   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-26 22:42:36,608   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 22:42:36,609   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-26 22:42:36,613   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:42:36,615   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-26 22:42:36,618   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 22:42:36,619   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-26 22:42:36,621   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 22:42:36,624   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 22:42:36,627   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-26 22:42:36,630   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:42:36,631   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-26 22:42:36,641   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-26 22:42:36,641   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-26 22:42:36,642   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-26 22:42:36,645   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-26 22:42:36,654   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-26 22:42:36,675   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-26 22:42:36,676   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-26 22:42:36,678   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-26 22:42:36,679   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-26 22:42:36,681   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:42:36,687   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-26 22:42:36,689   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-26 22:42:36,690   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 22:42:36,692   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-26 22:42:36,694   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:42:36,695   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-26 22:42:36,699   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 22:42:36,702   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-26 22:42:36,704   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 22:42:36,705   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-26 22:42:36,709   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 22:42:36,711   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:42:36,712   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 22:42:36,714   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:42:36,715   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-26 22:42:36,719   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-26 22:42:36,722   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-26 22:42:36,725   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-26 22:42:36,727   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-26 22:42:36,728   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-26 22:42:36,730   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-26 22:42:36,732   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-26 22:42:36,735   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 22:42:36,736   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-26 22:42:36,759   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 22:42:36,760   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 22:42:36,763   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-26 22:42:36,765   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 22:42:36,767   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 22:42:36,769   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-26 22:42:36,771   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 22:42:36,773   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-26 22:42:36,775   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-26 22:42:36,776   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-26 22:42:36,778   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 22:42:36,779   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-26 22:42:36,781   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-26 22:42:36,782   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-26 22:42:36,793   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-26 22:42:36,793   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 22:42:36,794   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-26 22:42:36,797   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:42:36,798   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-26 22:42:36,807   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 03:42:38,610   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 03:42:38,626   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 03:42:38,633   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 03:42:38,656   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 03:42:38,657   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 03:42:38,659   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 03:42:38,693   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 03:42:38,960   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 03:42:39,101   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-02-27 03:42:39,107   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 03:42:39,109   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:45039
2014-02-27 03:42:39,110   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 03:42:39,111   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:45039
2014-02-27 03:42:39,123   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169f650a04020000, negotiated timeout = 6000
2014-02-27 03:42:39,127   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169f650a04020000 with negotiated timeout 6000 for client /127.0.0.1:45039
2014-02-27 03:42:39,164   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 03:42:39,190   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 03:42:39,190   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 03:42:39,206   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 03:42:39,654   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 03:42:41,612   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 03:42:41,616   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 03:42:41,726   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 03:42:41,772   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 03:42:42,147   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 03:42:42,321   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 03:42:42,344   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 03:42:42,357   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 03:42:42,362   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 03:42:42,370   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 03:42:42,370   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 03:42:42,374   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 17 ms.
2014-02-27 03:42:42,374   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 5 ms.
2014-02-27 03:42:42,386   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 03:42:42,386   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 03:42:42,386   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 03:42:42,386   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 2 ms.
2014-02-27 03:42:42,399   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 03:42:42,405   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 03:42:42,408   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 10 ms.
2014-02-27 03:42:42,415   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 03:42:42,442   INFO  [main] HOST: Database start action is Create.
2014-02-27 03:42:42,466   INFO  [main] HOST: PID of this Volt process is 14003
2014-02-27 03:42:42,466   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 03:42:42,466   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 03:42:42,466   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 03:42:42,466   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 03:42:42,467   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 03:42:42,467   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 03:42:42,467   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 03:42:42,467   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 03:42:42,467   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 03:42:42,467   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 03:42:42,467   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 03:42:42,467   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 03:42:42,467   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 03:42:42,467   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 03:42:42,468   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 03:42:42,468   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 03:42:42,468   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 03:42:42,468   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 03:42:42,468   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 03:42:42,468   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 03:42:42,468   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 03:42:42,468   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 03:42:42,468   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 03:42:42,474   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 03:42:42,474   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 03:42:42,490   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 03:42:42,494   INFO  [Thread-9] HOST: Logging config info
2014-02-27 03:42:42,496   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 03:42:42,525   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-26 22:58:47,355   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-26 22:58:47,363   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-26 22:58:47,364   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-26 22:58:47,367   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,368   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,368   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,369   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-26 22:58:47,379   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-26 22:58:47,380   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 22:58:47,380   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 22:58:47,380   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 22:58:47,381   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 22:58:47,382   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-26 22:58:47,382   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-26 22:58:47,383   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,383   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-26 22:58:47,384   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,384   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-26 22:58:47,386   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-26 22:58:47,386   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-26 22:58:47,386   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-26 22:58:47,386   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-26 22:58:47,387   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-26 22:58:47,388   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,388   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 22:58:47,389   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 22:58:47,389   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-26 22:58:47,389   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 22:58:47,389   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 22:58:47,389   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 22:58:47,390   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,390   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,390   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,391   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,391   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,391   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,391   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-26 22:58:47,391   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,392   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,392   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,392   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,392   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,393   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-26 22:58:47,393   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 22:58:47,394   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 22:58:47,394   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,394   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 22:58:47,406   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-26 22:58:47,452   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 22:58:47,467   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 22:58:47,470   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-26 22:58:47,476   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 22:58:47,481   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:58:47,491   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:58:47,495   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:58:47,504   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-26 22:58:47,506   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 22:58:47,509   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 22:58:47,511   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-26 22:58:47,514   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-26 22:58:47,515   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:58:47,522   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:58:47,525   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:58:47,529   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 22:58:47,531   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:58:47,534   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:58:47,537   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:58:47,547   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-26 22:58:47,550   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-26 22:58:47,553   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-26 22:58:47,556   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-26 22:58:47,558   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-26 22:58:47,561   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-26 22:58:47,564   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-26 22:58:47,566   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-26 22:58:47,570   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-26 22:58:47,573   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-26 22:58:47,574   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 22:58:47,576   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 22:58:47,578   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-26 22:58:47,580   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 22:58:47,582   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:58:47,585   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:58:47,589   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-26 22:58:47,591   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-26 22:58:47,596   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-26 22:58:47,599   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-26 22:58:47,601   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 22:58:47,606   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 22:58:47,609   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 22:58:47,612   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-26 22:58:47,613   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 22:58:47,616   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 22:58:47,618   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-26 22:58:47,620   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-26 22:58:47,621   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:58:47,624   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:58:47,625   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:58:47,628   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-26 22:58:47,630   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-26 22:58:47,632   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-26 22:58:47,635   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 22:58:47,637   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:58:47,640   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:58:47,642   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:58:47,644   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 22:58:47,647   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:58:47,651   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:58:47,655   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:58:47,658   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 22:58:47,659   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:58:47,661   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:58:47,663   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:58:47,666   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 22:58:47,668   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 22:58:47,671   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 22:58:47,673   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 22:58:47,676   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 22:58:47,680   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-26 22:58:47,682   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-26 22:58:47,687   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-26 22:58:47,688   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-26 22:58:47,691   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-26 22:58:47,693   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-26 22:58:47,695   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-26 22:58:47,696   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-26 22:58:47,698   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-26 22:58:47,700   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-26 22:58:47,701   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:58:47,703   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:58:47,705   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:58:47,713   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 22:58:47,714   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:58:47,716   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:58:47,719   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:58:47,722   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-26 22:58:47,723   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 22:58:47,725   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 22:58:47,727   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-26 22:58:47,729   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-26 22:58:47,730   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 22:58:47,732   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 22:58:47,734   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 22:58:47,736   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-26 22:58:47,738   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-26 22:58:47,740   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-26 22:58:47,741   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-26 22:58:47,764   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-26 22:58:47,769   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 22:58:47,775   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 22:58:47,777   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:58:47,778   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-26 22:58:47,781   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-26 22:58:47,782   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-26 22:58:47,785   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-26 22:58:47,794   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-26 22:58:47,796   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-26 22:58:47,798   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:58:47,799   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-26 22:58:47,807   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-26 22:58:47,807   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-26 22:58:47,809   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-26 22:58:47,811   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 22:58:47,812   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-26 22:58:47,815   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 22:58:47,824   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-26 22:58:47,827   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-26 22:58:47,830   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-26 22:58:47,831   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-26 22:58:47,834   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-26 22:58:47,837   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-26 22:58:47,838   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-26 22:58:47,844   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-26 22:58:47,846   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 22:58:47,847   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-26 22:58:47,852   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-26 22:58:47,856   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-26 22:58:47,859   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-26 22:58:47,860   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-26 22:58:47,864   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-26 22:58:47,866   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:58:47,867   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-26 22:58:47,871   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-26 22:58:47,876   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-26 22:58:47,876   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:58:47,877   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-26 22:58:47,880   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-26 22:58:47,881   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-26 22:58:47,885   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-26 22:58:47,887   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-26 22:58:47,893   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-26 22:58:47,918   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 22:58:47,919   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-26 22:58:47,922   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:58:47,924   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-26 22:58:47,928   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 22:58:47,932   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-26 22:58:47,937   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 22:58:47,945   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 22:58:47,958   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-26 22:58:47,961   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:58:47,962   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-26 22:58:47,967   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-26 22:58:47,969   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-26 22:58:47,972   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-26 22:58:47,977   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-26 22:58:47,979   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-26 22:58:47,980   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-26 22:58:47,982   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-26 22:58:47,986   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-26 22:58:47,988   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:58:47,989   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-26 22:58:47,991   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-26 22:58:47,992   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 22:58:47,994   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-26 22:58:47,997   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:58:47,998   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-26 22:58:48,004   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 22:58:48,015   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-26 22:58:48,021   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 22:58:48,022   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-26 22:58:48,026   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 22:58:48,033   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:58:48,037   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 22:58:48,039   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:58:48,040   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-26 22:58:48,043   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-26 22:58:48,049   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-26 22:58:48,051   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-26 22:58:48,069   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-26 22:58:48,070   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-26 22:58:48,072   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-26 22:58:48,073   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-26 22:58:48,076   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 22:58:48,077   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-26 22:58:48,117   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 22:58:48,118   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 22:58:48,121   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-26 22:58:48,123   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 22:58:48,125   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 22:58:48,132   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-26 22:58:48,135   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 22:58:48,137   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-26 22:58:48,139   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-26 22:58:48,140   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-26 22:58:48,142   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 22:58:48,143   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-26 22:58:48,145   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-26 22:58:48,146   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-26 22:58:48,151   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-26 22:58:48,151   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 22:58:48,152   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-26 22:58:48,164   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:58:48,165   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-26 22:58:48,176   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 03:58:49,637   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 03:58:49,650   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 03:58:49,657   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 03:58:49,681   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 03:58:49,681   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 03:58:49,683   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 03:58:49,688   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 03:58:49,696   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 03:58:49,696   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 03:58:49,696   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 03:58:49,707   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 03:58:49,735   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 03:58:49,784   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 03:58:49,822   FATAL [main] HOST: The PID of this process is 15633
2014-02-27 03:58:49,822   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 03:58:49,822   FATAL [main] HOST: java      14003 thorsten   34u  IPv6 942903      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 03:58:49,822   FATAL [main] HOST: java      14003 thorsten   40u  IPv6 942910      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 03:58:49,823   FATAL [main] HOST: java      14003 thorsten   54u  IPv6 942917      0t0  TCP *:8080 (LISTEN)
2014-02-27 03:58:49,823   FATAL [main] HOST: java      14003 thorsten   55u  IPv6 942984      0t0  TCP *:21212 (LISTEN)
2014-02-27 03:58:49,823   FATAL [main] HOST: java      14003 thorsten   56u  IPv6 942985      0t0  TCP *:21211 (LISTEN)
2014-02-27 03:58:49,823   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 945149      0t0  TCP *:34333 (LISTEN)
2014-02-27 03:58:49,828   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 03:58:49,828   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 03:58:50,160   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 03:58:50,164   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:37899
2014-02-27 03:58:50,173   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 03:58:50,174   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-02-27 03:58:50,193   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 03:58:50,202   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 03:58:50,202   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 03:58:50,203   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-26 22:59:08,377   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-26 22:59:08,384   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-26 22:59:08,385   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-26 22:59:08,387   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,388   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,388   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,389   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-26 22:59:08,389   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-26 22:59:08,390   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 22:59:08,390   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 22:59:08,391   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 22:59:08,392   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 22:59:08,392   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-26 22:59:08,393   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-26 22:59:08,393   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,394   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-26 22:59:08,395   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,395   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-26 22:59:08,397   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-26 22:59:08,397   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-26 22:59:08,397   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-26 22:59:08,397   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-26 22:59:08,397   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-26 22:59:08,399   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,400   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 22:59:08,400   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 22:59:08,400   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-26 22:59:08,401   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 22:59:08,401   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 22:59:08,401   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 22:59:08,402   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,402   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,402   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,403   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,403   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,403   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,404   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-26 22:59:08,404   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,405   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,405   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,405   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,406   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,406   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-26 22:59:08,407   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 22:59:08,407   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 22:59:08,408   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,408   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 22:59:08,422   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-26 22:59:08,465   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 22:59:08,478   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 22:59:08,482   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-26 22:59:08,490   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 22:59:08,495   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:59:08,502   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:59:08,506   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:59:08,513   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-26 22:59:08,515   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 22:59:08,517   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 22:59:08,519   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-26 22:59:08,522   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-26 22:59:08,524   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:59:08,529   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:59:08,532   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:59:08,536   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 22:59:08,538   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:59:08,541   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:59:08,543   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:59:08,551   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-26 22:59:08,554   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-26 22:59:08,557   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-26 22:59:08,560   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-26 22:59:08,562   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-26 22:59:08,565   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-26 22:59:08,568   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-26 22:59:08,570   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-26 22:59:08,572   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-26 22:59:08,575   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-26 22:59:08,576   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 22:59:08,578   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 22:59:08,580   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-26 22:59:08,582   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 22:59:08,584   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:59:08,586   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:59:08,590   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-26 22:59:08,592   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-26 22:59:08,594   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-26 22:59:08,597   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-26 22:59:08,599   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 22:59:08,602   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 22:59:08,605   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 22:59:08,607   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-26 22:59:08,608   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 22:59:08,611   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 22:59:08,612   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-26 22:59:08,615   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-26 22:59:08,616   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:59:08,619   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:59:08,620   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 22:59:08,623   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-26 22:59:08,625   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-26 22:59:08,628   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-26 22:59:08,630   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 22:59:08,632   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:59:08,636   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:59:08,638   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:59:08,641   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 22:59:08,643   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:59:08,646   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:59:08,648   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:59:08,651   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 22:59:08,653   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:59:08,656   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:59:08,657   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 22:59:08,661   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 22:59:08,663   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 22:59:08,665   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 22:59:08,667   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 22:59:08,671   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 22:59:08,674   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-26 22:59:08,675   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-26 22:59:08,679   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-26 22:59:08,681   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-26 22:59:08,683   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-26 22:59:08,685   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-26 22:59:08,687   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-26 22:59:08,689   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-26 22:59:08,691   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-26 22:59:08,693   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-26 22:59:08,694   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:59:08,696   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:59:08,698   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:59:08,705   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 22:59:08,706   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:59:08,709   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:59:08,710   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 22:59:08,713   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-26 22:59:08,714   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 22:59:08,716   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 22:59:08,718   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-26 22:59:08,720   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-26 22:59:08,722   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 22:59:08,724   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 22:59:08,726   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 22:59:08,728   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-26 22:59:08,729   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-26 22:59:08,732   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-26 22:59:08,734   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-26 22:59:08,762   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-26 22:59:08,771   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 22:59:08,774   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 22:59:08,779   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:59:08,780   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-26 22:59:08,795   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-26 22:59:08,796   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-26 22:59:08,806   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-26 22:59:08,818   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-26 22:59:08,820   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-26 22:59:08,822   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:59:08,823   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-26 22:59:08,833   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-26 22:59:08,833   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-26 22:59:08,834   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-26 22:59:08,836   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 22:59:08,837   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-26 22:59:08,841   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 22:59:08,846   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-26 22:59:08,849   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-26 22:59:08,851   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-26 22:59:08,852   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-26 22:59:08,856   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-26 22:59:08,858   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-26 22:59:08,859   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-26 22:59:08,865   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-26 22:59:08,868   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 22:59:08,869   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-26 22:59:08,872   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-26 22:59:08,876   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-26 22:59:08,878   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-26 22:59:08,879   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-26 22:59:08,882   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-26 22:59:08,884   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:59:08,885   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-26 22:59:08,890   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-26 22:59:08,894   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-26 22:59:08,894   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:59:08,895   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-26 22:59:08,898   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-26 22:59:08,899   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-26 22:59:08,902   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-26 22:59:08,904   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-26 22:59:08,905   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-26 22:59:08,922   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 22:59:08,923   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-26 22:59:08,926   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:59:08,928   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-26 22:59:08,930   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 22:59:08,931   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-26 22:59:08,934   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 22:59:08,937   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 22:59:08,941   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-26 22:59:08,943   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:59:08,944   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-26 22:59:08,947   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-26 22:59:08,948   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-26 22:59:08,951   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-26 22:59:08,954   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-26 22:59:08,956   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-26 22:59:08,957   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-26 22:59:08,966   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-26 22:59:08,967   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-26 22:59:08,976   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:59:08,977   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-26 22:59:08,982   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-26 22:59:08,984   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 22:59:08,986   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-26 22:59:08,994   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:59:08,995   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-26 22:59:09,000   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 22:59:09,002   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-26 22:59:09,004   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 22:59:09,005   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-26 22:59:09,009   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 22:59:09,016   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:59:09,017   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 22:59:09,019   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:59:09,020   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-26 22:59:09,024   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-26 22:59:09,029   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-26 22:59:09,032   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-26 22:59:09,043   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-26 22:59:09,044   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-26 22:59:09,046   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-26 22:59:09,047   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-26 22:59:09,050   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 22:59:09,051   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-26 22:59:09,080   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 22:59:09,082   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 22:59:09,084   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-26 22:59:09,086   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 22:59:09,088   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 22:59:09,095   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-26 22:59:09,098   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 22:59:09,100   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-26 22:59:09,103   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-26 22:59:09,104   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-26 22:59:09,107   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 22:59:09,108   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-26 22:59:09,110   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-26 22:59:09,111   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-26 22:59:09,117   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-26 22:59:09,117   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 22:59:09,118   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-26 22:59:09,121   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 22:59:09,122   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-26 22:59:09,129   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 03:59:10,437   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 03:59:10,443   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 03:59:10,450   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 03:59:10,474   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 03:59:10,474   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 03:59:10,476   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 03:59:10,509   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 03:59:10,522   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 03:59:10,574   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@b926d29
2014-02-27 03:59:10,578   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 03:59:10,580   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:45597
2014-02-27 03:59:10,581   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 03:59:10,583   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:45597
2014-02-27 03:59:10,595   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169f6c9a7c000000 with negotiated timeout 6000 for client /127.0.0.1:45597
2014-02-27 03:59:10,595   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169f6c9a7c000000, negotiated timeout = 6000
2014-02-27 03:59:10,636   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 03:59:10,664   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 03:59:10,664   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 03:59:10,679   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 03:59:10,903   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 03:59:12,396   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 03:59:12,400   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 03:59:12,499   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 03:59:12,503   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 03:59:12,811   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 03:59:12,937   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 03:59:12,962   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 03:59:12,973   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 03:59:12,977   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 03:59:12,983   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 03:59:12,983   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 03:59:13,000   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 18 ms.
2014-02-27 03:59:13,001   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 28 ms.
2014-02-27 03:59:13,001   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 03:59:13,001   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 1 ms.
2014-02-27 03:59:13,013   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 03:59:13,013   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 03:59:13,013   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 03:59:13,017   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 03:59:13,019   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 11 ms.
2014-02-27 03:59:13,027   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 03:59:13,064   INFO  [main] HOST: Database start action is Create.
2014-02-27 03:59:13,089   INFO  [main] HOST: PID of this Volt process is 15718
2014-02-27 03:59:13,089   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 03:59:13,089   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 03:59:13,089   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 03:59:13,089   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 03:59:13,090   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 03:59:13,090   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 03:59:13,090   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 03:59:13,090   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 03:59:13,090   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 03:59:13,090   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 03:59:13,090   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 03:59:13,090   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 03:59:13,090   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 03:59:13,090   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 03:59:13,091   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 03:59:13,091   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 03:59:13,091   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 03:59:13,091   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 03:59:13,091   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 03:59:13,091   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 03:59:13,091   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 03:59:13,091   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 03:59:13,091   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 03:59:13,098   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 03:59:13,098   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 03:59:13,114   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 03:59:13,115   INFO  [Thread-9] HOST: Logging config info
2014-02-27 03:59:13,116   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 03:59:13,144   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-26 23:02:40,842   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-26 23:02:40,850   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10024_10025 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-26 23:02:40,851   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10029_10030 on table: USER of type: BALANCED_TREE
2014-02-26 23:02:40,855   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10034_10035 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,855   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10039_10040 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,857   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,857   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: SPHERE of type: BALANCED_TREE
2014-02-26 23:02:40,865   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10052_10053 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-26 23:02:40,866   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:02:40,866   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10057_10058 on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:02:40,867   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:02:40,867   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:02:40,868   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:02:40,870   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10066_10067 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-26 23:02:40,870   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,871   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10075_10076 on table: MESSAGE of type: BALANCED_TREE
2014-02-26 23:02:40,872   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,872   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10084_10085 on table: EXPRESSION of type: BALANCED_TREE
2014-02-26 23:02:40,874   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:02:40,874   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-26 23:02:40,874   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:02:40,874   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-26 23:02:40,875   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECK of type: BALANCED_TREE
2014-02-26 23:02:40,876   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,877   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:02:40,877   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:02:40,877   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-26 23:02:40,877   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:02:40,878   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:02:40,878   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:02:40,878   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,878   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,878   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,879   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,879   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,879   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,879   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-26 23:02:40,880   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,880   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,880   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,881   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,881   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,881   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-26 23:02:40,883   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:02:40,884   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:02:40,884   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,884   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:02:40,898   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-26 23:02:40,958   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:02:40,972   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:02:40,976   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-26 23:02:40,984   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:02:40,992   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:02:40,999   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:02:41,003   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:02:41,010   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-26 23:02:41,012   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:02:41,020   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:02:41,022   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-26 23:02:41,025   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:02:41,026   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:41,031   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:41,035   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:41,039   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:02:41,041   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:41,044   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:41,046   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:41,054   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-26 23:02:41,057   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-26 23:02:41,060   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-26 23:02:41,063   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-26 23:02:41,065   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-26 23:02:41,068   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-26 23:02:41,071   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:02:41,073   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-26 23:02:41,076   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-26 23:02:41,080   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-26 23:02:41,081   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:02:41,084   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:02:41,085   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:02:41,087   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:02:41,090   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:02:41,094   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:02:41,098   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-26 23:02:41,099   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-26 23:02:41,102   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-26 23:02:41,105   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-26 23:02:41,107   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:02:41,111   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:02:41,114   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:02:41,117   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-26 23:02:41,118   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:02:41,124   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:02:41,126   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-26 23:02:41,128   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-26 23:02:41,130   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:02:41,133   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:02:41,135   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:02:41,138   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-26 23:02:41,141   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-26 23:02:41,142   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-26 23:02:41,146   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:02:41,148   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:41,152   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:41,154   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:41,157   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:02:41,159   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:41,163   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:41,168   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:41,173   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:02:41,174   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:41,177   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:41,180   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:41,182   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:02:41,185   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:02:41,188   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:02:41,193   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:02:41,196   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:02:41,200   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-26 23:02:41,202   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-26 23:02:41,208   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-26 23:02:41,210   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:02:41,212   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:02:41,214   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-26 23:02:41,216   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-26 23:02:41,219   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-26 23:02:41,220   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-26 23:02:41,223   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-26 23:02:41,225   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:02:41,228   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:02:41,229   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:02:41,236   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:02:41,237   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:02:41,240   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:02:41,241   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:02:41,244   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-26 23:02:41,245   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:02:41,255   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:02:41,256   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-26 23:02:41,258   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:02:41,260   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:02:41,262   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:02:41,264   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:02:41,266   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-26 23:02:41,267   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-26 23:02:41,269   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-26 23:02:41,271   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-26 23:02:41,297   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-26 23:02:41,302   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:02:41,305   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:02:41,307   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:41,308   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-26 23:02:41,311   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:41,312   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-26 23:02:41,316   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-26 23:02:41,322   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-26 23:02:41,324   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-26 23:02:41,326   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:41,327   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-26 23:02:41,335   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-26 23:02:41,336   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-26 23:02:41,337   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:02:41,339   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:41,340   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-26 23:02:41,344   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:02:41,349   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-26 23:02:41,352   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-26 23:02:41,355   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:41,356   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-26 23:02:41,359   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-26 23:02:41,362   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-26 23:02:41,363   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:02:41,370   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-26 23:02:41,373   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:41,374   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-26 23:02:41,378   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-26 23:02:41,381   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-26 23:02:41,384   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-26 23:02:41,386   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-26 23:02:41,389   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-26 23:02:41,392   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:41,393   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-26 23:02:41,397   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-26 23:02:41,402   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-26 23:02:41,402   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:41,403   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-26 23:02:41,405   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:02:41,406   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-26 23:02:41,410   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-26 23:02:41,413   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-26 23:02:41,414   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:02:41,449   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:02:41,450   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-26 23:02:41,453   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:41,455   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-26 23:02:41,463   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:02:41,464   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-26 23:02:41,467   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:02:41,471   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:02:41,474   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-26 23:02:41,476   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:41,477   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-26 23:02:41,481   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-26 23:02:41,482   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-26 23:02:41,485   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-26 23:02:41,488   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-26 23:02:41,490   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:41,491   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-26 23:02:41,493   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-26 23:02:41,494   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-26 23:02:41,498   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:41,499   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-26 23:02:41,502   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:41,503   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:02:41,506   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-26 23:02:41,509   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:41,510   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-26 23:02:41,514   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:02:41,517   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-26 23:02:41,518   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:41,519   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-26 23:02:41,522   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:02:41,526   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:41,527   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:02:41,529   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:41,530   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:02:41,533   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:02:41,536   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-26 23:02:41,539   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-26 23:02:41,541   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-26 23:02:41,542   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:02:41,544   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-26 23:02:41,546   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-26 23:02:41,549   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:02:41,550   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:02:41,586   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:02:41,587   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:02:41,589   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-26 23:02:41,591   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:02:41,593   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:02:41,600   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-26 23:02:41,602   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:02:41,606   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-26 23:02:41,611   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:02:41,612   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-26 23:02:41,616   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:41,617   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-26 23:02:41,619   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-26 23:02:41,620   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:02:41,626   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-26 23:02:41,626   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:41,627   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-26 23:02:41,630   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:41,631   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-26 23:02:41,641   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 04:02:42,820   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 04:02:42,826   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 04:02:42,832   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 04:02:42,856   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 04:02:42,856   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 04:02:42,858   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 04:02:42,862   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 04:02:42,871   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 04:02:42,871   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 04:02:42,872   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 04:02:42,888   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 04:02:42,909   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 04:02:42,953   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 04:02:42,986   FATAL [main] HOST: The PID of this process is 15972
2014-02-27 04:02:42,986   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 04:02:42,986   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 946385      0t0  TCP *:46312 (LISTEN)
2014-02-27 04:02:42,986   FATAL [main] HOST: java      15718 thorsten   34u  IPv6 945989      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 04:02:42,986   FATAL [main] HOST: java      15718 thorsten   40u  IPv6 945996      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 04:02:42,986   FATAL [main] HOST: java      15718 thorsten   54u  IPv6 946003      0t0  TCP *:8080 (LISTEN)
2014-02-27 04:02:42,986   FATAL [main] HOST: java      15718 thorsten   55u  IPv6 946070      0t0  TCP *:21212 (LISTEN)
2014-02-27 04:02:42,986   FATAL [main] HOST: java      15718 thorsten   56u  IPv6 946071      0t0  TCP *:21211 (LISTEN)
2014-02-27 04:02:42,993   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 04:02:42,993   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 04:02:43,329   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 04:02:43,330   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:37964
2014-02-27 04:02:43,338   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 04:02:43,338   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-02-27 04:02:43,359   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 04:02:43,371   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 04:02:43,371   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 04:02:43,373   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-26 23:02:52,847   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-26 23:02:52,867   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10024_10025 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-26 23:02:52,867   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10029_10030 on table: USER of type: BALANCED_TREE
2014-02-26 23:02:52,870   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10034_10035 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,870   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10039_10040 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,871   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,872   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: SPHERE of type: BALANCED_TREE
2014-02-26 23:02:52,872   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10052_10053 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-26 23:02:52,873   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:02:52,873   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10057_10058 on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:02:52,874   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:02:52,874   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:02:52,875   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:02:52,876   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10066_10067 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-26 23:02:52,876   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,877   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10075_10076 on table: MESSAGE of type: BALANCED_TREE
2014-02-26 23:02:52,878   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,879   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10084_10085 on table: EXPRESSION of type: BALANCED_TREE
2014-02-26 23:02:52,881   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:02:52,881   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-26 23:02:52,881   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:02:52,882   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-26 23:02:52,882   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECK of type: BALANCED_TREE
2014-02-26 23:02:52,883   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,884   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:02:52,884   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:02:52,884   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-26 23:02:52,885   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:02:52,885   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:02:52,886   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:02:52,887   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,887   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,887   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,889   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,889   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,889   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,890   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-26 23:02:52,890   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,891   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,891   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,892   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,892   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,893   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-26 23:02:52,894   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:02:52,894   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:02:52,895   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,895   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:02:52,926   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-26 23:02:53,008   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:02:53,029   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:02:53,033   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-26 23:02:53,037   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:02:53,042   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:02:53,049   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:02:53,053   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:02:53,060   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-26 23:02:53,062   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:02:53,064   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:02:53,067   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-26 23:02:53,069   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:02:53,071   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:53,076   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:53,079   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:53,083   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:02:53,085   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:53,088   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:53,091   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:53,104   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-26 23:02:53,107   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-26 23:02:53,110   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-26 23:02:53,113   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-26 23:02:53,115   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-26 23:02:53,118   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-26 23:02:53,121   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:02:53,123   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-26 23:02:53,126   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-26 23:02:53,129   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-26 23:02:53,131   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:02:53,133   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:02:53,135   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:02:53,137   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:02:53,140   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:02:53,142   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:02:53,146   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-26 23:02:53,148   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-26 23:02:53,150   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-26 23:02:53,153   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-26 23:02:53,155   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:02:53,158   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:02:53,161   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:02:53,164   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-26 23:02:53,165   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:02:53,167   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:02:53,169   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-26 23:02:53,171   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-26 23:02:53,172   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:02:53,175   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:02:53,177   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:02:53,179   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-26 23:02:53,181   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-26 23:02:53,183   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-26 23:02:53,186   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:02:53,188   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:53,191   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:53,193   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:53,196   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:02:53,197   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:53,200   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:53,202   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:53,205   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:02:53,206   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:53,209   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:53,211   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:02:53,213   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:02:53,215   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:02:53,217   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:02:53,219   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:02:53,223   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:02:53,225   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-26 23:02:53,226   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-26 23:02:53,230   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-26 23:02:53,231   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:02:53,233   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:02:53,236   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-26 23:02:53,237   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-26 23:02:53,239   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-26 23:02:53,240   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-26 23:02:53,242   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-26 23:02:53,244   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:02:53,246   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:02:53,248   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:02:53,256   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:02:53,257   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:02:53,259   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:02:53,262   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:02:53,264   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-26 23:02:53,265   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:02:53,267   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:02:53,268   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-26 23:02:53,270   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:02:53,271   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:02:53,273   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:02:53,275   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:02:53,277   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-26 23:02:53,278   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-26 23:02:53,280   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-26 23:02:53,282   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-26 23:02:53,305   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-26 23:02:53,310   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:02:53,313   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:02:53,315   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:53,316   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-26 23:02:53,319   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:53,320   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-26 23:02:53,324   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-26 23:02:53,330   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-26 23:02:53,332   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-26 23:02:53,334   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:53,335   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-26 23:02:53,344   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-26 23:02:53,344   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-26 23:02:53,345   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:02:53,349   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:53,351   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-26 23:02:53,354   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:02:53,358   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-26 23:02:53,362   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-26 23:02:53,364   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:53,365   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-26 23:02:53,370   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-26 23:02:53,374   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-26 23:02:53,375   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:02:53,384   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-26 23:02:53,387   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:53,388   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-26 23:02:53,391   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-26 23:02:53,394   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-26 23:02:53,396   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-26 23:02:53,397   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-26 23:02:53,404   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-26 23:02:53,409   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:53,410   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-26 23:02:53,422   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-26 23:02:53,436   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-26 23:02:53,436   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:53,437   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-26 23:02:53,440   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:02:53,441   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-26 23:02:53,450   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-26 23:02:53,453   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-26 23:02:53,454   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:02:53,482   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:02:53,483   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-26 23:02:53,494   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:53,496   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-26 23:02:53,498   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:02:53,509   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-26 23:02:53,511   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:02:53,513   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:02:53,517   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-26 23:02:53,519   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:53,520   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-26 23:02:53,523   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-26 23:02:53,524   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-26 23:02:53,527   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-26 23:02:53,533   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-26 23:02:53,534   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:53,535   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-26 23:02:53,537   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-26 23:02:53,539   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-26 23:02:53,541   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:53,542   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-26 23:02:53,545   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:53,546   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:02:53,548   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-26 23:02:53,549   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:53,551   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-26 23:02:53,555   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:02:53,558   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-26 23:02:53,560   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:53,561   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-26 23:02:53,564   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:02:53,573   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:53,575   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:02:53,577   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:53,578   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:02:53,581   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:02:53,587   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-26 23:02:53,596   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-26 23:02:53,604   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-26 23:02:53,605   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:02:53,610   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-26 23:02:53,611   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-26 23:02:53,614   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:02:53,615   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:02:53,645   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:02:53,646   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:02:53,648   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-26 23:02:53,650   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:02:53,652   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:02:53,659   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-26 23:02:53,661   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:02:53,663   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-26 23:02:53,666   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:02:53,667   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-26 23:02:53,669   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:53,670   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-26 23:02:53,672   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-26 23:02:53,673   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:02:53,679   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-26 23:02:53,679   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:02:53,680   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-26 23:02:53,682   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:02:53,683   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-26 23:02:53,691   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 04:02:55,198   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 04:02:55,206   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 04:02:55,213   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 04:02:55,241   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 04:02:55,241   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 04:02:55,243   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 04:02:55,277   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 04:02:55,291   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 04:02:55,338   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@2a03803
2014-02-27 04:02:55,343   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 04:02:55,344   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:45652
2014-02-27 04:02:55,346   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 04:02:55,347   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:45652
2014-02-27 04:02:55,358   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169f6e517a000000 with negotiated timeout 6000 for client /127.0.0.1:45652
2014-02-27 04:02:55,359   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169f6e517a000000, negotiated timeout = 6000
2014-02-27 04:02:55,401   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 04:02:55,425   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 04:02:55,425   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 04:02:55,440   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 04:02:55,673   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 04:02:57,205   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 04:02:57,216   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 04:02:57,319   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 04:02:57,325   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 04:02:57,625   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 04:02:57,773   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 04:02:57,792   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 04:02:57,805   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 04:02:57,810   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 04:02:57,822   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 21 ms.
2014-02-27 04:02:57,823   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 04:02:57,825   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 04:02:57,825   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 2 ms.
2014-02-27 04:02:57,830   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:02:57,835   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 04:02:57,835   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 3 ms.
2014-02-27 04:02:57,836   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:02:57,848   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:02:57,857   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 04:02:57,859   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 13 ms.
2014-02-27 04:02:57,866   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:02:57,891   INFO  [main] HOST: Database start action is Create.
2014-02-27 04:02:57,914   INFO  [main] HOST: PID of this Volt process is 16033
2014-02-27 04:02:57,914   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 04:02:57,914   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 04:02:57,914   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 04:02:57,914   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 04:02:57,915   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 04:02:57,915   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 04:02:57,915   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 04:02:57,915   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 04:02:57,915   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 04:02:57,915   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 04:02:57,915   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 04:02:57,915   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 04:02:57,915   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 04:02:57,915   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 04:02:57,916   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 04:02:57,916   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 04:02:57,916   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 04:02:57,916   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 04:02:57,916   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 04:02:57,916   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 04:02:57,916   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 04:02:57,916   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 04:02:57,917   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 04:02:57,917   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 04:02:57,917   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 04:02:57,937   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 04:02:57,937   INFO  [Thread-9] HOST: Logging config info
2014-02-27 04:02:57,939   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 04:02:57,964   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-26 23:07:58,547   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-26 23:07:58,554   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10024_10025 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-26 23:07:58,555   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10029_10030 on table: USER of type: BALANCED_TREE
2014-02-26 23:07:58,561   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10034_10035 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,561   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10039_10040 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,562   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,562   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: SPHERE of type: BALANCED_TREE
2014-02-26 23:07:58,562   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10052_10053 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-26 23:07:58,563   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:07:58,563   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10057_10058 on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:07:58,564   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:07:58,564   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:07:58,565   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:07:58,565   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10066_10067 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-26 23:07:58,566   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,567   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10075_10076 on table: MESSAGE of type: BALANCED_TREE
2014-02-26 23:07:58,567   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,568   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10084_10085 on table: EXPRESSION of type: BALANCED_TREE
2014-02-26 23:07:58,569   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:07:58,569   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-26 23:07:58,570   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:07:58,570   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-26 23:07:58,570   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECK of type: BALANCED_TREE
2014-02-26 23:07:58,571   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,572   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:07:58,572   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:07:58,572   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-26 23:07:58,573   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:07:58,573   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:07:58,573   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:07:58,574   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,574   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,574   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,575   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,575   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,575   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,576   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-26 23:07:58,576   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,576   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,577   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,577   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,577   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,578   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-26 23:07:58,579   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:07:58,579   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:07:58,580   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,580   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:07:58,593   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-26 23:07:58,637   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:07:58,650   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:07:58,654   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-26 23:07:58,663   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:07:58,667   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:07:58,675   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:07:58,679   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:07:58,686   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-26 23:07:58,687   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:07:58,691   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:07:58,693   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-26 23:07:58,696   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:07:58,699   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:07:58,705   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:07:58,708   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:07:58,713   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:07:58,714   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:07:58,719   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:07:58,722   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:07:58,730   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-26 23:07:58,733   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-26 23:07:58,736   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-26 23:07:58,747   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-26 23:07:58,749   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-26 23:07:58,752   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-26 23:07:58,755   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:07:58,758   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-26 23:07:58,761   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-26 23:07:58,764   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-26 23:07:58,765   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:07:58,768   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:07:58,770   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:07:58,772   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:07:58,774   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:07:58,777   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:07:58,781   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-26 23:07:58,782   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-26 23:07:58,785   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-26 23:07:58,788   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-26 23:07:58,790   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:07:58,797   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:07:58,802   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:07:58,806   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-26 23:07:58,807   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:07:58,811   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:07:58,813   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-26 23:07:58,815   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-26 23:07:58,816   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:07:58,820   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:07:58,822   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:07:58,824   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-26 23:07:58,827   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-26 23:07:58,828   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-26 23:07:58,834   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:07:58,837   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:07:58,840   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:07:58,842   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:07:58,845   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:07:58,852   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:07:58,856   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:07:58,858   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:07:58,860   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:07:58,861   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:07:58,864   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:07:58,866   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:07:58,868   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:07:58,870   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:07:58,872   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:07:58,875   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:07:58,878   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:07:58,881   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-26 23:07:58,883   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-26 23:07:58,886   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-26 23:07:58,888   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:07:58,889   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:07:58,892   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-26 23:07:58,893   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-26 23:07:58,895   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-26 23:07:58,896   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-26 23:07:58,898   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-26 23:07:58,899   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:07:58,902   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:07:58,903   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:07:58,910   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:07:58,911   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:07:58,914   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:07:58,915   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:07:58,917   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-26 23:07:58,918   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:07:58,931   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:07:58,932   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-26 23:07:58,937   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:07:58,938   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:07:58,940   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:07:58,942   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:07:58,944   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-26 23:07:58,945   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-26 23:07:58,947   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-26 23:07:58,948   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-26 23:07:58,972   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-26 23:07:58,977   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:07:58,981   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:07:58,984   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:07:58,985   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-26 23:07:58,996   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-26 23:07:58,997   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-26 23:07:59,005   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-26 23:07:59,019   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-26 23:07:59,021   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-26 23:07:59,027   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:07:59,028   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-26 23:07:59,036   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-26 23:07:59,037   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-26 23:07:59,038   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:07:59,040   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:07:59,054   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-26 23:07:59,061   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:07:59,071   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-26 23:07:59,079   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-26 23:07:59,082   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-26 23:07:59,083   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-26 23:07:59,089   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-26 23:07:59,100   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-26 23:07:59,101   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:07:59,116   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-26 23:07:59,118   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:07:59,120   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-26 23:07:59,131   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-26 23:07:59,139   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-26 23:07:59,146   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-26 23:07:59,151   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-26 23:07:59,159   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-26 23:07:59,169   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:07:59,170   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-26 23:07:59,188   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-26 23:07:59,202   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-26 23:07:59,202   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:07:59,206   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-26 23:07:59,208   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:07:59,221   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-26 23:07:59,230   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-26 23:07:59,238   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-26 23:07:59,239   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:07:59,281   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:07:59,282   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-26 23:07:59,296   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:07:59,298   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-26 23:07:59,300   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:07:59,308   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-26 23:07:59,311   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:07:59,313   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:07:59,319   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-26 23:07:59,322   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:07:59,323   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-26 23:07:59,326   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-26 23:07:59,327   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-26 23:07:59,330   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-26 23:07:59,336   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-26 23:07:59,338   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-26 23:07:59,339   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-26 23:07:59,341   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-26 23:07:59,342   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-26 23:07:59,345   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:07:59,346   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-26 23:07:59,348   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-26 23:07:59,349   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:07:59,351   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-26 23:07:59,353   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:07:59,355   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-26 23:07:59,359   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:07:59,362   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-26 23:07:59,363   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:07:59,364   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-26 23:07:59,368   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:07:59,374   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:07:59,375   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:07:59,379   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:07:59,380   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:07:59,383   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:07:59,392   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-26 23:07:59,400   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-26 23:07:59,408   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-26 23:07:59,412   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:07:59,414   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-26 23:07:59,415   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-26 23:07:59,418   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:07:59,419   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:07:59,452   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:07:59,453   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:07:59,455   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-26 23:07:59,457   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:07:59,459   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:07:59,466   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-26 23:07:59,468   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:07:59,471   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-26 23:07:59,473   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:07:59,475   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-26 23:07:59,477   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:07:59,478   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-26 23:07:59,481   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-26 23:07:59,482   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:07:59,487   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-26 23:07:59,487   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:07:59,488   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-26 23:07:59,491   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:07:59,492   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-26 23:07:59,509   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 04:08:00,919   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 04:08:00,935   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 04:08:00,942   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 04:08:00,967   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 04:08:00,967   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 04:08:00,969   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 04:08:00,974   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 04:08:00,988   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 04:08:00,988   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 2
2014-02-27 04:08:00,988   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 04:08:01,005   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 04:08:01,025   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 04:08:01,058   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 04:08:01,098   FATAL [main] HOST: The PID of this process is 16315
2014-02-27 04:08:01,099   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 04:08:01,099   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 947536      0t0  TCP *:46494 (LISTEN)
2014-02-27 04:08:01,099   FATAL [main] HOST: java      16033 thorsten   34u  IPv6 947191      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 04:08:01,099   FATAL [main] HOST: java      16033 thorsten   40u  IPv6 947198      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 04:08:01,099   FATAL [main] HOST: java      16033 thorsten   54u  IPv6 947205      0t0  TCP *:8080 (LISTEN)
2014-02-27 04:08:01,099   FATAL [main] HOST: java      16033 thorsten   55u  IPv6 947272      0t0  TCP *:21212 (LISTEN)
2014-02-27 04:08:01,099   FATAL [main] HOST: java      16033 thorsten   56u  IPv6 947273      0t0  TCP *:21211 (LISTEN)
2014-02-27 04:08:01,105   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 04:08:01,105   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 04:08:01,440   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 04:08:01,442   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:38017
2014-02-27 04:08:01,443   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-02-27 04:08:01,450   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 04:08:01,477   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 04:08:01,488   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 04:08:01,488   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 04:08:01,490   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-26 23:08:10,471   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-26 23:08:10,477   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10024_10025 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-26 23:08:10,478   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10029_10030 on table: USER of type: BALANCED_TREE
2014-02-26 23:08:10,481   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10034_10035 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,481   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10039_10040 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,482   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,482   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: SPHERE of type: BALANCED_TREE
2014-02-26 23:08:10,483   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10052_10053 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-26 23:08:10,483   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:08:10,483   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10057_10058 on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:08:10,484   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:08:10,485   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:08:10,485   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:08:10,486   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10066_10067 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-26 23:08:10,486   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,487   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10075_10076 on table: MESSAGE of type: BALANCED_TREE
2014-02-26 23:08:10,488   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,488   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10084_10085 on table: EXPRESSION of type: BALANCED_TREE
2014-02-26 23:08:10,490   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:08:10,490   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-26 23:08:10,490   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:08:10,490   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-26 23:08:10,490   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECK of type: BALANCED_TREE
2014-02-26 23:08:10,491   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,492   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:08:10,492   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:08:10,492   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-26 23:08:10,493   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:08:10,493   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:08:10,494   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:08:10,494   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,494   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,495   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,495   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,495   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,496   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,496   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-26 23:08:10,497   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,497   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,497   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,498   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,498   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,499   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-26 23:08:10,500   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:08:10,500   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:08:10,500   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,501   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:08:10,513   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-26 23:08:10,560   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:08:10,572   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:08:10,579   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-26 23:08:10,584   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:08:10,589   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:08:10,596   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:08:10,602   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:08:10,609   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-26 23:08:10,611   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:08:10,613   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:08:10,615   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-26 23:08:10,618   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:08:10,620   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:08:10,624   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:08:10,628   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:08:10,632   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:08:10,633   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:08:10,636   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:08:10,640   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:08:10,649   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-26 23:08:10,652   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-26 23:08:10,655   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-26 23:08:10,658   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-26 23:08:10,661   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-26 23:08:10,663   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-26 23:08:10,666   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:08:10,668   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-26 23:08:10,671   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-26 23:08:10,674   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-26 23:08:10,675   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:08:10,677   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:08:10,678   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:08:10,680   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:08:10,682   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:08:10,686   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:08:10,690   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-26 23:08:10,692   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-26 23:08:10,694   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-26 23:08:10,698   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-26 23:08:10,699   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:08:10,703   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:08:10,705   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:08:10,708   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-26 23:08:10,709   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:08:10,712   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:08:10,713   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-26 23:08:10,715   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-26 23:08:10,716   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:08:10,719   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:08:10,721   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:08:10,724   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-26 23:08:10,726   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-26 23:08:10,728   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-26 23:08:10,731   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:08:10,732   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:08:10,735   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:08:10,737   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:08:10,740   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:08:10,742   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:08:10,745   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:08:10,747   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:08:10,749   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:08:10,751   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:08:10,754   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:08:10,755   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:08:10,758   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:08:10,759   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:08:10,763   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:08:10,765   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:08:10,768   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:08:10,770   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-26 23:08:10,772   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-26 23:08:10,775   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-26 23:08:10,777   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:08:10,779   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:08:10,781   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-26 23:08:10,783   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-26 23:08:10,784   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-26 23:08:10,786   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-26 23:08:10,788   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-26 23:08:10,789   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:08:10,791   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:08:10,793   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:08:10,800   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:08:10,801   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:08:10,804   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:08:10,806   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:08:10,808   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-26 23:08:10,809   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:08:10,823   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:08:10,824   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-26 23:08:10,837   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:08:10,838   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:08:10,840   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:08:10,842   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:08:10,844   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-26 23:08:10,845   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-26 23:08:10,847   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-26 23:08:10,848   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-26 23:08:10,871   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-26 23:08:10,877   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:08:10,880   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:08:10,882   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:08:10,883   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-26 23:08:10,886   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-26 23:08:10,887   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-26 23:08:10,890   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-26 23:08:10,897   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-26 23:08:10,899   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-26 23:08:10,901   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:08:10,902   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-26 23:08:10,911   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-26 23:08:10,911   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-26 23:08:10,913   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:08:10,915   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:08:10,916   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-26 23:08:10,919   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:08:10,923   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-26 23:08:10,927   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-26 23:08:10,929   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-26 23:08:10,930   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-26 23:08:10,933   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-26 23:08:10,935   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-26 23:08:10,936   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:08:10,942   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-26 23:08:10,944   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:08:10,945   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-26 23:08:10,951   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-26 23:08:10,955   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-26 23:08:10,957   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-26 23:08:10,958   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-26 23:08:10,963   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-26 23:08:10,965   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:08:10,966   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-26 23:08:10,970   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-26 23:08:10,977   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-26 23:08:10,977   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:08:10,978   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-26 23:08:10,980   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:08:10,980   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-26 23:08:10,989   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-26 23:08:10,998   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-26 23:08:10,999   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:08:11,032   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:08:11,033   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-26 23:08:11,037   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:08:11,038   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-26 23:08:11,041   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:08:11,042   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-26 23:08:11,050   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:08:11,057   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:08:11,060   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-26 23:08:11,064   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:08:11,065   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-26 23:08:11,071   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-26 23:08:11,072   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-26 23:08:11,076   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-26 23:08:11,082   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-26 23:08:11,084   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-26 23:08:11,085   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-26 23:08:11,087   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-26 23:08:11,089   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-26 23:08:11,091   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:08:11,092   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-26 23:08:11,094   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-26 23:08:11,095   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:08:11,097   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-26 23:08:11,099   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:08:11,100   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-26 23:08:11,104   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:08:11,107   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-26 23:08:11,108   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:08:11,109   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-26 23:08:11,112   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:08:11,119   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:08:11,120   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:08:11,122   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:08:11,123   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:08:11,126   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:08:11,132   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-26 23:08:11,134   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-26 23:08:11,142   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-26 23:08:11,146   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:08:11,147   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-26 23:08:11,149   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-26 23:08:11,156   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:08:11,157   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:08:11,185   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:08:11,186   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:08:11,188   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-26 23:08:11,191   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:08:11,192   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:08:11,199   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-26 23:08:11,201   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:08:11,204   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-26 23:08:11,206   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:08:11,207   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-26 23:08:11,210   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:08:11,211   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-26 23:08:11,213   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-26 23:08:11,214   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:08:11,219   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-26 23:08:11,219   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:08:11,220   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-26 23:08:11,223   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:08:11,224   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-26 23:08:11,231   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 04:08:12,921   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 04:08:12,934   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 04:08:12,941   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 04:08:12,967   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 04:08:12,967   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 04:08:12,969   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 04:08:13,005   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 04:08:13,020   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 04:08:13,064   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-02-27 04:08:13,068   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 04:08:13,071   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:45705
2014-02-27 04:08:13,072   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 04:08:13,074   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:45705
2014-02-27 04:08:13,085   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169f70be09000000 with negotiated timeout 6000 for client /127.0.0.1:45705
2014-02-27 04:08:13,085   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169f70be09000000, negotiated timeout = 6000
2014-02-27 04:08:13,127   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 04:08:13,154   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 04:08:13,154   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 04:08:13,173   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 04:08:13,380   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 04:08:14,832   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 04:08:14,842   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 04:08:14,939   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 04:08:14,943   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 04:08:15,261   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 04:08:15,396   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 04:08:15,418   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 04:08:15,429   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 04:08:15,438   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 04:08:15,440   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 04:08:15,442   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 04:08:15,447   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 04:08:15,452   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 8 ms.
2014-02-27 04:08:15,452   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 12 ms.
2014-02-27 04:08:15,452   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 21 ms.
2014-02-27 04:08:15,462   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:08:15,462   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:08:15,462   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:08:15,467   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 04:08:15,469   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 10 ms.
2014-02-27 04:08:15,479   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:08:15,504   INFO  [main] HOST: Database start action is Create.
2014-02-27 04:08:15,527   INFO  [main] HOST: PID of this Volt process is 16376
2014-02-27 04:08:15,528   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 04:08:15,528   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 04:08:15,528   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 04:08:15,528   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 04:08:15,528   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 04:08:15,528   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 04:08:15,528   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 04:08:15,528   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 04:08:15,528   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 04:08:15,529   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 04:08:15,529   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 04:08:15,529   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 04:08:15,529   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 04:08:15,529   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 04:08:15,529   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 04:08:15,529   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 04:08:15,529   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 04:08:15,529   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 04:08:15,529   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 04:08:15,529   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 04:08:15,529   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 04:08:15,529   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 04:08:15,530   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 04:08:15,539   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 04:08:15,539   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 04:08:15,554   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 04:08:15,556   INFO  [Thread-9] HOST: Logging config info
2014-02-27 04:08:15,557   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 04:08:15,582   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-26 23:10:18,221   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-26 23:10:18,230   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10024_10025 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-26 23:10:18,232   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10029_10030 on table: USER of type: BALANCED_TREE
2014-02-26 23:10:18,236   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10034_10035 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,237   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10039_10040 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,237   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,237   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: SPHERE of type: BALANCED_TREE
2014-02-26 23:10:18,244   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10052_10053 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-26 23:10:18,244   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:10:18,244   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10057_10058 on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:10:18,245   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:10:18,247   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:10:18,247   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:10:18,248   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10066_10067 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-26 23:10:18,249   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,250   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10075_10076 on table: MESSAGE of type: BALANCED_TREE
2014-02-26 23:10:18,251   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,252   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10084_10085 on table: EXPRESSION of type: BALANCED_TREE
2014-02-26 23:10:18,254   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:10:18,254   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-26 23:10:18,254   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:10:18,254   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-26 23:10:18,254   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECK of type: BALANCED_TREE
2014-02-26 23:10:18,255   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,256   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:10:18,256   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:10:18,257   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-26 23:10:18,257   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:10:18,257   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:10:18,258   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:10:18,258   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,258   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,259   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,259   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,259   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,259   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,260   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-26 23:10:18,260   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,260   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,260   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,261   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,261   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,262   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-26 23:10:18,262   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:10:18,262   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:10:18,263   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,263   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:10:18,276   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-26 23:10:18,332   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:10:18,349   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:10:18,353   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-26 23:10:18,365   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:10:18,371   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:10:18,387   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:10:18,393   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:10:18,400   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-26 23:10:18,403   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:10:18,406   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:10:18,409   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-26 23:10:18,413   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:10:18,417   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:18,423   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:18,430   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:18,437   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:10:18,439   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:18,443   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:18,446   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:18,455   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-26 23:10:18,460   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-26 23:10:18,466   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-26 23:10:18,471   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-26 23:10:18,473   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-26 23:10:18,476   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-26 23:10:18,481   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:10:18,484   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-26 23:10:18,487   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-26 23:10:18,491   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-26 23:10:18,493   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:10:18,495   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:10:18,497   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:10:18,500   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:10:18,505   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:10:18,511   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:10:18,516   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-26 23:10:18,518   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-26 23:10:18,521   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-26 23:10:18,524   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-26 23:10:18,527   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:10:18,532   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:10:18,535   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:10:18,538   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-26 23:10:18,542   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:10:18,546   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:10:18,548   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-26 23:10:18,550   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-26 23:10:18,553   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:10:18,556   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:10:18,559   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:10:18,562   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-26 23:10:18,564   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-26 23:10:18,566   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-26 23:10:18,570   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:10:18,573   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:18,576   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:18,578   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:18,584   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:10:18,586   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:18,590   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:18,592   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:18,599   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:10:18,600   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:18,603   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:18,606   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:18,609   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:10:18,610   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:10:18,613   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:10:18,617   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:10:18,620   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:10:18,624   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-26 23:10:18,626   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-26 23:10:18,631   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-26 23:10:18,633   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:10:18,636   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:10:18,638   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-26 23:10:18,640   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-26 23:10:18,641   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-26 23:10:18,643   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-26 23:10:18,647   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-26 23:10:18,648   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:10:18,652   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:10:18,655   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:10:18,663   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:10:18,664   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:10:18,668   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:10:18,669   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:10:18,671   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-26 23:10:18,673   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:10:18,675   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:10:18,677   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-26 23:10:18,679   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:10:18,680   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:10:18,683   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:10:18,686   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:10:18,688   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-26 23:10:18,689   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-26 23:10:18,692   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-26 23:10:18,693   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-26 23:10:18,720   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-26 23:10:18,725   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:10:18,730   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:10:18,732   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:18,733   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-26 23:10:18,742   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:18,751   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-26 23:10:18,754   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-26 23:10:18,767   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-26 23:10:18,768   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-26 23:10:18,771   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:18,772   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-26 23:10:18,785   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-26 23:10:18,785   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-26 23:10:18,786   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:10:18,788   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:18,791   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-26 23:10:18,795   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:10:18,801   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-26 23:10:18,806   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-26 23:10:18,809   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:18,811   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-26 23:10:18,814   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-26 23:10:18,817   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-26 23:10:18,820   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:10:18,827   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-26 23:10:18,830   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:18,831   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-26 23:10:18,846   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-26 23:10:18,851   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-26 23:10:18,856   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-26 23:10:18,858   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-26 23:10:18,867   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-26 23:10:18,874   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:18,876   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-26 23:10:18,881   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-26 23:10:18,889   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-26 23:10:18,889   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:18,890   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-26 23:10:18,896   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:10:18,898   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-26 23:10:18,905   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-26 23:10:18,909   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-26 23:10:18,910   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:10:18,941   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:10:18,949   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-26 23:10:18,958   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:18,960   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-26 23:10:18,967   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:10:18,969   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-26 23:10:18,974   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:10:18,984   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:10:18,991   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-26 23:10:18,996   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:18,997   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-26 23:10:19,002   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-26 23:10:19,003   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-26 23:10:19,009   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-26 23:10:19,015   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-26 23:10:19,016   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:19,017   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-26 23:10:19,022   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-26 23:10:19,025   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-26 23:10:19,028   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:19,029   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-26 23:10:19,032   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:19,033   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:10:19,035   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-26 23:10:19,045   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:19,046   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-26 23:10:19,053   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:10:19,057   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-26 23:10:19,059   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:19,060   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-26 23:10:19,067   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:10:19,074   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:19,075   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:10:19,080   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:19,081   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:10:19,085   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:10:19,091   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-26 23:10:19,096   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-26 23:10:19,109   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-26 23:10:19,110   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:10:19,113   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-26 23:10:19,116   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-26 23:10:19,120   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:10:19,121   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:10:19,157   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:10:19,158   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:10:19,162   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-26 23:10:19,166   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:10:19,168   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:10:19,170   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-26 23:10:19,173   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:10:19,178   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-26 23:10:19,181   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:10:19,181   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-26 23:10:19,183   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:19,185   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-26 23:10:19,187   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-26 23:10:19,188   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:10:19,191   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-26 23:10:19,191   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:19,192   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-26 23:10:19,195   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:19,196   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-26 23:10:19,201   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 04:10:20,652   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 04:10:20,661   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 04:10:20,670   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 04:10:20,697   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 04:10:20,697   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 04:10:20,700   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 04:10:20,706   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 04:10:20,714   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 04:10:20,714   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 04:10:20,715   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 04:10:20,726   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 04:10:20,761   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 04:10:20,803   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 04:10:20,843   FATAL [main] HOST: The PID of this process is 16661
2014-02-27 04:10:20,843   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 04:10:20,843   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 948735      0t0  TCP *:52333 (LISTEN)
2014-02-27 04:10:20,843   FATAL [main] HOST: java      16376 thorsten   34u  IPv6 948343      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 04:10:20,843   FATAL [main] HOST: java      16376 thorsten   40u  IPv6 948350      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 04:10:20,844   FATAL [main] HOST: java      16376 thorsten   54u  IPv6 948357      0t0  TCP *:8080 (LISTEN)
2014-02-27 04:10:20,844   FATAL [main] HOST: java      16376 thorsten   55u  IPv6 948424      0t0  TCP *:21212 (LISTEN)
2014-02-27 04:10:20,844   FATAL [main] HOST: java      16376 thorsten   56u  IPv6 948425      0t0  TCP *:21211 (LISTEN)
2014-02-27 04:10:20,850   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 04:10:20,850   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 04:10:21,181   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:38086
2014-02-27 04:10:21,185   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 04:10:21,188   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-02-27 04:10:21,198   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 04:10:21,208   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 04:10:21,208   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 04:10:21,209   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-26 23:10:31,574   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-26 23:10:31,581   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10024_10025 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-26 23:10:31,582   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10029_10030 on table: USER of type: BALANCED_TREE
2014-02-26 23:10:31,585   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10034_10035 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,587   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10039_10040 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,587   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,588   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: SPHERE of type: BALANCED_TREE
2014-02-26 23:10:31,594   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10052_10053 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-26 23:10:31,595   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:10:31,595   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10057_10058 on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:10:31,596   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:10:31,596   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:10:31,597   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:10:31,597   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10066_10067 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-26 23:10:31,598   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,599   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10075_10076 on table: MESSAGE of type: BALANCED_TREE
2014-02-26 23:10:31,599   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,600   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10084_10085 on table: EXPRESSION of type: BALANCED_TREE
2014-02-26 23:10:31,601   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:10:31,601   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-26 23:10:31,602   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:10:31,602   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-26 23:10:31,602   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECK of type: BALANCED_TREE
2014-02-26 23:10:31,604   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,605   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:10:31,605   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:10:31,605   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-26 23:10:31,606   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:10:31,606   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:10:31,606   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:10:31,607   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,607   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,607   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,608   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,608   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,608   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,609   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-26 23:10:31,609   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,609   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,610   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,610   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,611   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,611   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-26 23:10:31,611   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:10:31,612   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:10:31,612   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,612   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:10:31,625   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-26 23:10:31,669   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:10:31,693   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:10:31,700   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-26 23:10:31,704   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:10:31,709   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:10:31,718   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:10:31,724   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:10:31,732   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-26 23:10:31,734   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:10:31,736   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:10:31,739   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-26 23:10:31,742   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:10:31,744   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:31,751   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:31,755   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:31,762   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:10:31,764   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:31,768   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:31,789   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:31,799   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-26 23:10:31,802   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-26 23:10:31,806   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-26 23:10:31,810   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-26 23:10:31,812   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-26 23:10:31,815   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-26 23:10:31,978   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:10:31,981   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-26 23:10:32,007   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-26 23:10:32,011   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-26 23:10:32,013   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:10:32,018   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:10:32,021   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:10:32,024   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:10:32,026   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:10:32,033   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:10:32,040   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-26 23:10:32,043   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-26 23:10:32,046   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-26 23:10:32,050   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-26 23:10:32,052   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:10:32,058   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:10:32,061   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-26 23:10:32,065   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-26 23:10:32,066   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:10:32,072   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:10:32,075   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-26 23:10:32,078   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-26 23:10:32,079   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:10:32,082   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:10:32,085   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:10:32,088   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-26 23:10:32,092   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-26 23:10:32,094   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-26 23:10:32,098   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:10:32,101   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:32,104   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:32,106   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:32,110   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:10:32,112   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:32,115   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:32,121   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:32,124   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:10:32,126   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:32,129   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:32,132   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:10:32,136   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:10:32,138   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:10:32,142   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:10:32,146   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:10:32,150   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:10:32,154   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-26 23:10:32,157   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-26 23:10:32,166   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-26 23:10:32,168   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:10:32,170   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:10:32,174   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-26 23:10:32,176   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-26 23:10:32,178   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-26 23:10:32,179   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-26 23:10:32,184   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-26 23:10:32,185   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:10:32,189   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:10:32,192   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:10:32,202   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:10:32,204   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:10:32,206   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:10:32,208   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:10:32,212   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-26 23:10:32,214   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:10:32,226   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:10:32,228   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-26 23:10:32,231   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:10:32,232   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:10:32,235   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:10:32,237   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:10:32,241   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-26 23:10:32,243   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-26 23:10:32,245   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-26 23:10:32,247   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-26 23:10:32,274   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-26 23:10:32,283   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:10:32,287   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:10:32,291   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:32,293   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-26 23:10:32,303   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:32,304   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-26 23:10:32,307   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-26 23:10:32,324   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-26 23:10:32,329   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-26 23:10:32,332   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:32,334   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-26 23:10:32,343   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-26 23:10:32,343   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-26 23:10:32,344   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:10:32,347   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:32,354   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-26 23:10:32,358   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:10:32,365   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-26 23:10:32,368   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-26 23:10:32,371   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:32,372   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-26 23:10:32,381   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-26 23:10:32,385   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-26 23:10:32,387   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:10:32,396   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-26 23:10:32,402   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:32,403   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-26 23:10:32,409   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-26 23:10:32,414   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-26 23:10:32,418   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-26 23:10:32,421   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-26 23:10:32,430   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-26 23:10:32,437   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:32,438   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-26 23:10:32,446   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-26 23:10:32,453   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-26 23:10:32,453   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:32,454   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-26 23:10:32,457   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:10:32,458   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-26 23:10:32,463   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-26 23:10:32,466   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-26 23:10:32,467   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:10:32,492   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:10:32,494   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-26 23:10:32,497   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:32,499   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-26 23:10:32,503   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:10:32,506   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-26 23:10:32,509   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:10:32,512   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:10:32,517   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-26 23:10:32,519   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:32,520   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-26 23:10:32,524   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-26 23:10:32,525   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-26 23:10:32,529   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-26 23:10:32,535   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-26 23:10:32,538   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:32,539   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-26 23:10:32,542   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-26 23:10:32,543   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-26 23:10:32,546   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:32,548   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-26 23:10:32,551   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:32,552   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:10:32,555   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-26 23:10:32,558   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:32,559   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-26 23:10:32,564   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:10:32,567   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-26 23:10:32,569   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:32,570   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-26 23:10:32,575   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:10:32,578   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:32,589   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:10:32,594   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:32,595   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:10:32,599   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:10:32,608   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-26 23:10:32,613   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-26 23:10:32,626   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-26 23:10:32,627   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:10:32,629   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-26 23:10:32,631   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-26 23:10:32,635   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:10:32,636   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:10:32,671   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:10:32,672   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:10:32,675   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-26 23:10:32,677   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:10:32,680   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:10:32,699   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-26 23:10:32,702   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:10:32,711   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-26 23:10:32,715   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:10:32,716   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-26 23:10:32,721   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:32,722   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-26 23:10:32,724   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-26 23:10:32,725   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:10:32,735   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-26 23:10:32,735   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:10:32,737   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-26 23:10:32,740   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:10:32,741   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-26 23:10:32,748   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 04:10:34,391   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 04:10:34,400   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 04:10:34,411   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 04:10:34,439   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 04:10:34,439   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 04:10:34,442   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 04:10:34,483   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 04:10:34,500   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 04:10:34,558   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@485fd4e6
2014-02-27 04:10:34,563   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 04:10:34,565   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:45781
2014-02-27 04:10:34,566   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 04:10:34,569   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:45781
2014-02-27 04:10:34,587   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169f71d264800000 with negotiated timeout 6000 for client /127.0.0.1:45781
2014-02-27 04:10:34,587   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169f71d264800000, negotiated timeout = 6000
2014-02-27 04:10:34,636   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 04:10:34,664   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 04:10:34,664   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 04:10:34,678   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 04:10:34,950   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 04:10:36,612   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 04:10:36,629   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 04:10:36,756   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 04:10:36,761   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 04:10:37,124   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 04:10:37,295   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 04:10:37,320   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 04:10:37,331   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 04:10:37,340   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 04:10:37,348   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 04:10:37,353   WARN  [qtp1587393160-41] HOST: JSON interface: Connection refused
2014-02-27 04:10:37,354   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 04:10:37,358   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 04:10:37,366   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 10 ms.
2014-02-27 04:10:37,366   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 14 ms.
2014-02-27 04:10:37,366   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 35 ms.
2014-02-27 04:10:37,375   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:10:37,375   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:10:37,390   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:10:37,397   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 04:10:37,399   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 11 ms.
2014-02-27 04:10:37,408   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:10:37,437   INFO  [main] HOST: Database start action is Create.
2014-02-27 04:10:37,466   INFO  [main] HOST: PID of this Volt process is 16730
2014-02-27 04:10:37,467   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 04:10:37,467   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 04:10:37,467   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 04:10:37,467   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 04:10:37,467   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 04:10:37,467   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 04:10:37,467   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 04:10:37,467   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 04:10:37,467   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 04:10:37,467   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 04:10:37,467   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 04:10:37,467   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 04:10:37,467   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 04:10:37,467   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 04:10:37,468   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 04:10:37,468   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 04:10:37,468   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 04:10:37,468   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 04:10:37,468   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 04:10:37,468   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 04:10:37,468   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 04:10:37,469   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 04:10:37,469   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 04:10:37,469   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 04:10:37,469   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 04:10:37,487   INFO  [Thread-10] HOST: Logging config info
2014-02-27 04:10:37,488   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 04:10:37,490   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 04:10:37,523   INFO  [Thread-11] CONSOLE: Server completed initialization.
2014-02-26 23:27:48,712   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-26 23:27:48,718   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-26 23:27:48,719   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,721   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,723   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,723   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-26 23:27:48,724   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-26 23:27:48,724   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:27:48,724   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:27:48,734   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:27:48,735   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:27:48,735   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:27:48,735   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-26 23:27:48,736   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,737   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-26 23:27:48,738   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,738   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-26 23:27:48,739   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:27:48,739   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-26 23:27:48,739   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:27:48,740   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-26 23:27:48,740   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-26 23:27:48,741   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,742   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:27:48,742   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:27:48,742   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10097_10098 on table: RULE of type: BALANCED_TREE
2014-02-26 23:27:48,743   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:27:48,743   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:27:48,743   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10101_10102 on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:27:48,743   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,743   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,744   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10107_10108 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,744   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,744   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,744   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10113_10114 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,745   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10116_10117 on table: CHECKPATH of type: BALANCED_TREE
2014-02-26 23:27:48,745   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,745   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,745   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10121_10122 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,745   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,745   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10126_10127 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,746   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10130_10131 on table: ACTION of type: BALANCED_TREE
2014-02-26 23:27:48,746   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:27:48,747   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10134_10135 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:27:48,747   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,747   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10139_10140 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:27:48,758   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-26 23:27:48,813   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:27:48,826   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:27:48,830   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-26 23:27:48,836   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:27:48,845   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:27:48,853   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:27:48,857   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:27:48,863   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-26 23:27:48,865   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:27:48,869   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:27:48,871   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-26 23:27:48,875   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:27:48,879   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:27:48,883   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:27:48,888   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:27:48,893   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:27:48,894   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:27:48,897   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:27:48,900   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:27:48,903   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-26 23:27:48,904   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-26 23:27:48,912   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-26 23:27:48,915   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-26 23:27:48,919   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-26 23:27:48,921   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-26 23:27:48,925   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-26 23:27:48,928   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:27:48,930   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-26 23:27:48,933   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-26 23:27:48,936   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-26 23:27:48,937   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:27:48,939   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:27:48,941   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:27:48,943   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:27:48,944   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:27:48,947   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:27:48,949   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:27:48,952   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-26 23:27:48,954   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-26 23:27:48,956   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-26 23:27:48,959   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-26 23:27:48,960   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:27:48,963   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:27:48,980   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-26 23:27:48,982   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-26 23:27:48,983   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:27:48,986   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:27:48,988   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:27:48,990   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-26 23:27:48,992   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-26 23:27:48,994   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-26 23:27:48,997   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:27:48,998   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:27:49,001   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:27:49,004   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:27:49,007   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:27:49,009   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:27:49,011   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:27:49,013   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:27:49,017   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:27:49,019   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:27:49,021   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:27:49,023   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:27:49,026   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:27:49,028   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:27:49,030   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:27:49,032   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:27:49,035   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:27:49,038   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-26 23:27:49,039   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-26 23:27:49,043   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-26 23:27:49,044   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:27:49,046   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:27:49,049   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-26 23:27:49,050   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-26 23:27:49,064   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-26 23:27:49,066   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-26 23:27:49,068   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-26 23:27:49,069   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:27:49,071   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:27:49,072   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:27:49,075   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:27:49,076   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:27:49,078   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:27:49,080   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:27:49,082   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-26 23:27:49,087   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:27:49,089   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:27:49,090   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-26 23:27:49,092   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:27:49,093   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:27:49,095   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:27:49,103   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:27:49,105   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-26 23:27:49,107   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-26 23:27:49,115   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-26 23:27:49,116   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-26 23:27:49,142   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-26 23:27:49,146   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:27:49,153   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:27:49,155   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:27:49,156   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-26 23:27:49,158   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-26 23:27:49,159   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-26 23:27:49,162   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-26 23:27:49,169   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-26 23:27:49,171   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-26 23:27:49,182   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:27:49,183   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-26 23:27:49,196   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-26 23:27:49,196   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-26 23:27:49,198   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:27:49,200   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:27:49,201   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-26 23:27:49,204   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:27:49,209   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-26 23:27:49,212   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-26 23:27:49,218   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-26 23:27:49,224   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-26 23:27:49,227   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-26 23:27:49,231   ERROR [main] COMPILER: [SelectAllLogEntries.class]: Failed to plan for statement (SelectAllLogEntries) SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER; Error: "user lacks privilege or object not found: LOGQUEUE"
2014-02-26 23:27:49,232   ERROR [main] COMPILER: Failed to compile XML
2014-02-26 23:27:49,232   ERROR [main] COMPILER: Catalog compilation failed.
2014-02-27 04:27:55,219   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 04:27:55,228   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 04:27:55,238   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 04:27:55,265   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 04:27:55,265   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 04:27:55,267   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 04:27:55,272   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 04:27:55,280   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 04:27:55,280   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 0
2014-02-27 04:27:55,281   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 04:27:55,293   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 04:27:55,317   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 04:27:55,375   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 04:27:55,419   FATAL [main] HOST: The PID of this process is 17023
2014-02-27 04:27:55,419   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 04:27:55,419   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 950221      0t0  TCP *:40094 (LISTEN)
2014-02-27 04:27:55,419   FATAL [main] HOST: java      16730 thorsten   34u  IPv6 949563      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 04:27:55,419   FATAL [main] HOST: java      16730 thorsten   40u  IPv6 949570      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 04:27:55,419   FATAL [main] HOST: java      16730 thorsten   54u  IPv6 949577      0t0  TCP *:8080 (LISTEN)
2014-02-27 04:27:55,419   FATAL [main] HOST: java      16730 thorsten   56u  IPv6 949648      0t0  TCP *:21212 (LISTEN)
2014-02-27 04:27:55,419   FATAL [main] HOST: java      16730 thorsten   57u  IPv6 949649      0t0  TCP *:21211 (LISTEN)
2014-02-27 04:27:55,425   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 04:27:55,425   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 04:27:55,767   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:38108
2014-02-27 04:27:55,774   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 04:27:55,777   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-02-27 04:27:55,794   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 04:27:55,803   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 04:27:55,803   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 04:27:55,804   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-26 23:28:30,021   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-26 23:28:30,027   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-26 23:28:30,028   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,029   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,031   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,031   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-26 23:28:30,032   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-26 23:28:30,032   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:28:30,032   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:28:30,033   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:28:30,033   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:28:30,034   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:28:30,034   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-26 23:28:30,035   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,035   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-26 23:28:30,036   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,037   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-26 23:28:30,038   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:28:30,038   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-26 23:28:30,038   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:28:30,038   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-26 23:28:30,038   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-26 23:28:30,040   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,041   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:28:30,041   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:28:30,041   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10097_10098 on table: RULE of type: BALANCED_TREE
2014-02-26 23:28:30,042   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:28:30,042   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:28:30,042   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10101_10102 on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:28:30,043   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,043   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,043   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10107_10108 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,044   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,044   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,044   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10113_10114 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,045   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10116_10117 on table: CHECKPATH of type: BALANCED_TREE
2014-02-26 23:28:30,045   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,046   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,046   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10121_10122 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,046   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,046   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10126_10127 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,047   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10130_10131 on table: ACTION of type: BALANCED_TREE
2014-02-26 23:28:30,048   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:28:30,048   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10134_10135 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:28:30,049   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,049   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10139_10140 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:28:30,063   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-26 23:28:30,109   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:28:30,121   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:28:30,125   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-26 23:28:30,130   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:28:30,135   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:30,142   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:30,146   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:30,152   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-26 23:28:30,154   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:28:30,157   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:28:30,159   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-26 23:28:30,161   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:28:30,163   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:30,167   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:30,171   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:30,177   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:28:30,178   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:30,181   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:30,184   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:30,191   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-26 23:28:30,193   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-26 23:28:30,195   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-26 23:28:30,199   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-26 23:28:30,207   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-26 23:28:30,209   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-26 23:28:30,213   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-26 23:28:30,216   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:28:30,218   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-26 23:28:30,221   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-26 23:28:30,224   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-26 23:28:30,225   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:28:30,229   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:28:30,231   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:28:30,233   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:28:30,235   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:30,238   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:30,240   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:30,243   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-26 23:28:30,245   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-26 23:28:30,250   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-26 23:28:30,253   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-26 23:28:30,255   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:28:30,260   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:28:30,261   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-26 23:28:30,263   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-26 23:28:30,266   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:30,269   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:30,271   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:30,273   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-26 23:28:30,275   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-26 23:28:30,277   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-26 23:28:30,280   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:28:30,281   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:30,284   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:30,286   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:30,290   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:28:30,291   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:30,294   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:30,295   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:30,298   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:28:30,299   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:30,305   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:30,307   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:30,309   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:28:30,311   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:28:30,313   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:28:30,315   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:28:30,318   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:28:30,320   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-26 23:28:30,322   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-26 23:28:30,325   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-26 23:28:30,326   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:28:30,328   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:28:30,330   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-26 23:28:30,331   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-26 23:28:30,333   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-26 23:28:30,335   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-26 23:28:30,337   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-26 23:28:30,338   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:28:30,340   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:28:30,341   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:28:30,344   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:28:30,345   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:28:30,346   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:28:30,348   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:28:30,357   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-26 23:28:30,358   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:28:30,359   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:28:30,361   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-26 23:28:30,362   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:28:30,363   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:28:30,410   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:28:30,415   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:28:30,417   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-26 23:28:30,418   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-26 23:28:30,422   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-26 23:28:30,427   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-26 23:28:30,455   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-26 23:28:30,460   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:28:30,463   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:28:30,465   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:30,465   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-26 23:28:30,468   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:30,472   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-26 23:28:30,475   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-26 23:28:30,481   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-26 23:28:30,482   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-26 23:28:30,492   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:30,495   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-26 23:28:30,508   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-26 23:28:30,508   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-26 23:28:30,509   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:28:30,514   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:30,521   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-26 23:28:30,524   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:28:30,528   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-26 23:28:30,532   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-26 23:28:30,534   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:30,535   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-26 23:28:30,538   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:28:30,544   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-26 23:28:30,547   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:30,548   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-26 23:28:30,553   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-26 23:28:30,557   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-26 23:28:30,560   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-26 23:28:30,561   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-26 23:28:30,565   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-26 23:28:30,567   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:30,568   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-26 23:28:30,573   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-26 23:28:30,577   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-26 23:28:30,577   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:30,578   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-26 23:28:30,580   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:28:30,581   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-26 23:28:30,584   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-26 23:28:30,587   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-26 23:28:30,588   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:28:30,605   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:28:30,607   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-26 23:28:30,610   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:30,611   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-26 23:28:30,614   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:28:30,616   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-26 23:28:30,619   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:28:30,623   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:28:30,629   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-26 23:28:30,632   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:30,633   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-26 23:28:30,642   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-26 23:28:30,642   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-26 23:28:30,646   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-26 23:28:30,649   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-26 23:28:30,658   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-26 23:28:30,668   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:30,669   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-26 23:28:30,671   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-26 23:28:30,675   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-26 23:28:30,682   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:30,683   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-26 23:28:30,685   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:30,686   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:28:30,690   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-26 23:28:30,694   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:30,695   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-26 23:28:30,699   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-26 23:28:30,702   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:28:30,705   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-26 23:28:30,707   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:30,708   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-26 23:28:30,713   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:28:30,716   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:30,717   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:28:30,719   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:30,720   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:28:30,723   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:28:30,729   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-26 23:28:30,733   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-26 23:28:30,736   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-26 23:28:30,737   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:28:30,742   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-26 23:28:30,749   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-26 23:28:30,761   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:28:30,762   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:28:30,784   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:28:30,785   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:28:30,789   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-26 23:28:30,791   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:28:30,800   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:28:30,803   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-26 23:28:30,805   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:28:30,808   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-26 23:28:30,810   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:28:30,811   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-26 23:28:30,813   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:30,814   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-26 23:28:30,816   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-26 23:28:30,817   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:28:30,819   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-26 23:28:30,819   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:30,820   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-26 23:28:30,823   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:30,824   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-26 23:28:30,828   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 04:28:32,584   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 04:28:32,600   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 04:28:32,610   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 04:28:32,641   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 04:28:32,641   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 04:28:32,643   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 04:28:32,648   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 04:28:32,661   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 04:28:32,661   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 04:28:32,662   INFO  [main] NETWORK: 2 notified of host 0
2014-02-27 04:28:32,676   INFO  [ZooKeeperServer] REJOIN: Joining site 2:-1 known  active sites 0:-1, 2:-1
2014-02-27 04:28:32,700   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 04:28:32,739   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 04:28:32,772   FATAL [main] HOST: The PID of this process is 17086
2014-02-27 04:28:32,772   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 04:28:32,772   FATAL [main] HOST: java      14305 thorsten  161u  IPv6 950917      0t0  TCP *:40785 (LISTEN)
2014-02-27 04:28:32,772   FATAL [main] HOST: java      16730 thorsten   34u  IPv6 949563      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 04:28:32,772   FATAL [main] HOST: java      16730 thorsten   40u  IPv6 949570      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 04:28:32,772   FATAL [main] HOST: java      16730 thorsten   54u  IPv6 949577      0t0  TCP *:8080 (LISTEN)
2014-02-27 04:28:32,772   FATAL [main] HOST: java      16730 thorsten   56u  IPv6 949648      0t0  TCP *:21212 (LISTEN)
2014-02-27 04:28:32,772   FATAL [main] HOST: java      16730 thorsten   57u  IPv6 949649      0t0  TCP *:21211 (LISTEN)
2014-02-27 04:28:32,778   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 04:28:32,778   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 04:28:33,112   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 2:-1
2014-02-27 04:28:33,112   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:38110
2014-02-27 04:28:33,113   WARN  [Volt Network - 1] NETWORK: Host 2 failed
2014-02-27 04:28:33,113   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 2:-1, reporting: 0:-1, witnessed: true}
2014-02-27 04:28:33,114   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [2:-1]
2014-02-27 04:28:33,120   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 2:-1 to failed sites history
2014-02-27 04:28:33,121   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 2:-1 initiatorSafeInitPoints {2:-1->-1}
2014-02-27 04:28:33,121   WARN  [ZooKeeperServer] NETWORK: Host 2 failed
2014-02-26 23:28:43,485   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-26 23:28:43,491   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-26 23:28:43,492   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,492   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,494   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,495   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-26 23:28:43,495   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-26 23:28:43,496   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:28:43,496   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:28:43,497   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:28:43,497   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:28:43,497   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:28:43,498   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-26 23:28:43,499   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,499   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-26 23:28:43,500   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,501   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-26 23:28:43,501   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:28:43,502   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-26 23:28:43,502   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:28:43,502   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-26 23:28:43,502   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-26 23:28:43,503   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10094_10095 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,505   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:28:43,505   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:28:43,505   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10097_10098 on table: RULE of type: BALANCED_TREE
2014-02-26 23:28:43,506   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:28:43,506   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:28:43,506   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10101_10102 on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:28:43,507   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,507   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,507   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10107_10108 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,508   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,508   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,508   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10113_10114 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,508   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10116_10117 on table: CHECKPATH of type: BALANCED_TREE
2014-02-26 23:28:43,509   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,509   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,509   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10121_10122 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,510   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,510   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10126_10127 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,511   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10130_10131 on table: ACTION of type: BALANCED_TREE
2014-02-26 23:28:43,512   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:28:43,512   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10134_10135 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:28:43,513   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,513   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10139_10140 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:28:43,525   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-26 23:28:43,568   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:28:43,581   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:28:43,584   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-26 23:28:43,590   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:28:43,595   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:43,602   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:43,606   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:43,612   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-26 23:28:43,614   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:28:43,617   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:28:43,619   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-26 23:28:43,621   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:28:43,623   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:43,627   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:43,631   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:43,635   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:28:43,636   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:43,639   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:43,643   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:43,652   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-26 23:28:43,653   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-26 23:28:43,656   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-26 23:28:43,659   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-26 23:28:43,662   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-26 23:28:43,664   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-26 23:28:43,666   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-26 23:28:43,669   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:28:43,672   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-26 23:28:43,674   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-26 23:28:43,677   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-26 23:28:43,678   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:28:43,680   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:28:43,682   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:28:43,684   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:28:43,685   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:43,690   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:43,692   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:43,695   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-26 23:28:43,697   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-26 23:28:43,699   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-26 23:28:43,703   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-26 23:28:43,704   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:28:43,708   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:28:43,709   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-26 23:28:43,713   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-26 23:28:43,714   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:43,717   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:43,719   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:28:43,721   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-26 23:28:43,723   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-26 23:28:43,725   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-26 23:28:43,728   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:28:43,730   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:43,733   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:43,735   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:43,738   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:28:43,740   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:43,742   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:43,744   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:43,748   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:28:43,750   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:43,760   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:43,762   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:28:43,766   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:28:43,767   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:28:43,771   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:28:43,772   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:28:43,775   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:28:43,777   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-26 23:28:43,779   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-26 23:28:43,783   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-26 23:28:43,786   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:28:43,788   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:28:43,791   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-26 23:28:43,793   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-26 23:28:43,795   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-26 23:28:43,796   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-26 23:28:43,798   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-26 23:28:43,799   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:28:43,803   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:28:43,805   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:28:43,807   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:28:43,808   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:28:43,810   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:28:43,812   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:28:43,818   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-26 23:28:43,819   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:28:43,821   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:28:43,822   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-26 23:28:43,824   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:28:43,825   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:28:43,827   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:28:43,829   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:28:43,831   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-26 23:28:43,832   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-26 23:28:43,836   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-26 23:28:43,837   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-26 23:28:43,861   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-26 23:28:43,866   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:28:43,869   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:28:43,871   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:43,872   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-26 23:28:43,874   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:43,875   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-26 23:28:43,878   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-26 23:28:43,884   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-26 23:28:43,885   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-26 23:28:43,887   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:43,889   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-26 23:28:43,900   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-26 23:28:43,900   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-26 23:28:43,901   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:28:43,904   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:43,905   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-26 23:28:43,908   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:28:43,912   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-26 23:28:43,915   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-26 23:28:43,919   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:43,920   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-26 23:28:43,923   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:28:43,930   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-26 23:28:43,932   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:43,933   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-26 23:28:43,937   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-26 23:28:43,945   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-26 23:28:43,947   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-26 23:28:43,948   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-26 23:28:43,956   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-26 23:28:43,963   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:43,964   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-26 23:28:43,974   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-26 23:28:43,978   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-26 23:28:43,978   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:43,979   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-26 23:28:43,987   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:28:43,988   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-26 23:28:43,993   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-26 23:28:44,000   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-26 23:28:44,004   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:28:44,057   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:28:44,066   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-26 23:28:44,069   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:44,080   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-26 23:28:44,099   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:28:44,104   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-26 23:28:44,119   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:28:44,128   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:28:44,131   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-26 23:28:44,138   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:44,139   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-26 23:28:44,148   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-26 23:28:44,148   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-26 23:28:44,149   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-26 23:28:44,164   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-26 23:28:44,166   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-26 23:28:44,177   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:44,178   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-26 23:28:44,181   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-26 23:28:44,182   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-26 23:28:44,184   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:44,185   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-26 23:28:44,197   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:44,198   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:28:44,200   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-26 23:28:44,207   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:44,208   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-26 23:28:44,211   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-26 23:28:44,223   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:28:44,228   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-26 23:28:44,230   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:44,237   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-26 23:28:44,241   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:28:44,243   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:44,244   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:28:44,247   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:44,248   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:28:44,251   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:28:44,255   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-26 23:28:44,265   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-26 23:28:44,267   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-26 23:28:44,268   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:28:44,273   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-26 23:28:44,277   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-26 23:28:44,286   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:28:44,287   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:28:44,310   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:28:44,312   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:28:44,315   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-26 23:28:44,317   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:28:44,325   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:28:44,330   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-26 23:28:44,337   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:28:44,341   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-26 23:28:44,342   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:28:44,343   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-26 23:28:44,346   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:44,347   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-26 23:28:44,349   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-26 23:28:44,350   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:28:44,352   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-26 23:28:44,352   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:28:44,353   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-26 23:28:44,356   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:28:44,367   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-26 23:28:44,376   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 04:28:45,912   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 04:28:45,923   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 04:28:45,930   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 04:28:45,956   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 04:28:45,956   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 04:28:45,958   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 04:28:45,995   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 04:28:46,011   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 04:28:46,063   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-02-27 04:28:46,069   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 04:28:46,070   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:45798
2014-02-27 04:28:46,071   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 04:28:46,074   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:45798
2014-02-27 04:28:46,090   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169f7a263d000000 with negotiated timeout 6000 for client /127.0.0.1:45798
2014-02-27 04:28:46,090   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169f7a263d000000, negotiated timeout = 6000
2014-02-27 04:28:46,132   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 04:28:46,168   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 04:28:46,168   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 04:28:46,182   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 04:28:46,422   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 04:28:47,989   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 04:28:47,995   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 04:28:48,096   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 04:28:48,101   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 04:28:48,401   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 04:28:48,551   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 04:28:48,570   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 04:28:48,585   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 04:28:48,589   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 04:28:48,598   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 04:28:48,601   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 20 ms.
2014-02-27 04:28:48,602   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 04:28:48,602   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 2 ms.
2014-02-27 04:28:48,610   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:28:48,610   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:28:48,611   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 04:28:48,611   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 4 ms.
2014-02-27 04:28:48,624   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:28:48,628   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 04:28:48,633   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 11 ms.
2014-02-27 04:28:48,641   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:28:48,666   INFO  [main] HOST: Database start action is Create.
2014-02-27 04:28:48,690   INFO  [main] HOST: PID of this Volt process is 17154
2014-02-27 04:28:48,690   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 04:28:48,690   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 04:28:48,690   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 04:28:48,691   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 04:28:48,691   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 04:28:48,691   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 04:28:48,691   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 04:28:48,691   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 04:28:48,691   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 04:28:48,691   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 04:28:48,691   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 04:28:48,691   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 04:28:48,691   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 04:28:48,691   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 04:28:48,692   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 04:28:48,692   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 04:28:48,692   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 04:28:48,692   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 04:28:48,692   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 04:28:48,692   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 04:28:48,692   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 04:28:48,692   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 04:28:48,692   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 04:28:48,700   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 04:28:48,700   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 04:28:48,715   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 04:28:48,717   INFO  [Thread-9] HOST: Logging config info
2014-02-27 04:28:48,717   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 04:28:48,749   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-26 23:29:34,058   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-26 23:29:34,066   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-26 23:29:34,067   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,068   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,071   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,071   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-26 23:29:34,072   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-26 23:29:34,072   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:29:34,072   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:29:34,080   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:29:34,080   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:29:34,081   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:29:34,081   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-26 23:29:34,085   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,086   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-26 23:29:34,087   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,087   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-26 23:29:34,091   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:29:34,091   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-26 23:29:34,091   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:29:34,091   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-26 23:29:34,091   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-26 23:29:34,092   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-26 23:29:34,093   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,094   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:29:34,094   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:29:34,094   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-26 23:29:34,096   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:29:34,096   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:29:34,097   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:29:34,097   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,097   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,097   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,098   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,098   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,098   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,098   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-26 23:29:34,099   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,099   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,099   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,099   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,100   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,101   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-26 23:29:34,101   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:29:34,102   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:29:34,102   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,102   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:29:34,115   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-26 23:29:34,170   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:29:34,184   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:29:34,189   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-26 23:29:34,197   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:29:34,205   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:34,212   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:34,216   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:34,223   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-26 23:29:34,227   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:29:34,231   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:29:34,234   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-26 23:29:34,239   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:29:34,241   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,246   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,250   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,258   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:29:34,260   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,263   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,266   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,277   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-26 23:29:34,278   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,281   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,288   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,291   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-26 23:29:34,294   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-26 23:29:34,301   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-26 23:29:34,304   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-26 23:29:34,307   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-26 23:29:34,310   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-26 23:29:34,314   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:29:34,315   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-26 23:29:34,318   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-26 23:29:34,321   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-26 23:29:34,323   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:29:34,325   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:29:34,327   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:29:34,329   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:29:34,330   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:34,334   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:34,336   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:34,340   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-26 23:29:34,344   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-26 23:29:34,348   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-26 23:29:34,351   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-26 23:29:34,352   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:29:34,356   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:29:34,357   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-26 23:29:34,359   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-26 23:29:34,361   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:34,363   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:34,366   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:34,368   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-26 23:29:34,370   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-26 23:29:34,373   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-26 23:29:34,378   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:29:34,381   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,384   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,386   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,389   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:29:34,391   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,394   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,401   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,405   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:29:34,407   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,411   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,413   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:34,416   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:29:34,417   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:29:34,420   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:29:34,422   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:29:34,427   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:29:34,430   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-26 23:29:34,434   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-26 23:29:34,439   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-26 23:29:34,441   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:29:34,443   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:29:34,446   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-26 23:29:34,447   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-26 23:29:34,449   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-26 23:29:34,450   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-26 23:29:34,454   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-26 23:29:34,455   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:29:34,459   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:29:34,460   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:29:34,469   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:29:34,470   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:29:34,475   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:29:34,476   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:29:34,478   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-26 23:29:34,479   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:29:34,481   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:29:34,482   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-26 23:29:34,484   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:29:34,485   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:29:34,487   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:29:34,489   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:29:34,494   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-26 23:29:34,496   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-26 23:29:34,502   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-26 23:29:34,504   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-26 23:29:34,527   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-26 23:29:34,534   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:29:34,538   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:29:34,540   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:34,541   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-26 23:29:34,546   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:34,547   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-26 23:29:34,550   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-26 23:29:34,557   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-26 23:29:34,558   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-26 23:29:34,560   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:34,561   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-26 23:29:34,569   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-26 23:29:34,569   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-26 23:29:34,571   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:29:34,575   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:34,576   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-26 23:29:34,580   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:29:34,584   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-26 23:29:34,587   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-26 23:29:34,589   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:34,590   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-26 23:29:34,593   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:29:34,600   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-26 23:29:34,602   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:34,603   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-26 23:29:34,609   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-26 23:29:34,618   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-26 23:29:34,620   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-26 23:29:34,621   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-26 23:29:34,626   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-26 23:29:34,630   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:34,631   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-26 23:29:34,641   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-26 23:29:34,652   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-26 23:29:34,652   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:34,653   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-26 23:29:34,658   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:29:34,661   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-26 23:29:34,667   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-26 23:29:34,672   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-26 23:29:34,674   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:29:34,706   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:29:34,707   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-26 23:29:34,716   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:34,717   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-26 23:29:34,722   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:29:34,724   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-26 23:29:34,726   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:29:34,728   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:29:34,732   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-26 23:29:34,735   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:34,735   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-26 23:29:34,747   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-26 23:29:34,747   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-26 23:29:34,748   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-26 23:29:34,754   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-26 23:29:34,757   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-26 23:29:34,759   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:34,760   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-26 23:29:34,765   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-26 23:29:34,766   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-26 23:29:34,768   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:34,769   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-26 23:29:34,771   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:34,772   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:29:34,773   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-26 23:29:34,775   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:34,776   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-26 23:29:34,780   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-26 23:29:34,784   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:29:34,786   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-26 23:29:34,788   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:34,789   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-26 23:29:34,794   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:29:34,811   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:34,812   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:29:34,815   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:34,816   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:29:34,832   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:29:34,836   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-26 23:29:34,844   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-26 23:29:34,850   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-26 23:29:34,851   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:29:34,853   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-26 23:29:34,857   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-26 23:29:34,860   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:29:34,861   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:29:34,889   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:29:34,890   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:29:34,893   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-26 23:29:34,896   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:29:34,898   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:29:34,900   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-26 23:29:34,909   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:29:34,913   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-26 23:29:34,921   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:29:34,922   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-26 23:29:34,924   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:34,925   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-26 23:29:34,927   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-26 23:29:34,928   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:29:34,930   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-26 23:29:34,930   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:34,931   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-26 23:29:34,934   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:34,935   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-26 23:29:34,941   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 04:29:36,711   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 04:29:36,717   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 04:29:36,723   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 04:29:36,749   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 04:29:36,749   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 04:29:36,751   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 04:29:36,755   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 04:29:36,764   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 04:29:36,764   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 04:29:36,764   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 04:29:36,778   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 04:29:36,802   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 04:29:36,832   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 04:29:36,872   FATAL [main] HOST: The PID of this process is 17253
2014-02-27 04:29:36,872   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 04:29:36,872   FATAL [main] HOST: java      14305 thorsten  161u  IPv6 952025      0t0  TCP *:49760 (LISTEN)
2014-02-27 04:29:36,872   FATAL [main] HOST: java      17154 thorsten   34u  IPv6 951855      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 04:29:36,872   FATAL [main] HOST: java      17154 thorsten   40u  IPv6 951862      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 04:29:36,872   FATAL [main] HOST: java      17154 thorsten   54u  IPv6 951869      0t0  TCP *:8080 (LISTEN)
2014-02-27 04:29:36,872   FATAL [main] HOST: java      17154 thorsten   55u  IPv6 951936      0t0  TCP *:21212 (LISTEN)
2014-02-27 04:29:36,872   FATAL [main] HOST: java      17154 thorsten   56u  IPv6 951937      0t0  TCP *:21211 (LISTEN)
2014-02-27 04:29:36,878   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 04:29:36,878   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 04:29:37,214   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:38114
2014-02-27 04:29:37,219   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 04:29:37,221   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 04:29:37,229   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 04:29:37,240   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 04:29:37,240   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 04:29:37,240   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-26 23:29:47,359   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-26 23:29:47,365   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-26 23:29:47,366   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,368   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,370   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,370   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-26 23:29:47,371   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-26 23:29:47,371   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:29:47,371   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-26 23:29:47,378   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:29:47,379   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:29:47,379   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-26 23:29:47,379   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-26 23:29:47,380   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,381   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-26 23:29:47,382   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,382   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-26 23:29:47,383   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:29:47,383   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-26 23:29:47,386   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-26 23:29:47,386   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-26 23:29:47,386   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-26 23:29:47,387   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-26 23:29:47,388   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,389   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:29:47,389   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-26 23:29:47,389   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-26 23:29:47,390   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:29:47,390   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:29:47,390   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-26 23:29:47,391   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,391   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,391   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,392   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,392   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,392   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,392   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-26 23:29:47,393   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,393   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,393   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,393   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,393   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,394   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-26 23:29:47,394   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:29:47,394   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-26 23:29:47,395   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,395   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-26 23:29:47,406   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-26 23:29:47,467   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:29:47,479   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-26 23:29:47,482   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-26 23:29:47,487   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:29:47,492   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:47,499   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:47,503   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:47,509   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-26 23:29:47,511   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:29:47,514   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-26 23:29:47,516   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-26 23:29:47,518   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:29:47,520   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,524   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,528   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,532   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:29:47,534   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,537   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,540   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,548   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-26 23:29:47,549   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,552   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,558   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,562   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-26 23:29:47,566   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-26 23:29:47,576   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-26 23:29:47,580   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-26 23:29:47,585   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-26 23:29:47,588   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-26 23:29:47,591   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:29:47,593   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-26 23:29:47,596   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-26 23:29:47,599   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-26 23:29:47,603   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:29:47,606   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:29:47,608   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-26 23:29:47,610   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:29:47,612   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:47,618   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:47,620   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:47,624   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-26 23:29:47,626   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-26 23:29:47,632   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-26 23:29:47,635   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-26 23:29:47,638   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:29:47,643   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-26 23:29:47,644   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-26 23:29:47,647   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-26 23:29:47,648   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:47,652   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:47,655   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-26 23:29:47,658   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-26 23:29:47,660   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-26 23:29:47,664   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-26 23:29:47,669   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:29:47,672   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,676   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,678   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,682   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:29:47,692   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,705   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,714   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,717   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-26 23:29:47,719   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,724   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,726   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-26 23:29:47,729   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-26 23:29:47,730   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:29:47,733   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:29:47,735   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-26 23:29:47,739   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-26 23:29:47,742   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-26 23:29:47,745   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-26 23:29:47,750   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-26 23:29:47,751   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:29:47,753   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-26 23:29:47,755   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-26 23:29:47,756   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-26 23:29:47,758   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-26 23:29:47,760   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-26 23:29:47,763   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-26 23:29:47,765   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:29:47,769   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:29:47,771   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:29:47,777   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-26 23:29:47,779   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:29:47,781   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:29:47,782   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-26 23:29:47,784   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-26 23:29:47,785   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:29:47,787   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-26 23:29:47,797   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-26 23:29:47,799   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-26 23:29:47,800   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:29:47,808   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:29:47,815   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-26 23:29:47,817   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-26 23:29:47,818   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-26 23:29:47,820   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-26 23:29:47,822   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-26 23:29:47,847   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-26 23:29:47,853   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:29:47,856   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:29:47,859   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:47,870   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-26 23:29:47,872   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:47,873   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-26 23:29:47,882   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-26 23:29:47,893   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-26 23:29:47,899   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-26 23:29:47,901   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:47,902   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-26 23:29:47,911   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-26 23:29:47,911   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-26 23:29:47,912   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:29:47,914   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:47,921   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-26 23:29:47,924   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:29:47,928   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-26 23:29:47,931   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-26 23:29:47,934   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:47,935   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-26 23:29:47,937   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:29:47,943   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-26 23:29:47,945   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:47,946   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-26 23:29:47,949   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-26 23:29:47,958   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-26 23:29:47,962   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-26 23:29:47,963   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-26 23:29:47,966   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-26 23:29:47,971   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:47,972   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-26 23:29:47,978   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-26 23:29:47,982   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-26 23:29:47,982   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:47,983   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-26 23:29:47,987   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:29:47,989   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-26 23:29:48,005   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-26 23:29:48,007   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-26 23:29:48,008   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:29:48,044   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:29:48,046   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-26 23:29:48,053   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:48,056   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-26 23:29:48,060   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:29:48,061   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-26 23:29:48,063   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:29:48,065   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:29:48,068   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-26 23:29:48,070   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:48,071   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-26 23:29:48,081   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-26 23:29:48,081   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-26 23:29:48,082   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-26 23:29:48,087   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-26 23:29:48,091   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-26 23:29:48,093   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:48,094   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-26 23:29:48,099   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-26 23:29:48,100   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-26 23:29:48,102   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:48,103   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-26 23:29:48,105   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:48,106   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-26 23:29:48,108   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-26 23:29:48,110   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:48,111   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-26 23:29:48,115   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-26 23:29:48,119   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:29:48,121   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-26 23:29:48,123   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:48,124   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-26 23:29:48,127   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-26 23:29:48,134   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:48,135   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-26 23:29:48,137   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:48,138   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:29:48,144   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-26 23:29:48,148   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-26 23:29:48,156   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-26 23:29:48,159   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-26 23:29:48,160   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-26 23:29:48,165   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-26 23:29:48,166   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-26 23:29:48,169   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-26 23:29:48,171   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-26 23:29:48,201   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-26 23:29:48,202   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-26 23:29:48,205   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-26 23:29:48,208   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-26 23:29:48,216   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-26 23:29:48,218   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-26 23:29:48,221   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-26 23:29:48,224   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-26 23:29:48,226   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-26 23:29:48,227   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-26 23:29:48,229   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:48,230   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-26 23:29:48,231   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-26 23:29:48,232   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-26 23:29:48,238   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-26 23:29:48,238   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-26 23:29:48,239   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-26 23:29:48,242   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-26 23:29:48,242   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-26 23:29:48,250   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 04:29:49,890   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 04:29:49,907   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 04:29:49,915   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 04:29:49,939   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 04:29:49,939   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 04:29:49,941   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 04:29:49,973   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 04:29:49,986   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 04:29:50,036   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-02-27 04:29:50,041   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 04:29:50,042   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:45802
2014-02-27 04:29:50,044   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 04:29:50,045   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:45802
2014-02-27 04:29:50,056   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169f7aa32f000000 with negotiated timeout 6000 for client /127.0.0.1:45802
2014-02-27 04:29:50,057   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169f7aa32f000000, negotiated timeout = 6000
2014-02-27 04:29:50,105   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 04:29:50,138   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 04:29:50,138   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 04:29:50,152   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 04:29:50,376   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 04:29:51,809   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 04:29:51,812   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 04:29:51,909   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 04:29:51,913   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 04:29:52,208   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 04:29:52,341   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 04:29:52,367   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 04:29:52,376   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 04:29:52,382   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 04:29:52,388   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 04:29:52,389   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 04:29:52,398   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 04:29:52,399   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 11 ms.
2014-02-27 04:29:52,399   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 2 ms.
2014-02-27 04:29:52,400   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 23 ms.
2014-02-27 04:29:52,415   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:29:52,415   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:29:52,415   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:29:52,420   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 04:29:52,422   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 7 ms.
2014-02-27 04:29:52,429   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 04:29:52,454   INFO  [main] HOST: Database start action is Create.
2014-02-27 04:29:52,477   INFO  [main] HOST: PID of this Volt process is 17316
2014-02-27 04:29:52,478   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 04:29:52,478   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 04:29:52,478   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 04:29:52,478   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 04:29:52,478   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 04:29:52,478   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 04:29:52,478   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 04:29:52,478   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 04:29:52,479   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 04:29:52,479   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 04:29:52,479   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 04:29:52,479   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 04:29:52,479   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 04:29:52,479   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 04:29:52,479   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 04:29:52,479   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 04:29:52,479   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 04:29:52,479   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 04:29:52,479   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 04:29:52,479   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 04:29:52,479   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 04:29:52,479   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 04:29:52,480   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 04:29:52,492   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 04:29:52,492   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 04:29:52,508   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 04:29:52,509   INFO  [Thread-9] HOST: Logging config info
2014-02-27 04:29:52,510   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 04:29:52,546   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 04:42:09,067   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 2359 milliseconds late in updating the estimated time
2014-02-27 05:43:05,772   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 05:43:05,797   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 05:43:06,332   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 05:43:06,332   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:38169
2014-02-27 05:43:06,333   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 05:43:06,341   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 05:43:06,355   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 05:43:06,366   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 05:43:06,366   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 05:43:06,367   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
