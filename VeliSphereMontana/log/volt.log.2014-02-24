2014-02-24 00:00:59,249   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-24 00:00:59,253   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-24 00:00:59,253   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-24 00:00:59,255   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,256   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,256   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,256   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-24 00:00:59,257   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-24 00:00:59,257   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-24 00:00:59,257   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-24 00:00:59,258   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-24 00:00:59,258   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-24 00:00:59,259   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-24 00:00:59,259   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-24 00:00:59,260   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,260   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-24 00:00:59,261   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,261   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-24 00:00:59,262   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-24 00:00:59,262   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-24 00:00:59,262   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-24 00:00:59,263   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-24 00:00:59,263   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-24 00:00:59,263   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,264   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-24 00:00:59,264   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-24 00:00:59,264   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-24 00:00:59,265   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-24 00:00:59,265   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-24 00:00:59,265   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-24 00:00:59,266   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,266   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,266   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,267   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,267   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,267   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,267   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-24 00:00:59,268   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,268   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,268   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,268   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,268   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,269   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-24 00:00:59,270   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-24 00:00:59,270   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-24 00:00:59,270   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,271   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-24 00:00:59,309   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:00:59,309   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:00:59,309   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:00:59,309   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:00:59,309   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-24 00:00:59,310   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:00:59,311   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:00:59,312   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:00:59,312   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:00:59,312   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:00:59,312   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:00:59,312   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:00:59,312   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:00:59,312   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:00:59,312   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:00:59,312   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:00:59,312   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:00:59,315   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-24 00:00:59,358   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-24 00:00:59,367   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-24 00:00:59,370   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-24 00:00:59,373   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-24 00:00:59,376   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-24 00:00:59,378   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-24 00:00:59,381   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-24 00:00:59,383   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-24 00:00:59,386   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-24 00:00:59,388   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-24 00:00:59,389   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-24 00:00:59,393   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-24 00:00:59,394   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-24 00:00:59,397   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-24 00:00:59,400   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-24 00:00:59,402   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-24 00:00:59,403   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:00:59,406   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:00:59,408   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:00:59,411   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-24 00:00:59,412   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-24 00:00:59,413   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-24 00:00:59,415   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-24 00:00:59,416   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-24 00:00:59,419   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-24 00:00:59,421   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-24 00:00:59,423   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-24 00:00:59,424   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-24 00:00:59,427   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-24 00:00:59,428   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-24 00:00:59,431   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-24 00:00:59,432   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:00:59,434   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:00:59,436   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:00:59,439   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-24 00:00:59,441   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-24 00:00:59,442   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-24 00:00:59,443   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-24 00:00:59,445   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-24 00:00:59,446   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-24 00:00:59,448   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-24 00:00:59,453   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-24 00:00:59,454   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-24 00:00:59,457   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-24 00:00:59,459   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-24 00:00:59,462   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-24 00:00:59,463   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-24 00:00:59,464   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-24 00:00:59,465   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-24 00:00:59,467   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-24 00:00:59,469   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-24 00:00:59,471   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-24 00:00:59,472   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-24 00:00:59,475   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-24 00:00:59,476   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-24 00:00:59,478   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-24 00:00:59,480   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-24 00:00:59,482   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-24 00:00:59,483   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-24 00:00:59,511   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-24 00:00:59,515   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:00:59,516   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-24 00:00:59,517   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-24 00:00:59,518   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-24 00:00:59,520   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:00:59,521   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-24 00:00:59,524   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-24 00:00:59,525   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-24 00:00:59,528   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-24 00:00:59,538   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-24 00:00:59,539   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-24 00:00:59,541   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:00:59,542   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-24 00:00:59,558   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-24 00:00:59,559   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-24 00:00:59,561   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-24 00:00:59,562   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-24 00:00:59,564   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-24 00:00:59,567   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-24 00:00:59,570   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-24 00:00:59,572   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-24 00:00:59,573   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-24 00:00:59,575   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-24 00:00:59,578   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-24 00:00:59,579   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-24 00:00:59,583   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-24 00:00:59,584   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-24 00:00:59,585   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-24 00:00:59,588   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-24 00:00:59,590   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-24 00:00:59,592   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:00:59,593   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-24 00:00:59,594   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-24 00:00:59,595   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-24 00:00:59,597   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-24 00:00:59,599   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:00:59,600   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-24 00:00:59,603   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-24 00:00:59,606   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:00:59,607   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-24 00:00:59,609   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-24 00:00:59,609   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-24 00:00:59,611   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-24 00:00:59,613   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-24 00:00:59,614   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-24 00:00:59,642   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-24 00:00:59,643   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-24 00:00:59,646   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:00:59,647   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-24 00:00:59,649   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-24 00:00:59,657   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-24 00:00:59,668   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-24 00:00:59,671   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-24 00:00:59,674   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-24 00:00:59,677   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:00:59,678   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-24 00:00:59,682   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-24 00:00:59,682   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-24 00:00:59,683   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ? ORDER BY CHECKPATHID;
2014-02-24 00:00:59,689   WARN  [main] COMPILER: [BLE_CheckPathForChecks.class]: Procedure BLE_CheckPathForChecks has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ? ORDER BY CHECKPATHID;", reason: index scan may provide insufficient ordering
2014-02-24 00:00:59,690   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-24 00:00:59,693   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-24 00:00:59,695   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-24 00:00:59,698   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-24 00:00:59,702   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-24 00:00:59,705   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-24 00:00:59,706   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-24 00:00:59,709   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:00:59,710   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-24 00:00:59,712   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-24 00:00:59,712   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-24 00:00:59,715   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-24 00:00:59,717   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:00:59,718   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-24 00:00:59,720   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-24 00:00:59,727   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-24 00:00:59,728   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-24 00:00:59,729   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-24 00:00:59,732   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-24 00:00:59,733   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:00:59,734   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-24 00:00:59,736   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:00:59,736   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-24 00:00:59,739   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-24 00:00:59,741   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-24 00:00:59,743   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID;
2014-02-24 00:00:59,746   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-24 00:00:59,746   WARN  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Procedure BLE_CheckPathForMultiChecks is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID;", reason: insufficient ordering criteria.
2014-02-24 00:00:59,747   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-24 00:00:59,748   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-24 00:00:59,750   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-24 00:00:59,754   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-24 00:00:59,778   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-24 00:00:59,778   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-24 00:00:59,780   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-24 00:00:59,780   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-24 00:00:59,782   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-24 00:00:59,784   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-24 00:00:59,787   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-24 00:00:59,789   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-24 00:00:59,791   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-24 00:00:59,793   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-24 00:00:59,794   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-24 00:00:59,796   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-24 00:00:59,796   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-24 00:00:59,799   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-24 00:00:59,801   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-24 00:00:59,801   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-24 00:00:59,801   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-24 00:00:59,821   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:00:59,822   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-24 00:00:59,828   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 08:01:00,953   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 08:01:00,965   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 08:01:00,971   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 08:01:00,989   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 08:01:00,990   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 08:01:00,991   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 08:01:01,013   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 08:01:01,020   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 08:01:01,052   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@326b9c84
2014-02-24 08:01:01,057   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 08:01:01,058   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 08:01:01,059   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:34679
2014-02-24 08:01:01,060   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:34679
2014-02-24 08:01:01,072   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169821c542800000 with negotiated timeout 6000 for client /127.0.0.1:34679
2014-02-24 08:01:01,072   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169821c542800000, negotiated timeout = 6000
2014-02-24 08:01:01,112   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 08:01:01,170   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 08:01:01,370   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 08:01:01,371   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 08:01:01,371   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 08:01:01,371   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 08:01:01,511   INFO  [main] HOST: hsql loaded
2014-02-24 08:01:01,603   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 08:01:03,207   INFO  [main] HOST: hsql loaded
2014-02-24 08:01:03,211   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 08:01:03,265   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-3.0). A confirmation message will follow if the loading is successful.
2014-02-24 08:01:03,266   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-3.0.
2014-02-24 08:01:03,479   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-24 08:01:03,525   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-24 08:01:03,552   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-24 08:01:03,555   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-24 08:01:03,555   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 10 ms.
2014-02-24 08:01:03,565   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 08:01:03,579   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-24 08:01:03,579   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-24 08:01:03,579   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 13 ms.
2014-02-24 08:01:03,590   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 08:01:03,607   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-24 08:01:03,607   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 17 ms.
2014-02-24 08:01:03,624   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 08:01:03,666   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-24 08:01:03,666   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 16 ms.
2014-02-24 08:01:03,680   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 08:01:03,681   INFO  [main] CONSOLE: Initializing initiator ID: 0, SiteID: 0:7
2014-02-24 08:01:03,705   INFO  [Mailbox tracker] EXPORT: Attempting to boot export client due to rejoin or other cluster topology change
2014-02-24 08:01:03,720   INFO  [main] HOST: Database start action is Create.
2014-02-24 08:01:03,720   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-24 08:01:03,720   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-24 08:01:03,720   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-24 08:01:03,721   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-24 08:01:03,721   INFO  [main] HOST: Available JVM arguments: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Xmx1024m -Dlog4j.configuration=file:///home/voltdb/voltdb-3.0/voltdb/log4j.xml -Djava.library.path=/home/voltdb/voltdb-3.0/voltdb
2014-02-24 08:01:03,721   INFO  [main] HOST: JVM class path: /home/voltdb/voltdb-3.0/voltdb/voltdb-3.0.jar:/home/voltdb/voltdb-3.0/lib/commons-cli-1.2.jar:/home/voltdb/voltdb-3.0/lib/commons-lang3-3.0.jar:/home/voltdb/voltdb-3.0/lib/guava-12.0.jar:/home/voltdb/voltdb-3.0/lib/jetty-continuation-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-http-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-io-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-server-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-util-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jline-2.10.jar:/home/voltdb/voltdb-3.0/lib/jna.jar:/home/voltdb/voltdb-3.0/lib/jsch-0.1.48.jar:/home/voltdb/voltdb-3.0/lib/log4j-1.2.16.jar:/home/voltdb/voltdb-3.0/lib/protobuf-java-2.4.1.jar:/home/voltdb/voltdb-3.0/lib/servlet-api-2.5.jar:/home/voltdb/voltdb-3.0/lib/slf4j-api-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/slf4j-nop-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/snappy-java-1.0.5-M3.jar:/home/voltdb/voltdb-3.0/lib/zmq-2.1.11.jar
2014-02-24 08:01:03,721   INFO  [main] HOST: Maximum usable Java heap set to 910 mb.
2014-02-24 08:01:03,721   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-24 08:01:03,721   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-24 08:01:03,721   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-24 08:01:03,721   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-24 08:01:03,721   INFO  [main] HOST: HOST MEMORY (MB): 2002
2014-02-24 08:01:03,721   INFO  [main] HOST: OS PROFILE:       Linux 3.2.0-36-generic amd64 en_US
2014-02-24 08:01:03,721   INFO  [main] HOST: JAVA VERSION:     1.6.0_24
2014-02-24 08:01:03,721   INFO  [main] HOST: JAVA RUNTIME:     OpenJDK Runtime Environment (1.6.0_24-b24)
2014-02-24 08:01:03,721   INFO  [main] HOST: JAVA VM:          OpenJDK 64-Bit Server VM (20.0-b12, mixed mode)
2014-02-24 08:01:03,722   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-24 08:01:03,722   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.149 2a02:8070:8333:b700:20c:29ff:feba:12f0%2 21212,21211,8080 [SELF]
2014-02-24 08:01:03,741   WARN  [main] HOST: Running without redundancy (k=0) is not recommended for production use.
2014-02-24 08:01:03,772   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-24 08:01:04,319   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-24 00:02:46,779   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-24 00:02:46,783   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-24 00:02:46,788   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-24 00:02:46,790   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,791   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,791   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,793   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-24 00:02:46,793   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-24 00:02:46,799   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-24 00:02:46,799   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-24 00:02:46,799   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-24 00:02:46,800   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-24 00:02:46,800   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-24 00:02:46,800   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-24 00:02:46,801   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,801   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-24 00:02:46,802   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,802   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-24 00:02:46,803   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-24 00:02:46,803   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-24 00:02:46,803   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-24 00:02:46,803   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-24 00:02:46,803   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-24 00:02:46,804   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,804   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-24 00:02:46,804   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-24 00:02:46,804   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-24 00:02:46,804   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-24 00:02:46,804   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-24 00:02:46,804   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-24 00:02:46,805   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,805   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,805   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,805   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,805   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,805   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,806   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-24 00:02:46,806   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,806   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,806   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,806   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,806   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,809   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-24 00:02:46,809   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-24 00:02:46,809   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-24 00:02:46,809   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,809   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-24 00:02:46,843   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:02:46,843   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:02:46,843   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:02:46,843   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:02:46,843   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-24 00:02:46,843   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:02:46,843   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:02:46,844   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:02:46,845   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:02:46,846   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:02:46,846   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:02:46,846   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:02:46,846   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:02:46,846   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:02:46,846   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:02:46,846   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:02:46,850   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-24 00:02:46,904   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-24 00:02:46,912   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-24 00:02:46,915   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-24 00:02:46,918   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-24 00:02:46,921   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-24 00:02:46,923   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-24 00:02:46,925   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-24 00:02:46,926   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-24 00:02:46,929   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-24 00:02:46,930   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-24 00:02:46,931   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-24 00:02:46,933   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-24 00:02:46,934   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-24 00:02:46,936   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-24 00:02:46,939   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-24 00:02:46,941   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-24 00:02:46,942   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:02:46,945   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:02:46,946   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:02:46,949   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-24 00:02:46,950   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-24 00:02:46,952   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-24 00:02:46,953   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-24 00:02:46,954   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-24 00:02:46,957   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-24 00:02:46,959   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-24 00:02:46,962   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-24 00:02:46,963   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-24 00:02:46,965   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-24 00:02:46,967   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-24 00:02:46,969   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-24 00:02:46,970   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:02:46,972   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:02:46,975   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:02:46,977   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-24 00:02:46,979   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-24 00:02:46,980   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-24 00:02:46,981   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-24 00:02:46,982   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-24 00:02:46,984   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-24 00:02:46,986   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-24 00:02:46,990   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-24 00:02:46,992   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-24 00:02:46,995   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-24 00:02:46,997   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-24 00:02:46,999   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-24 00:02:47,000   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-24 00:02:47,002   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-24 00:02:47,003   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-24 00:02:47,005   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-24 00:02:47,007   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-24 00:02:47,009   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-24 00:02:47,010   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-24 00:02:47,013   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-24 00:02:47,014   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-24 00:02:47,016   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-24 00:02:47,018   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-24 00:02:47,020   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-24 00:02:47,022   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-24 00:02:47,049   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-24 00:02:47,053   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:02:47,055   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-24 00:02:47,057   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-24 00:02:47,058   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-24 00:02:47,060   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:02:47,061   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-24 00:02:47,064   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-24 00:02:47,064   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-24 00:02:47,067   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-24 00:02:47,077   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-24 00:02:47,077   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-24 00:02:47,080   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:02:47,080   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-24 00:02:47,098   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-24 00:02:47,099   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-24 00:02:47,101   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-24 00:02:47,101   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-24 00:02:47,104   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-24 00:02:47,106   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-24 00:02:47,110   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-24 00:02:47,112   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-24 00:02:47,112   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-24 00:02:47,115   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-24 00:02:47,117   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-24 00:02:47,118   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-24 00:02:47,122   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-24 00:02:47,123   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-24 00:02:47,124   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-24 00:02:47,127   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-24 00:02:47,129   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-24 00:02:47,130   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:02:47,131   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-24 00:02:47,132   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-24 00:02:47,133   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-24 00:02:47,135   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-24 00:02:47,137   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:02:47,137   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-24 00:02:47,140   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-24 00:02:47,143   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:02:47,143   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-24 00:02:47,145   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-24 00:02:47,146   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-24 00:02:47,148   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-24 00:02:47,149   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-24 00:02:47,150   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-24 00:02:47,177   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-24 00:02:47,178   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-24 00:02:47,181   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:02:47,182   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-24 00:02:47,185   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-24 00:02:47,187   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-24 00:02:47,189   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-24 00:02:47,192   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-24 00:02:47,206   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-24 00:02:47,209   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:02:47,210   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-24 00:02:47,214   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-24 00:02:47,214   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-24 00:02:47,214   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ? ORDER BY CHECKPATHID;
2014-02-24 00:02:47,217   WARN  [main] COMPILER: [BLE_CheckPathForChecks.class]: Procedure BLE_CheckPathForChecks has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ? ORDER BY CHECKPATHID;", reason: index scan may provide insufficient ordering
2014-02-24 00:02:47,218   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-24 00:02:47,221   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-24 00:02:47,223   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-24 00:02:47,225   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-24 00:02:47,226   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-24 00:02:47,228   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-24 00:02:47,229   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-24 00:02:47,231   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:02:47,232   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-24 00:02:47,233   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-24 00:02:47,234   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-24 00:02:47,236   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-24 00:02:47,238   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:02:47,239   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-24 00:02:47,246   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-24 00:02:47,248   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-24 00:02:47,250   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-24 00:02:47,262   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-24 00:02:47,265   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-24 00:02:47,267   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:02:47,268   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-24 00:02:47,270   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:02:47,270   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-24 00:02:47,273   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-24 00:02:47,275   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-24 00:02:47,277   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-24 00:02:47,279   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-24 00:02:47,280   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-24 00:02:47,281   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-24 00:02:47,283   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-24 00:02:47,287   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-24 00:02:47,327   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-24 00:02:47,328   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-24 00:02:47,329   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-24 00:02:47,330   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-24 00:02:47,332   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-24 00:02:47,334   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-24 00:02:47,337   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-24 00:02:47,338   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-24 00:02:47,341   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-24 00:02:47,343   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-24 00:02:47,343   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-24 00:02:47,346   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-24 00:02:47,346   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-24 00:02:47,348   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-24 00:02:47,356   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-24 00:02:47,356   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-24 00:02:47,357   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-24 00:02:47,360   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:02:47,360   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-24 00:02:47,367   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 08:02:48,209   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 08:02:48,219   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 08:02:48,225   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 08:02:48,244   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 08:02:48,244   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 08:02:48,246   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 08:02:48,268   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 08:02:48,275   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 08:02:48,307   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@421fbfd6
2014-02-24 08:02:48,311   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 08:02:48,312   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:34683
2014-02-24 08:02:48,313   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 08:02:48,315   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:34683
2014-02-24 08:02:48,326   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16982296bd800000 with negotiated timeout 6000 for client /127.0.0.1:34683
2014-02-24 08:02:48,326   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16982296bd800000, negotiated timeout = 6000
2014-02-24 08:02:48,379   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 08:02:48,408   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 08:02:48,588   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 08:02:48,588   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 08:02:48,589   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 08:02:48,589   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 08:02:48,761   INFO  [main] HOST: hsql loaded
2014-02-24 08:02:48,855   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 08:02:50,512   INFO  [main] HOST: hsql loaded
2014-02-24 08:02:50,515   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 08:02:50,567   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-3.0). A confirmation message will follow if the loading is successful.
2014-02-24 08:02:50,568   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-3.0.
2014-02-24 08:02:50,717   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-24 08:02:50,785   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-24 08:02:50,814   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-24 08:02:50,817   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-24 08:02:50,817   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 17 ms.
2014-02-24 08:02:50,827   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 08:02:50,841   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-24 08:02:50,842   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-24 08:02:50,842   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 13 ms.
2014-02-24 08:02:50,864   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 08:02:50,898   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-24 08:02:50,898   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 32 ms.
2014-02-24 08:02:50,922   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 08:02:50,970   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-24 08:02:50,971   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 16 ms.
2014-02-24 08:02:50,983   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 08:02:50,984   INFO  [main] CONSOLE: Initializing initiator ID: 0, SiteID: 0:7
2014-02-24 08:02:51,027   INFO  [Mailbox tracker] EXPORT: Attempting to boot export client due to rejoin or other cluster topology change
2014-02-24 08:02:51,065   INFO  [main] HOST: Database start action is Create.
2014-02-24 08:02:51,065   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-24 08:02:51,065   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-24 08:02:51,065   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-24 08:02:51,065   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-24 08:02:51,066   INFO  [main] HOST: Available JVM arguments: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Xmx1024m -Dlog4j.configuration=file:///home/voltdb/voltdb-3.0/voltdb/log4j.xml -Djava.library.path=/home/voltdb/voltdb-3.0/voltdb
2014-02-24 08:02:51,066   INFO  [main] HOST: JVM class path: /home/voltdb/voltdb-3.0/voltdb/voltdb-3.0.jar:/home/voltdb/voltdb-3.0/lib/commons-cli-1.2.jar:/home/voltdb/voltdb-3.0/lib/commons-lang3-3.0.jar:/home/voltdb/voltdb-3.0/lib/guava-12.0.jar:/home/voltdb/voltdb-3.0/lib/jetty-continuation-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-http-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-io-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-server-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-util-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jline-2.10.jar:/home/voltdb/voltdb-3.0/lib/jna.jar:/home/voltdb/voltdb-3.0/lib/jsch-0.1.48.jar:/home/voltdb/voltdb-3.0/lib/log4j-1.2.16.jar:/home/voltdb/voltdb-3.0/lib/protobuf-java-2.4.1.jar:/home/voltdb/voltdb-3.0/lib/servlet-api-2.5.jar:/home/voltdb/voltdb-3.0/lib/slf4j-api-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/slf4j-nop-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/snappy-java-1.0.5-M3.jar:/home/voltdb/voltdb-3.0/lib/zmq-2.1.11.jar
2014-02-24 08:02:51,066   INFO  [main] HOST: Maximum usable Java heap set to 910 mb.
2014-02-24 08:02:51,066   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-24 08:02:51,066   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-24 08:02:51,066   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-24 08:02:51,066   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-24 08:02:51,067   INFO  [main] HOST: HOST MEMORY (MB): 2002
2014-02-24 08:02:51,067   INFO  [main] HOST: OS PROFILE:       Linux 3.2.0-36-generic amd64 en_US
2014-02-24 08:02:51,067   INFO  [main] HOST: JAVA VERSION:     1.6.0_24
2014-02-24 08:02:51,067   INFO  [main] HOST: JAVA RUNTIME:     OpenJDK Runtime Environment (1.6.0_24-b24)
2014-02-24 08:02:51,067   INFO  [main] HOST: JAVA VM:          OpenJDK 64-Bit Server VM (20.0-b12, mixed mode)
2014-02-24 08:02:51,068   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-24 08:02:51,068   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.149 2a02:8070:8333:b700:20c:29ff:feba:12f0%2 21212,21211,8080 [SELF]
2014-02-24 08:02:51,093   WARN  [main] HOST: Running without redundancy (k=0) is not recommended for production use.
2014-02-24 08:02:51,119   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-24 08:02:51,659   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-24 00:09:27,463   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-24 00:09:27,466   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-24 00:09:27,467   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-24 00:09:27,469   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,469   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,470   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,470   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-24 00:09:27,470   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-24 00:09:27,471   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-24 00:09:27,471   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-24 00:09:27,472   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-24 00:09:27,472   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-24 00:09:27,472   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-24 00:09:27,473   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-24 00:09:27,473   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,474   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-24 00:09:27,474   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,475   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-24 00:09:27,476   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-24 00:09:27,476   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-24 00:09:27,476   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-24 00:09:27,476   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-24 00:09:27,476   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-24 00:09:27,477   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,478   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-24 00:09:27,478   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-24 00:09:27,478   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-24 00:09:27,479   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-24 00:09:27,479   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-24 00:09:27,479   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-24 00:09:27,480   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,480   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,480   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,480   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,480   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,481   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,481   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-24 00:09:27,482   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,482   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,482   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,482   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,482   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,483   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-24 00:09:27,484   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-24 00:09:27,484   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-24 00:09:27,485   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,485   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-24 00:09:27,521   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:09:27,521   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:09:27,521   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:09:27,521   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-24 00:09:27,522   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:09:27,523   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-24 00:09:27,524   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-24 00:09:27,524   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:09:27,524   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:09:27,524   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:09:27,524   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:09:27,524   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:09:27,524   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:09:27,524   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:09:27,524   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:09:27,524   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:09:27,524   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:09:27,524   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:09:27,524   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:09:27,528   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-24 00:09:27,585   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-24 00:09:27,592   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-24 00:09:27,598   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-24 00:09:27,602   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-24 00:09:27,604   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-24 00:09:27,605   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-24 00:09:27,608   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-24 00:09:27,610   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-24 00:09:27,612   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-24 00:09:27,613   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-24 00:09:27,614   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-24 00:09:27,617   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-24 00:09:27,618   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-24 00:09:27,620   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-24 00:09:27,624   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-24 00:09:27,626   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-24 00:09:27,627   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:09:27,632   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:09:27,634   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:09:27,637   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-24 00:09:27,638   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-24 00:09:27,640   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-24 00:09:27,641   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-24 00:09:27,643   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-24 00:09:27,646   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-24 00:09:27,648   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-24 00:09:27,651   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-24 00:09:27,653   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-24 00:09:27,655   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-24 00:09:27,657   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-24 00:09:27,659   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-24 00:09:27,660   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:09:27,664   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:09:27,666   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:09:27,672   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-24 00:09:27,674   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-24 00:09:27,675   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-24 00:09:27,676   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-24 00:09:27,677   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-24 00:09:27,679   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-24 00:09:27,681   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-24 00:09:27,682   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-24 00:09:27,689   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-24 00:09:27,692   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-24 00:09:27,695   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-24 00:09:27,698   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-24 00:09:27,699   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-24 00:09:27,700   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-24 00:09:27,703   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-24 00:09:27,705   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-24 00:09:27,707   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-24 00:09:27,710   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-24 00:09:27,711   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-24 00:09:27,714   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-24 00:09:27,716   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-24 00:09:27,718   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-24 00:09:27,721   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-24 00:09:27,723   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-24 00:09:27,725   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-24 00:09:27,752   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-24 00:09:27,758   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:09:27,759   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-24 00:09:27,761   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-24 00:09:27,761   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-24 00:09:27,763   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:09:27,764   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-24 00:09:27,767   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-24 00:09:27,768   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-24 00:09:27,771   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-24 00:09:27,790   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-24 00:09:27,791   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-24 00:09:27,794   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:09:27,795   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-24 00:09:27,819   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-24 00:09:27,820   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-24 00:09:27,822   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-24 00:09:27,822   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-24 00:09:27,825   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-24 00:09:27,828   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-24 00:09:27,835   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-24 00:09:27,837   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-24 00:09:27,838   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-24 00:09:27,840   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-24 00:09:27,843   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-24 00:09:27,844   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-24 00:09:27,848   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-24 00:09:27,849   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-24 00:09:27,850   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-24 00:09:27,853   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-24 00:09:27,856   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-24 00:09:27,858   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:09:27,858   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-24 00:09:27,860   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-24 00:09:27,861   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-24 00:09:27,867   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-24 00:09:27,869   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:09:27,870   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-24 00:09:27,875   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-24 00:09:27,878   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:09:27,879   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-24 00:09:27,881   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-24 00:09:27,881   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-24 00:09:27,884   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-24 00:09:27,886   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-24 00:09:27,887   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-24 00:09:27,931   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-24 00:09:27,932   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-24 00:09:27,938   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:09:27,938   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-24 00:09:27,941   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-24 00:09:27,943   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-24 00:09:27,953   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-24 00:09:27,956   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-24 00:09:27,966   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-24 00:09:27,968   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:09:27,969   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-24 00:09:27,972   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-24 00:09:27,973   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-24 00:09:27,973   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ? ORDER BY CHECKPATHID, CHECKID;
2014-02-24 00:09:27,977   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-24 00:09:27,979   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-24 00:09:27,981   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-24 00:09:27,983   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-24 00:09:27,984   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-24 00:09:27,986   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-24 00:09:27,986   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-24 00:09:27,988   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:09:27,989   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-24 00:09:27,990   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-24 00:09:27,991   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-24 00:09:27,993   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-24 00:09:27,995   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:09:27,996   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-24 00:09:27,998   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-24 00:09:28,000   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-24 00:09:28,002   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-24 00:09:28,003   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-24 00:09:28,007   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-24 00:09:28,011   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:09:28,012   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-24 00:09:28,017   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:09:28,017   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-24 00:09:28,020   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-24 00:09:28,023   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-24 00:09:28,025   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-24 00:09:28,027   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-24 00:09:28,028   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-24 00:09:28,029   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-24 00:09:28,030   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-24 00:09:28,034   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-24 00:09:28,071   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-24 00:09:28,072   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-24 00:09:28,073   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-24 00:09:28,074   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-24 00:09:28,077   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-24 00:09:28,079   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-24 00:09:28,108   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-24 00:09:28,111   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-24 00:09:28,114   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-24 00:09:28,119   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-24 00:09:28,120   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-24 00:09:28,126   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-24 00:09:28,132   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-24 00:09:28,139   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-24 00:09:28,150   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-24 00:09:28,150   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-24 00:09:28,151   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-24 00:09:28,153   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:09:28,154   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-24 00:09:28,159   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 08:09:29,008   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 08:09:29,018   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 08:09:29,024   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 08:09:29,044   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 08:09:29,044   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 08:09:29,046   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 08:09:29,069   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 08:09:29,078   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 08:09:29,115   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@326b9c84
2014-02-24 08:09:29,119   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 08:09:29,120   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 08:09:29,120   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:34762
2014-02-24 08:09:29,122   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:34762
2014-02-24 08:09:29,134   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169825a591800000 with negotiated timeout 6000 for client /127.0.0.1:34762
2014-02-24 08:09:29,134   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169825a591800000, negotiated timeout = 6000
2014-02-24 08:09:29,183   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 08:09:29,224   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 08:09:29,400   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 08:09:29,400   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 08:09:29,400   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 08:09:29,401   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 08:09:29,540   INFO  [main] HOST: hsql loaded
2014-02-24 08:09:29,623   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 08:09:31,260   INFO  [main] HOST: hsql loaded
2014-02-24 08:09:31,264   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 00:10:39,017   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-24 00:10:39,021   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-24 00:10:39,021   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-24 00:10:39,023   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,024   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,024   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,025   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-24 00:10:39,025   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-24 00:10:39,025   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-24 00:10:39,025   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-24 00:10:39,026   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-24 00:10:39,026   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-24 00:10:39,027   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-24 00:10:39,027   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-24 00:10:39,028   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,028   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-24 00:10:39,029   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,029   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-24 00:10:39,031   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-24 00:10:39,031   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-24 00:10:39,031   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-24 00:10:39,031   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-24 00:10:39,031   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-24 00:10:39,032   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,032   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-24 00:10:39,032   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-24 00:10:39,033   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-24 00:10:39,033   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-24 00:10:39,033   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-24 00:10:39,033   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-24 00:10:39,034   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,034   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,034   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,035   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,035   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,035   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,036   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-24 00:10:39,036   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,036   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,036   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,037   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,037   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,038   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-24 00:10:39,038   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-24 00:10:39,039   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-24 00:10:39,039   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,039   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-24 00:10:39,079   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:10:39,079   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:10:39,079   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:10:39,079   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:10:39,079   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-24 00:10:39,080   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:10:39,081   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:10:39,082   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:10:39,082   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-24 00:10:39,082   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-24 00:10:39,082   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:10:39,082   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:10:39,082   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:10:39,082   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:10:39,082   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:10:39,082   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:10:39,082   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:10:39,082   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:10:39,082   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:10:39,082   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:10:39,082   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:10:39,082   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:10:39,086   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-24 00:10:39,124   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-24 00:10:39,132   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-24 00:10:39,135   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-24 00:10:39,139   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-24 00:10:39,142   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-24 00:10:39,144   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-24 00:10:39,147   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-24 00:10:39,149   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-24 00:10:39,152   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-24 00:10:39,154   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-24 00:10:39,155   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-24 00:10:39,158   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-24 00:10:39,160   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-24 00:10:39,162   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-24 00:10:39,165   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-24 00:10:39,167   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-24 00:10:39,168   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:10:39,172   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:10:39,174   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:10:39,177   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-24 00:10:39,179   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-24 00:10:39,180   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-24 00:10:39,182   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-24 00:10:39,183   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-24 00:10:39,186   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-24 00:10:39,188   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-24 00:10:39,191   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-24 00:10:39,192   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-24 00:10:39,194   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-24 00:10:39,196   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-24 00:10:39,198   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-24 00:10:39,199   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:10:39,202   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:10:39,204   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:10:39,207   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-24 00:10:39,208   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-24 00:10:39,210   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-24 00:10:39,211   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-24 00:10:39,212   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-24 00:10:39,213   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-24 00:10:39,215   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-24 00:10:39,220   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-24 00:10:39,221   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-24 00:10:39,224   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-24 00:10:39,226   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-24 00:10:39,228   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-24 00:10:39,229   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-24 00:10:39,230   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-24 00:10:39,232   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-24 00:10:39,234   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-24 00:10:39,235   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-24 00:10:39,237   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-24 00:10:39,239   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-24 00:10:39,241   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-24 00:10:39,243   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-24 00:10:39,245   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-24 00:10:39,246   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-24 00:10:39,248   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-24 00:10:39,250   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-24 00:10:39,278   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-24 00:10:39,281   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:10:39,283   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-24 00:10:39,284   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-24 00:10:39,285   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-24 00:10:39,288   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:10:39,288   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-24 00:10:39,291   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-24 00:10:39,292   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-24 00:10:39,294   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-24 00:10:39,304   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-24 00:10:39,305   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-24 00:10:39,307   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:10:39,308   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-24 00:10:39,322   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-24 00:10:39,323   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-24 00:10:39,324   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-24 00:10:39,325   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-24 00:10:39,328   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-24 00:10:39,330   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-24 00:10:39,334   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-24 00:10:39,336   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-24 00:10:39,337   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-24 00:10:39,340   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-24 00:10:39,343   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-24 00:10:39,343   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-24 00:10:39,348   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-24 00:10:39,350   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-24 00:10:39,350   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-24 00:10:39,354   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-24 00:10:39,356   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-24 00:10:39,359   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:10:39,359   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-24 00:10:39,361   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-24 00:10:39,362   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-24 00:10:39,365   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-24 00:10:39,367   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:10:39,368   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-24 00:10:39,372   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-24 00:10:39,375   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:10:39,376   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-24 00:10:39,378   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-24 00:10:39,379   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-24 00:10:39,382   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-24 00:10:39,384   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-24 00:10:39,384   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-24 00:10:39,417   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-24 00:10:39,418   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-24 00:10:39,420   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:10:39,421   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-24 00:10:39,423   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-24 00:10:39,425   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-24 00:10:39,427   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-24 00:10:39,429   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-24 00:10:39,432   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-24 00:10:39,433   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:10:39,434   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-24 00:10:39,437   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-24 00:10:39,437   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-24 00:10:39,438   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ? ORDER BY CHECKPATHID, CHECKID;
2014-02-24 00:10:39,440   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-24 00:10:39,442   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-24 00:10:39,444   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-24 00:10:39,445   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-24 00:10:39,446   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-24 00:10:39,448   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-24 00:10:39,449   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-24 00:10:39,451   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:10:39,451   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-24 00:10:39,453   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-24 00:10:39,454   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-24 00:10:39,455   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-24 00:10:39,458   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:10:39,475   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-24 00:10:39,477   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-24 00:10:39,480   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-24 00:10:39,481   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-24 00:10:39,482   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-24 00:10:39,485   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-24 00:10:39,487   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:10:39,487   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-24 00:10:39,489   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:10:39,489   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-24 00:10:39,492   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-24 00:10:39,494   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-24 00:10:39,496   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-24 00:10:39,499   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-24 00:10:39,499   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-24 00:10:39,501   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-24 00:10:39,502   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-24 00:10:39,506   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-24 00:10:39,563   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-24 00:10:39,564   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-24 00:10:39,574   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-24 00:10:39,575   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-24 00:10:39,622   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-24 00:10:39,645   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-24 00:10:39,651   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-24 00:10:39,653   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-24 00:10:39,663   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-24 00:10:39,665   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-24 00:10:39,666   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-24 00:10:39,668   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-24 00:10:39,668   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-24 00:10:39,671   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-24 00:10:39,673   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-24 00:10:39,673   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-24 00:10:39,674   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-24 00:10:39,677   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:10:39,678   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-24 00:10:39,683   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 08:10:40,563   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 08:10:40,573   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 08:10:40,582   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 08:10:40,611   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 08:10:40,611   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 08:10:40,613   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 08:10:40,635   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 08:10:40,643   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 08:10:40,675   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@2d7cec96
2014-02-24 08:10:40,679   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 08:10:40,681   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:34766
2014-02-24 08:10:40,682   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 08:10:40,683   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:34766
2014-02-24 08:10:40,700   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x1698263156000000 with negotiated timeout 6000 for client /127.0.0.1:34766
2014-02-24 08:10:40,701   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1698263156000000, negotiated timeout = 6000
2014-02-24 08:10:40,751   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 08:10:40,790   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 08:10:40,977   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 08:10:40,978   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 08:10:40,978   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 08:10:40,978   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 08:10:41,121   INFO  [main] HOST: hsql loaded
2014-02-24 08:10:41,204   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 08:10:42,818   INFO  [main] HOST: hsql loaded
2014-02-24 08:10:42,821   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 08:10:42,869   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-3.0). A confirmation message will follow if the loading is successful.
2014-02-24 08:10:42,870   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-3.0.
2014-02-24 08:10:42,999   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-24 00:14:45,966   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-24 00:14:45,970   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-24 00:14:45,970   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-24 00:14:45,972   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-24 00:14:45,973   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-24 00:14:45,973   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-24 00:14:45,974   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-24 00:14:45,974   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-24 00:14:45,974   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-24 00:14:45,975   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-24 00:14:45,975   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-24 00:14:45,976   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-24 00:14:45,976   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-24 00:14:45,977   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-24 00:14:45,984   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-24 00:14:45,985   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-24 00:14:45,985   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-24 00:14:45,985   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-24 00:14:45,987   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-24 00:14:45,987   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-24 00:14:45,987   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-24 00:14:45,987   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-24 00:14:45,987   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-24 00:14:45,988   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:14:45,989   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-24 00:14:45,989   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-24 00:14:45,989   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-24 00:14:45,998   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-24 00:14:45,998   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-24 00:14:45,998   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-24 00:14:45,999   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:14:45,999   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:14:45,999   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:14:45,999   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:14:45,999   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:14:46,000   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:14:46,000   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-24 00:14:46,001   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:14:46,001   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:14:46,001   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-24 00:14:46,001   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:14:46,001   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-24 00:14:46,002   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-24 00:14:46,002   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-24 00:14:46,003   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-24 00:14:46,003   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-24 00:14:46,003   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-24 00:14:46,043   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:14:46,043   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:14:46,043   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-24 00:14:46,044   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:14:46,045   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-24 00:14:46,046   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-24 00:14:46,046   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-24 00:14:46,046   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:14:46,046   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:14:46,046   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:14:46,046   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-24 00:14:46,046   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:14:46,046   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:14:46,046   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:14:46,046   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-24 00:14:46,046   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:14:46,046   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:14:46,046   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:14:46,046   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-24 00:14:46,050   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-24 00:14:46,094   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-24 00:14:46,102   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-24 00:14:46,106   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-24 00:14:46,114   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-24 00:14:46,117   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-24 00:14:46,118   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-24 00:14:46,121   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-24 00:14:46,123   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-24 00:14:46,125   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-24 00:14:46,126   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-24 00:14:46,127   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-24 00:14:46,130   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-24 00:14:46,131   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-24 00:14:46,133   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-24 00:14:46,136   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-24 00:14:46,138   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-24 00:14:46,139   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:14:46,144   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:14:46,145   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:14:46,148   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-24 00:14:46,149   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-24 00:14:46,151   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-24 00:14:46,152   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-24 00:14:46,153   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-24 00:14:46,156   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-24 00:14:46,159   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-24 00:14:46,161   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-24 00:14:46,162   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-24 00:14:46,164   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-24 00:14:46,166   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-24 00:14:46,168   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-24 00:14:46,169   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:14:46,173   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:14:46,175   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-24 00:14:46,182   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-24 00:14:46,184   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-24 00:14:46,185   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-24 00:14:46,186   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-24 00:14:46,187   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-24 00:14:46,189   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-24 00:14:46,193   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-24 00:14:46,195   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-24 00:14:46,196   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-24 00:14:46,201   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-24 00:14:46,203   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-24 00:14:46,205   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-24 00:14:46,206   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-24 00:14:46,207   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-24 00:14:46,210   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-24 00:14:46,212   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-24 00:14:46,214   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-24 00:14:46,217   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-24 00:14:46,218   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-24 00:14:46,220   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-24 00:14:46,222   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-24 00:14:46,223   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-24 00:14:46,226   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-24 00:14:46,228   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-24 00:14:46,230   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-24 00:14:46,257   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-24 00:14:46,262   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:14:46,263   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-24 00:14:46,265   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-24 00:14:46,265   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-24 00:14:46,268   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:14:46,268   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-24 00:14:46,271   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-24 00:14:46,272   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-24 00:14:46,274   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-24 00:14:46,292   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-24 00:14:46,293   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-24 00:14:46,295   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:14:46,295   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-24 00:14:46,317   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-24 00:14:46,318   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-24 00:14:46,319   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-24 00:14:46,320   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-24 00:14:46,322   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-24 00:14:46,325   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-24 00:14:46,402   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-24 00:14:46,407   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-24 00:14:46,409   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-24 00:14:46,414   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-24 00:14:46,421   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-24 00:14:46,422   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-24 00:14:46,428   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-24 00:14:46,430   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-24 00:14:46,431   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-24 00:14:46,435   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-24 00:14:46,438   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-24 00:14:46,441   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:14:46,446   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-24 00:14:46,449   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-24 00:14:46,450   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-24 00:14:46,453   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-24 00:14:46,455   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:14:46,456   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-24 00:14:46,464   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-24 00:14:46,467   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:14:46,468   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-24 00:14:46,470   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-24 00:14:46,470   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-24 00:14:46,473   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-24 00:14:46,475   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-24 00:14:46,476   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-24 00:14:46,521   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-24 00:14:46,522   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-24 00:14:46,525   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:14:46,526   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-24 00:14:46,528   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-24 00:14:46,530   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-24 00:14:46,532   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-24 00:14:46,534   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-24 00:14:46,542   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-24 00:14:46,544   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:14:46,545   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-24 00:14:46,548   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-24 00:14:46,548   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-24 00:14:46,549   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ? ORDER BY CHECKPATHID, CHECKID;
2014-02-24 00:14:46,551   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-24 00:14:46,554   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-24 00:14:46,556   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-24 00:14:46,558   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-24 00:14:46,559   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-24 00:14:46,561   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-24 00:14:46,562   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-24 00:14:46,563   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:14:46,564   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-24 00:14:46,565   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-24 00:14:46,566   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-24 00:14:46,568   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-24 00:14:46,570   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:14:46,570   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-24 00:14:46,573   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-24 00:14:46,575   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-24 00:14:46,577   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-24 00:14:46,577   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-24 00:14:46,580   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-24 00:14:46,582   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:14:46,583   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-24 00:14:46,584   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:14:46,585   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-24 00:14:46,587   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-24 00:14:46,590   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-24 00:14:46,592   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-24 00:14:46,594   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-24 00:14:46,595   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-24 00:14:46,596   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-24 00:14:46,598   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-24 00:14:46,601   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-24 00:14:46,623   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-24 00:14:46,623   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-24 00:14:46,625   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-24 00:14:46,625   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-24 00:14:46,627   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-24 00:14:46,629   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-24 00:14:46,631   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-24 00:14:46,632   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-24 00:14:46,635   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-24 00:14:46,650   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-24 00:14:46,665   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-24 00:14:46,667   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-24 00:14:46,668   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-24 00:14:46,671   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-24 00:14:46,673   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-24 00:14:46,680   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-24 00:14:46,682   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-24 00:14:46,686   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-24 00:14:46,687   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-24 00:14:46,693   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 08:14:47,573   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 08:14:47,583   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 08:14:47,588   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 08:14:47,607   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 08:14:47,607   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 08:14:47,609   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 08:14:47,630   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 08:14:47,637   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 08:14:47,669   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@63cd66ea
2014-02-24 08:14:47,672   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 08:14:47,674   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:34778
2014-02-24 08:14:47,675   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 08:14:47,677   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:34778
2014-02-24 08:14:47,687   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16982813be800000 with negotiated timeout 6000 for client /127.0.0.1:34778
2014-02-24 08:14:47,688   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16982813be800000, negotiated timeout = 6000
2014-02-24 08:14:47,733   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 08:14:47,769   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 08:14:47,949   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 08:14:47,949   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 08:14:47,949   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 08:14:47,950   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 08:14:48,098   INFO  [main] HOST: hsql loaded
2014-02-24 08:14:48,181   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 08:14:49,772   INFO  [main] HOST: hsql loaded
2014-02-24 08:14:49,776   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 08:14:49,829   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-3.0). A confirmation message will follow if the loading is successful.
2014-02-24 08:14:49,830   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-3.0.
2014-02-24 08:14:49,977   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-24 08:14:50,035   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-24 08:14:50,063   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-24 08:14:50,075   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-24 08:14:50,075   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 13 ms.
2014-02-24 08:14:50,082   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-24 08:14:50,089   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-24 08:14:50,089   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 13 ms.
2014-02-24 08:14:50,091   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 08:14:50,096   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 08:14:50,107   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-24 08:14:50,107   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 10 ms.
2014-02-24 08:14:50,146   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 08:14:50,204   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-24 08:14:50,204   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 28 ms.
2014-02-24 08:14:50,216   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 08:14:50,218   INFO  [main] CONSOLE: Initializing initiator ID: 0, SiteID: 0:7
2014-02-24 08:14:50,242   INFO  [Mailbox tracker] EXPORT: Attempting to boot export client due to rejoin or other cluster topology change
2014-02-24 08:14:50,266   INFO  [main] HOST: Database start action is Create.
2014-02-24 08:14:50,266   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-24 08:14:50,266   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-24 08:14:50,266   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-24 08:14:50,266   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-24 08:14:50,266   INFO  [main] HOST: Available JVM arguments: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Xmx1024m -Dlog4j.configuration=file:///home/voltdb/voltdb-3.0/voltdb/log4j.xml -Djava.library.path=/home/voltdb/voltdb-3.0/voltdb
2014-02-24 08:14:50,266   INFO  [main] HOST: JVM class path: /home/voltdb/voltdb-3.0/voltdb/voltdb-3.0.jar:/home/voltdb/voltdb-3.0/lib/commons-cli-1.2.jar:/home/voltdb/voltdb-3.0/lib/commons-lang3-3.0.jar:/home/voltdb/voltdb-3.0/lib/guava-12.0.jar:/home/voltdb/voltdb-3.0/lib/jetty-continuation-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-http-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-io-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-server-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-util-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jline-2.10.jar:/home/voltdb/voltdb-3.0/lib/jna.jar:/home/voltdb/voltdb-3.0/lib/jsch-0.1.48.jar:/home/voltdb/voltdb-3.0/lib/log4j-1.2.16.jar:/home/voltdb/voltdb-3.0/lib/protobuf-java-2.4.1.jar:/home/voltdb/voltdb-3.0/lib/servlet-api-2.5.jar:/home/voltdb/voltdb-3.0/lib/slf4j-api-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/slf4j-nop-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/snappy-java-1.0.5-M3.jar:/home/voltdb/voltdb-3.0/lib/zmq-2.1.11.jar
2014-02-24 08:14:50,267   INFO  [main] HOST: Maximum usable Java heap set to 910 mb.
2014-02-24 08:14:50,267   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-24 08:14:50,267   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-24 08:14:50,267   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-24 08:14:50,267   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-24 08:14:50,267   INFO  [main] HOST: HOST MEMORY (MB): 2002
2014-02-24 08:14:50,267   INFO  [main] HOST: OS PROFILE:       Linux 3.2.0-36-generic amd64 en_US
2014-02-24 08:14:50,267   INFO  [main] HOST: JAVA VERSION:     1.6.0_24
2014-02-24 08:14:50,267   INFO  [main] HOST: JAVA RUNTIME:     OpenJDK Runtime Environment (1.6.0_24-b24)
2014-02-24 08:14:50,267   INFO  [main] HOST: JAVA VM:          OpenJDK 64-Bit Server VM (20.0-b12, mixed mode)
2014-02-24 08:14:50,267   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-24 08:14:50,267   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.149 2a02:8070:8333:b700:20c:29ff:feba:12f0%2 21212,21211,8080 [SELF]
2014-02-24 08:14:50,279   WARN  [main] HOST: Running without redundancy (k=0) is not recommended for production use.
2014-02-24 08:14:50,311   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-24 08:14:50,854   INFO  [Thread-10] CONSOLE: Server completed initialization.
