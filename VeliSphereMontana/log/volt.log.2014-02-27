2014-02-27 00:43:03,382   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 00:43:03,393   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 00:43:03,394   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,394   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,397   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,397   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 00:43:03,398   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 00:43:03,398   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 00:43:03,398   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 00:43:03,399   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:43:03,399   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:43:03,400   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:43:03,400   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 00:43:03,401   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,402   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 00:43:03,402   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,403   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 00:43:03,404   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 00:43:03,404   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 00:43:03,404   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 00:43:03,404   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 00:43:03,405   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 00:43:03,406   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 00:43:03,407   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,407   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 00:43:03,408   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 00:43:03,408   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 00:43:03,408   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:43:03,409   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:43:03,409   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:43:03,410   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,410   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,410   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,411   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,411   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,411   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,411   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 00:43:03,412   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,412   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,412   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,413   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,413   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,414   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 00:43:03,415   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 00:43:03,415   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 00:43:03,416   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,416   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 00:43:03,431   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 00:43:03,496   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 00:43:03,511   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 00:43:03,515   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 00:43:03,524   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 00:43:03,533   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:03,541   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:03,546   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:03,552   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 00:43:03,554   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 00:43:03,558   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 00:43:03,560   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 00:43:03,565   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:43:03,567   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,574   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,578   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,587   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:43:03,589   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,594   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,597   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,611   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 00:43:03,613   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,616   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,618   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,622   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 00:43:03,625   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 00:43:03,628   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 00:43:03,633   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 00:43:03,635   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 00:43:03,637   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 00:43:03,641   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 00:43:03,642   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 00:43:03,645   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 00:43:03,648   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 00:43:03,650   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:43:03,653   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:43:03,654   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:43:03,656   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 00:43:03,658   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:03,661   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:03,664   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:03,667   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 00:43:03,670   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 00:43:03,674   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 00:43:03,677   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 00:43:03,678   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 00:43:03,682   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 00:43:03,683   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 00:43:03,685   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 00:43:03,687   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:03,689   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:03,692   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:03,694   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 00:43:03,696   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 00:43:03,698   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 00:43:03,701   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 00:43:03,703   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,706   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,708   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,711   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 00:43:03,712   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,715   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,718   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,721   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 00:43:03,722   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,726   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,728   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:03,731   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 00:43:03,732   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:43:03,735   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:43:03,737   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:43:03,740   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 00:43:03,743   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 00:43:03,745   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 00:43:03,750   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 00:43:03,751   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 00:43:03,753   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 00:43:03,755   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 00:43:03,756   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 00:43:03,761   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 00:43:03,762   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 00:43:03,765   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 00:43:03,766   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:43:03,768   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:43:03,770   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:43:03,783   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:43:03,784   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:43:03,786   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:43:03,788   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:43:03,790   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 00:43:03,791   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 00:43:03,793   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 00:43:03,794   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 00:43:03,796   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 00:43:03,797   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:43:03,799   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:43:03,800   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:43:03,802   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 00:43:03,804   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 00:43:03,805   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 00:43:03,806   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 00:43:03,833   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 00:43:03,838   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 00:43:03,840   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 00:43:03,843   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:03,844   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 00:43:03,846   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:03,847   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 00:43:03,850   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 00:43:03,857   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 00:43:03,859   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 00:43:03,861   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:03,862   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 00:43:03,870   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 00:43:03,870   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 00:43:03,871   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 00:43:03,875   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:03,876   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 00:43:03,882   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 00:43:03,887   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 00:43:03,891   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 00:43:03,893   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:03,895   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 00:43:03,898   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 00:43:03,905   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 00:43:03,907   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:03,908   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 00:43:03,912   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 00:43:03,916   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 00:43:03,918   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 00:43:03,919   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 00:43:03,923   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 00:43:03,925   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:03,927   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 00:43:03,931   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 00:43:03,935   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 00:43:03,935   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:03,937   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 00:43:03,939   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 00:43:03,940   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 00:43:03,944   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 00:43:03,952   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 00:43:03,954   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 00:43:03,993   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 00:43:03,994   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 00:43:04,004   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:04,006   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 00:43:04,011   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 00:43:04,014   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 00:43:04,016   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 00:43:04,020   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 00:43:04,025   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 00:43:04,028   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:04,029   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 00:43:04,043   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 00:43:04,043   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 00:43:04,045   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 00:43:04,050   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 00:43:04,054   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 00:43:04,057   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:04,059   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 00:43:04,065   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 00:43:04,068   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 00:43:04,071   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:04,072   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 00:43:04,075   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:04,076   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 00:43:04,079   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 00:43:04,082   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:04,083   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 00:43:04,089   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 00:43:04,099   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 00:43:04,106   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 00:43:04,108   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:04,110   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 00:43:04,114   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 00:43:04,125   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:04,126   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 00:43:04,129   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:04,130   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 00:43:04,136   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 00:43:04,140   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 00:43:04,148   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 00:43:04,150   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 00:43:04,154   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID IN ?;
2014-02-27 00:43:04,156   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID IN ?;
2014-02-27 00:43:04,158   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 00:43:04,161   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 00:43:04,163   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 00:43:04,203   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 00:43:04,204   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 00:43:04,207   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 00:43:04,209   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 00:43:04,215   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 00:43:04,217   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 00:43:04,219   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 00:43:04,222   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 00:43:04,223   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 00:43:04,224   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 00:43:04,226   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:04,227   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 00:43:04,229   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 00:43:04,230   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 00:43:04,232   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 00:43:04,232   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:04,233   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 00:43:04,239   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:04,240   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 00:43:04,247   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 05:43:05,724   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 05:43:05,731   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 05:43:05,738   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 05:43:05,764   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 05:43:05,765   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 05:43:05,767   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 05:43:05,780   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 05:43:05,781   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 05:43:05,781   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 05:43:05,826   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 05:43:05,951   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 05:43:05,983   FATAL [main] HOST: The PID of this process is 17884
2014-02-27 05:43:05,983   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 05:43:05,983   FATAL [main] HOST: java      14305 thorsten  161u  IPv6 954637      0t0  TCP *:47314 (LISTEN)
2014-02-27 05:43:05,983   FATAL [main] HOST: java      17316 thorsten   34u  IPv6 953026      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 05:43:05,983   FATAL [main] HOST: java      17316 thorsten   40u  IPv6 953033      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 05:43:05,984   FATAL [main] HOST: java      17316 thorsten   54u  IPv6 953040      0t0  TCP *:8080 (LISTEN)
2014-02-27 05:43:05,984   FATAL [main] HOST: java      17316 thorsten   55u  IPv6 953107      0t0  TCP *:21212 (LISTEN)
2014-02-27 05:43:05,984   FATAL [main] HOST: java      17316 thorsten   56u  IPv6 953108      0t0  TCP *:21211 (LISTEN)
2014-02-27 05:43:05,990   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 05:43:05,990   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 00:43:16,968   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 00:43:16,976   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 00:43:16,977   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 00:43:16,977   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 00:43:16,979   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 00:43:16,980   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 00:43:16,981   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 00:43:16,981   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 00:43:16,981   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 00:43:16,982   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:43:16,983   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:43:16,983   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:43:16,984   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 00:43:16,985   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 00:43:16,985   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 00:43:16,986   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 00:43:16,987   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 00:43:16,988   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 00:43:16,988   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 00:43:16,989   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 00:43:16,989   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 00:43:16,989   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 00:43:16,990   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 00:43:16,993   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:16,994   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 00:43:16,994   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 00:43:16,994   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 00:43:16,995   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:43:16,995   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:43:16,995   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:43:16,996   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:16,996   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:16,996   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:16,997   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:16,997   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:16,997   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:16,998   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 00:43:16,999   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:17,003   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:17,003   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:17,004   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:17,004   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:43:17,005   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 00:43:17,005   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 00:43:17,006   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 00:43:17,008   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 00:43:17,008   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 00:43:17,021   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 00:43:17,090   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 00:43:17,103   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 00:43:17,107   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 00:43:17,116   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 00:43:17,124   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:17,131   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:17,135   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:17,142   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 00:43:17,144   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 00:43:17,155   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 00:43:17,157   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 00:43:17,159   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:43:17,161   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,165   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,169   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,173   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:43:17,175   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,178   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,181   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,189   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 00:43:17,190   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,193   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,195   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,198   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 00:43:17,201   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 00:43:17,204   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 00:43:17,207   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 00:43:17,209   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 00:43:17,212   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 00:43:17,215   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 00:43:17,216   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 00:43:17,219   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 00:43:17,222   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 00:43:17,223   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:43:17,225   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:43:17,227   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:43:17,229   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 00:43:17,230   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:17,233   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:17,236   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:17,239   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 00:43:17,241   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 00:43:17,243   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 00:43:17,246   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 00:43:17,247   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 00:43:17,249   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 00:43:17,251   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 00:43:17,253   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 00:43:17,254   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:17,257   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:17,259   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:43:17,262   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 00:43:17,264   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 00:43:17,266   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 00:43:17,269   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 00:43:17,270   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,273   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,275   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,278   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 00:43:17,279   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,282   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,284   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,286   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 00:43:17,288   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,290   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,292   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:43:17,295   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 00:43:17,296   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:43:17,299   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:43:17,301   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:43:17,304   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 00:43:17,306   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 00:43:17,308   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 00:43:17,311   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 00:43:17,312   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 00:43:17,315   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 00:43:17,317   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 00:43:17,318   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 00:43:17,320   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 00:43:17,322   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 00:43:17,324   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 00:43:17,325   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:43:17,327   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:43:17,329   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:43:17,337   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:43:17,338   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:43:17,341   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:43:17,342   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:43:17,344   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 00:43:17,345   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 00:43:17,347   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 00:43:17,357   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 00:43:17,359   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 00:43:17,360   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:43:17,362   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:43:17,364   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:43:17,366   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 00:43:17,367   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 00:43:17,369   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 00:43:17,370   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 00:43:17,394   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 00:43:17,399   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 00:43:17,402   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 00:43:17,405   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:17,414   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 00:43:17,418   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:17,419   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 00:43:17,424   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 00:43:17,431   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 00:43:17,432   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 00:43:17,434   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:17,435   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 00:43:17,443   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 00:43:17,443   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 00:43:17,445   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 00:43:17,447   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:17,448   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 00:43:17,451   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 00:43:17,454   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 00:43:17,458   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 00:43:17,460   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:17,461   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 00:43:17,464   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 00:43:17,470   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 00:43:17,472   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:17,473   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 00:43:17,477   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 00:43:17,482   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 00:43:17,484   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 00:43:17,485   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 00:43:17,488   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 00:43:17,493   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:17,494   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 00:43:17,503   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 00:43:17,514   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 00:43:17,514   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:17,516   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 00:43:17,528   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 00:43:17,529   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 00:43:17,533   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 00:43:17,535   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 00:43:17,536   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 00:43:17,575   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 00:43:17,576   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 00:43:17,587   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:17,588   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 00:43:17,592   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 00:43:17,594   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 00:43:17,596   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 00:43:17,597   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 00:43:17,603   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 00:43:17,605   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:17,606   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 00:43:17,616   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 00:43:17,616   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 00:43:17,617   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 00:43:17,620   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 00:43:17,626   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 00:43:17,628   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:17,629   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 00:43:17,631   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 00:43:17,632   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 00:43:17,636   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:17,637   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 00:43:17,643   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:17,644   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 00:43:17,645   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 00:43:17,647   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:17,648   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 00:43:17,652   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 00:43:17,658   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 00:43:17,668   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 00:43:17,673   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:17,674   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 00:43:17,678   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 00:43:17,680   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:17,684   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 00:43:17,686   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:17,687   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 00:43:17,690   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 00:43:17,693   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 00:43:17,696   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 00:43:17,701   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 00:43:17,702   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID IN ?;
2014-02-27 00:43:17,704   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID IN ?;
2014-02-27 00:43:17,705   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 00:43:17,713   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 00:43:17,714   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 00:43:17,729   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 00:43:17,744   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 00:43:17,746   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 00:43:17,748   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 00:43:17,749   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 00:43:17,751   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 00:43:17,753   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 00:43:17,756   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 00:43:17,757   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 00:43:17,758   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 00:43:17,760   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:17,761   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 00:43:17,763   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 00:43:17,764   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 00:43:17,766   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 00:43:17,766   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:43:17,767   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 00:43:17,774   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:43:17,775   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 00:43:17,782   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 05:43:19,121   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 05:43:19,128   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 05:43:19,135   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 05:43:19,160   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 05:43:19,160   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 05:43:19,162   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 05:43:19,196   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 05:43:19,210   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 05:43:19,255   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@2a03803
2014-02-27 05:43:19,260   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 05:43:19,262   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:45857
2014-02-27 05:43:19,263   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 05:43:19,265   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:45857
2014-02-27 05:43:19,278   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169f9c46f0800000 with negotiated timeout 6000 for client /127.0.0.1:45857
2014-02-27 05:43:19,278   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169f9c46f0800000, negotiated timeout = 6000
2014-02-27 05:43:19,321   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 05:43:19,347   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 05:43:19,347   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 05:43:19,360   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 05:43:19,584   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 05:43:21,377   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 05:43:21,388   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 05:43:21,486   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 05:43:21,492   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 05:43:21,804   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 05:43:21,958   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 05:43:21,982   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 05:43:21,993   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 05:43:21,996   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 05:43:22,004   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 05:43:22,005   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 05:43:22,012   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 8 ms.
2014-02-27 05:43:22,013   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 21 ms.
2014-02-27 05:43:22,022   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 05:43:22,022   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 05:43:22,024   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 05:43:22,024   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 4 ms.
2014-02-27 05:43:22,039   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 05:43:22,050   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 05:43:22,053   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 12 ms.
2014-02-27 05:43:22,061   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 05:43:22,088   INFO  [main] HOST: Database start action is Create.
2014-02-27 05:43:22,115   INFO  [main] HOST: PID of this Volt process is 17945
2014-02-27 05:43:22,115   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 05:43:22,116   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 05:43:22,116   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 05:43:22,116   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 05:43:22,116   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 05:43:22,116   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 05:43:22,116   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 05:43:22,116   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 05:43:22,116   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 05:43:22,116   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 05:43:22,116   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 05:43:22,116   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 05:43:22,117   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 05:43:22,117   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 05:43:22,117   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 05:43:22,117   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 05:43:22,117   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 05:43:22,117   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 05:43:22,117   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 05:43:22,117   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 05:43:22,117   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 05:43:22,117   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 05:43:22,117   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 05:43:22,118   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 05:43:22,118   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 05:43:22,137   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 05:43:22,138   INFO  [Thread-9] HOST: Logging config info
2014-02-27 05:43:22,138   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 05:43:22,171   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 00:44:55,755   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 00:44:55,760   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 00:44:55,761   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,763   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,765   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,765   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 00:44:55,766   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 00:44:55,766   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 00:44:55,766   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 00:44:55,774   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:44:55,775   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:44:55,775   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:44:55,775   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 00:44:55,778   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,778   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 00:44:55,779   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,779   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 00:44:55,780   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 00:44:55,781   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 00:44:55,781   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 00:44:55,781   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 00:44:55,781   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 00:44:55,782   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 00:44:55,783   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,783   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 00:44:55,783   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 00:44:55,783   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 00:44:55,784   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:44:55,784   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:44:55,784   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:44:55,784   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,784   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,784   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,785   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,785   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,785   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,785   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 00:44:55,786   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,786   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,786   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,786   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,786   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,787   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 00:44:55,788   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 00:44:55,788   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 00:44:55,788   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,788   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 00:44:55,800   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 00:44:55,858   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 00:44:55,873   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 00:44:55,877   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 00:44:55,883   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 00:44:55,891   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:44:55,898   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:44:55,902   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:44:55,909   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 00:44:55,911   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 00:44:55,916   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 00:44:55,918   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 00:44:55,923   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:44:55,925   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:55,930   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:55,934   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:55,941   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:44:55,943   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:55,947   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:55,950   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:55,958   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 00:44:55,960   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:55,963   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:55,965   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:55,968   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 00:44:55,972   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 00:44:55,974   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 00:44:55,979   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 00:44:55,981   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 00:44:55,984   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 00:44:55,987   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 00:44:55,989   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 00:44:55,991   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 00:44:55,995   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 00:44:55,996   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:44:55,998   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:44:56,000   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:44:56,002   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 00:44:56,004   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:44:56,010   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:44:56,012   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:44:56,015   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 00:44:56,017   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 00:44:56,021   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 00:44:56,024   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 00:44:56,025   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 00:44:56,029   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 00:44:56,030   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 00:44:56,032   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 00:44:56,034   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:44:56,037   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:44:56,039   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:44:56,042   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 00:44:56,043   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 00:44:56,046   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 00:44:56,051   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 00:44:56,054   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:56,057   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:56,059   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:56,062   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 00:44:56,063   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:56,067   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:56,071   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:56,075   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 00:44:56,076   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:56,081   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:56,083   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:44:56,086   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 00:44:56,087   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:44:56,090   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:44:56,092   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:44:56,096   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 00:44:56,100   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 00:44:56,102   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 00:44:56,107   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 00:44:56,109   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 00:44:56,111   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 00:44:56,113   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 00:44:56,114   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 00:44:56,119   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 00:44:56,120   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 00:44:56,123   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 00:44:56,124   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:44:56,127   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:44:56,128   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:44:56,136   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:44:56,137   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:44:56,139   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:44:56,141   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:44:56,143   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 00:44:56,144   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 00:44:56,147   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 00:44:56,151   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 00:44:56,152   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 00:44:56,153   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:44:56,161   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:44:56,163   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:44:56,165   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 00:44:56,166   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 00:44:56,168   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 00:44:56,169   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 00:44:56,193   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 00:44:56,201   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 00:44:56,204   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 00:44:56,207   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:44:56,212   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 00:44:56,217   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 00:44:56,218   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 00:44:56,227   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 00:44:56,241   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 00:44:56,242   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 00:44:56,246   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:44:56,247   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 00:44:56,255   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 00:44:56,255   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 00:44:56,257   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 00:44:56,259   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:44:56,260   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 00:44:56,263   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 00:44:56,267   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 00:44:56,270   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 00:44:56,273   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 00:44:56,274   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 00:44:56,276   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 00:44:56,282   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 00:44:56,284   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 00:44:56,285   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 00:44:56,289   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 00:44:56,292   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 00:44:56,294   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 00:44:56,295   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 00:44:56,299   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 00:44:56,301   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:44:56,302   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 00:44:56,307   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 00:44:56,311   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 00:44:56,311   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:44:56,312   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 00:44:56,315   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 00:44:56,316   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 00:44:56,319   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 00:44:56,321   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 00:44:56,323   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 00:44:56,340   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 00:44:56,341   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 00:44:56,345   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:44:56,347   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 00:44:56,349   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 00:44:56,351   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 00:44:56,353   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 00:44:56,355   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 00:44:56,362   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 00:44:56,369   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:44:56,370   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 00:44:56,374   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 00:44:56,374   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 00:44:56,380   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 00:44:56,382   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 00:44:56,391   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 00:44:56,393   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 00:44:56,394   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 00:44:56,399   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 00:44:56,400   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 00:44:56,403   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:44:56,404   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 00:44:56,407   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 00:44:56,408   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 00:44:56,411   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 00:44:56,413   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:44:56,414   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 00:44:56,417   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 00:44:56,421   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 00:44:56,424   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 00:44:56,426   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:44:56,426   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 00:44:56,430   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 00:44:56,437   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:44:56,440   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 00:44:56,442   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:44:56,443   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 00:44:56,449   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 00:44:56,453   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 00:44:56,460   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 00:44:56,467   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 00:44:56,468   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID IN ?;
2014-02-27 00:44:56,470   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID IN ?;
2014-02-27 00:44:56,471   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 00:44:56,474   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 00:44:56,475   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 00:44:56,499   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 00:44:56,509   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 00:44:56,512   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 00:44:56,514   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 00:44:56,520   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 00:44:56,522   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 00:44:56,524   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 00:44:56,527   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 00:44:56,529   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 00:44:56,533   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 00:44:56,535   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 00:44:56,536   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 00:44:56,538   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 00:44:56,539   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 00:44:56,542   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 00:44:56,542   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:44:56,543   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 00:44:56,549   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:44:56,550   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 00:44:56,557   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 05:44:58,316   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 05:44:58,333   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 05:44:58,340   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 05:44:58,365   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 05:44:58,366   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 05:44:58,367   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 05:44:58,372   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 05:44:58,381   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 05:44:58,381   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 2
2014-02-27 05:44:58,381   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 05:44:58,393   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 05:44:58,418   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 05:44:58,460   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 05:44:58,493   FATAL [main] HOST: The PID of this process is 18068
2014-02-27 05:44:58,493   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 05:44:58,493   FATAL [main] HOST: java      14305 thorsten  161u  IPv6 955613      0t0  TCP *:38857 (LISTEN)
2014-02-27 05:44:58,493   FATAL [main] HOST: java      17945 thorsten   34u  IPv6 955445      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 05:44:58,493   FATAL [main] HOST: java      17945 thorsten   40u  IPv6 955452      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 05:44:58,493   FATAL [main] HOST: java      17945 thorsten   54u  IPv6 955459      0t0  TCP *:8080 (LISTEN)
2014-02-27 05:44:58,493   FATAL [main] HOST: java      17945 thorsten   55u  IPv6 955526      0t0  TCP *:21212 (LISTEN)
2014-02-27 05:44:58,493   FATAL [main] HOST: java      17945 thorsten   56u  IPv6 955527      0t0  TCP *:21211 (LISTEN)
2014-02-27 05:44:58,499   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 05:44:58,499   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 05:44:58,830   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:38173
2014-02-27 05:44:58,835   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 05:44:58,836   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-02-27 05:44:58,852   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 05:44:58,864   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 05:44:58,864   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 05:44:58,865   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 00:45:08,362   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 00:45:08,368   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 00:45:08,369   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,369   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,371   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,372   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 00:45:08,372   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 00:45:08,373   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 00:45:08,373   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 00:45:08,373   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:45:08,374   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:45:08,374   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:45:08,375   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 00:45:08,376   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,376   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 00:45:08,377   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,377   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 00:45:08,378   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 00:45:08,379   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 00:45:08,379   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 00:45:08,379   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 00:45:08,379   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 00:45:08,380   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 00:45:08,381   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,382   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 00:45:08,382   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 00:45:08,382   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 00:45:08,383   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:45:08,383   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:45:08,383   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:45:08,384   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,384   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,384   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,385   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,385   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,385   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,386   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 00:45:08,387   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,387   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,387   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,388   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,388   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,389   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 00:45:08,390   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 00:45:08,390   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 00:45:08,390   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,390   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 00:45:08,404   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 00:45:08,448   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 00:45:08,460   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 00:45:08,463   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 00:45:08,468   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 00:45:08,473   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:45:08,480   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:45:08,484   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:45:08,491   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 00:45:08,492   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 00:45:08,495   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 00:45:08,497   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 00:45:08,500   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:45:08,501   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,505   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,509   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,513   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:45:08,515   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,518   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,520   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,528   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 00:45:08,529   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,532   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,534   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,537   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 00:45:08,540   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 00:45:08,543   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 00:45:08,546   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 00:45:08,548   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 00:45:08,550   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 00:45:08,553   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 00:45:08,555   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 00:45:08,558   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 00:45:08,561   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 00:45:08,562   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:45:08,564   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:45:08,565   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:45:08,568   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 00:45:08,569   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:45:08,573   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:45:08,575   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:45:08,578   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 00:45:08,579   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 00:45:08,582   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 00:45:08,585   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 00:45:08,586   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 00:45:08,588   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 00:45:08,589   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 00:45:08,591   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 00:45:08,593   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:45:08,595   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:45:08,597   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:45:08,600   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 00:45:08,601   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 00:45:08,603   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 00:45:08,606   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 00:45:08,608   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,610   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,612   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,615   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 00:45:08,617   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,619   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,621   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,624   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 00:45:08,625   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,628   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,629   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:45:08,632   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 00:45:08,634   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:45:08,636   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:45:08,638   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:45:08,641   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 00:45:08,643   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 00:45:08,645   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 00:45:08,648   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 00:45:08,650   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 00:45:08,652   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 00:45:08,654   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 00:45:08,655   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 00:45:08,657   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 00:45:08,658   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 00:45:08,660   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 00:45:08,661   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:45:08,664   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:45:08,665   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:45:08,674   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:45:08,675   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:45:08,677   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:45:08,679   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:45:08,681   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 00:45:08,682   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 00:45:08,683   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 00:45:08,685   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 00:45:08,686   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 00:45:08,688   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:45:08,690   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:45:08,691   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:45:08,694   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 00:45:08,695   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 00:45:08,697   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 00:45:08,698   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 00:45:08,721   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 00:45:08,726   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 00:45:08,729   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 00:45:08,731   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:45:08,733   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 00:45:08,735   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 00:45:08,736   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 00:45:08,739   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 00:45:08,746   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 00:45:08,747   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 00:45:08,749   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:45:08,750   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 00:45:08,759   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 00:45:08,759   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 00:45:08,760   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 00:45:08,762   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:45:08,763   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 00:45:08,767   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 00:45:08,771   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 00:45:08,775   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 00:45:08,777   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 00:45:08,778   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 00:45:08,781   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 00:45:08,787   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 00:45:08,789   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 00:45:08,790   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 00:45:08,794   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 00:45:08,797   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 00:45:08,800   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 00:45:08,801   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 00:45:08,805   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 00:45:08,807   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:45:08,808   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 00:45:08,813   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 00:45:08,817   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 00:45:08,817   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:45:08,818   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 00:45:08,820   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 00:45:08,821   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 00:45:08,825   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 00:45:08,828   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 00:45:08,829   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 00:45:08,845   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 00:45:08,846   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 00:45:08,850   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:45:08,852   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 00:45:08,854   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 00:45:08,856   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 00:45:08,857   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 00:45:08,866   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 00:45:08,870   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 00:45:08,872   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:45:08,873   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 00:45:08,876   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 00:45:08,877   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 00:45:08,877   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 00:45:08,881   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 00:45:08,884   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 00:45:08,885   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 00:45:08,886   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 00:45:08,889   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 00:45:08,890   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 00:45:08,892   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:45:08,893   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 00:45:08,895   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 00:45:08,896   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 00:45:08,898   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 00:45:08,900   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:45:08,901   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 00:45:08,905   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 00:45:08,908   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 00:45:08,923   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 00:45:08,925   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:45:08,926   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 00:45:08,929   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 00:45:08,931   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:45:08,933   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 00:45:08,935   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:45:08,936   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 00:45:08,939   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 00:45:08,943   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 00:45:08,946   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 00:45:08,948   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 00:45:08,949   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID IN ?;
2014-02-27 00:45:08,951   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID IN ?;
2014-02-27 00:45:08,953   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 00:45:08,955   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 00:45:08,956   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 00:45:08,983   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 00:45:08,984   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 00:45:08,987   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 00:45:08,989   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 00:45:08,990   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 00:45:08,992   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 00:45:08,994   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 00:45:08,997   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 00:45:08,999   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 00:45:09,000   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 00:45:09,003   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 00:45:09,004   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 00:45:09,006   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 00:45:09,007   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 00:45:09,009   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 00:45:09,009   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:45:09,010   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 00:45:09,026   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:45:09,027   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 00:45:09,036   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 05:45:10,543   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 05:45:10,549   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 05:45:10,556   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 05:45:10,579   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 05:45:10,579   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 05:45:10,581   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 05:45:10,616   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 05:45:10,633   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 05:45:10,676   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@485fd4e6
2014-02-27 05:45:10,681   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 05:45:10,683   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:45861
2014-02-27 05:45:10,684   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 05:45:10,686   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:45861
2014-02-27 05:45:10,697   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169f9d208f800000 with negotiated timeout 6000 for client /127.0.0.1:45861
2014-02-27 05:45:10,698   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169f9d208f800000, negotiated timeout = 6000
2014-02-27 05:45:10,758   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 05:45:10,783   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 05:45:10,783   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 05:45:10,796   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 05:45:11,026   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 05:45:12,526   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 05:45:12,530   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 05:45:12,627   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 05:45:12,632   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 05:45:12,924   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 05:45:13,069   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 05:45:13,092   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 05:45:13,103   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 05:45:13,105   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 05:45:13,122   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 21 ms.
2014-02-27 05:45:13,122   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 05:45:13,122   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 05:45:13,122   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 1 ms.
2014-02-27 05:45:13,135   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 05:45:13,135   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 05:45:13,138   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 05:45:13,138   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 2 ms.
2014-02-27 05:45:13,153   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 05:45:13,165   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 05:45:13,167   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 12 ms.
2014-02-27 05:45:13,175   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 05:45:13,200   INFO  [main] HOST: Database start action is Create.
2014-02-27 05:45:13,224   INFO  [main] HOST: PID of this Volt process is 18130
2014-02-27 05:45:13,225   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 05:45:13,225   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 05:45:13,225   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 05:45:13,225   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 05:45:13,225   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 05:45:13,225   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 05:45:13,225   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 05:45:13,225   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 05:45:13,226   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 05:45:13,226   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 05:45:13,226   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 05:45:13,226   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 05:45:13,226   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 05:45:13,226   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 05:45:13,226   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 05:45:13,226   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 05:45:13,226   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 05:45:13,226   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 05:45:13,226   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 05:45:13,226   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 05:45:13,226   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 05:45:13,227   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 05:45:13,227   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 05:45:13,227   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 05:45:13,227   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 05:45:13,244   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 05:45:13,246   INFO  [Thread-9] HOST: Logging config info
2014-02-27 05:45:13,246   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 05:45:13,272   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 00:49:05,868   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 00:49:05,874   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 00:49:05,875   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,876   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,878   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,879   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 00:49:05,879   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 00:49:05,880   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 00:49:05,880   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 00:49:05,881   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:49:05,881   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:49:05,881   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:49:05,882   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 00:49:05,883   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,884   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 00:49:05,885   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,886   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 00:49:05,887   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 00:49:05,887   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 00:49:05,887   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 00:49:05,887   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 00:49:05,888   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 00:49:05,889   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 00:49:05,890   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,891   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 00:49:05,891   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 00:49:05,891   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 00:49:05,892   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:49:05,892   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:49:05,893   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:49:05,893   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,894   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,894   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,895   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,895   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,895   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,896   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 00:49:05,897   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,897   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,897   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,898   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,898   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,899   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 00:49:05,900   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 00:49:05,900   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 00:49:05,901   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,901   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 00:49:05,925   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 00:49:05,971   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 00:49:05,984   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 00:49:05,987   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 00:49:05,993   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 00:49:05,998   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:06,005   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:06,009   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:06,016   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 00:49:06,018   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 00:49:06,021   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 00:49:06,023   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 00:49:06,026   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:49:06,027   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,031   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,035   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,040   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:49:06,041   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,046   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,049   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,057   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 00:49:06,060   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,062   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,070   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,074   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 00:49:06,077   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 00:49:06,080   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 00:49:06,083   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 00:49:06,085   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 00:49:06,088   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 00:49:06,091   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 00:49:06,093   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 00:49:06,095   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 00:49:06,098   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 00:49:06,099   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:49:06,102   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:49:06,103   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:49:06,105   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 00:49:06,107   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:06,111   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:06,113   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:06,117   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 00:49:06,120   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 00:49:06,123   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 00:49:06,128   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 00:49:06,129   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 00:49:06,132   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 00:49:06,134   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 00:49:06,136   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 00:49:06,138   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:06,140   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:06,142   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:06,145   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 00:49:06,146   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 00:49:06,149   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 00:49:06,152   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 00:49:06,154   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,158   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,160   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,163   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 00:49:06,165   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,168   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,170   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,173   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 00:49:06,175   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,181   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,184   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:06,186   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 00:49:06,187   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:49:06,190   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:49:06,192   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:49:06,198   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 00:49:06,201   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 00:49:06,204   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 00:49:06,209   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 00:49:06,210   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 00:49:06,212   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 00:49:06,214   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 00:49:06,215   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 00:49:06,217   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 00:49:06,219   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 00:49:06,221   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 00:49:06,222   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:49:06,224   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:49:06,226   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:49:06,233   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:49:06,234   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:49:06,237   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:49:06,238   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:49:06,240   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 00:49:06,241   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 00:49:06,243   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 00:49:06,244   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 00:49:06,246   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 00:49:06,247   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:49:06,250   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:49:06,251   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:49:06,253   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 00:49:06,255   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 00:49:06,257   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 00:49:06,258   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 00:49:06,283   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 00:49:06,288   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 00:49:06,292   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 00:49:06,294   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:06,295   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 00:49:06,298   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:06,303   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 00:49:06,306   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 00:49:06,318   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 00:49:06,320   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 00:49:06,322   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:06,323   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 00:49:06,333   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 00:49:06,333   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 00:49:06,335   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 00:49:06,337   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:06,346   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 00:49:06,350   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 00:49:06,355   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 00:49:06,358   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 00:49:06,361   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:06,362   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 00:49:06,365   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 00:49:06,371   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 00:49:06,376   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:06,377   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 00:49:06,382   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 00:49:06,389   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 00:49:06,391   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 00:49:06,392   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 00:49:06,397   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 00:49:06,407   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:06,409   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 00:49:06,414   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 00:49:06,418   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 00:49:06,419   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:06,420   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 00:49:06,422   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 00:49:06,423   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 00:49:06,427   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 00:49:06,432   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 00:49:06,433   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 00:49:06,477   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 00:49:06,478   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 00:49:06,483   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:06,489   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 00:49:06,493   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 00:49:06,495   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 00:49:06,497   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 00:49:06,507   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 00:49:06,512   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 00:49:06,516   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:06,519   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 00:49:06,531   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 00:49:06,531   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 00:49:06,533   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 00:49:06,538   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 00:49:06,542   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 00:49:06,544   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:06,545   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 00:49:06,549   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 00:49:06,551   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 00:49:06,558   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:06,559   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 00:49:06,562   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:06,562   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 00:49:06,572   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 00:49:06,574   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:06,576   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 00:49:06,579   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 00:49:06,583   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 00:49:06,587   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 00:49:06,589   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:06,590   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 00:49:06,592   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 00:49:06,599   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:06,602   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 00:49:06,604   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:06,605   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 00:49:06,611   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 00:49:06,614   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 00:49:06,621   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 00:49:06,627   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 00:49:06,628   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID IN ?;
2014-02-27 00:49:06,630   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID IN ?;
2014-02-27 00:49:06,631   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 00:49:06,634   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 00:49:06,635   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 00:49:06,658   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 00:49:06,666   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 00:49:06,668   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 00:49:06,670   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 00:49:06,677   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 00:49:06,679   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 00:49:06,681   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 00:49:06,684   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 00:49:06,685   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 00:49:06,686   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 00:49:06,688   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:06,689   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 00:49:06,691   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 00:49:06,691   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 00:49:06,693   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 00:49:06,693   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:06,694   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 00:49:06,700   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:06,701   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 00:49:06,717   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 05:49:08,342   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 05:49:08,357   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 05:49:08,364   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 05:49:08,389   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 05:49:08,389   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 05:49:08,391   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 05:49:08,396   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 05:49:08,404   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 05:49:08,404   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 0
2014-02-27 05:49:08,404   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 05:49:08,421   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 05:49:08,443   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 05:49:08,476   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 05:49:08,508   FATAL [main] HOST: The PID of this process is 18586
2014-02-27 05:49:08,508   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 05:49:08,508   FATAL [main] HOST: java      14305 thorsten  161u  IPv6 956926      0t0  TCP *:59650 (LISTEN)
2014-02-27 05:49:08,508   FATAL [main] HOST: java      18130 thorsten   34u  IPv6 956417      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 05:49:08,508   FATAL [main] HOST: java      18130 thorsten   40u  IPv6 956424      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 05:49:08,508   FATAL [main] HOST: java      18130 thorsten   54u  IPv6 956431      0t0  TCP *:8080 (LISTEN)
2014-02-27 05:49:08,508   FATAL [main] HOST: java      18130 thorsten   55u  IPv6 956498      0t0  TCP *:21212 (LISTEN)
2014-02-27 05:49:08,508   FATAL [main] HOST: java      18130 thorsten   56u  IPv6 956499      0t0  TCP *:21211 (LISTEN)
2014-02-27 05:49:08,514   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 05:49:08,514   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 05:49:08,849   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:38286
2014-02-27 05:49:08,857   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 05:49:08,859   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 05:49:08,877   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 05:49:08,888   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 05:49:08,888   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 05:49:08,890   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 00:49:20,933   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 00:49:20,944   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 00:49:20,951   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,951   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,959   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,959   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 00:49:20,960   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 00:49:20,960   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 00:49:20,960   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 00:49:20,961   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:49:20,961   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:49:20,961   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:49:20,962   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 00:49:20,963   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,969   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 00:49:20,970   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,971   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 00:49:20,972   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 00:49:20,972   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 00:49:20,972   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 00:49:20,972   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 00:49:20,972   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 00:49:20,973   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 00:49:20,976   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,976   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 00:49:20,976   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 00:49:20,976   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 00:49:20,977   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:49:20,977   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:49:20,977   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:49:20,977   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,978   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,978   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,978   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,978   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,978   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,979   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 00:49:20,979   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,979   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,979   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,979   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,980   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,980   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 00:49:20,981   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 00:49:20,981   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 00:49:20,981   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,981   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 00:49:20,994   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 00:49:21,044   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 00:49:21,066   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 00:49:21,069   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 00:49:21,073   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 00:49:21,078   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:21,085   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:21,089   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:21,095   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 00:49:21,097   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 00:49:21,099   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 00:49:21,101   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 00:49:21,105   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:49:21,107   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,111   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,115   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,119   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:49:21,121   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,124   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,126   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,136   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 00:49:21,137   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,140   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,142   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,145   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 00:49:21,148   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 00:49:21,151   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 00:49:21,154   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 00:49:21,156   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 00:49:21,159   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 00:49:21,162   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 00:49:21,163   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 00:49:21,166   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 00:49:21,169   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 00:49:21,170   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:49:21,172   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:49:21,174   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:49:21,176   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 00:49:21,178   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:21,181   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:21,183   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:21,186   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 00:49:21,188   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 00:49:21,190   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 00:49:21,193   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 00:49:21,195   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 00:49:21,197   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 00:49:21,198   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 00:49:21,201   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 00:49:21,202   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:21,204   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:21,206   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:49:21,209   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 00:49:21,210   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 00:49:21,212   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 00:49:21,215   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 00:49:21,217   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,219   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,221   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,225   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 00:49:21,226   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,229   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,231   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,233   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 00:49:21,235   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,237   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,239   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:49:21,242   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 00:49:21,243   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:49:21,246   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:49:21,248   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:49:21,251   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 00:49:21,254   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 00:49:21,256   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 00:49:21,260   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 00:49:21,262   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 00:49:21,264   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 00:49:21,267   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 00:49:21,268   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 00:49:21,270   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 00:49:21,272   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 00:49:21,274   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 00:49:21,275   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:49:21,277   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:49:21,279   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:49:21,285   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:49:21,286   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:49:21,288   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:49:21,290   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:49:21,292   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 00:49:21,294   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 00:49:21,295   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 00:49:21,297   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 00:49:21,298   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 00:49:21,299   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:49:21,302   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:49:21,303   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:49:21,305   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 00:49:21,307   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 00:49:21,309   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 00:49:21,310   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 00:49:21,334   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 00:49:21,338   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 00:49:21,341   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 00:49:21,343   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:21,345   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 00:49:21,347   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:21,348   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 00:49:21,351   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 00:49:21,357   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 00:49:21,359   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 00:49:21,362   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:21,363   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 00:49:21,370   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 00:49:21,370   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 00:49:21,372   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 00:49:21,374   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:21,375   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 00:49:21,380   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 00:49:21,390   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 00:49:21,393   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 00:49:21,403   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:21,404   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 00:49:21,408   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 00:49:21,417   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 00:49:21,419   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:21,420   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 00:49:21,425   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 00:49:21,433   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 00:49:21,438   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 00:49:21,442   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 00:49:21,445   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 00:49:21,455   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:21,457   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 00:49:21,461   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 00:49:21,468   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 00:49:21,468   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:21,477   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 00:49:21,483   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 00:49:21,484   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 00:49:21,492   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 00:49:21,494   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 00:49:21,495   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 00:49:21,511   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 00:49:21,512   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 00:49:21,515   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:21,517   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 00:49:21,519   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 00:49:21,520   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 00:49:21,522   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 00:49:21,524   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 00:49:21,527   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 00:49:21,529   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:21,530   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 00:49:21,533   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 00:49:21,533   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 00:49:21,534   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 00:49:21,538   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 00:49:21,541   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 00:49:21,543   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:21,544   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 00:49:21,547   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 00:49:21,548   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 00:49:21,550   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:21,551   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 00:49:21,553   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:21,554   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 00:49:21,556   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 00:49:21,559   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:21,560   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 00:49:21,564   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 00:49:21,567   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 00:49:21,570   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 00:49:21,571   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:21,572   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 00:49:21,575   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 00:49:21,577   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:21,578   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 00:49:21,580   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:21,581   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 00:49:21,592   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 00:49:21,597   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 00:49:21,604   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 00:49:21,606   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 00:49:21,607   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID IN ?;
2014-02-27 00:49:21,612   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID IN ?;
2014-02-27 00:49:21,614   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 00:49:21,617   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 00:49:21,618   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 00:49:21,638   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 00:49:21,644   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 00:49:21,646   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 00:49:21,648   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 00:49:21,654   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 00:49:21,656   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 00:49:21,658   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 00:49:21,661   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 00:49:21,662   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 00:49:21,663   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 00:49:21,665   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:21,666   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 00:49:21,668   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 00:49:21,669   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 00:49:21,671   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 00:49:21,671   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:49:21,672   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 00:49:21,678   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:49:21,679   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 00:49:21,696   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 05:49:23,896   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 05:49:23,906   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 05:49:23,913   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 05:49:23,937   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 05:49:23,937   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 05:49:23,939   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 05:49:23,972   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 05:49:23,988   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 05:49:24,034   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-02-27 05:49:24,039   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 05:49:24,041   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 05:49:24,041   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:45981
2014-02-27 05:49:24,043   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:45981
2014-02-27 05:49:24,054   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169f9f0f65820000 with negotiated timeout 6000 for client /127.0.0.1:45981
2014-02-27 05:49:24,055   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169f9f0f65820000, negotiated timeout = 6000
2014-02-27 05:49:24,102   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 05:49:24,124   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 05:49:24,124   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 05:49:24,138   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 05:49:24,372   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 05:49:25,777   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 05:49:25,781   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 05:49:25,875   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 05:49:25,879   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 05:49:26,182   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 05:49:26,333   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 05:49:26,351   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 05:49:26,361   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 05:49:26,365   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 05:49:26,377   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 05:49:26,378   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 05:49:26,380   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 4 ms.
2014-02-27 05:49:26,381   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 21 ms.
2014-02-27 05:49:26,390   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 05:49:26,390   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 05:49:26,392   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 05:49:26,392   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 3 ms.
2014-02-27 05:49:26,401   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 05:49:26,410   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 05:49:26,412   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 9 ms.
2014-02-27 05:49:26,420   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 05:49:26,451   INFO  [main] HOST: Database start action is Create.
2014-02-27 05:49:26,474   INFO  [main] HOST: PID of this Volt process is 18655
2014-02-27 05:49:26,474   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 05:49:26,474   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 05:49:26,474   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 05:49:26,474   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 05:49:26,474   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 05:49:26,474   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 05:49:26,475   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 05:49:26,475   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 05:49:26,475   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 05:49:26,475   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 05:49:26,475   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 05:49:26,475   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 05:49:26,475   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 05:49:26,475   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 05:49:26,475   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 05:49:26,476   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 05:49:26,476   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 05:49:26,476   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 05:49:26,476   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 05:49:26,476   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 05:49:26,476   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 05:49:26,476   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 05:49:26,476   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 05:49:26,482   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 05:49:26,482   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 05:49:26,499   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 05:49:26,500   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 05:49:26,501   INFO  [Thread-9] HOST: Logging config info
2014-02-27 05:49:26,534   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 00:54:25,474   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 00:54:25,480   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 00:54:25,480   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,481   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,484   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,485   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 00:54:25,487   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 00:54:25,488   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 00:54:25,488   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 00:54:25,489   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:54:25,490   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:54:25,490   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:54:25,491   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 00:54:25,492   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,493   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 00:54:25,494   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,495   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 00:54:25,496   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 00:54:25,497   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 00:54:25,497   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 00:54:25,497   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 00:54:25,498   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 00:54:25,499   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 00:54:25,500   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,501   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 00:54:25,501   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 00:54:25,502   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 00:54:25,502   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:54:25,502   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:54:25,503   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:54:25,503   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,503   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,504   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,504   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,504   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,505   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,505   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 00:54:25,506   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,506   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,506   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,507   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,507   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,508   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 00:54:25,509   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 00:54:25,509   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 00:54:25,510   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,510   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 00:54:25,525   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 00:54:25,579   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 00:54:25,593   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 00:54:25,598   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 00:54:25,604   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 00:54:25,610   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:25,618   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:25,622   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:25,630   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 00:54:25,633   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 00:54:25,637   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 00:54:25,639   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 00:54:25,643   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:54:25,644   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,651   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,655   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,661   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:54:25,662   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,668   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,671   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,681   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 00:54:25,682   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,685   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,688   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,691   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 00:54:25,694   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 00:54:25,700   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 00:54:25,705   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 00:54:25,707   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 00:54:25,709   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 00:54:25,712   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 00:54:25,714   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 00:54:25,717   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 00:54:25,720   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 00:54:25,721   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:54:25,723   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:54:25,725   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:54:25,727   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 00:54:25,729   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:25,734   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:25,737   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:25,741   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 00:54:25,743   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 00:54:25,748   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 00:54:25,751   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 00:54:25,753   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 00:54:25,757   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 00:54:25,759   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 00:54:25,761   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 00:54:25,762   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:25,765   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:25,769   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:25,773   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 00:54:25,774   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 00:54:25,777   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 00:54:25,782   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 00:54:25,785   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,789   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,791   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,794   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 00:54:25,796   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,800   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,811   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,815   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 00:54:25,817   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,820   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,823   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:25,826   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 00:54:25,829   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:54:25,832   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:54:25,835   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:54:25,838   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 00:54:25,840   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 00:54:25,842   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 00:54:25,846   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 00:54:25,848   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 00:54:25,850   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 00:54:25,853   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 00:54:25,854   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 00:54:25,856   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 00:54:25,857   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 00:54:25,859   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 00:54:25,861   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:54:25,865   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:54:25,867   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:54:25,877   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:54:25,879   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:54:25,881   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:54:25,883   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:54:25,886   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 00:54:25,887   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 00:54:25,889   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 00:54:25,899   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 00:54:25,901   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 00:54:25,902   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:54:25,906   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:54:25,908   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:54:25,910   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 00:54:25,912   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 00:54:25,915   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 00:54:25,917   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 00:54:25,945   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 00:54:25,951   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 00:54:25,955   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 00:54:25,957   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:25,964   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 00:54:25,966   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:25,977   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 00:54:25,982   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 00:54:26,002   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 00:54:26,003   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 00:54:26,006   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:26,007   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 00:54:26,015   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 00:54:26,015   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 00:54:26,016   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 00:54:26,018   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:26,020   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 00:54:26,023   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 00:54:26,029   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 00:54:26,032   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 00:54:26,035   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:26,038   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 00:54:26,041   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 00:54:26,048   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 00:54:26,050   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:26,051   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 00:54:26,055   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 00:54:26,061   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 00:54:26,063   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 00:54:26,065   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 00:54:26,069   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 00:54:26,072   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:26,074   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 00:54:26,078   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 00:54:26,082   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 00:54:26,082   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:26,083   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 00:54:26,086   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 00:54:26,087   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 00:54:26,090   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 00:54:26,093   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 00:54:26,094   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 00:54:26,130   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 00:54:26,133   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 00:54:26,144   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:26,147   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 00:54:26,151   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 00:54:26,153   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 00:54:26,155   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 00:54:26,157   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 00:54:26,160   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 00:54:26,163   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:26,166   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 00:54:26,192   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 00:54:26,193   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 00:54:26,194   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 00:54:26,199   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 00:54:26,203   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 00:54:26,205   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:26,207   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 00:54:26,212   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 00:54:26,213   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 00:54:26,216   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:26,217   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 00:54:26,220   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:26,222   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 00:54:26,224   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 00:54:26,228   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:26,229   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 00:54:26,234   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 00:54:26,237   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 00:54:26,241   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 00:54:26,243   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:26,244   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 00:54:26,248   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 00:54:26,256   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:26,258   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 00:54:26,260   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:26,261   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 00:54:26,269   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 00:54:26,274   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 00:54:26,285   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 00:54:26,291   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 00:54:26,292   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID IN ?;
2014-02-27 00:54:26,294   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID IN ?;
2014-02-27 00:54:26,295   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 00:54:26,298   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 00:54:26,300   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 00:54:26,325   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 00:54:26,342   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 00:54:26,345   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 00:54:26,348   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 00:54:26,354   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 00:54:26,356   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 00:54:26,358   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 00:54:26,360   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 00:54:26,362   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 00:54:26,363   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 00:54:26,365   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:26,366   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 00:54:26,368   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 00:54:26,369   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 00:54:26,371   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 00:54:26,371   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:26,372   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 00:54:26,378   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:26,382   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 00:54:26,389   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 05:54:27,904   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 05:54:27,917   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 05:54:27,924   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 05:54:27,950   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 05:54:27,950   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 05:54:27,952   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 05:54:27,957   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 05:54:27,971   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 05:54:27,972   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 2
2014-02-27 05:54:27,972   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 05:54:27,984   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 05:54:28,015   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 05:54:28,061   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 05:54:28,110   FATAL [main] HOST: The PID of this process is 19223
2014-02-27 05:54:28,110   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 05:54:28,111   FATAL [main] HOST: java      14305 thorsten  161u  IPv6 958467      0t0  TCP *:60109 (LISTEN)
2014-02-27 05:54:28,111   FATAL [main] HOST: java      18655 thorsten   34u  IPv6 957755      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 05:54:28,111   FATAL [main] HOST: java      18655 thorsten   40u  IPv6 957762      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 05:54:28,111   FATAL [main] HOST: java      18655 thorsten   54u  IPv6 957769      0t0  TCP *:8080 (LISTEN)
2014-02-27 05:54:28,111   FATAL [main] HOST: java      18655 thorsten   55u  IPv6 957836      0t0  TCP *:21212 (LISTEN)
2014-02-27 05:54:28,111   FATAL [main] HOST: java      18655 thorsten   56u  IPv6 957837      0t0  TCP *:21211 (LISTEN)
2014-02-27 05:54:28,118   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 05:54:28,118   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 05:54:28,456   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 05:54:28,462   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 05:54:28,463   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:38461
2014-02-27 05:54:28,467   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 05:54:28,470   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 05:54:28,489   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 05:54:28,500   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 05:54:28,500   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 05:54:28,501   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 00:54:56,371   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 00:54:56,378   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 00:54:56,378   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,379   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,381   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,381   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 00:54:56,382   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 00:54:56,382   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 00:54:56,383   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 00:54:56,384   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:54:56,384   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:54:56,384   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 00:54:56,385   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 00:54:56,386   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,387   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 00:54:56,388   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,388   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 00:54:56,389   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 00:54:56,392   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 00:54:56,393   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 00:54:56,393   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 00:54:56,393   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 00:54:56,394   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 00:54:56,395   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,396   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 00:54:56,396   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 00:54:56,396   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 00:54:56,397   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:54:56,397   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:54:56,397   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 00:54:56,398   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,398   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,398   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,405   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,405   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,405   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,406   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 00:54:56,406   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,406   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,406   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,407   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,407   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,407   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 00:54:56,408   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 00:54:56,408   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 00:54:56,408   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,408   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 00:54:56,420   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 00:54:56,464   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 00:54:56,476   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 00:54:56,480   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 00:54:56,484   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 00:54:56,489   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:56,496   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:56,500   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:56,507   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 00:54:56,508   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 00:54:56,511   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 00:54:56,513   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 00:54:56,515   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:54:56,517   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,522   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,526   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,529   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:54:56,531   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,534   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,537   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,544   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 00:54:56,546   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,548   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,554   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,558   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 00:54:56,561   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 00:54:56,565   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 00:54:56,569   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 00:54:56,571   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 00:54:56,574   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 00:54:56,577   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 00:54:56,578   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 00:54:56,581   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 00:54:56,584   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 00:54:56,586   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:54:56,588   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:54:56,590   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 00:54:56,592   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 00:54:56,594   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:56,597   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:56,600   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:56,603   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 00:54:56,605   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 00:54:56,609   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 00:54:56,612   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 00:54:56,613   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 00:54:56,616   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 00:54:56,618   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 00:54:56,620   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 00:54:56,621   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:56,624   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:56,627   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 00:54:56,629   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 00:54:56,631   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 00:54:56,633   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 00:54:56,636   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 00:54:56,638   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,641   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,643   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,646   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 00:54:56,647   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,650   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,655   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,658   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 00:54:56,659   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,664   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,666   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 00:54:56,669   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 00:54:56,670   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:54:56,673   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:54:56,674   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 00:54:56,677   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 00:54:56,681   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 00:54:56,683   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 00:54:56,688   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 00:54:56,690   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 00:54:56,691   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 00:54:56,694   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 00:54:56,695   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 00:54:56,697   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 00:54:56,698   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 00:54:56,702   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 00:54:56,703   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:54:56,705   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:54:56,707   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:54:56,713   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 00:54:56,714   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:54:56,716   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:54:56,718   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 00:54:56,720   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 00:54:56,721   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 00:54:56,722   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 00:54:56,729   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 00:54:56,733   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 00:54:56,734   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:54:56,739   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:54:56,740   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 00:54:56,742   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 00:54:56,744   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 00:54:56,745   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 00:54:56,746   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 00:54:56,769   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 00:54:56,777   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 00:54:56,780   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 00:54:56,783   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:56,790   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 00:54:56,802   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:56,803   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 00:54:56,805   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 00:54:56,812   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 00:54:56,814   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 00:54:56,816   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:56,817   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 00:54:56,825   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 00:54:56,825   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 00:54:56,826   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 00:54:56,828   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:56,829   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 00:54:56,833   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 00:54:56,837   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 00:54:56,840   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 00:54:56,842   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:56,843   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 00:54:56,849   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 00:54:56,855   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 00:54:56,857   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:56,858   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 00:54:56,861   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 00:54:56,870   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 00:54:56,873   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 00:54:56,874   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 00:54:56,877   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 00:54:56,881   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:56,882   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 00:54:56,895   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 00:54:56,899   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 00:54:56,899   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:56,901   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 00:54:56,903   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 00:54:56,904   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 00:54:56,907   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 00:54:56,912   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 00:54:56,913   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 00:54:56,935   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 00:54:56,937   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 00:54:56,940   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:56,948   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 00:54:56,950   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 00:54:56,951   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 00:54:56,953   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 00:54:56,956   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 00:54:56,959   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 00:54:56,961   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:56,962   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 00:54:56,965   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 00:54:56,965   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 00:54:56,966   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 00:54:56,968   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 00:54:56,972   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 00:54:56,975   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:56,976   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 00:54:56,978   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 00:54:56,980   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 00:54:56,982   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:56,982   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 00:54:56,989   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:56,990   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 00:54:56,993   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 00:54:56,995   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:56,996   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 00:54:57,000   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 00:54:57,004   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 00:54:57,007   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 00:54:57,008   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:57,009   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 00:54:57,014   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 00:54:57,019   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:57,020   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 00:54:57,022   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:57,023   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 00:54:57,032   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 00:54:57,036   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 00:54:57,045   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 00:54:57,047   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 00:54:57,052   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID IN ?;
2014-02-27 00:54:57,054   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID IN ?;
2014-02-27 00:54:57,055   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 00:54:57,058   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 00:54:57,059   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 00:54:57,081   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 00:54:57,089   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 00:54:57,092   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 00:54:57,094   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 00:54:57,100   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 00:54:57,102   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 00:54:57,105   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 00:54:57,107   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 00:54:57,109   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 00:54:57,110   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 00:54:57,112   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:57,113   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 00:54:57,114   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 00:54:57,115   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 00:54:57,118   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 00:54:57,118   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 00:54:57,119   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 00:54:57,124   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 00:54:57,125   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 00:54:57,132   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 05:54:58,394   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 05:54:58,400   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 05:54:58,406   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 05:54:58,429   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 05:54:58,429   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 05:54:58,431   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 05:54:58,466   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 05:54:58,482   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 05:54:58,526   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-02-27 05:54:58,530   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 05:54:58,532   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:46166
2014-02-27 05:54:58,533   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 05:54:58,535   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:46166
2014-02-27 05:54:58,547   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169fa19cb3800000 with negotiated timeout 6000 for client /127.0.0.1:46166
2014-02-27 05:54:58,547   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169fa19cb3800000, negotiated timeout = 6000
2014-02-27 05:54:58,588   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 05:54:58,622   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 05:54:58,622   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 05:54:58,636   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 05:54:58,868   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 05:55:00,130   WARN  [qtp1062391334-29] HOST: JSON interface: Connection refused
2014-02-27 05:55:00,349   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 05:55:00,353   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 05:55:00,452   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 05:55:00,456   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 05:55:00,805   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 05:55:00,908   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 05:55:00,928   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 05:55:00,938   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 05:55:00,942   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 05:55:00,942   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 05:55:00,944   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 05:55:00,950   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 05:55:00,956   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 18 ms.
2014-02-27 05:55:00,956   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 6 ms.
2014-02-27 05:55:00,956   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 14 ms.
2014-02-27 05:55:00,968   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 05:55:00,968   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 05:55:00,968   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 05:55:00,978   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 05:55:00,980   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 11 ms.
2014-02-27 05:55:00,991   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 05:55:01,011   INFO  [main] HOST: Database start action is Create.
2014-02-27 05:55:01,041   INFO  [main] HOST: PID of this Volt process is 19325
2014-02-27 05:55:01,041   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 05:55:01,041   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 05:55:01,041   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 05:55:01,041   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 05:55:01,041   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 05:55:01,041   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 05:55:01,041   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 05:55:01,041   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 05:55:01,042   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 05:55:01,042   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 05:55:01,042   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 05:55:01,042   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 05:55:01,042   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 05:55:01,042   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 05:55:01,042   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 05:55:01,042   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 05:55:01,042   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 05:55:01,042   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 05:55:01,042   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 05:55:01,042   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 05:55:01,042   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 05:55:01,043   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 05:55:01,043   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 05:55:01,044   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 05:55:01,044   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 05:55:01,060   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 05:55:01,062   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 05:55:01,062   INFO  [Thread-10] HOST: Logging config info
2014-02-27 05:55:01,094   INFO  [Thread-11] CONSOLE: Server completed initialization.
2014-02-27 01:01:30,673   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 01:01:30,681   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 01:01:30,682   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,684   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,686   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,687   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 01:01:30,688   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 01:01:30,689   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 01:01:30,689   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 01:01:30,695   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 01:01:30,695   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 01:01:30,696   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 01:01:30,697   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 01:01:30,699   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,700   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 01:01:30,701   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,701   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 01:01:30,702   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 01:01:30,702   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 01:01:30,703   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 01:01:30,703   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 01:01:30,703   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 01:01:30,704   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 01:01:30,705   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,706   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 01:01:30,706   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 01:01:30,706   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 01:01:30,707   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 01:01:30,707   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 01:01:30,707   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 01:01:30,707   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,707   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,707   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,708   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,708   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,708   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,708   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 01:01:30,709   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,709   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,709   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,709   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,710   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,711   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 01:01:30,712   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 01:01:30,712   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 01:01:30,713   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,713   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 01:01:30,727   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 01:01:30,792   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 01:01:30,809   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 01:01:30,814   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 01:01:30,821   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 01:01:30,829   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:01:30,839   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:01:30,844   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:01:30,854   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 01:01:30,856   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 01:01:30,860   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 01:01:30,862   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 01:01:30,869   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 01:01:30,873   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:30,879   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:30,897   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:30,906   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 01:01:30,907   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:30,911   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:30,913   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:30,925   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 01:01:30,927   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:30,930   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:30,937   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:30,940   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 01:01:30,944   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 01:01:30,953   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 01:01:30,958   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 01:01:30,961   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 01:01:30,964   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 01:01:30,969   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 01:01:30,971   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 01:01:30,974   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 01:01:30,977   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 01:01:30,980   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 01:01:30,982   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 01:01:30,984   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 01:01:30,986   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 01:01:30,988   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:01:30,992   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:01:30,995   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:01:31,000   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 01:01:31,002   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 01:01:31,008   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 01:01:31,012   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 01:01:31,013   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 01:01:31,016   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 01:01:31,018   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 01:01:31,020   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 01:01:31,021   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:01:31,026   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:01:31,029   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:01:31,031   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 01:01:31,033   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 01:01:31,037   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 01:01:31,040   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 01:01:31,043   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:31,046   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:31,048   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:31,051   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 01:01:31,053   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:31,056   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:31,060   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:31,066   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 01:01:31,067   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:31,072   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:31,075   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:01:31,079   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 01:01:31,080   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 01:01:31,084   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 01:01:31,087   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 01:01:31,090   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 01:01:31,093   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 01:01:31,096   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 01:01:31,100   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 01:01:31,102   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 01:01:31,106   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 01:01:31,109   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 01:01:31,110   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 01:01:31,112   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 01:01:31,114   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 01:01:31,117   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 01:01:31,118   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:01:31,121   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:01:31,123   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:01:31,131   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 01:01:31,132   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:01:31,134   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:01:31,136   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:01:31,139   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 01:01:31,140   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 01:01:31,142   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 01:01:31,144   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 01:01:31,146   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 01:01:31,147   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 01:01:31,149   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 01:01:31,151   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 01:01:31,154   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 01:01:31,155   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 01:01:31,158   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 01:01:31,159   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 01:01:31,188   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 01:01:31,195   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 01:01:31,202   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 01:01:31,204   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:01:31,214   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 01:01:31,217   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 01:01:31,220   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 01:01:31,223   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 01:01:31,232   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 01:01:31,233   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 01:01:31,236   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:01:31,237   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 01:01:31,245   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 01:01:31,245   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 01:01:31,247   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 01:01:31,249   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 01:01:31,251   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 01:01:31,255   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 01:01:31,262   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 01:01:31,265   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 01:01:31,268   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 01:01:31,269   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 01:01:31,274   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 01:01:31,281   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 01:01:31,283   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 01:01:31,284   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 01:01:31,289   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 01:01:31,293   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 01:01:31,296   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 01:01:31,297   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 01:01:31,301   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 01:01:31,304   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:01:31,305   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 01:01:31,311   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 01:01:31,318   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 01:01:31,318   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:01:31,323   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 01:01:31,329   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 01:01:31,330   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 01:01:31,336   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 01:01:31,341   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 01:01:31,346   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 01:01:31,384   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 01:01:31,385   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 01:01:31,417   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:01:31,420   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 01:01:31,424   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 01:01:31,427   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 01:01:31,430   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 01:01:31,432   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 01:01:31,450   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 01:01:31,454   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:01:31,457   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 01:01:31,469   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 01:01:31,469   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 01:01:31,473   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 01:01:31,476   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 01:01:31,480   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 01:01:31,483   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 01:01:31,484   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 01:01:31,489   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 01:01:31,491   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 01:01:31,494   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:01:31,495   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 01:01:31,525   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 01:01:31,527   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 01:01:31,530   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 01:01:31,532   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:01:31,533   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 01:01:31,537   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 01:01:31,543   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 01:01:31,546   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 01:01:31,548   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 01:01:31,549   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 01:01:31,553   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 01:01:31,559   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:01:31,577   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 01:01:31,580   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:01:31,581   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 01:01:31,588   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 01:01:31,591   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 01:01:31,597   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 01:01:31,633   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 01:01:31,635   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = 0 WHERE CHECKID IN ?;
2014-02-27 01:01:31,638   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = 1 WHERE CHECKID IN ?;
2014-02-27 01:01:31,639   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 01:01:31,642   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 01:01:31,643   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 01:01:31,671   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 01:01:31,748   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 01:01:31,751   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 01:01:31,753   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 01:01:31,756   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 01:01:31,764   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 01:01:31,766   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 01:01:31,769   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 01:01:31,771   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 01:01:31,772   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 01:01:31,775   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 01:01:31,776   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 01:01:31,778   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 01:01:31,782   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 01:01:31,785   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 01:01:31,785   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 01:01:31,786   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 01:01:31,793   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:01:31,794   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 01:01:31,801   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 06:01:33,352   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 06:01:33,359   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 06:01:33,366   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 06:01:33,390   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 06:01:33,391   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 06:01:33,393   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 06:01:33,397   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 06:01:33,412   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 06:01:33,412   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 06:01:33,413   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 06:01:33,424   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 06:01:33,452   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 06:01:33,498   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 06:01:33,535   FATAL [main] HOST: The PID of this process is 20051
2014-02-27 06:01:33,535   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 06:01:33,535   FATAL [main] HOST: java      14305 thorsten  161u  IPv6 960248      0t0  TCP *:45164 (LISTEN)
2014-02-27 06:01:33,535   FATAL [main] HOST: java      19325 thorsten   34u  IPv6 959329      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 06:01:33,535   FATAL [main] HOST: java      19325 thorsten   40u  IPv6 959336      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 06:01:33,535   FATAL [main] HOST: java      19325 thorsten   54u  IPv6 959343      0t0  TCP *:8080 (LISTEN)
2014-02-27 06:01:33,536   FATAL [main] HOST: java      19325 thorsten   56u  IPv6 959415      0t0  TCP *:21212 (LISTEN)
2014-02-27 06:01:33,536   FATAL [main] HOST: java      19325 thorsten   57u  IPv6 959416      0t0  TCP *:21211 (LISTEN)
2014-02-27 06:01:33,541   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 06:01:33,541   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 06:01:33,878   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:38698
2014-02-27 06:01:33,878   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-02-27 06:01:33,885   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 06:01:33,900   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 06:01:33,909   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 06:01:33,909   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 06:01:33,910   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 01:20:29,309   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 01:20:29,322   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 01:20:29,323   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,325   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,328   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,328   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 01:20:29,328   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 01:20:29,329   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 01:20:29,329   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 01:20:29,338   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 01:20:29,339   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 01:20:29,339   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 01:20:29,339   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 01:20:29,345   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,345   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 01:20:29,346   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,347   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 01:20:29,348   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 01:20:29,348   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 01:20:29,348   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 01:20:29,348   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 01:20:29,348   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 01:20:29,349   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 01:20:29,351   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,351   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 01:20:29,352   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 01:20:29,352   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 01:20:29,352   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 01:20:29,352   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 01:20:29,352   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 01:20:29,353   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,353   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,353   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,353   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,353   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,353   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,354   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 01:20:29,354   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,354   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,354   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,355   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,355   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,355   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 01:20:29,356   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 01:20:29,356   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 01:20:29,356   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,357   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 01:20:29,368   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 01:20:29,433   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 01:20:29,450   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 01:20:29,454   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 01:20:29,462   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 01:20:29,470   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:20:29,477   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:20:29,482   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:20:29,488   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 01:20:29,490   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 01:20:29,495   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 01:20:29,497   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 01:20:29,503   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 01:20:29,504   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,510   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,513   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,520   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 01:20:29,522   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,527   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,530   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,538   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 01:20:29,540   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,543   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,549   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,552   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 01:20:29,555   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 01:20:29,558   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 01:20:29,561   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 01:20:29,565   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 01:20:29,567   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 01:20:29,570   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 01:20:29,572   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 01:20:29,574   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 01:20:29,578   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 01:20:29,579   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 01:20:29,581   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 01:20:29,583   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 01:20:29,585   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 01:20:29,587   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:20:29,590   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:20:29,592   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:20:29,596   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 01:20:29,597   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 01:20:29,601   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 01:20:29,604   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 01:20:29,605   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 01:20:29,608   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 01:20:29,609   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 01:20:29,611   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 01:20:29,612   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:20:29,616   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:20:29,618   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:20:29,620   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 01:20:29,621   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 01:20:29,624   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 01:20:29,626   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 01:20:29,628   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,632   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,633   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,636   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 01:20:29,638   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,641   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,643   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,645   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 01:20:29,647   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,650   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,654   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:20:29,658   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 01:20:29,659   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 01:20:29,662   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 01:20:29,664   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 01:20:29,668   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 01:20:29,672   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 01:20:29,674   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 01:20:29,679   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 01:20:29,680   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 01:20:29,682   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 01:20:29,685   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 01:20:29,686   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 01:20:29,688   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 01:20:29,689   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 01:20:29,693   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 01:20:29,694   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:20:29,697   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:20:29,698   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:20:29,706   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 01:20:29,707   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:20:29,710   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:20:29,711   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:20:29,713   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 01:20:29,715   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 01:20:29,716   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 01:20:29,724   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 01:20:29,726   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 01:20:29,727   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 01:20:29,730   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 01:20:29,732   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 01:20:29,734   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 01:20:29,735   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 01:20:29,737   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 01:20:29,739   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 01:20:29,763   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 01:20:29,774   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 01:20:29,776   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 01:20:29,779   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:20:29,780   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 01:20:29,783   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 01:20:29,784   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 01:20:29,789   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 01:20:29,804   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 01:20:29,805   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 01:20:29,807   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:20:29,808   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 01:20:29,816   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 01:20:29,816   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 01:20:29,818   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 01:20:29,820   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 01:20:29,821   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 01:20:29,824   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 01:20:29,828   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 01:20:29,831   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 01:20:29,833   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 01:20:29,834   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 01:20:29,837   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 01:20:29,845   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 01:20:29,847   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 01:20:29,848   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 01:20:29,852   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 01:20:29,855   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 01:20:29,858   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 01:20:29,859   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 01:20:29,862   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 01:20:29,864   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:20:29,865   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 01:20:29,869   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 01:20:29,873   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 01:20:29,873   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:20:29,874   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 01:20:29,880   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 01:20:29,881   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 01:20:29,884   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 01:20:29,890   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 01:20:29,891   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 01:20:29,913   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 01:20:29,914   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 01:20:29,930   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:20:29,932   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 01:20:29,939   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 01:20:29,941   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 01:20:29,943   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 01:20:29,945   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 01:20:29,949   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 01:20:29,952   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:20:29,953   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 01:20:29,968   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 01:20:29,969   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 01:20:29,970   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 01:20:29,973   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 01:20:29,976   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 01:20:29,977   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 01:20:29,979   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 01:20:29,984   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 01:20:29,985   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 01:20:29,988   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:20:29,995   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 01:20:29,997   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 01:20:29,998   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 01:20:30,001   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 01:20:30,004   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:20:30,005   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 01:20:30,012   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 01:20:30,016   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 01:20:30,020   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 01:20:30,022   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 01:20:30,023   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 01:20:30,032   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 01:20:30,039   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:20:30,040   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 01:20:30,043   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:20:30,045   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 01:20:30,051   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 01:20:30,054   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 01:20:30,062   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 01:20:30,064   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 01:20:30,066   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = 0 WHERE CHECKPATHID = ? AND CHECKID IN ?;
2014-02-27 01:20:30,071   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = 1 WHERE CHECKPATHID = ? AND CHECKID IN ?;
2014-02-27 01:20:30,072   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 01:20:30,075   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 01:20:30,077   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 01:20:30,121   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 01:20:30,122   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 01:20:30,124   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 01:20:30,126   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 01:20:30,133   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 01:20:30,135   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 01:20:30,137   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 01:20:30,139   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 01:20:30,141   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 01:20:30,142   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 01:20:30,144   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 01:20:30,145   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 01:20:30,147   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 01:20:30,148   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 01:20:30,153   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 01:20:30,153   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 01:20:30,154   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 01:20:30,156   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:20:30,157   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 01:20:30,164   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 06:20:31,728   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 06:20:31,740   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 06:20:31,753   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 06:20:31,788   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 06:20:31,788   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 06:20:31,791   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 06:20:31,795   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 06:20:31,808   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 06:20:31,809   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 06:20:31,809   INFO  [main] NETWORK: 2 notified of host 0
2014-02-27 06:20:31,824   INFO  [ZooKeeperServer] REJOIN: Joining site 2:-1 known  active sites 0:-1, 2:-1
2014-02-27 06:20:31,852   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 06:20:31,896   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 06:20:31,929   FATAL [main] HOST: The PID of this process is 22150
2014-02-27 06:20:31,929   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 06:20:31,929   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 963019      0t0  TCP *:57048 (LISTEN)
2014-02-27 06:20:31,929   FATAL [main] HOST: java      19325 thorsten   34u  IPv6 959329      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 06:20:31,929   FATAL [main] HOST: java      19325 thorsten   40u  IPv6 959336      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 06:20:31,929   FATAL [main] HOST: java      19325 thorsten   54u  IPv6 959343      0t0  TCP *:8080 (LISTEN)
2014-02-27 06:20:31,929   FATAL [main] HOST: java      19325 thorsten   56u  IPv6 959415      0t0  TCP *:21212 (LISTEN)
2014-02-27 06:20:31,929   FATAL [main] HOST: java      19325 thorsten   57u  IPv6 959416      0t0  TCP *:21211 (LISTEN)
2014-02-27 06:20:31,936   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 06:20:31,936   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 06:20:32,272   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:39388
2014-02-27 06:20:32,272   WARN  [Volt Network - 1] NETWORK: Host 2 failed
2014-02-27 06:20:32,273   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 2:-1, reporting: 0:-1, witnessed: true}
2014-02-27 06:20:32,273   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [2:-1]
2014-02-27 06:20:32,279   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 2:-1 to failed sites history
2014-02-27 06:20:32,280   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 2:-1 initiatorSafeInitPoints {2:-1->-1}
2014-02-27 06:20:32,280   WARN  [ZooKeeperServer] NETWORK: Host 2 failed
2014-02-27 01:21:19,943   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 01:21:19,949   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 01:21:19,949   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,951   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,953   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,953   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 01:21:19,954   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 01:21:19,954   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 01:21:19,954   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 01:21:19,955   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 01:21:19,956   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 01:21:19,956   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 01:21:19,957   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 01:21:19,959   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,959   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 01:21:19,960   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,960   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 01:21:19,961   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 01:21:19,962   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 01:21:19,962   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 01:21:19,962   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 01:21:19,962   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 01:21:19,963   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 01:21:19,964   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,965   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 01:21:19,965   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 01:21:19,965   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 01:21:19,967   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 01:21:19,967   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 01:21:19,967   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 01:21:19,968   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,968   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,968   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,969   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,969   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,969   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,970   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 01:21:19,970   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,970   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,970   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,971   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,971   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,972   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 01:21:19,973   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 01:21:19,973   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 01:21:19,974   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,974   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 01:21:19,988   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 01:21:20,051   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 01:21:20,063   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 01:21:20,066   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 01:21:20,072   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 01:21:20,076   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:21:20,084   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:21:20,088   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:21:20,095   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 01:21:20,096   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 01:21:20,099   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 01:21:20,101   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 01:21:20,104   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 01:21:20,106   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,110   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,114   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,118   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 01:21:20,119   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,122   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,125   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,138   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 01:21:20,140   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,142   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,145   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,148   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 01:21:20,150   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 01:21:20,153   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 01:21:20,157   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 01:21:20,159   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 01:21:20,162   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 01:21:20,165   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 01:21:20,167   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 01:21:20,170   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 01:21:20,173   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 01:21:20,174   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 01:21:20,176   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 01:21:20,177   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 01:21:20,179   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 01:21:20,181   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:21:20,184   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:21:20,186   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:21:20,189   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 01:21:20,191   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 01:21:20,194   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 01:21:20,197   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 01:21:20,198   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 01:21:20,200   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 01:21:20,202   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 01:21:20,204   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 01:21:20,205   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:21:20,207   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:21:20,209   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:21:20,212   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 01:21:20,213   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 01:21:20,215   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 01:21:20,218   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 01:21:20,220   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,223   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,224   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,227   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 01:21:20,229   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,232   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,233   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,236   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 01:21:20,237   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,240   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,242   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:21:20,245   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 01:21:20,247   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 01:21:20,250   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 01:21:20,251   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 01:21:20,255   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 01:21:20,257   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 01:21:20,259   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 01:21:20,263   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 01:21:20,266   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 01:21:20,268   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 01:21:20,271   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 01:21:20,272   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 01:21:20,274   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 01:21:20,275   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 01:21:20,277   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 01:21:20,278   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:21:20,281   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:21:20,282   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:21:20,293   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 01:21:20,294   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:21:20,296   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:21:20,298   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:21:20,300   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 01:21:20,301   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 01:21:20,302   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 01:21:20,316   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 01:21:20,318   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 01:21:20,318   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 01:21:20,327   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 01:21:20,328   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 01:21:20,331   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 01:21:20,332   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 01:21:20,334   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 01:21:20,335   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 01:21:20,359   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 01:21:20,364   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 01:21:20,367   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 01:21:20,369   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:21:20,377   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 01:21:20,385   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 01:21:20,386   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 01:21:20,393   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 01:21:20,404   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 01:21:20,405   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 01:21:20,413   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:21:20,414   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 01:21:20,428   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 01:21:20,428   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 01:21:20,430   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 01:21:20,432   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 01:21:20,434   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 01:21:20,437   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 01:21:20,443   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 01:21:20,446   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 01:21:20,449   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 01:21:20,449   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 01:21:20,452   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 01:21:20,458   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 01:21:20,461   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 01:21:20,462   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 01:21:20,466   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 01:21:20,474   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 01:21:20,476   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 01:21:20,477   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 01:21:20,480   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 01:21:20,491   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:21:20,492   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 01:21:20,502   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 01:21:20,509   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 01:21:20,509   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:21:20,510   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 01:21:20,520   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 01:21:20,521   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 01:21:20,525   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 01:21:20,530   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 01:21:20,531   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 01:21:20,554   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 01:21:20,555   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 01:21:20,562   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:21:20,564   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 01:21:20,567   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 01:21:20,569   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 01:21:20,571   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 01:21:20,573   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 01:21:20,576   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 01:21:20,578   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:21:20,578   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 01:21:20,592   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 01:21:20,592   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 01:21:20,593   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 01:21:20,599   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 01:21:20,602   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 01:21:20,604   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 01:21:20,604   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 01:21:20,609   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 01:21:20,610   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 01:21:20,612   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:21:20,613   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 01:21:20,615   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 01:21:20,616   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 01:21:20,618   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 01:21:20,620   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:21:20,621   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 01:21:20,625   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 01:21:20,628   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 01:21:20,631   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 01:21:20,632   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 01:21:20,633   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 01:21:20,636   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 01:21:20,643   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:21:20,644   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 01:21:20,647   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:21:20,648   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 01:21:20,653   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 01:21:20,656   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 01:21:20,664   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 01:21:20,666   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 01:21:20,667   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = 0 WHERE CHECKPATHID = ? AND CHECKID IN ?;
2014-02-27 01:21:20,672   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = 1 WHERE CHECKPATHID = ? AND CHECKID IN ?;
2014-02-27 01:21:20,673   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 01:21:20,676   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 01:21:20,677   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 01:21:20,711   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 01:21:20,713   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 01:21:20,715   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 01:21:20,717   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 01:21:20,723   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 01:21:20,725   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 01:21:20,727   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 01:21:20,730   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 01:21:20,732   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 01:21:20,733   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 01:21:20,735   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 01:21:20,735   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 01:21:20,737   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 01:21:20,738   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 01:21:20,751   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 01:21:20,751   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 01:21:20,752   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 01:21:20,754   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:21:20,756   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 01:21:20,763   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 06:21:22,129   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 06:21:22,143   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 06:21:22,150   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 06:21:22,175   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 06:21:22,175   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 06:21:22,177   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 06:21:22,211   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 06:21:22,227   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 06:21:22,271   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@485fd4e6
2014-02-27 06:21:22,276   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 06:21:22,278   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:47089
2014-02-27 06:21:22,279   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 06:21:22,281   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:47089
2014-02-27 06:21:22,292   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169fadb1f4800000 with negotiated timeout 6000 for client /127.0.0.1:47089
2014-02-27 06:21:22,292   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169fadb1f4800000, negotiated timeout = 6000
2014-02-27 06:21:22,342   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 06:21:22,364   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 06:21:22,364   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 06:21:22,377   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 06:21:22,601   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 06:21:24,102   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 06:21:24,107   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 06:21:24,212   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 06:21:24,217   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 06:21:24,522   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 06:21:24,670   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 06:21:24,693   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 06:21:24,704   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 06:21:24,708   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 06:21:24,720   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 06:21:24,722   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 06:21:24,722   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 2 ms.
2014-02-27 06:21:24,723   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 19 ms.
2014-02-27 06:21:24,738   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 06:21:24,738   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 06:21:24,740   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 06:21:24,740   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 4 ms.
2014-02-27 06:21:24,756   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 06:21:24,763   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 06:21:24,767   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 13 ms.
2014-02-27 06:21:24,781   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 06:21:24,820   INFO  [main] HOST: Database start action is Create.
2014-02-27 06:21:24,843   INFO  [main] HOST: PID of this Volt process is 22221
2014-02-27 06:21:24,843   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 06:21:24,843   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 06:21:24,843   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 06:21:24,843   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 06:21:24,843   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 06:21:24,843   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 06:21:24,843   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 06:21:24,843   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 06:21:24,844   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 06:21:24,844   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 06:21:24,844   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 06:21:24,844   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 06:21:24,844   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 06:21:24,844   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 06:21:24,844   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 06:21:24,844   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 06:21:24,844   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 06:21:24,844   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 06:21:24,844   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 06:21:24,844   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 06:21:24,844   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 06:21:24,845   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 06:21:24,846   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 06:21:24,846   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 06:21:24,846   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 06:21:24,861   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 06:21:24,863   INFO  [Thread-9] HOST: Logging config info
2014-02-27 06:21:24,863   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 06:21:24,891   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 01:27:47,055   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 01:27:47,063   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 01:27:47,064   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,065   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,067   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,068   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 01:27:47,069   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 01:27:47,069   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 01:27:47,069   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 01:27:47,070   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 01:27:47,071   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 01:27:47,071   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 01:27:47,072   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 01:27:47,073   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,074   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 01:27:47,075   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,075   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 01:27:47,078   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 01:27:47,078   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 01:27:47,078   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 01:27:47,078   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 01:27:47,078   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 01:27:47,079   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 01:27:47,080   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,081   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 01:27:47,081   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 01:27:47,081   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 01:27:47,082   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 01:27:47,082   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 01:27:47,082   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 01:27:47,083   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,083   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,084   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,084   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,084   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,085   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,085   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 01:27:47,086   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,086   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,087   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,087   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,087   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,088   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 01:27:47,089   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 01:27:47,089   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 01:27:47,090   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,090   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 01:27:47,105   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 01:27:47,167   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 01:27:47,182   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 01:27:47,186   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 01:27:47,194   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 01:27:47,200   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:47,209   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:47,213   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:47,220   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 01:27:47,222   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 01:27:47,225   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 01:27:47,227   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 01:27:47,230   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 01:27:47,232   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,239   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,242   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,247   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 01:27:47,248   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,253   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,256   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,266   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 01:27:47,268   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,271   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,277   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,280   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 01:27:47,284   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 01:27:47,293   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 01:27:47,296   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 01:27:47,298   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 01:27:47,300   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 01:27:47,303   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 01:27:47,305   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 01:27:47,308   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 01:27:47,311   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 01:27:47,312   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 01:27:47,314   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 01:27:47,316   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 01:27:47,318   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 01:27:47,319   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:47,323   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:47,325   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:47,328   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 01:27:47,330   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 01:27:47,332   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 01:27:47,335   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 01:27:47,336   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 01:27:47,338   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 01:27:47,340   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 01:27:47,342   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 01:27:47,344   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:47,346   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:47,348   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:47,351   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 01:27:47,352   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 01:27:47,354   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 01:27:47,357   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 01:27:47,359   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,362   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,364   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,367   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 01:27:47,368   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,371   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,372   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,375   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 01:27:47,376   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,379   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,381   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:47,384   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 01:27:47,386   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 01:27:47,388   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 01:27:47,390   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 01:27:47,393   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 01:27:47,397   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 01:27:47,399   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 01:27:47,404   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 01:27:47,405   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 01:27:47,407   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 01:27:47,410   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 01:27:47,411   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 01:27:47,416   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 01:27:47,417   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 01:27:47,421   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 01:27:47,422   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:27:47,425   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:27:47,427   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:27:47,434   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 01:27:47,435   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:27:47,438   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:27:47,440   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:27:47,442   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 01:27:47,443   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 01:27:47,445   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 01:27:47,451   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 01:27:47,453   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 01:27:47,455   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 01:27:47,462   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 01:27:47,464   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 01:27:47,466   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 01:27:47,468   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 01:27:47,469   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 01:27:47,471   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 01:27:47,495   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 01:27:47,501   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 01:27:47,504   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 01:27:47,506   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:47,516   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 01:27:47,519   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:47,520   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 01:27:47,531   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 01:27:47,538   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 01:27:47,539   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 01:27:47,541   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:47,543   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 01:27:47,550   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 01:27:47,550   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 01:27:47,552   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 01:27:47,554   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:47,555   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 01:27:47,558   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 01:27:47,562   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 01:27:47,565   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 01:27:47,568   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:47,570   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 01:27:47,573   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 01:27:47,580   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 01:27:47,582   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:47,583   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 01:27:47,587   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 01:27:47,591   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 01:27:47,593   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 01:27:47,594   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 01:27:47,597   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 01:27:47,599   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:47,600   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 01:27:47,604   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 01:27:47,608   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 01:27:47,608   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:47,610   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 01:27:47,612   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 01:27:47,613   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 01:27:47,616   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 01:27:47,619   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 01:27:47,620   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 01:27:47,637   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 01:27:47,638   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 01:27:47,642   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:47,644   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 01:27:47,646   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 01:27:47,648   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 01:27:47,650   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 01:27:47,652   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 01:27:47,659   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 01:27:47,661   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:47,662   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 01:27:47,665   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 01:27:47,665   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 01:27:47,666   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 01:27:47,669   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 01:27:47,672   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 01:27:47,674   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:47,676   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 01:27:47,678   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 01:27:47,680   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 01:27:47,682   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:47,683   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 01:27:47,686   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:47,687   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 01:27:47,689   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 01:27:47,691   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:47,693   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 01:27:47,697   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 01:27:47,700   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 01:27:47,703   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 01:27:47,705   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:47,707   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 01:27:47,710   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 01:27:47,718   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:47,719   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 01:27:47,721   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:47,722   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 01:27:47,728   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 01:27:47,731   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 01:27:47,738   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 01:27:47,741   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 01:27:47,742   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = 0 WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 01:27:47,747   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = 1 WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 01:27:47,749   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 01:27:47,752   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 01:27:47,753   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 01:27:47,784   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 01:27:47,786   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 01:27:47,788   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 01:27:47,791   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 01:27:47,797   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 01:27:47,799   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 01:27:47,802   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 01:27:47,805   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 01:27:47,807   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 01:27:47,808   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 01:27:47,809   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:47,811   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 01:27:47,813   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 01:27:47,814   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 01:27:47,820   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 01:27:47,820   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:47,821   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 01:27:47,824   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:47,825   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 01:27:47,832   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 06:27:49,282   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 06:27:49,297   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 06:27:49,304   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 06:27:49,328   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 06:27:49,328   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 06:27:49,330   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 06:27:49,334   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 06:27:49,342   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 06:27:49,342   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 06:27:49,343   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 06:27:49,354   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 06:27:49,379   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 06:27:49,422   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 06:27:49,453   FATAL [main] HOST: The PID of this process is 22979
2014-02-27 06:27:49,453   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 06:27:49,453   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 964819      0t0  TCP *:46724 (LISTEN)
2014-02-27 06:27:49,453   FATAL [main] HOST: java      22221 thorsten   34u  IPv6 963784      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 06:27:49,453   FATAL [main] HOST: java      22221 thorsten   40u  IPv6 963791      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 06:27:49,453   FATAL [main] HOST: java      22221 thorsten   54u  IPv6 963798      0t0  TCP *:8080 (LISTEN)
2014-02-27 06:27:49,453   FATAL [main] HOST: java      22221 thorsten   55u  IPv6 963865      0t0  TCP *:21212 (LISTEN)
2014-02-27 06:27:49,453   FATAL [main] HOST: java      22221 thorsten   56u  IPv6 963866      0t0  TCP *:21211 (LISTEN)
2014-02-27 06:27:49,459   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 06:27:49,459   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 06:27:49,795   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 06:27:49,795   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:39615
2014-02-27 06:27:49,797   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-02-27 06:27:49,804   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 06:27:49,820   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 06:27:49,831   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 06:27:49,831   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 06:27:49,832   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 01:27:59,189   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 01:27:59,196   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 01:27:59,196   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,197   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,199   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,200   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 01:27:59,200   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 01:27:59,201   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 01:27:59,201   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 01:27:59,202   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 01:27:59,202   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 01:27:59,202   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 01:27:59,203   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 01:27:59,204   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,204   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 01:27:59,205   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,205   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 01:27:59,206   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 01:27:59,207   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 01:27:59,207   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 01:27:59,207   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 01:27:59,207   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 01:27:59,208   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 01:27:59,209   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,210   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 01:27:59,210   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 01:27:59,210   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 01:27:59,211   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 01:27:59,211   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 01:27:59,211   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 01:27:59,212   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,212   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,212   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,213   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,213   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,213   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,214   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 01:27:59,214   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,214   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,214   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,215   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,215   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,216   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 01:27:59,217   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 01:27:59,217   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 01:27:59,218   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,218   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 01:27:59,236   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 01:27:59,287   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 01:27:59,304   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 01:27:59,310   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 01:27:59,317   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 01:27:59,325   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:59,331   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:59,335   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:59,342   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 01:27:59,344   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 01:27:59,350   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 01:27:59,352   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 01:27:59,357   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 01:27:59,359   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,365   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,369   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,372   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 01:27:59,374   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,377   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,380   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,390   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 01:27:59,391   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,395   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,399   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,402   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 01:27:59,405   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 01:27:59,408   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 01:27:59,411   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 01:27:59,412   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 01:27:59,415   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 01:27:59,418   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 01:27:59,420   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 01:27:59,422   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 01:27:59,425   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 01:27:59,426   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 01:27:59,428   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 01:27:59,430   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 01:27:59,432   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 01:27:59,433   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:59,437   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:59,440   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:59,443   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 01:27:59,445   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 01:27:59,447   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 01:27:59,450   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 01:27:59,451   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 01:27:59,453   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 01:27:59,455   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 01:27:59,457   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 01:27:59,458   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:59,461   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:59,463   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 01:27:59,465   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 01:27:59,467   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 01:27:59,470   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 01:27:59,472   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 01:27:59,474   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,477   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,479   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,482   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 01:27:59,483   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,486   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,487   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,490   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 01:27:59,491   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,494   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,496   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 01:27:59,499   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 01:27:59,500   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 01:27:59,503   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 01:27:59,505   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 01:27:59,508   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 01:27:59,511   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 01:27:59,513   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 01:27:59,516   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 01:27:59,518   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 01:27:59,520   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 01:27:59,523   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 01:27:59,524   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 01:27:59,526   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 01:27:59,527   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 01:27:59,529   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 01:27:59,530   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:27:59,532   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:27:59,534   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:27:59,540   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 01:27:59,542   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:27:59,544   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:27:59,548   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 01:27:59,550   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 01:27:59,551   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 01:27:59,553   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 01:27:59,566   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 01:27:59,568   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 01:27:59,569   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 01:27:59,571   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 01:27:59,573   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 01:27:59,575   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 01:27:59,576   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 01:27:59,578   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 01:27:59,580   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 01:27:59,603   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 01:27:59,609   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 01:27:59,612   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 01:27:59,614   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:59,621   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 01:27:59,628   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:59,630   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 01:27:59,632   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 01:27:59,650   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 01:27:59,652   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 01:27:59,654   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:59,655   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 01:27:59,672   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 01:27:59,672   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 01:27:59,673   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 01:27:59,687   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:59,688   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 01:27:59,695   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 01:27:59,699   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 01:27:59,705   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 01:27:59,707   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:59,708   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 01:27:59,711   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 01:27:59,717   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 01:27:59,718   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:59,719   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 01:27:59,727   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 01:27:59,733   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 01:27:59,736   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 01:27:59,737   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 01:27:59,741   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 01:27:59,745   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:59,746   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 01:27:59,756   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 01:27:59,762   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 01:27:59,762   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:59,763   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 01:27:59,771   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 01:27:59,772   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 01:27:59,775   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 01:27:59,777   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 01:27:59,778   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 01:27:59,812   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 01:27:59,813   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 01:27:59,820   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:59,822   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 01:27:59,827   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 01:27:59,828   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 01:27:59,830   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 01:27:59,832   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 01:27:59,836   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 01:27:59,838   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:59,839   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 01:27:59,850   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 01:27:59,850   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 01:27:59,851   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 01:27:59,855   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 01:27:59,858   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 01:27:59,860   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:59,861   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 01:27:59,865   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 01:27:59,866   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 01:27:59,868   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:59,869   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 01:27:59,871   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:59,872   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 01:27:59,874   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 01:27:59,876   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:59,877   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 01:27:59,881   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 01:27:59,885   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 01:27:59,887   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 01:27:59,889   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:59,890   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 01:27:59,895   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 01:27:59,900   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:59,902   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 01:27:59,904   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:27:59,905   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 01:27:59,911   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 01:27:59,915   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 01:27:59,922   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 01:27:59,925   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 01:27:59,930   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = 0 WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 01:27:59,931   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = 1 WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 01:27:59,933   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 01:27:59,936   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 01:27:59,937   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 01:27:59,968   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 01:27:59,969   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 01:27:59,971   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 01:27:59,973   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 01:27:59,979   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 01:27:59,981   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 01:27:59,984   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 01:27:59,986   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 01:27:59,988   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 01:27:59,989   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 01:27:59,991   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 01:27:59,993   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 01:27:59,995   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 01:27:59,997   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 01:28:00,003   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 01:28:00,003   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 01:28:00,004   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 01:28:00,007   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 01:28:00,008   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 01:28:00,015   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 06:28:01,480   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 06:28:01,489   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 06:28:01,498   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 06:28:01,525   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 06:28:01,525   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 06:28:01,527   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 06:28:01,560   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 06:28:01,576   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 06:28:01,623   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@485fd4e6
2014-02-27 06:28:01,628   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 06:28:01,630   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 06:28:01,630   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:47310
2014-02-27 06:28:01,632   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:47310
2014-02-27 06:28:01,643   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169fb0bdf0000000 with negotiated timeout 6000 for client /127.0.0.1:47310
2014-02-27 06:28:01,643   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169fb0bdf0000000, negotiated timeout = 6000
2014-02-27 06:28:01,686   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 06:28:01,710   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 06:28:01,710   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 06:28:01,724   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 06:28:01,949   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 06:28:03,436   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 06:28:03,445   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 06:28:03,538   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 06:28:03,542   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 06:28:03,826   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 06:28:03,983   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 06:28:04,014   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 06:28:04,035   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 06:28:04,035   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 06:28:04,046   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 06:28:04,047   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 06:28:04,051   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 5 ms.
2014-02-27 06:28:04,051   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 27 ms.
2014-02-27 06:28:04,064   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 06:28:04,064   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 06:28:04,066   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 06:28:04,066   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 4 ms.
2014-02-27 06:28:04,081   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 06:28:04,086   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 06:28:04,087   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 8 ms.
2014-02-27 06:28:04,095   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 06:28:04,120   INFO  [main] HOST: Database start action is Create.
2014-02-27 06:28:04,145   INFO  [main] HOST: PID of this Volt process is 23048
2014-02-27 06:28:04,145   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 06:28:04,145   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 06:28:04,145   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 06:28:04,145   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 06:28:04,146   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 06:28:04,146   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 06:28:04,146   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 06:28:04,146   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 06:28:04,146   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 06:28:04,146   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 06:28:04,146   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 06:28:04,146   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 06:28:04,146   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 06:28:04,146   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 06:28:04,147   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 06:28:04,147   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 06:28:04,147   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 06:28:04,147   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 06:28:04,147   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 06:28:04,147   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 06:28:04,147   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 06:28:04,148   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 06:28:04,148   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 06:28:04,155   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 06:28:04,155   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 06:28:04,171   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 06:28:04,172   INFO  [Thread-9] HOST: Logging config info
2014-02-27 06:28:04,172   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 06:28:04,202   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 06:28:54,739   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 2355 milliseconds late in updating the estimated time
2014-02-27 02:19:25,331   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 02:19:25,339   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 02:19:25,340   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,342   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,344   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,344   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 02:19:25,345   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 02:19:25,345   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:19:25,345   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:19:25,352   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:19:25,353   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:19:25,353   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:19:25,354   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 02:19:25,356   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,356   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 02:19:25,357   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,358   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 02:19:25,359   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:19:25,359   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 02:19:25,359   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:19:25,359   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 02:19:25,359   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 02:19:25,360   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 02:19:25,361   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,361   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:19:25,361   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:19:25,361   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 02:19:25,362   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:19:25,362   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:19:25,362   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:19:25,362   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,363   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,363   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,363   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,363   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,363   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,364   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 02:19:25,364   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,364   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,364   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,365   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,365   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,365   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 02:19:25,366   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:19:25,366   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:19:25,366   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,366   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:19:25,378   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 02:19:25,440   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:19:25,456   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:19:25,459   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 02:19:25,465   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:19:25,473   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:25,483   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:25,487   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:25,494   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 02:19:25,496   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:19:25,501   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:19:25,503   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 02:19:25,509   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:19:25,510   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,516   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,520   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,527   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:19:25,528   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,534   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,536   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,540   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 02:19:25,546   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,549   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,552   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,555   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 02:19:25,558   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 02:19:25,561   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 02:19:25,566   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 02:19:25,568   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 02:19:25,571   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 02:19:25,574   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:19:25,576   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 02:19:25,578   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 02:19:25,582   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 02:19:25,584   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:19:25,586   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:19:25,587   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:19:25,589   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:19:25,591   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:25,597   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:25,599   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:25,602   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 02:19:25,605   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 02:19:25,609   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 02:19:25,612   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 02:19:25,613   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:19:25,616   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:19:25,618   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 02:19:25,620   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 02:19:25,621   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:25,625   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:25,627   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:25,630   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 02:19:25,631   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 02:19:25,634   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 02:19:25,636   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:19:25,639   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,642   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,644   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,647   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:19:25,648   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,652   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,656   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,659   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:19:25,661   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,665   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,667   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:25,670   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:19:25,671   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:19:25,676   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:19:25,677   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:19:25,681   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:19:25,686   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 02:19:25,687   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 02:19:25,693   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 02:19:25,695   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:19:25,697   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:19:25,699   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 02:19:25,700   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 02:19:25,702   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 02:19:25,703   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 02:19:25,707   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 02:19:25,708   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:19:25,711   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:19:25,712   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:19:25,720   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:19:25,721   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:19:25,723   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:19:25,725   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:19:25,727   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 02:19:25,728   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:19:25,729   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:19:25,731   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 02:19:25,733   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:19:25,734   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:19:25,736   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:19:25,738   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:19:25,744   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 02:19:25,746   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 02:19:25,748   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 02:19:25,750   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 02:19:25,774   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 02:19:25,781   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:19:25,785   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:19:25,789   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:25,794   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 02:19:25,802   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:25,803   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 02:19:25,812   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 02:19:25,820   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 02:19:25,821   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 02:19:25,824   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:25,825   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 02:19:25,847   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 02:19:25,847   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 02:19:25,848   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 02:19:25,851   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:25,852   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 02:19:25,868   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 02:19:25,873   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 02:19:25,882   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 02:19:25,884   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:25,885   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 02:19:25,891   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 02:19:25,896   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 02:19:25,904   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:25,905   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 02:19:25,908   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 02:19:25,918   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 02:19:25,920   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 02:19:25,921   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 02:19:25,924   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 02:19:25,930   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:25,931   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 02:19:25,942   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 02:19:25,955   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 02:19:25,955   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:25,956   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 02:19:25,959   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 02:19:25,959   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 02:19:25,969   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 02:19:25,972   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 02:19:25,973   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 02:19:25,998   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 02:19:26,000   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 02:19:26,009   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:26,011   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 02:19:26,015   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 02:19:26,017   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 02:19:26,020   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 02:19:26,022   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 02:19:26,027   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 02:19:26,032   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:26,037   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 02:19:26,050   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 02:19:26,050   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 02:19:26,051   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 02:19:26,055   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 02:19:26,062   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 02:19:26,073   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:26,074   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 02:19:26,079   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 02:19:26,080   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 02:19:26,083   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:26,084   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 02:19:26,086   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:26,087   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:19:26,088   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 02:19:26,091   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:26,092   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 02:19:26,095   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 02:19:26,099   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 02:19:26,101   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 02:19:26,103   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:26,104   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 02:19:26,110   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 02:19:26,115   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:26,117   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 02:19:26,119   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:26,120   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 02:19:26,130   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 02:19:26,133   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 02:19:26,141   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 02:19:26,144   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 02:19:26,148   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = 0 WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 02:19:26,151   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = 1 WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 02:19:26,153   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 02:19:26,156   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 02:19:26,254   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 02:19:26,263   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:19:26,263   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:19:26,263   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:19:26,266   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 02:19:26,311   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 02:19:26,312   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:19:26,314   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 02:19:26,316   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 02:19:26,318   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 02:19:26,319   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 02:19:26,321   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 02:19:26,327   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 02:19:26,329   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 02:19:26,330   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 02:19:26,332   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:26,333   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 02:19:26,335   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 02:19:26,335   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 02:19:26,337   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 02:19:26,338   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:26,338   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 02:19:26,341   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:26,342   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 02:19:26,349   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 07:19:28,111   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 07:19:28,118   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 07:19:28,126   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 07:19:28,150   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 07:19:28,151   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 07:19:28,153   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 07:19:28,157   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 07:19:28,166   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 07:19:28,166   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 07:19:28,166   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 07:19:28,183   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 07:19:28,205   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 07:19:28,468   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 07:19:28,509   FATAL [main] HOST: The PID of this process is 28457
2014-02-27 07:19:28,509   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 07:19:28,510   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 972038      0t0  TCP *:60861 (LISTEN)
2014-02-27 07:19:28,510   FATAL [main] HOST: java      23048 thorsten   34u  IPv6 965656      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 07:19:28,510   FATAL [main] HOST: java      23048 thorsten   40u  IPv6 965665      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 07:19:28,510   FATAL [main] HOST: java      23048 thorsten   54u  IPv6 965672      0t0  TCP *:8080 (LISTEN)
2014-02-27 07:19:28,510   FATAL [main] HOST: java      23048 thorsten   55u  IPv6 965739      0t0  TCP *:21212 (LISTEN)
2014-02-27 07:19:28,510   FATAL [main] HOST: java      23048 thorsten   56u  IPv6 965740      0t0  TCP *:21211 (LISTEN)
2014-02-27 07:19:28,515   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 07:19:28,515   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 07:19:28,858   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 07:19:28,864   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41476
2014-02-27 07:19:28,864   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 07:19:28,869   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 07:19:28,871   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-02-27 07:19:28,887   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 07:19:28,896   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 07:19:28,896   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 07:19:28,897   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 02:19:40,252   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 02:19:40,259   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 02:19:40,260   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,261   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,265   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,266   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 02:19:40,266   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 02:19:40,267   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:19:40,267   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:19:40,268   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:19:40,269   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:19:40,269   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:19:40,270   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 02:19:40,271   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,272   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 02:19:40,273   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,274   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 02:19:40,275   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:19:40,275   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 02:19:40,275   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:19:40,275   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 02:19:40,275   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 02:19:40,277   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 02:19:40,278   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,279   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:19:40,279   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:19:40,279   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 02:19:40,283   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:19:40,284   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:19:40,284   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:19:40,285   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,285   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,285   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,286   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,286   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,287   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,287   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 02:19:40,288   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,288   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,288   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,289   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,289   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,290   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 02:19:40,291   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:19:40,291   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:19:40,292   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,292   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:19:40,307   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 02:19:40,399   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:19:40,412   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:19:40,415   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 02:19:40,421   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:19:40,426   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:40,433   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:40,437   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:40,444   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 02:19:40,445   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:19:40,448   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:19:40,450   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 02:19:40,453   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:19:40,454   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,458   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,462   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,467   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:19:40,469   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,473   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,476   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,484   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 02:19:40,486   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,489   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,491   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,494   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 02:19:40,497   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 02:19:40,502   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 02:19:40,505   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 02:19:40,508   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 02:19:40,511   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 02:19:40,514   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:19:40,516   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 02:19:40,518   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 02:19:40,521   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 02:19:40,524   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:19:40,526   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:19:40,527   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:19:40,529   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:19:40,531   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:40,534   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:40,536   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:40,540   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 02:19:40,542   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 02:19:40,547   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 02:19:40,550   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 02:19:40,551   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:19:40,555   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:19:40,556   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 02:19:40,558   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 02:19:40,559   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:40,562   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:40,565   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:19:40,567   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 02:19:40,569   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 02:19:40,571   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 02:19:40,574   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:19:40,577   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,580   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,582   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,585   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:19:40,587   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,590   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,594   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,596   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:19:40,598   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,602   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,604   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:19:40,607   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:19:40,608   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:19:40,611   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:19:40,613   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:19:40,617   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:19:40,621   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 02:19:40,625   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 02:19:40,630   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 02:19:40,631   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:19:40,633   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:19:40,635   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 02:19:40,636   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 02:19:40,638   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 02:19:40,639   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 02:19:40,642   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 02:19:40,643   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:19:40,646   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:19:40,647   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:19:40,656   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:19:40,657   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:19:40,660   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:19:40,662   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:19:40,664   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 02:19:40,664   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:19:40,666   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:19:40,676   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 02:19:40,678   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:19:40,679   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:19:40,681   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:19:40,683   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:19:40,685   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 02:19:40,686   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 02:19:40,688   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 02:19:40,689   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 02:19:40,711   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 02:19:40,716   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:19:40,719   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:19:40,721   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:40,722   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 02:19:40,725   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:40,726   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 02:19:40,729   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 02:19:40,735   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 02:19:40,736   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 02:19:40,738   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:40,739   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 02:19:40,748   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 02:19:40,748   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 02:19:40,749   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 02:19:40,751   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:40,752   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 02:19:40,755   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 02:19:40,761   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 02:19:40,764   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 02:19:40,772   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:40,773   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 02:19:40,775   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 02:19:40,781   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 02:19:40,784   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:40,785   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 02:19:40,789   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 02:19:40,797   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 02:19:40,800   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 02:19:40,801   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 02:19:40,804   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 02:19:40,808   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:40,809   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 02:19:40,819   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 02:19:40,830   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 02:19:40,830   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:40,831   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 02:19:40,836   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 02:19:40,838   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 02:19:40,841   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 02:19:40,849   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 02:19:40,850   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 02:19:40,877   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 02:19:40,879   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 02:19:40,886   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:40,888   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 02:19:40,892   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 02:19:40,893   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 02:19:40,895   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 02:19:40,897   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 02:19:40,901   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 02:19:40,904   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:40,905   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 02:19:40,924   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 02:19:40,924   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 02:19:40,925   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 02:19:40,928   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 02:19:40,931   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 02:19:40,933   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:40,934   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 02:19:40,939   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 02:19:40,940   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 02:19:40,942   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:40,943   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 02:19:40,945   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:40,946   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:19:40,948   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 02:19:40,950   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:40,951   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 02:19:40,954   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 02:19:40,958   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 02:19:40,960   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 02:19:40,962   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:40,963   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 02:19:40,968   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 02:19:40,973   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:40,976   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 02:19:40,978   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:40,979   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 02:19:40,988   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 02:19:40,992   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 02:19:41,001   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 02:19:41,006   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 02:19:41,007   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = 0 WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 02:19:41,009   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = 1 WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 02:19:41,010   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 02:19:41,025   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 02:19:41,036   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 02:19:41,038   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:19:41,039   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:19:41,039   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:19:41,040   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 02:19:41,085   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 02:19:41,086   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:19:41,089   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 02:19:41,090   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 02:19:41,092   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 02:19:41,094   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 02:19:41,095   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 02:19:41,098   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 02:19:41,100   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 02:19:41,101   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 02:19:41,103   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:41,104   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 02:19:41,106   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 02:19:41,107   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 02:19:41,109   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 02:19:41,109   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:19:41,110   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 02:19:41,113   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:19:41,115   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 02:19:41,121   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 07:19:42,513   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 07:19:42,519   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 07:19:42,526   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 07:19:42,550   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 07:19:42,550   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 07:19:42,552   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 07:19:42,587   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 07:19:42,601   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 07:19:42,647   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@3a3ca4ae
2014-02-27 07:19:42,651   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 07:19:42,653   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:49171
2014-02-27 07:19:42,654   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 07:19:42,656   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:49171
2014-02-27 07:19:42,667   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169fc866a0000000 with negotiated timeout 6000 for client /127.0.0.1:49171
2014-02-27 07:19:42,667   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169fc866a0000000, negotiated timeout = 6000
2014-02-27 07:19:42,709   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 07:19:42,745   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 07:19:42,745   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 07:19:42,758   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 07:19:42,998   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 07:19:44,561   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 07:19:44,565   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 07:19:44,666   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 07:19:44,671   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 07:19:44,978   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 07:19:45,138   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 07:19:45,159   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 07:19:45,173   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 07:19:45,174   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 07:19:45,190   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 07:19:45,191   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 07:19:45,193   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 5 ms.
2014-02-27 07:19:45,193   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 24 ms.
2014-02-27 07:19:45,207   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:19:45,207   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:19:45,209   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 07:19:45,209   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 4 ms.
2014-02-27 07:19:45,223   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:19:45,230   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 07:19:45,233   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 10 ms.
2014-02-27 07:19:45,240   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:19:45,267   INFO  [main] HOST: Database start action is Create.
2014-02-27 07:19:45,294   INFO  [main] HOST: PID of this Volt process is 28525
2014-02-27 07:19:45,294   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 07:19:45,295   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 07:19:45,295   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 07:19:45,295   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 07:19:45,295   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 07:19:45,295   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 07:19:45,295   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 07:19:45,295   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 07:19:45,295   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 07:19:45,295   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 07:19:45,295   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 07:19:45,295   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 07:19:45,295   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 07:19:45,296   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 07:19:45,296   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 07:19:45,296   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 07:19:45,296   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 07:19:45,296   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 07:19:45,296   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 07:19:45,296   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 07:19:45,296   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 07:19:45,296   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 07:19:45,297   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 07:19:45,303   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 07:19:45,303   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 07:19:45,318   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 07:19:45,320   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 07:19:45,320   INFO  [Thread-9] HOST: Logging config info
2014-02-27 07:19:45,357   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 07:20:42,288   INFO  [Periodic Priority Work] GC: GC for PS MarkSweep: 246 ms for 1 collections, 45756496 used; max is 1908932608
2014-02-27 02:25:16,018   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 02:25:16,033   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 02:25:16,034   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,042   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,044   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,050   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 02:25:16,051   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 02:25:16,052   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:25:16,052   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:25:16,060   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:25:16,061   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:25:16,061   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:25:16,062   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 02:25:16,064   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,064   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 02:25:16,073   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,074   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 02:25:16,086   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:25:16,086   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 02:25:16,086   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:25:16,086   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 02:25:16,087   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 02:25:16,092   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 02:25:16,097   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,098   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:25:16,098   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:25:16,099   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 02:25:16,105   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:25:16,105   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:25:16,105   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:25:16,106   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,106   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,106   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,107   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,107   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,107   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,107   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 02:25:16,113   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,114   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,114   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,114   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,114   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,115   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 02:25:16,116   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:25:16,116   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:25:16,117   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,117   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:25:16,135   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 02:25:16,248   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:25:16,279   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:25:16,291   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 02:25:16,303   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:25:16,314   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:16,335   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:16,342   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:16,352   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 02:25:16,354   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:25:16,368   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:25:16,371   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 02:25:16,378   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:25:16,381   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,391   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,397   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,409   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:25:16,412   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,419   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,423   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,436   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 02:25:16,438   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,446   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,454   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,463   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 02:25:16,468   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 02:25:16,480   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 02:25:16,491   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 02:25:16,493   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 02:25:16,497   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 02:25:16,501   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:25:16,504   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 02:25:16,507   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 02:25:16,513   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 02:25:16,517   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:25:16,520   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:25:16,523   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:25:16,526   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:25:16,530   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:16,537   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:16,540   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:16,547   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 02:25:16,551   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 02:25:16,559   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 02:25:16,564   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 02:25:16,566   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:25:16,570   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:25:16,572   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 02:25:16,574   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 02:25:16,575   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:16,580   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:16,585   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:16,590   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 02:25:16,594   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 02:25:16,601   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 02:25:16,611   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:25:16,616   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,625   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,628   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,634   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:25:16,637   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,643   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,666   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,672   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:25:16,676   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,688   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,693   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:16,698   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:25:16,701   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:25:16,708   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:25:16,712   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:25:16,720   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:25:16,726   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 02:25:16,729   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 02:25:16,736   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 02:25:16,737   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:25:16,739   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:25:16,743   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 02:25:16,744   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 02:25:16,748   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 02:25:16,749   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 02:25:16,759   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 02:25:16,761   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:25:16,769   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:25:16,772   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:25:16,786   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:25:16,789   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:25:16,794   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:25:16,798   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:25:16,806   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 02:25:16,808   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:25:16,814   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:25:16,828   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 02:25:16,840   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:25:16,842   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:25:16,858   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:25:16,869   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:25:16,874   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 02:25:16,878   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 02:25:16,882   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 02:25:16,885   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 02:25:16,942   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 02:25:16,960   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:25:16,968   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:25:16,971   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:16,979   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 02:25:16,993   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:16,997   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 02:25:17,006   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 02:25:17,029   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 02:25:17,030   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 02:25:17,039   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:17,040   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 02:25:17,049   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 02:25:17,049   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 02:25:17,052   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 02:25:17,059   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:17,070   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 02:25:17,089   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 02:25:17,113   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 02:25:17,118   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 02:25:17,128   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:17,142   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 02:25:17,155   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 02:25:17,178   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 02:25:17,181   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:17,182   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 02:25:17,193   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 02:25:17,213   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 02:25:17,215   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 02:25:17,218   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 02:25:17,227   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 02:25:17,240   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:17,241   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 02:25:17,259   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 02:25:17,288   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 02:25:17,288   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:17,297   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 02:25:17,304   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 02:25:17,312   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 02:25:17,319   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 02:25:17,321   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 02:25:17,346   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 02:25:17,425   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 02:25:17,427   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 02:25:17,443   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:17,445   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 02:25:17,457   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 02:25:17,471   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 02:25:17,474   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 02:25:17,477   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 02:25:17,486   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 02:25:17,493   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:17,494   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 02:25:17,510   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 02:25:17,510   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 02:25:17,517   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 02:25:17,525   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 02:25:17,536   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 02:25:17,540   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:17,542   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 02:25:17,556   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 02:25:17,557   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 02:25:17,560   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:17,584   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 02:25:17,594   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:17,595   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:25:17,598   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 02:25:17,607   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:17,610   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 02:25:17,620   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 02:25:17,633   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 02:25:17,636   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 02:25:17,644   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:17,654   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 02:25:17,658   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 02:25:17,678   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:17,685   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 02:25:17,687   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:17,688   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 02:25:17,698   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 02:25:17,720   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 02:25:17,734   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 02:25:17,737   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 02:25:17,747   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 02:25:17,757   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:25:17,760   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 02:25:17,826   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 02:25:17,834   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:25:17,847   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 02:25:17,848   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 02:25:17,851   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 02:25:17,880   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 02:25:17,891   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 02:25:17,906   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 02:25:17,935   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 02:25:17,937   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 02:25:17,940   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:17,955   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 02:25:17,976   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 02:25:17,984   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 02:25:17,987   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 02:25:17,987   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:17,991   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 02:25:18,005   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:18,008   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 02:25:18,025   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 07:25:20,662   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 07:25:20,674   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 07:25:20,696   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 07:25:20,764   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 07:25:20,764   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 07:25:20,774   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 07:25:20,780   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 07:25:20,794   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 07:25:20,794   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 2
2014-02-27 07:25:20,796   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 07:25:20,808   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 07:25:20,881   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 07:25:20,962   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 07:25:21,024   FATAL [main] HOST: The PID of this process is 28999
2014-02-27 07:25:21,024   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 07:25:21,024   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 973439      0t0  TCP *:35402 (LISTEN)
2014-02-27 07:25:21,024   FATAL [main] HOST: java      28525 thorsten   34u  IPv6 972867      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 07:25:21,024   FATAL [main] HOST: java      28525 thorsten   40u  IPv6 972874      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 07:25:21,024   FATAL [main] HOST: java      28525 thorsten   54u  IPv6 972881      0t0  TCP *:8080 (LISTEN)
2014-02-27 07:25:21,024   FATAL [main] HOST: java      28525 thorsten   55u  IPv6 972948      0t0  TCP *:21212 (LISTEN)
2014-02-27 07:25:21,024   FATAL [main] HOST: java      28525 thorsten   56u  IPv6 972949      0t0  TCP *:21211 (LISTEN)
2014-02-27 07:25:21,036   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 07:25:21,037   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 07:25:21,363   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 07:25:21,364   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41605
2014-02-27 07:25:21,367   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 07:25:21,370   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 07:25:21,381   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 07:25:21,400   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 07:25:21,401   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 07:25:21,402   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 02:25:34,097   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 02:25:34,104   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 02:25:34,105   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,105   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,108   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,108   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 02:25:34,109   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 02:25:34,109   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:25:34,109   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:25:34,110   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:25:34,111   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:25:34,111   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:25:34,112   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 02:25:34,112   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,113   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 02:25:34,123   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,123   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 02:25:34,124   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:25:34,125   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 02:25:34,125   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:25:34,125   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 02:25:34,125   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 02:25:34,127   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 02:25:34,128   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,135   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:25:34,135   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:25:34,135   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 02:25:34,137   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:25:34,137   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:25:34,137   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:25:34,138   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,138   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,138   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,139   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,139   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,139   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,140   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 02:25:34,140   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,140   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,141   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,142   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,142   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,143   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 02:25:34,144   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:25:34,144   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:25:34,144   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,145   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:25:34,159   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 02:25:34,207   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:25:34,221   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:25:34,225   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 02:25:34,231   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:25:34,239   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:34,252   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:34,256   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:34,263   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 02:25:34,266   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:25:34,274   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:25:34,280   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 02:25:34,284   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:25:34,286   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,292   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,295   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,301   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:25:34,303   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,306   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,311   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,320   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 02:25:34,322   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,325   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,329   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,332   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 02:25:34,335   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 02:25:34,339   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 02:25:34,343   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 02:25:34,347   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 02:25:34,350   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 02:25:34,354   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:25:34,355   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 02:25:34,358   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 02:25:34,361   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 02:25:34,364   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:25:34,367   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:25:34,368   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:25:34,370   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:25:34,372   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:34,376   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:34,378   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:34,381   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 02:25:34,384   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 02:25:34,387   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 02:25:34,390   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 02:25:34,391   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:25:34,393   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:25:34,396   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 02:25:34,398   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 02:25:34,400   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:34,403   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:34,406   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:25:34,409   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 02:25:34,410   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 02:25:34,413   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 02:25:34,416   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:25:34,419   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,422   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,425   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,430   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:25:34,432   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,435   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,437   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,440   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:25:34,441   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,444   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,447   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:25:34,451   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:25:34,452   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:25:34,455   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:25:34,457   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:25:34,460   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:25:34,466   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 02:25:34,468   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 02:25:34,473   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 02:25:34,475   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:25:34,477   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:25:34,479   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 02:25:34,481   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 02:25:34,483   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 02:25:34,484   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 02:25:34,486   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 02:25:34,487   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:25:34,489   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:25:34,491   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:25:34,499   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:25:34,501   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:25:34,503   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:25:34,505   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:25:34,507   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 02:25:34,510   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:25:34,512   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:25:34,513   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 02:25:34,515   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:25:34,517   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:25:34,519   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:25:34,521   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:25:34,524   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 02:25:34,526   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 02:25:34,528   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 02:25:34,529   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 02:25:34,560   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 02:25:34,567   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:25:34,571   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:25:34,575   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:34,578   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 02:25:34,582   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:34,583   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 02:25:34,586   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 02:25:34,594   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 02:25:34,595   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-27 02:25:34,598   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:34,599   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 02:25:34,609   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 02:25:34,609   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 02:25:34,610   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 02:25:34,613   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:34,614   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 02:25:34,618   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 02:25:34,623   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 02:25:34,626   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 02:25:34,629   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:34,630   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 02:25:34,634   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 02:25:34,646   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 02:25:34,649   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:34,653   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 02:25:34,667   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 02:25:34,678   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 02:25:34,690   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 02:25:34,691   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 02:25:34,697   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 02:25:34,702   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:34,703   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 02:25:34,714   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 02:25:34,723   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 02:25:34,723   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:34,724   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 02:25:34,740   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 02:25:34,741   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 02:25:34,759   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 02:25:34,763   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 02:25:34,764   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 02:25:34,783   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 02:25:34,785   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 02:25:34,788   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:34,790   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 02:25:34,792   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 02:25:34,794   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 02:25:34,797   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 02:25:34,799   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 02:25:34,802   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 02:25:34,804   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:34,811   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 02:25:34,815   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 02:25:34,815   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 02:25:34,816   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 02:25:34,820   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 02:25:34,831   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 02:25:34,833   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:34,833   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 02:25:34,837   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 02:25:34,839   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 02:25:34,841   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:34,845   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 02:25:34,860   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:34,867   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:25:34,872   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 02:25:34,875   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:34,876   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 02:25:34,880   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 02:25:34,885   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 02:25:34,888   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 02:25:34,891   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:34,892   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 02:25:34,896   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 02:25:34,901   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:34,903   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 02:25:34,906   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:34,907   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 02:25:34,932   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 02:25:34,936   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 02:25:34,944   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 02:25:34,951   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 02:25:34,952   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 02:25:34,955   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:25:34,956   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 02:25:34,979   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 02:25:34,980   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:25:34,995   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 02:25:34,996   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 02:25:34,998   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 02:25:35,000   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 02:25:35,009   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 02:25:35,013   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 02:25:35,015   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 02:25:35,016   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 02:25:35,018   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:35,019   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 02:25:35,023   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 02:25:35,024   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 02:25:35,026   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 02:25:35,026   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:25:35,027   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 02:25:35,034   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:25:35,036   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 02:25:35,042   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 07:25:36,580   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 07:25:36,591   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 07:25:36,602   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 07:25:36,631   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 07:25:36,631   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 07:25:36,633   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 07:25:36,675   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 07:25:36,693   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 07:25:36,750   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@1b6ebaa7
2014-02-27 07:25:36,755   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 07:25:36,756   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:49293
2014-02-27 07:25:36,757   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 07:25:36,759   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:49293
2014-02-27 07:25:36,771   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169fcb1a3c000000 with negotiated timeout 6000 for client /127.0.0.1:49293
2014-02-27 07:25:36,771   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169fcb1a3c000000, negotiated timeout = 6000
2014-02-27 07:25:36,821   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 07:25:36,849   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 07:25:36,849   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 07:25:36,866   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 07:25:37,111   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 07:25:38,730   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 07:25:38,740   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 07:25:38,858   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 07:25:38,862   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 07:25:39,202   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 07:25:39,363   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 07:25:39,393   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 07:25:39,414   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 07:25:39,418   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 07:25:39,428   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 07:25:39,430   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 07:25:39,434   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 20 ms.
2014-02-27 07:25:39,434   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 7 ms.
2014-02-27 07:25:39,451   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:25:39,451   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:25:39,457   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 07:25:39,458   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 2 ms.
2014-02-27 07:25:39,474   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:25:39,486   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 07:25:39,489   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 14 ms.
2014-02-27 07:25:39,498   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:25:39,545   INFO  [main] HOST: Database start action is Create.
2014-02-27 07:25:39,576   INFO  [main] HOST: PID of this Volt process is 29059
2014-02-27 07:25:39,576   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 07:25:39,576   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 07:25:39,576   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 07:25:39,576   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 07:25:39,577   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 07:25:39,577   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 07:25:39,577   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 07:25:39,577   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 07:25:39,577   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 07:25:39,577   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 07:25:39,577   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 07:25:39,577   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 07:25:39,577   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 07:25:39,577   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 07:25:39,578   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 07:25:39,578   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 07:25:39,578   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 07:25:39,578   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 07:25:39,578   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 07:25:39,578   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 07:25:39,578   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 07:25:39,579   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 07:25:39,579   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 07:25:39,580   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 07:25:39,580   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 07:25:39,596   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 07:25:39,598   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 07:25:39,598   INFO  [Thread-9] HOST: Logging config info
2014-02-27 07:25:39,632   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 02:44:49,942   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 02:44:49,954   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 02:44:49,954   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,955   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,957   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,959   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 02:44:49,959   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 02:44:49,960   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:44:49,960   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:44:49,962   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:44:49,963   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:44:49,963   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:44:49,964   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 02:44:49,964   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,971   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 02:44:49,972   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,973   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 02:44:49,974   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:44:49,974   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 02:44:49,974   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:44:49,974   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 02:44:49,974   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 02:44:49,975   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 02:44:49,976   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,980   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:44:49,980   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:44:49,980   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 02:44:49,981   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:44:49,981   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:44:49,981   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:44:49,982   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,982   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,982   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,983   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,983   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,983   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,984   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 02:44:49,984   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,984   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,985   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,985   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,985   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,986   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 02:44:49,986   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:44:49,986   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:44:49,987   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:44:49,987   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:44:50,000   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 02:44:50,057   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:44:50,069   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:44:50,072   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 02:44:50,082   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:44:50,089   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:44:50,096   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:44:50,100   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:44:50,106   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 02:44:50,108   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:44:50,114   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:44:50,116   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 02:44:50,121   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:44:50,123   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,128   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,131   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,137   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:44:50,138   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,142   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,145   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,153   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 02:44:50,154   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,157   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,159   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,162   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 02:44:50,166   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 02:44:50,168   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 02:44:50,173   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 02:44:50,175   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 02:44:50,178   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 02:44:50,182   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:44:50,183   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 02:44:50,186   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 02:44:50,189   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 02:44:50,191   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:44:50,193   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:44:50,195   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:44:50,197   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:44:50,199   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:44:50,203   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:44:50,205   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:44:50,209   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 02:44:50,210   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 02:44:50,214   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 02:44:50,217   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 02:44:50,218   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:44:50,220   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:44:50,222   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 02:44:50,224   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 02:44:50,225   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:44:50,228   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:44:50,229   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:44:50,232   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 02:44:50,233   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 02:44:50,235   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 02:44:50,238   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:44:50,240   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,243   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,245   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,248   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:44:50,249   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,251   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,253   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,256   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:44:50,257   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,260   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,262   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:44:50,264   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:44:50,266   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:44:50,269   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:44:50,270   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:44:50,273   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:44:50,276   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 02:44:50,278   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 02:44:50,281   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 02:44:50,282   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:44:50,284   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:44:50,287   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 02:44:50,288   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 02:44:50,290   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 02:44:50,291   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 02:44:50,293   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 02:44:50,294   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:44:50,297   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:44:50,298   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:44:50,305   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:44:50,306   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:44:50,308   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:44:50,310   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:44:50,311   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 02:44:50,312   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:44:50,314   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:44:50,315   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 02:44:50,317   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:44:50,318   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:44:50,320   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:44:50,322   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:44:50,325   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 02:44:50,326   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 02:44:50,328   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 02:44:50,329   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 02:44:50,354   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 02:44:50,359   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:44:50,362   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:44:50,364   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:44:50,365   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 02:44:50,368   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 02:44:50,369   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 02:44:50,372   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 02:44:50,379   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 02:44:50,380   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE IN CHECKID = ? ORDER BY RULEID;
2014-02-27 02:44:50,385   ERROR [main] COMPILER: [FindRulesForCheckID.class]: Failed to plan for statement (sql) SELECT RULEID FROM RULE WHERE IN CHECKID = ? ORDER BY RULEID; Error: "SQL Syntax error in "SELECT RULEID FROM RULE WHERE IN CHECKID = ? ORDER BY RULEID;" unexpected token: IN"
2014-02-27 02:44:50,386   ERROR [main] COMPILER: Failed to compile XML
2014-02-27 02:44:50,386   ERROR [main] COMPILER: Catalog compilation failed.
2014-02-27 07:44:51,408   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 07:44:51,417   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 07:44:51,428   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 07:44:51,456   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 07:44:51,456   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 07:44:51,458   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 07:44:51,463   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 07:44:51,472   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 07:44:51,472   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 07:44:51,472   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 07:44:51,489   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 07:44:51,513   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 07:44:51,628   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 07:44:51,668   FATAL [main] HOST: The PID of this process is 29267
2014-02-27 07:44:51,668   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 07:44:51,668   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 974705      0t0  TCP *:41405 (LISTEN)
2014-02-27 07:44:51,668   FATAL [main] HOST: java      29059 thorsten   34u  IPv6 974260      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 07:44:51,668   FATAL [main] HOST: java      29059 thorsten   40u  IPv6 974267      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 07:44:51,669   FATAL [main] HOST: java      29059 thorsten   54u  IPv6 974274      0t0  TCP *:8080 (LISTEN)
2014-02-27 07:44:51,669   FATAL [main] HOST: java      29059 thorsten   55u  IPv6 974341      0t0  TCP *:21212 (LISTEN)
2014-02-27 07:44:51,669   FATAL [main] HOST: java      29059 thorsten   56u  IPv6 974342      0t0  TCP *:21211 (LISTEN)
2014-02-27 07:44:51,674   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 07:44:51,674   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 07:44:52,011   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41609
2014-02-27 07:44:52,012   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 07:44:52,019   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 07:44:52,042   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 07:44:52,052   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 07:44:52,052   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 07:44:52,053   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 02:45:00,976   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 02:45:00,988   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 02:45:00,991   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 02:45:00,993   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 02:45:00,995   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 02:45:00,996   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 02:45:00,996   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 02:45:00,997   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:45:00,997   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:45:01,003   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:45:01,004   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:45:01,004   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:45:01,005   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 02:45:01,006   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 02:45:01,006   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 02:45:01,007   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 02:45:01,007   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 02:45:01,008   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:45:01,008   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 02:45:01,009   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:45:01,015   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 02:45:01,017   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 02:45:01,018   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 02:45:01,019   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:45:01,019   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:45:01,019   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:45:01,019   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 02:45:01,020   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:45:01,020   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:45:01,020   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:45:01,020   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:45:01,020   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:45:01,020   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:45:01,021   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:45:01,021   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:45:01,021   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:45:01,021   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 02:45:01,028   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:45:01,028   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:45:01,028   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:45:01,028   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:45:01,029   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:45:01,029   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 02:45:01,030   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:45:01,031   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:45:01,031   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:45:01,031   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:45:01,044   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 02:45:01,094   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:45:01,116   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:45:01,119   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 02:45:01,124   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:45:01,128   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:45:01,135   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:45:01,139   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:45:01,146   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 02:45:01,148   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:45:01,151   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:45:01,152   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 02:45:01,155   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:45:01,157   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,161   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,165   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,169   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:45:01,171   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,174   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,176   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,185   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 02:45:01,186   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,189   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,192   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,195   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 02:45:01,198   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 02:45:01,201   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 02:45:01,205   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 02:45:01,207   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 02:45:01,209   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 02:45:01,213   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:45:01,215   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 02:45:01,217   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 02:45:01,220   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 02:45:01,221   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:45:01,223   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:45:01,225   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:45:01,227   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:45:01,228   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:45:01,232   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:45:01,234   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:45:01,237   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 02:45:01,238   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 02:45:01,241   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 02:45:01,244   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 02:45:01,245   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:45:01,247   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:45:01,249   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 02:45:01,251   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 02:45:01,252   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:45:01,254   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:45:01,256   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:45:01,258   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 02:45:01,260   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 02:45:01,264   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 02:45:01,268   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:45:01,271   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,273   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,275   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,278   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:45:01,280   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,283   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,287   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,290   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:45:01,292   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,297   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,300   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:45:01,302   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:45:01,304   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:45:01,306   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:45:01,308   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:45:01,311   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:45:01,315   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 02:45:01,317   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 02:45:01,322   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 02:45:01,323   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:45:01,325   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:45:01,327   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 02:45:01,328   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 02:45:01,330   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 02:45:01,331   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 02:45:01,335   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 02:45:01,336   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:45:01,339   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:45:01,340   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:45:01,348   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:45:01,349   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:45:01,352   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:45:01,353   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:45:01,355   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 02:45:01,356   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:45:01,358   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:45:01,365   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 02:45:01,371   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:45:01,372   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:45:01,377   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:45:01,379   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:45:01,381   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 02:45:01,382   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 02:45:01,384   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 02:45:01,385   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 02:45:01,422   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 02:45:01,436   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:45:01,439   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:45:01,442   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:45:01,450   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 02:45:01,452   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 02:45:01,453   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 02:45:01,456   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 02:45:01,463   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 02:45:01,464   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE IN CHECKID = ? ORDER BY RULEID;
2014-02-27 02:45:01,469   ERROR [main] COMPILER: [FindRulesForCheckID.class]: Failed to plan for statement (sql) SELECT RULEID FROM RULE WHERE IN CHECKID = ? ORDER BY RULEID; Error: "SQL Syntax error in "SELECT RULEID FROM RULE WHERE IN CHECKID = ? ORDER BY RULEID;" unexpected token: IN"
2014-02-27 02:45:01,470   ERROR [main] COMPILER: Failed to compile XML
2014-02-27 02:45:01,470   ERROR [main] COMPILER: Catalog compilation failed.
2014-02-27 07:45:02,404   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 07:45:02,418   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 07:45:02,427   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 07:45:02,454   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 07:45:02,454   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 07:45:02,456   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 07:45:02,491   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 07:45:02,506   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 07:45:02,550   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-02-27 07:45:02,555   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 07:45:02,557   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:49297
2014-02-27 07:45:02,558   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 07:45:02,560   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:49297
2014-02-27 07:45:02,571   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169fd3ff30000000 with negotiated timeout 6000 for client /127.0.0.1:49297
2014-02-27 07:45:02,571   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169fd3ff30000000, negotiated timeout = 6000
2014-02-27 07:45:02,613   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 07:45:02,643   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 07:45:02,643   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 07:45:02,656   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 07:45:02,884   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 07:45:04,394   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 07:45:04,403   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 07:45:04,506   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 07:45:04,510   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 07:45:04,824   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 07:45:04,988   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 07:45:05,010   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 07:45:05,021   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 07:45:05,025   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 07:45:05,037   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 07:45:05,038   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 07:45:05,040   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 8 ms.
2014-02-27 07:45:05,040   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 19 ms.
2014-02-27 07:45:05,050   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:45:05,050   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:45:05,051   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 07:45:05,051   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 4 ms.
2014-02-27 07:45:05,068   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:45:05,077   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 07:45:05,079   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 11 ms.
2014-02-27 07:45:05,086   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:45:05,111   INFO  [main] HOST: Database start action is Create.
2014-02-27 07:45:05,134   INFO  [main] HOST: PID of this Volt process is 29330
2014-02-27 07:45:05,134   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 07:45:05,134   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 07:45:05,134   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 07:45:05,134   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 07:45:05,134   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 07:45:05,134   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 07:45:05,134   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 07:45:05,134   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 07:45:05,135   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 07:45:05,135   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 07:45:05,135   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 07:45:05,135   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 07:45:05,135   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 07:45:05,135   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 07:45:05,135   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 07:45:05,135   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 07:45:05,135   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 07:45:05,135   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 07:45:05,135   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 07:45:05,135   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 07:45:05,135   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 07:45:05,136   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 07:45:05,136   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 07:45:05,142   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 07:45:05,142   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 07:45:05,157   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 07:45:05,158   INFO  [Thread-9] HOST: Logging config info
2014-02-27 07:45:05,158   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 07:45:05,182   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 02:46:25,740   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 02:46:25,747   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 02:46:25,747   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,748   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,750   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,751   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 02:46:25,751   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 02:46:25,752   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:46:25,752   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:46:25,753   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:46:25,753   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:46:25,753   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:46:25,754   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 02:46:25,755   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,756   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 02:46:25,757   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,758   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 02:46:25,759   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:46:25,759   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 02:46:25,759   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:46:25,759   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 02:46:25,759   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 02:46:25,761   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 02:46:25,762   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,763   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:46:25,763   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:46:25,763   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 02:46:25,764   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:46:25,764   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:46:25,765   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:46:25,766   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,766   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,766   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,768   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,768   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,768   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,769   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 02:46:25,769   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,769   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,770   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,773   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,773   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,774   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 02:46:25,775   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:46:25,775   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:46:25,779   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,779   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:46:25,796   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 02:46:25,847   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:46:25,864   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:46:25,867   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 02:46:25,875   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:46:25,882   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:46:25,892   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:46:25,897   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:46:25,904   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 02:46:25,905   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:46:25,911   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:46:25,913   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 02:46:25,918   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:46:25,920   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:25,925   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:25,929   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:25,936   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:46:25,937   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:25,941   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:25,944   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:25,952   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 02:46:25,953   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:25,956   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:25,963   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:25,966   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 02:46:25,970   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 02:46:25,975   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 02:46:25,980   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 02:46:25,982   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 02:46:25,985   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 02:46:25,988   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:46:25,989   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 02:46:25,992   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 02:46:25,995   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 02:46:25,996   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:46:25,998   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:46:26,000   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:46:26,002   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:46:26,003   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:46:26,009   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:46:26,011   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:46:26,014   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 02:46:26,016   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 02:46:26,020   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 02:46:26,023   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 02:46:26,024   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:46:26,027   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:46:26,028   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 02:46:26,031   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 02:46:26,032   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:46:26,035   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:46:26,037   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:46:26,040   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 02:46:26,042   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 02:46:26,044   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 02:46:26,047   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:46:26,049   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:26,053   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:26,055   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:26,058   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:46:26,059   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:26,063   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:26,066   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:26,069   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:46:26,071   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:26,075   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:26,079   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:46:26,082   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:46:26,083   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:46:26,086   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:46:26,088   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:46:26,092   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:46:26,096   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 02:46:26,098   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 02:46:26,102   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 02:46:26,104   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:46:26,106   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:46:26,108   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 02:46:26,109   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 02:46:26,111   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 02:46:26,113   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 02:46:26,115   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 02:46:26,116   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:46:26,119   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:46:26,121   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:46:26,127   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:46:26,129   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:46:26,131   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:46:26,132   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:46:26,134   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 02:46:26,135   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:46:26,137   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:46:26,146   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 02:46:26,148   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:46:26,149   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:46:26,156   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:46:26,158   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:46:26,160   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 02:46:26,161   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 02:46:26,163   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 02:46:26,164   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 02:46:26,188   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 02:46:26,193   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:46:26,202   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:46:26,205   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:46:26,206   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 02:46:26,214   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 02:46:26,215   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 02:46:26,223   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 02:46:26,230   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 02:46:26,231   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN = ? ORDER BY RULEID;
2014-02-27 02:46:26,236   ERROR [main] COMPILER: [FindRulesForCheckID.class]: Failed to plan for statement (sql) SELECT RULEID FROM RULE WHERE CHECKID IN = ? ORDER BY RULEID; Error: "SQL Syntax error in "SELECT RULEID FROM RULE WHERE CHECKID IN = ? ORDER BY RULEID;" unexpected token: = required: ("
2014-02-27 02:46:26,237   ERROR [main] COMPILER: Failed to compile XML
2014-02-27 02:46:26,237   ERROR [main] COMPILER: Catalog compilation failed.
2014-02-27 07:46:27,383   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 07:46:27,392   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 07:46:27,402   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 07:46:27,428   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 07:46:27,428   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 07:46:27,430   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 07:46:27,435   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 07:46:27,443   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 07:46:27,443   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 07:46:27,444   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 07:46:27,461   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 07:46:27,482   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 07:46:27,541   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 07:46:27,581   FATAL [main] HOST: The PID of this process is 29445
2014-02-27 07:46:27,581   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 07:46:27,581   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 975206      0t0  TCP *:56861 (LISTEN)
2014-02-27 07:46:27,581   FATAL [main] HOST: java      14305 thorsten  164r  IPv6 975738      0t0  TCP *:52081 (LISTEN)
2014-02-27 07:46:27,581   FATAL [main] HOST: java      29330 thorsten   34u  IPv6 975495      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 07:46:27,581   FATAL [main] HOST: java      29330 thorsten   40u  IPv6 975502      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 07:46:27,581   FATAL [main] HOST: java      29330 thorsten   54u  IPv6 975509      0t0  TCP *:8080 (LISTEN)
2014-02-27 07:46:27,581   FATAL [main] HOST: java      29330 thorsten   55u  IPv6 975576      0t0  TCP *:21212 (LISTEN)
2014-02-27 07:46:27,581   FATAL [main] HOST: java      29330 thorsten   56u  IPv6 975577      0t0  TCP *:21211 (LISTEN)
2014-02-27 07:46:27,587   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 07:46:27,587   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 07:46:27,924   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41636
2014-02-27 07:46:27,931   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 07:46:27,931   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 07:46:27,950   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 07:46:27,960   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 07:46:27,961   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 07:46:27,961   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 02:47:04,348   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 02:47:04,360   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 02:47:04,361   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,361   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,363   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,364   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 02:47:04,364   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 02:47:04,365   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:47:04,365   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:47:04,366   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:47:04,366   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:47:04,366   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:47:04,367   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 02:47:04,368   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,368   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 02:47:04,369   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,369   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 02:47:04,370   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:47:04,371   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 02:47:04,371   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:47:04,371   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 02:47:04,371   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 02:47:04,372   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 02:47:04,373   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,374   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:47:04,374   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:47:04,374   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 02:47:04,375   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:47:04,375   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:47:04,375   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:47:04,376   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,376   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,376   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,377   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,377   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,377   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,378   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 02:47:04,378   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,378   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,379   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,379   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,379   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,380   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 02:47:04,381   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:47:04,381   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:47:04,382   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,382   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:47:04,397   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 02:47:04,440   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:47:04,452   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:47:04,456   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 02:47:04,460   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:47:04,465   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:47:04,472   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:47:04,476   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:47:04,482   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 02:47:04,484   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:47:04,488   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:47:04,490   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 02:47:04,492   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:47:04,494   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,498   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,501   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,506   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:47:04,507   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,510   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,513   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,516   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 02:47:04,517   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,525   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,528   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,531   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 02:47:04,534   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 02:47:04,537   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 02:47:04,540   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 02:47:04,542   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 02:47:04,544   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 02:47:04,547   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:47:04,549   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 02:47:04,551   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 02:47:04,554   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 02:47:04,555   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:47:04,557   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:47:04,559   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:47:04,561   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:47:04,563   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:47:04,566   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:47:04,568   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:47:04,572   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 02:47:04,574   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 02:47:04,576   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 02:47:04,579   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 02:47:04,580   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:47:04,582   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:47:04,583   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 02:47:04,586   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 02:47:04,587   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:47:04,589   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:47:04,591   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:47:04,594   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 02:47:04,595   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 02:47:04,597   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 02:47:04,600   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:47:04,602   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,605   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,607   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,610   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:47:04,611   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,614   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,616   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,619   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:47:04,620   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,622   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,624   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:47:04,627   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:47:04,628   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:47:04,631   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:47:04,633   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:47:04,636   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:47:04,639   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 02:47:04,641   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 02:47:04,644   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 02:47:04,646   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:47:04,647   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:47:04,650   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 02:47:04,651   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 02:47:04,653   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 02:47:04,654   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 02:47:04,656   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 02:47:04,657   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:47:04,659   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:47:04,661   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:47:04,663   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:47:04,664   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:47:04,674   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:47:04,675   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:47:04,678   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 02:47:04,679   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:47:04,681   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:47:04,682   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 02:47:04,684   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:47:04,685   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:47:04,687   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:47:04,689   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:47:04,691   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 02:47:04,692   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 02:47:04,694   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 02:47:04,695   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 02:47:04,718   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 02:47:04,723   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:47:04,727   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:47:04,729   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:47:04,730   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 02:47:04,733   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 02:47:04,735   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 02:47:04,738   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 02:47:04,744   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 02:47:04,746   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 02:47:04,753   ERROR [main] COMPILER: [FindRulesForCheckID.class]: Procedure: FindRulesForCheckID has a parameter with invalid type: ArrayList
2014-02-27 02:47:04,753   ERROR [main] COMPILER: Failed to compile XML
2014-02-27 02:47:04,753   ERROR [main] COMPILER: Catalog compilation failed.
2014-02-27 07:47:05,897   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 07:47:05,906   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 07:47:05,914   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 07:47:05,940   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 07:47:05,940   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 07:47:05,942   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 07:47:05,974   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 07:47:05,988   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 07:47:06,034   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-02-27 07:47:06,038   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 07:47:06,040   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 07:47:06,040   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:49324
2014-02-27 07:47:06,042   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:49324
2014-02-27 07:47:06,053   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169fd4f05d000000 with negotiated timeout 6000 for client /127.0.0.1:49324
2014-02-27 07:47:06,053   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169fd4f05d000000, negotiated timeout = 6000
2014-02-27 07:47:06,107   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 07:47:06,143   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 07:47:06,143   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 07:47:06,157   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 07:47:06,389   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 07:47:07,857   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 07:47:07,864   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 07:47:07,969   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 07:47:07,974   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 07:47:08,259   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 07:47:08,396   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 07:47:08,414   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 07:47:08,424   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 07:47:08,437   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 07:47:08,445   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 07:47:08,446   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 07:47:08,451   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 6 ms.
2014-02-27 07:47:08,451   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 27 ms.
2014-02-27 07:47:08,462   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:47:08,462   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:47:08,465   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 07:47:08,465   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 3 ms.
2014-02-27 07:47:08,485   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:47:08,490   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 07:47:08,492   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 9 ms.
2014-02-27 07:47:08,505   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:47:08,529   INFO  [main] HOST: Database start action is Create.
2014-02-27 07:47:08,553   INFO  [main] HOST: PID of this Volt process is 29512
2014-02-27 07:47:08,553   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 07:47:08,553   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 07:47:08,553   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 07:47:08,553   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 07:47:08,553   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 07:47:08,554   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 07:47:08,554   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 07:47:08,554   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 07:47:08,554   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 07:47:08,554   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 07:47:08,554   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 07:47:08,554   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 07:47:08,554   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 07:47:08,554   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 07:47:08,554   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 07:47:08,554   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 07:47:08,555   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 07:47:08,555   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 07:47:08,555   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 07:47:08,555   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 07:47:08,555   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 07:47:08,555   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 07:47:08,555   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 07:47:08,561   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 07:47:08,561   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 07:47:08,576   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 07:47:08,577   INFO  [Thread-9] HOST: Logging config info
2014-02-27 07:47:08,577   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 07:47:08,604   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 02:52:05,321   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 02:52:05,327   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 02:52:05,328   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,330   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,332   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,332   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 02:52:05,333   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 02:52:05,333   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:52:05,333   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:52:05,343   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:52:05,344   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:52:05,344   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:52:05,345   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 02:52:05,345   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,346   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 02:52:05,347   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,347   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 02:52:05,348   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:52:05,348   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 02:52:05,348   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:52:05,349   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 02:52:05,349   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 02:52:05,350   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 02:52:05,351   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,351   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:52:05,352   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:52:05,352   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 02:52:05,352   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:52:05,352   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:52:05,352   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:52:05,353   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,353   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,353   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,353   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,353   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,353   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,354   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 02:52:05,354   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,354   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,354   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,355   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,355   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,355   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 02:52:05,356   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:52:05,356   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:52:05,356   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,356   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:52:05,368   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 02:52:05,411   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:52:05,425   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:52:05,428   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 02:52:05,433   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:52:05,440   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:05,454   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:05,458   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:05,467   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 02:52:05,469   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:52:05,475   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:52:05,477   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 02:52:05,481   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:52:05,483   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,487   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,491   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,495   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:52:05,497   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,500   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,503   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,506   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 02:52:05,507   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,515   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,518   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,521   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 02:52:05,524   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 02:52:05,526   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 02:52:05,530   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 02:52:05,532   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 02:52:05,534   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 02:52:05,537   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:52:05,540   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 02:52:05,543   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 02:52:05,546   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 02:52:05,547   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:52:05,549   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:52:05,551   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:52:05,553   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:52:05,555   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:05,562   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:05,565   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:05,568   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 02:52:05,570   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 02:52:05,575   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 02:52:05,577   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 02:52:05,579   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:52:05,582   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:52:05,585   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 02:52:05,587   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 02:52:05,588   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:05,591   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:05,593   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:05,596   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 02:52:05,598   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 02:52:05,600   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 02:52:05,603   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:52:05,605   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,608   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,610   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,613   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:52:05,614   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,617   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,619   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,622   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:52:05,623   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,626   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,628   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:05,630   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:52:05,632   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:52:05,635   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:52:05,637   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:52:05,640   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:52:05,642   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 02:52:05,644   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 02:52:05,647   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 02:52:05,649   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:52:05,651   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:52:05,653   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 02:52:05,654   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 02:52:05,657   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 02:52:05,659   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 02:52:05,661   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 02:52:05,662   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:05,664   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:05,666   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:05,668   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:52:05,669   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:05,677   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:05,679   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:05,681   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 02:52:05,682   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:52:05,684   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:52:05,686   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 02:52:05,687   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:52:05,689   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:52:05,692   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:52:05,693   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:52:05,695   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 02:52:05,697   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 02:52:05,699   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 02:52:05,700   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 02:52:05,724   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 02:52:05,729   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:52:05,732   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:52:05,734   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:05,736   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 02:52:05,738   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:05,739   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 02:52:05,742   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 02:52:05,749   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 02:52:05,750   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 02:52:05,754   ERROR [main] COMPILER: [FindRulesForCheckID.class]: Procedure: FindRulesForCheckID has a parameter with invalid type: ArrayList
2014-02-27 02:52:05,757   ERROR [main] COMPILER: Failed to compile XML
2014-02-27 02:52:05,757   ERROR [main] COMPILER: Catalog compilation failed.
2014-02-27 07:52:06,872   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 07:52:06,881   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 07:52:06,891   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 07:52:06,916   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 07:52:06,916   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 07:52:06,918   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 07:52:06,923   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 07:52:06,937   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 07:52:06,938   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 07:52:06,938   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 07:52:06,955   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 07:52:06,978   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 07:52:07,014   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 07:52:07,047   FATAL [main] HOST: The PID of this process is 29647
2014-02-27 07:52:07,047   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 07:52:07,047   FATAL [main] HOST: java      29512 thorsten   34u  IPv6 976548      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 07:52:07,048   FATAL [main] HOST: java      29512 thorsten   40u  IPv6 976555      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 07:52:07,048   FATAL [main] HOST: java      29512 thorsten   54u  IPv6 976562      0t0  TCP *:8080 (LISTEN)
2014-02-27 07:52:07,048   FATAL [main] HOST: java      29512 thorsten   55u  IPv6 976629      0t0  TCP *:21212 (LISTEN)
2014-02-27 07:52:07,048   FATAL [main] HOST: java      29512 thorsten   56u  IPv6 976630      0t0  TCP *:21211 (LISTEN)
2014-02-27 07:52:07,053   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 07:52:07,054   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 07:52:07,391   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 07:52:07,393   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41718
2014-02-27 07:52:07,394   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 07:52:07,401   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 07:52:07,428   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 07:52:07,438   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 07:52:07,438   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 07:52:07,439   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 02:52:15,599   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 02:52:15,605   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 02:52:15,606   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,607   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,609   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,609   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 02:52:15,610   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 02:52:15,610   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:52:15,610   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:52:15,611   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:52:15,612   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:52:15,612   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:52:15,612   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 02:52:15,613   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,614   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 02:52:15,615   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,615   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 02:52:15,616   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:52:15,616   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 02:52:15,616   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:52:15,616   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 02:52:15,617   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 02:52:15,618   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 02:52:15,619   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,619   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:52:15,619   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:52:15,620   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 02:52:15,620   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:52:15,621   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:52:15,621   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:52:15,621   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,622   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,622   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,622   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,623   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,623   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,623   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 02:52:15,624   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,624   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,624   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,625   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,625   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,626   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 02:52:15,627   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:52:15,627   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:52:15,627   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,627   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:52:15,640   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 02:52:15,683   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:52:15,696   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:52:15,700   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 02:52:15,705   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:52:15,710   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:15,717   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:15,722   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:15,728   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 02:52:15,730   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:52:15,733   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:52:15,735   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 02:52:15,738   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:52:15,739   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,745   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,748   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,753   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:52:15,754   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,757   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,761   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,770   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 02:52:15,771   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,775   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,777   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,780   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 02:52:15,783   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 02:52:15,786   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 02:52:15,789   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 02:52:15,791   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 02:52:15,794   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 02:52:15,797   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:52:15,799   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 02:52:15,801   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 02:52:15,804   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 02:52:15,805   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:52:15,808   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:52:15,810   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:52:15,812   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:52:15,814   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:15,817   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:15,819   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:15,823   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 02:52:15,824   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 02:52:15,827   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 02:52:15,830   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 02:52:15,831   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:52:15,833   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:52:15,835   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 02:52:15,837   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 02:52:15,838   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:15,842   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:15,844   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:15,846   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 02:52:15,848   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 02:52:15,850   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 02:52:15,852   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:52:15,854   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,857   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,859   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,862   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:52:15,864   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,866   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,868   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,871   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:52:15,872   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,875   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,878   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:15,880   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:52:15,882   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:52:15,885   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:52:15,887   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:52:15,890   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:52:15,893   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 02:52:15,895   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 02:52:15,898   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 02:52:15,900   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:52:15,902   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:52:15,904   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 02:52:15,905   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 02:52:15,907   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 02:52:15,908   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 02:52:15,911   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 02:52:15,912   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:15,915   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:15,917   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:15,924   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:52:15,925   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:15,928   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:15,929   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:15,931   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 02:52:15,932   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:52:15,934   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:52:15,937   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 02:52:15,938   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:52:15,948   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:52:15,950   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:52:15,951   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:52:15,955   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 02:52:15,956   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 02:52:15,957   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 02:52:15,959   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 02:52:15,982   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 02:52:15,988   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:52:15,991   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:52:15,993   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:16,002   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 02:52:16,004   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:16,006   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 02:52:16,016   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 02:52:16,025   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 02:52:16,026   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 02:52:16,034   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 02:52:16,043   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 02:52:16,043   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 02:52:16,044   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 02:52:16,046   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:16,052   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 02:52:16,055   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 02:52:16,060   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 02:52:16,064   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 02:52:16,066   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:16,067   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 02:52:16,070   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 02:52:16,078   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 02:52:16,081   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:16,082   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 02:52:16,086   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 02:52:16,089   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 02:52:16,096   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 02:52:16,098   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 02:52:16,101   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 02:52:16,104   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:16,105   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 02:52:16,110   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 02:52:16,114   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 02:52:16,114   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:16,116   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 02:52:16,118   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 02:52:16,119   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 02:52:16,122   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 02:52:16,125   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 02:52:16,125   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 02:52:16,149   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 02:52:16,150   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 02:52:16,154   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:16,156   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 02:52:16,158   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 02:52:16,160   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 02:52:16,163   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 02:52:16,166   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 02:52:16,171   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 02:52:16,175   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:16,176   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 02:52:16,188   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 02:52:16,188   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 02:52:16,189   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 02:52:16,193   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 02:52:16,197   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 02:52:16,201   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:16,202   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 02:52:16,204   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 02:52:16,205   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 02:52:16,207   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:16,208   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 02:52:16,210   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:16,211   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:52:16,213   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 02:52:16,216   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:16,217   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 02:52:16,220   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 02:52:16,224   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 02:52:16,227   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 02:52:16,228   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:16,229   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 02:52:16,236   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 02:52:16,246   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:16,247   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 02:52:16,249   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:16,250   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 02:52:16,257   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 02:52:16,260   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 02:52:16,268   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 02:52:16,271   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 02:52:16,272   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 02:52:16,278   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:52:16,279   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 02:52:16,300   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 02:52:16,301   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:52:16,314   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 02:52:16,316   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 02:52:16,318   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 02:52:16,324   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 02:52:16,327   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 02:52:16,329   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 02:52:16,331   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 02:52:16,332   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 02:52:16,334   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:16,335   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 02:52:16,338   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 02:52:16,339   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 02:52:16,341   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 02:52:16,341   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:16,351   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 02:52:16,358   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:16,359   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 02:52:16,366   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 07:52:17,771   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 07:52:17,783   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 07:52:17,791   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 07:52:17,815   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 07:52:17,815   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 07:52:17,817   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 07:52:17,821   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 07:52:17,835   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 07:52:17,835   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 07:52:17,835   INFO  [main] NETWORK: 2 notified of host 0
2014-02-27 07:52:17,851   INFO  [ZooKeeperServer] REJOIN: Joining site 2:-1 known  active sites 0:-1, 2:-1
2014-02-27 07:52:17,874   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 07:52:17,905   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 07:52:17,936   FATAL [main] HOST: The PID of this process is 29708
2014-02-27 07:52:17,936   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 07:52:17,936   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 977383      0t0  TCP *:33331 (LISTEN)
2014-02-27 07:52:17,936   FATAL [main] HOST: java      29512 thorsten   34u  IPv6 976548      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 07:52:17,936   FATAL [main] HOST: java      29512 thorsten   40u  IPv6 976555      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 07:52:17,936   FATAL [main] HOST: java      29512 thorsten   54u  IPv6 976562      0t0  TCP *:8080 (LISTEN)
2014-02-27 07:52:17,936   FATAL [main] HOST: java      29512 thorsten   55u  IPv6 976629      0t0  TCP *:21212 (LISTEN)
2014-02-27 07:52:17,936   FATAL [main] HOST: java      29512 thorsten   56u  IPv6 976630      0t0  TCP *:21211 (LISTEN)
2014-02-27 07:52:17,942   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 07:52:17,942   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 07:52:18,273   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 2:-1
2014-02-27 07:52:18,275   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:41720
2014-02-27 07:52:18,275   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 2:-1, reporting: 0:-1, witnessed: true}
2014-02-27 07:52:18,276   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [2:-1]
2014-02-27 07:52:18,276   WARN  [Volt Network - 0] NETWORK: Host 2 failed
2014-02-27 07:52:18,282   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 2:-1 to failed sites history
2014-02-27 07:52:18,282   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 2:-1 initiatorSafeInitPoints {2:-1->-1}
2014-02-27 07:52:18,282   WARN  [ZooKeeperServer] NETWORK: Host 2 failed
2014-02-27 02:52:28,839   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 02:52:28,845   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 02:52:28,846   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,847   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,849   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,849   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 02:52:28,850   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 02:52:28,850   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:52:28,850   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 02:52:28,851   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:52:28,852   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:52:28,852   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 02:52:28,852   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 02:52:28,853   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,854   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 02:52:28,854   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,855   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 02:52:28,856   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:52:28,856   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 02:52:28,856   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 02:52:28,856   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 02:52:28,856   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 02:52:28,857   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 02:52:28,858   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,859   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:52:28,859   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 02:52:28,859   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 02:52:28,860   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:52:28,860   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:52:28,860   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 02:52:28,861   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,861   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,861   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,862   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,862   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,862   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,863   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 02:52:28,864   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,864   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,864   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,864   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,865   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,865   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 02:52:28,866   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:52:28,867   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 02:52:28,867   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,867   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 02:52:28,880   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 02:52:28,922   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:52:28,934   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 02:52:28,937   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 02:52:28,942   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:52:28,947   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:28,954   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:28,958   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:28,965   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 02:52:28,967   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:52:28,969   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 02:52:28,971   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 02:52:28,974   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:52:28,975   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:28,980   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:28,984   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:28,988   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:52:28,990   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:28,993   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:28,995   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:28,998   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 02:52:29,005   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:29,008   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:29,010   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:29,013   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 02:52:29,016   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 02:52:29,018   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 02:52:29,021   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 02:52:29,023   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 02:52:29,026   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 02:52:29,029   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:52:29,031   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 02:52:29,033   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 02:52:29,036   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 02:52:29,038   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:52:29,040   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:52:29,041   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 02:52:29,043   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:52:29,045   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:29,048   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:29,050   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:29,053   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 02:52:29,055   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 02:52:29,057   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 02:52:29,060   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 02:52:29,061   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:52:29,063   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 02:52:29,066   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 02:52:29,068   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 02:52:29,069   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:29,071   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:29,073   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 02:52:29,076   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 02:52:29,077   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 02:52:29,080   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 02:52:29,082   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:52:29,085   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:29,088   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:29,089   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:29,092   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:52:29,094   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:29,097   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:29,106   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:29,109   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 02:52:29,110   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:29,112   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:29,114   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 02:52:29,117   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 02:52:29,118   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:52:29,121   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:52:29,123   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 02:52:29,126   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 02:52:29,129   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 02:52:29,131   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 02:52:29,134   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 02:52:29,136   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:52:29,137   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 02:52:29,140   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 02:52:29,141   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 02:52:29,144   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 02:52:29,145   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 02:52:29,147   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 02:52:29,148   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:29,150   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:29,153   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:29,155   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 02:52:29,162   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:29,164   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:29,166   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 02:52:29,171   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 02:52:29,172   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:52:29,173   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 02:52:29,175   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 02:52:29,178   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 02:52:29,179   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:52:29,181   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:52:29,183   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 02:52:29,186   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 02:52:29,188   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 02:52:29,190   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 02:52:29,191   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 02:52:29,221   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 02:52:29,227   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:52:29,230   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:52:29,234   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:29,235   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 02:52:29,237   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:29,239   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 02:52:29,245   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 02:52:29,253   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 02:52:29,254   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 02:52:29,264   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 02:52:29,280   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 02:52:29,280   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 02:52:29,282   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 02:52:29,284   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:29,292   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 02:52:29,296   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 02:52:29,301   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 02:52:29,304   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 02:52:29,306   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:29,307   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 02:52:29,310   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 02:52:29,315   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 02:52:29,317   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:29,318   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 02:52:29,322   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 02:52:29,325   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 02:52:29,327   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 02:52:29,328   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 02:52:29,331   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 02:52:29,334   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:29,335   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 02:52:29,339   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 02:52:29,344   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 02:52:29,344   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:29,345   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 02:52:29,347   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 02:52:29,348   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 02:52:29,352   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 02:52:29,354   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 02:52:29,355   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 02:52:29,378   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 02:52:29,379   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 02:52:29,385   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:29,387   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 02:52:29,389   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 02:52:29,390   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 02:52:29,393   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 02:52:29,396   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 02:52:29,399   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 02:52:29,402   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:29,402   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 02:52:29,411   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 02:52:29,411   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 02:52:29,412   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 02:52:29,415   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 02:52:29,418   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 02:52:29,420   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:29,421   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 02:52:29,423   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 02:52:29,424   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 02:52:29,426   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:29,427   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 02:52:29,429   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:29,430   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 02:52:29,433   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 02:52:29,435   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:29,436   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 02:52:29,440   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 02:52:29,445   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 02:52:29,448   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 02:52:29,450   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:29,450   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 02:52:29,454   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 02:52:29,455   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:29,456   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 02:52:29,459   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:29,460   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 02:52:29,463   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 02:52:29,466   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 02:52:29,468   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 02:52:29,471   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 02:52:29,472   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 02:52:29,475   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 02:52:29,476   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 02:52:29,490   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 02:52:29,491   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 02:52:29,503   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 02:52:29,505   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 02:52:29,512   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 02:52:29,519   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 02:52:29,522   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 02:52:29,525   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 02:52:29,527   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 02:52:29,528   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 02:52:29,530   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:29,531   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 02:52:29,534   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 02:52:29,535   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 02:52:29,537   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 02:52:29,537   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 02:52:29,538   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 02:52:29,543   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 02:52:29,544   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 02:52:29,551   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 07:52:30,997   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 07:52:31,011   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 07:52:31,018   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 07:52:31,041   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 07:52:31,041   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 07:52:31,043   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 07:52:31,077   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 07:52:31,093   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 07:52:31,143   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@2a03803
2014-02-27 07:52:31,148   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 07:52:31,150   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 07:52:31,150   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:49408
2014-02-27 07:52:31,152   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:49408
2014-02-27 07:52:31,163   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169fd76b58020000 with negotiated timeout 6000 for client /127.0.0.1:49408
2014-02-27 07:52:31,164   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169fd76b58020000, negotiated timeout = 6000
2014-02-27 07:52:31,205   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 07:52:31,231   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 07:52:31,231   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 07:52:31,245   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 07:52:31,463   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 07:52:32,930   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 07:52:32,934   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 07:52:33,037   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 07:52:33,041   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 07:52:33,333   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 07:52:33,493   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 07:52:33,511   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 07:52:33,521   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 07:52:33,527   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 07:52:33,528   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 07:52:33,532   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 07:52:33,532   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 07:52:33,542   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 11 ms.
2014-02-27 07:52:33,543   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 13 ms.
2014-02-27 07:52:33,545   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 22 ms.
2014-02-27 07:52:33,548   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:52:33,548   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:52:33,553   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:52:33,562   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 07:52:33,564   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 9 ms.
2014-02-27 07:52:33,572   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 07:52:33,601   INFO  [main] HOST: Database start action is Create.
2014-02-27 07:52:33,623   INFO  [main] HOST: PID of this Volt process is 29771
2014-02-27 07:52:33,623   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 07:52:33,624   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 07:52:33,624   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 07:52:33,624   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 07:52:33,624   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 07:52:33,624   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 07:52:33,624   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 07:52:33,624   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 07:52:33,625   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 07:52:33,625   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 07:52:33,625   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 07:52:33,625   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 07:52:33,625   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 07:52:33,625   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 07:52:33,625   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 07:52:33,625   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 07:52:33,625   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 07:52:33,625   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 07:52:33,625   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 07:52:33,625   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 07:52:33,625   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 07:52:33,626   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 07:52:33,626   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 07:52:33,626   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 07:52:33,626   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 07:52:33,642   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 07:52:33,643   INFO  [Thread-9] HOST: Logging config info
2014-02-27 07:52:33,643   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 07:52:33,672   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 03:26:39,400   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:26:39,406   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:26:39,407   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,407   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,409   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,410   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:26:39,410   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:26:39,411   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:26:39,411   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:26:39,412   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:26:39,412   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:26:39,413   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:26:39,413   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:26:39,414   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,415   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:26:39,416   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,416   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:26:39,417   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:26:39,418   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:26:39,418   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:26:39,418   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:26:39,418   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:26:39,420   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:26:39,421   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,422   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:26:39,422   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:26:39,422   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:26:39,423   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:26:39,423   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:26:39,423   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:26:39,424   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,424   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,424   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,430   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,430   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,430   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,431   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:26:39,432   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,432   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,435   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,435   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,435   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,436   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:26:39,436   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:26:39,437   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:26:39,437   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,437   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:26:39,450   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:26:39,515   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:26:39,528   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:26:39,531   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:26:39,537   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:26:39,560   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:39,568   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:39,572   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:39,579   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:26:39,581   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:26:39,584   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:26:39,587   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:26:39,590   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:26:39,592   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,597   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,601   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,605   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:26:39,607   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,611   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,613   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,656   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:26:39,659   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,662   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,666   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:26:39,667   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:26:39,670   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:26:39,673   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:26:39,675   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:26:39,677   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:26:39,681   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:26:39,683   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:26:39,685   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:26:39,688   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:26:39,689   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:26:39,692   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:26:39,693   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:26:39,695   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:26:39,699   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:39,703   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:39,707   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:39,710   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:26:39,713   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:26:39,717   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:26:39,719   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:26:39,721   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:26:39,723   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:26:39,724   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:26:39,726   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:26:39,728   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:39,731   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:39,733   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:39,735   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:26:39,738   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:26:39,740   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:26:39,742   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:26:39,761   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,765   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,766   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,769   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:26:39,770   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,773   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,775   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,778   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:26:39,779   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,781   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,783   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:39,786   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:26:39,787   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:26:39,790   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:26:39,792   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:26:39,797   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:26:39,799   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:26:39,801   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:26:39,804   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:26:39,806   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:26:39,808   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:26:39,810   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:26:39,811   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:26:39,813   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:26:39,814   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:26:39,816   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:26:39,817   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:26:39,819   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:26:39,821   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:26:39,823   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:26:39,833   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:26:39,838   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:26:39,839   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:26:39,842   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:26:39,843   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:26:39,855   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:26:39,857   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:26:39,858   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:26:39,860   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:26:39,863   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:26:39,864   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:26:39,868   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:26:39,869   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:26:39,871   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:26:39,872   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:26:39,897   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:26:39,901   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:26:39,904   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:26:39,907   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:39,908   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:26:39,913   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:39,917   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:26:39,924   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:26:39,938   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:26:39,939   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:26:39,955   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:26:39,965   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:26:39,965   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:26:39,966   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:26:39,968   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:39,971   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:26:39,977   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:26:39,985   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:26:39,988   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:26:39,990   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:39,991   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:26:39,994   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:26:40,001   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:26:40,003   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:40,004   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:26:40,010   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:26:40,013   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:26:40,015   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:26:40,016   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:26:40,019   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:26:40,024   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:40,025   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:26:40,031   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:26:40,042   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:26:40,042   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:40,043   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:26:40,051   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:26:40,052   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:26:40,056   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:26:40,058   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:26:40,060   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:26:40,085   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:26:40,086   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:26:40,095   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:40,097   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:26:40,100   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:26:40,103   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:26:40,106   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:26:40,109   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:26:40,112   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:26:40,118   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:40,119   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:26:40,124   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:26:40,124   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:26:40,125   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:26:40,130   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:26:40,134   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:26:40,136   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:40,137   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:26:40,140   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:26:40,141   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:26:40,143   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:40,144   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:26:40,147   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:40,148   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:26:40,151   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:26:40,154   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:40,155   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:26:40,160   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:26:40,176   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:26:40,180   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:26:40,182   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:40,183   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:26:40,187   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:26:40,190   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:40,191   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:26:40,193   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:40,194   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:26:40,222   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:26:40,226   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:26:40,229   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:26:40,231   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:26:40,232   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:26:40,247   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:26:40,249   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:26:40,312   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:26:40,316   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:26:40,442   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:26:40,444   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:26:40,446   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:26:40,465   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:26:40,474   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:26:40,481   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:26:40,489   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:26:40,490   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:26:40,521   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:40,523   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:26:40,525   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:26:40,526   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:26:40,528   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:26:40,528   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:40,529   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:26:40,532   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:40,533   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:26:40,543   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 08:26:42,862   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:26:42,879   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:26:42,885   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:26:42,912   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:26:42,913   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:26:42,915   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 08:26:42,920   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 08:26:42,927   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 08:26:42,928   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 08:26:42,928   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 08:26:42,939   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 08:26:42,970   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:26:43,095   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 08:26:43,127   FATAL [main] HOST: The PID of this process is 33230
2014-02-27 08:26:43,127   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 08:26:43,127   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 982181      0t0  TCP *:48337 (LISTEN)
2014-02-27 08:26:43,128   FATAL [main] HOST: java      29771 thorsten   34u  IPv6 978112      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 08:26:43,128   FATAL [main] HOST: java      29771 thorsten   40u  IPv6 978119      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 08:26:43,128   FATAL [main] HOST: java      29771 thorsten   54u  IPv6 978126      0t0  TCP *:8080 (LISTEN)
2014-02-27 08:26:43,128   FATAL [main] HOST: java      29771 thorsten   55u  IPv6 978193      0t0  TCP *:21212 (LISTEN)
2014-02-27 08:26:43,128   FATAL [main] HOST: java      29771 thorsten   56u  IPv6 978194      0t0  TCP *:21211 (LISTEN)
2014-02-27 08:26:43,133   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 08:26:43,133   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 08:26:43,469   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 08:26:43,474   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:42828
2014-02-27 08:26:43,475   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 08:26:43,480   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 08:26:43,481   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-02-27 08:26:43,497   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 08:26:43,508   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 08:26:43,508   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 08:26:43,509   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 03:26:54,671   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:26:54,676   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:26:54,677   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,679   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,681   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,681   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:26:54,682   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:26:54,682   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:26:54,682   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:26:54,689   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:26:54,689   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:26:54,689   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:26:54,690   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:26:54,691   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,691   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:26:54,692   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,693   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:26:54,694   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:26:54,694   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:26:54,694   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:26:54,694   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:26:54,694   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:26:54,695   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:26:54,696   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,697   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:26:54,697   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:26:54,697   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:26:54,698   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:26:54,698   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:26:54,698   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:26:54,699   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,699   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,699   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,700   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,700   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,700   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,701   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:26:54,701   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,701   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,701   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,701   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,702   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,702   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:26:54,702   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:26:54,703   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:26:54,703   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,703   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:26:54,714   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:26:54,764   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:26:54,784   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:26:54,789   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:26:54,795   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:26:54,800   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:54,808   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:54,813   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:54,822   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:26:54,824   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:26:54,828   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:26:54,830   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:26:54,833   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:26:54,838   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:54,842   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:54,848   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:54,853   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:26:54,857   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:54,861   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:54,863   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:54,873   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:26:54,876   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:54,884   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:54,888   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:26:54,893   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:26:54,897   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:26:54,903   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:26:54,905   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:26:54,910   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:26:54,913   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:26:54,916   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:26:54,918   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:26:54,921   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:26:54,923   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:26:54,925   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:26:54,927   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:26:54,929   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:26:54,931   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:54,937   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:54,943   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:54,947   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:26:54,950   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:26:54,954   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:26:54,957   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:26:54,958   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:26:54,960   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:26:54,963   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:26:54,965   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:26:54,966   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:54,970   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:54,972   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:26:54,975   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:26:54,977   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:26:54,979   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:26:54,984   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:26:54,986   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:54,990   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:54,992   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:54,996   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:26:54,997   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:55,003   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:55,005   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:55,008   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:26:55,009   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:55,012   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:55,015   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:26:55,018   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:26:55,020   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:26:55,022   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:26:55,024   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:26:55,027   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:26:55,029   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:26:55,033   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:26:55,037   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:26:55,039   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:26:55,041   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:26:55,043   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:26:55,044   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:26:55,046   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:26:55,047   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:26:55,050   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:26:55,051   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:26:55,054   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:26:55,055   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:26:55,058   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:26:55,064   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:26:55,066   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:26:55,068   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:26:55,070   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:26:55,071   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:26:55,075   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:26:55,076   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:26:55,078   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:26:55,079   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:26:55,086   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:26:55,088   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:26:55,090   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:26:55,091   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:26:55,093   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:26:55,094   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:26:55,117   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:26:55,122   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:26:55,125   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:26:55,127   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:55,128   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:26:55,135   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:55,139   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:26:55,142   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:26:55,156   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:26:55,157   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:26:55,162   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:26:55,172   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:26:55,172   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:26:55,173   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:26:55,175   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:55,176   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:26:55,181   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:26:55,185   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:26:55,189   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:26:55,191   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:55,192   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:26:55,196   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:26:55,202   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:26:55,205   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:55,207   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:26:55,211   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:26:55,215   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:26:55,217   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:26:55,219   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:26:55,223   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:26:55,225   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:55,226   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:26:55,231   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:26:55,239   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:26:55,239   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:55,240   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:26:55,243   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:26:55,245   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:26:55,248   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:26:55,252   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:26:55,254   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:26:55,273   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:26:55,274   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:26:55,278   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:55,281   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:26:55,283   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:26:55,285   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:26:55,288   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:26:55,290   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:26:55,294   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:26:55,297   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:55,298   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:26:55,301   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:26:55,301   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:26:55,302   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:26:55,307   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:26:55,312   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:26:55,315   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:55,316   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:26:55,318   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:26:55,319   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:26:55,321   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:55,323   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:26:55,326   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:55,327   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:26:55,329   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:26:55,332   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:55,333   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:26:55,346   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:26:55,350   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:26:55,368   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:26:55,370   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:55,373   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:26:55,377   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:26:55,381   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:55,382   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:26:55,384   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:55,385   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:26:55,391   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:26:55,394   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:26:55,397   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:26:55,400   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:26:55,401   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:26:55,404   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:26:55,405   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:26:55,421   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:26:55,422   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:26:55,429   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:26:55,431   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:26:55,432   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:26:55,435   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:26:55,436   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:26:55,440   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:26:55,442   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:26:55,443   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:26:55,445   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:55,446   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:26:55,448   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:26:55,449   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:26:55,451   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:26:55,451   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:26:55,453   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:26:55,456   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:26:55,457   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:26:55,462   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 08:26:57,234   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:26:57,249   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:26:57,256   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:26:57,279   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:26:57,280   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:26:57,281   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 08:26:57,314   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:26:57,329   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 08:26:57,374   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-02-27 08:26:57,378   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 08:26:57,380   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:50525
2014-02-27 08:26:57,381   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 08:26:57,382   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:50525
2014-02-27 08:26:57,394   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169fe72ef3800000 with negotiated timeout 6000 for client /127.0.0.1:50525
2014-02-27 08:26:57,394   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169fe72ef3800000, negotiated timeout = 6000
2014-02-27 08:26:57,442   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 08:26:57,469   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 08:26:57,469   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 08:26:57,482   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 08:26:57,718   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 08:26:58,447   WARN  [qtp1671094024-28] HOST: JSON interface: Connection refused
2014-02-27 08:26:59,251   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 08:26:59,255   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 08:26:59,339   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 08:26:59,343   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 08:26:59,714   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 08:26:59,823   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 08:26:59,841   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 08:26:59,851   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 08:26:59,855   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 08:26:59,868   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 08:26:59,868   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 08:26:59,875   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 8 ms.
2014-02-27 08:26:59,875   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 25 ms.
2014-02-27 08:26:59,881   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 08:26:59,881   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 4 ms.
2014-02-27 08:26:59,887   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:26:59,887   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:26:59,893   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:26:59,901   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 08:26:59,903   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 7 ms.
2014-02-27 08:26:59,919   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:26:59,945   INFO  [main] HOST: Database start action is Create.
2014-02-27 08:26:59,971   INFO  [main] HOST: PID of this Volt process is 33304
2014-02-27 08:26:59,972   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 08:26:59,972   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 08:26:59,972   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 08:26:59,972   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 08:26:59,972   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 08:26:59,972   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 08:26:59,972   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 08:26:59,972   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 08:26:59,972   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 08:26:59,972   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 08:26:59,973   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 08:26:59,973   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 08:26:59,973   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 08:26:59,973   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 08:26:59,973   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 08:26:59,973   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 08:26:59,973   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 08:26:59,973   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 08:26:59,973   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 08:26:59,973   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 08:26:59,973   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 08:26:59,974   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 08:26:59,974   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 08:26:59,980   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 08:26:59,980   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 08:26:59,996   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 08:26:59,997   INFO  [Thread-10] HOST: Logging config info
2014-02-27 08:26:59,998   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 08:27:00,027   INFO  [Thread-11] CONSOLE: Server completed initialization.
2014-02-27 03:31:36,412   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:31:36,419   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:31:36,419   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,422   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,424   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,424   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:31:36,424   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:31:36,425   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:31:36,425   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:31:36,435   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:31:36,436   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:31:36,436   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:31:36,436   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:31:36,437   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,438   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:31:36,439   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,439   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:31:36,440   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:31:36,440   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:31:36,440   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:31:36,440   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:31:36,440   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:31:36,441   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:31:36,442   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,442   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:31:36,442   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:31:36,442   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:31:36,443   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:31:36,443   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:31:36,443   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:31:36,444   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,444   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,444   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,444   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,444   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,444   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,445   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:31:36,445   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,445   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,445   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,446   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,446   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,446   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:31:36,447   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:31:36,447   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:31:36,447   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,447   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:31:36,459   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:31:36,519   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:31:36,586   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:31:36,593   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:31:36,606   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:31:36,615   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:36,665   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:36,669   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:36,677   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:31:36,679   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:31:36,681   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:31:36,683   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:31:36,686   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:31:36,688   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,692   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,719   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,723   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:31:36,725   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,728   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,730   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,763   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:31:36,765   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,770   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,779   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:31:36,780   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:31:36,783   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:31:36,786   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:31:36,788   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:31:36,790   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:31:36,793   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:31:36,795   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:31:36,798   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:31:36,800   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:31:36,802   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:31:36,804   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:31:36,805   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:31:36,807   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:31:36,809   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:36,812   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:36,815   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:36,818   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:31:36,820   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:31:36,822   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:31:36,825   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:31:36,826   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:31:36,828   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:31:36,830   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:31:36,832   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:31:36,833   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:36,836   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:36,838   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:36,840   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:31:36,842   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:31:36,844   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:31:36,846   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:31:36,848   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,851   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,853   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,856   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:31:36,858   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,860   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,862   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,865   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:31:36,866   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,869   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,870   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:36,873   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:31:36,875   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:31:36,877   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:31:36,879   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:31:36,882   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:31:36,885   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:31:36,887   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:31:36,890   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:31:36,891   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:31:36,893   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:31:36,895   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:31:36,897   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:31:36,899   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:31:36,900   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:31:36,902   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:31:36,903   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:31:36,906   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:31:36,907   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:31:36,910   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:31:36,918   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:31:36,920   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:31:36,922   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:31:36,924   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:31:36,925   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:31:36,927   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:31:36,928   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:31:36,930   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:31:36,931   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:31:36,933   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:31:36,935   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:31:36,937   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:31:36,938   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:31:36,941   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:31:36,942   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:31:36,966   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:31:36,970   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:31:37,013   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:31:37,020   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:37,022   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:31:37,030   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:37,035   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:31:37,038   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:31:37,054   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:31:37,056   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:31:37,063   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:31:37,071   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:31:37,071   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:31:37,072   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:31:37,074   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:37,075   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:31:37,079   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:31:37,083   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:31:37,086   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:31:37,088   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:37,089   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:31:37,092   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:31:37,098   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:31:37,100   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:37,100   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:31:37,111   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:31:37,115   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:31:37,117   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:31:37,118   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:31:37,122   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:31:37,124   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:37,125   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:31:37,129   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:31:37,133   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:31:37,133   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:37,134   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:31:37,137   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:31:37,138   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:31:37,141   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:31:37,144   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:31:37,145   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:31:37,211   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:31:37,212   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:31:37,253   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:37,257   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:31:37,260   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:31:37,261   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:31:37,263   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:31:37,266   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:31:37,284   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:31:37,286   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:37,287   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:31:37,290   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:31:37,290   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:31:37,291   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:31:37,294   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:31:37,297   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:31:37,299   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:37,300   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:31:37,303   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:31:37,304   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:31:37,314   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:37,315   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:31:37,340   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:37,341   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:31:37,344   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:31:37,346   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:37,347   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:31:37,353   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:31:37,362   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:31:37,364   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:31:37,366   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:37,367   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:31:37,370   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:31:37,373   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:37,374   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:31:37,399   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:37,400   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:31:37,404   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:31:37,409   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:31:37,412   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:31:37,415   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:31:37,416   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:31:37,419   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:31:37,420   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:31:37,497   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:31:37,498   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:31:37,629   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:31:37,632   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:31:37,634   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:31:37,643   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:31:37,646   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:31:37,649   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:31:37,651   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:31:37,652   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:31:37,655   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:37,656   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:31:37,658   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:31:37,659   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:31:37,661   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:31:37,661   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:37,662   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:31:37,669   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:37,670   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:31:37,677   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 08:31:39,251   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:31:39,257   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:31:39,264   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:31:39,288   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:31:39,288   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:31:39,290   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 08:31:39,295   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 08:31:39,308   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 08:31:39,308   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 08:31:39,309   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 08:31:39,325   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 08:31:39,345   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:31:39,435   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 08:31:39,468   FATAL [main] HOST: The PID of this process is 33893
2014-02-27 08:31:39,468   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 08:31:39,468   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 983852      0t0  TCP *:43969 (LISTEN)
2014-02-27 08:31:39,468   FATAL [main] HOST: java      33304 thorsten   34u  IPv6 983072      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 08:31:39,469   FATAL [main] HOST: java      33304 thorsten   40u  IPv6 983079      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 08:31:39,469   FATAL [main] HOST: java      33304 thorsten   54u  IPv6 983086      0t0  TCP *:8080 (LISTEN)
2014-02-27 08:31:39,469   FATAL [main] HOST: java      33304 thorsten   56u  IPv6 983159      0t0  TCP *:21212 (LISTEN)
2014-02-27 08:31:39,469   FATAL [main] HOST: java      33304 thorsten   57u  IPv6 983160      0t0  TCP *:21211 (LISTEN)
2014-02-27 08:31:39,474   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 08:31:39,474   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 08:31:39,809   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 08:31:39,814   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 08:31:39,815   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:43001
2014-02-27 08:31:39,822   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 08:31:39,822   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 08:31:39,836   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 08:31:39,847   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 08:31:39,847   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 08:31:39,848   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 03:31:51,440   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:31:51,451   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:31:51,452   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,452   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,462   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,463   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:31:51,463   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:31:51,464   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:31:51,464   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:31:51,465   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:31:51,465   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:31:51,465   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:31:51,466   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:31:51,471   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,471   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:31:51,472   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,473   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:31:51,478   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:31:51,478   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:31:51,478   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:31:51,479   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:31:51,479   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:31:51,480   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:31:51,480   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,481   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:31:51,481   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:31:51,481   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:31:51,481   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:31:51,482   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:31:51,482   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:31:51,482   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,482   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,482   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,483   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,483   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,483   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,483   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:31:51,484   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,484   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,484   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,484   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,485   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,485   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:31:51,485   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:31:51,486   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:31:51,486   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,486   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:31:51,497   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:31:51,549   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:31:51,561   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:31:51,564   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:31:51,573   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:31:51,580   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:51,587   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:51,591   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:51,597   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:31:51,599   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:31:51,607   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:31:51,609   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:31:51,614   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:31:51,616   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,620   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,624   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,628   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:31:51,629   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,632   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,635   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,642   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:31:51,645   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,652   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,656   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:31:51,658   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:31:51,661   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:31:51,664   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:31:51,666   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:31:51,670   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:31:51,673   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:31:51,674   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:31:51,677   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:31:51,680   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:31:51,681   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:31:51,683   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:31:51,686   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:31:51,688   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:31:51,689   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:51,692   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:51,695   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:51,698   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:31:51,701   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:31:51,705   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:31:51,707   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:31:51,708   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:31:51,710   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:31:51,714   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:31:51,716   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:31:51,717   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:51,720   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:51,722   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:31:51,724   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:31:51,726   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:31:51,728   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:31:51,730   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:31:51,732   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,735   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,737   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,740   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:31:51,742   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,745   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,754   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,757   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:31:51,758   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,760   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,764   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:31:51,767   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:31:51,769   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:31:51,772   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:31:51,773   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:31:51,778   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:31:51,780   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:31:51,783   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:31:51,789   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:31:51,790   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:31:51,792   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:31:51,794   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:31:51,795   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:31:51,797   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:31:51,798   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:31:51,801   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:31:51,802   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:31:51,805   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:31:51,806   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:31:51,814   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:31:51,815   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:31:51,818   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:31:51,819   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:31:51,821   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:31:51,837   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:31:51,839   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:31:51,840   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:31:51,842   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:31:51,843   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:31:51,845   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:31:51,846   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:31:51,848   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:31:51,850   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:31:51,851   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:31:51,853   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:31:51,876   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:31:51,880   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:31:51,883   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:31:51,885   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:51,886   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:31:51,888   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:51,889   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:31:51,894   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:31:51,900   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:31:51,901   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:31:51,906   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:31:51,914   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:31:51,914   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:31:51,915   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:31:51,917   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:51,918   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:31:51,922   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:31:51,926   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:31:51,929   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:31:51,932   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:51,933   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:31:51,936   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:31:51,942   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:31:51,944   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:51,945   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:31:51,948   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:31:51,952   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:31:51,954   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:31:51,955   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:31:51,959   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:31:51,989   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:51,990   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:31:51,994   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:31:51,998   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:31:51,998   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:51,999   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:31:52,001   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:31:52,002   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:31:52,005   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:31:52,008   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:31:52,009   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:31:52,025   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:31:52,027   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:31:52,030   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:52,032   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:31:52,034   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:31:52,036   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:31:52,038   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:31:52,040   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:31:52,043   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:31:52,045   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:52,046   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:31:52,049   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:31:52,049   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:31:52,050   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:31:52,053   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:31:52,107   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:31:52,109   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:52,110   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:31:52,112   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:31:52,114   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:31:52,116   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:52,117   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:31:52,119   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:52,120   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:31:52,122   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:31:52,124   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:52,125   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:31:52,128   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:31:52,132   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:31:52,135   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:31:52,137   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:52,138   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:31:52,141   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:31:52,142   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:52,144   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:31:52,146   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:52,147   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:31:52,150   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:31:52,153   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:31:52,156   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:31:52,159   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:31:52,160   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:31:52,163   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:31:52,164   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:31:52,178   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:31:52,180   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:31:52,192   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:31:52,193   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:31:52,195   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:31:52,201   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:31:52,203   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:31:52,208   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:31:52,209   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:31:52,210   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:31:52,212   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:52,213   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:31:52,215   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:31:52,216   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:31:52,218   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:31:52,218   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:31:52,219   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:31:52,225   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:31:52,226   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:31:52,232   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 08:31:53,664   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:31:53,681   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:31:53,688   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:31:53,711   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:31:53,712   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:31:53,713   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 08:31:53,747   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:31:53,763   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 08:31:53,808   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@485fd4e6
2014-02-27 08:31:53,813   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 08:31:53,815   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 08:31:53,815   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:50697
2014-02-27 08:31:53,817   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:50697
2014-02-27 08:31:53,828   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169fe971ec800000 with negotiated timeout 6000 for client /127.0.0.1:50697
2014-02-27 08:31:53,828   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169fe971ec800000, negotiated timeout = 6000
2014-02-27 08:31:53,874   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 08:31:53,904   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 08:31:53,904   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 08:31:53,919   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 08:31:54,120   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 08:31:55,625   WARN  [qtp786634838-29] HOST: JSON interface: Connection refused
2014-02-27 08:31:55,740   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 08:31:55,751   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 08:31:55,841   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 08:31:55,845   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 08:31:56,176   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 08:31:56,297   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 08:31:56,317   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 08:31:56,327   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 08:31:56,339   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 08:31:56,341   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 08:31:56,342   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 08:31:56,353   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 08:31:56,355   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 3 ms.
2014-02-27 08:31:56,356   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 16 ms.
2014-02-27 08:31:56,356   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 29 ms.
2014-02-27 08:31:56,362   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:31:56,362   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:31:56,363   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:31:56,373   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 08:31:56,375   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 11 ms.
2014-02-27 08:31:56,383   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:31:56,414   INFO  [main] HOST: Database start action is Create.
2014-02-27 08:31:56,439   INFO  [main] HOST: PID of this Volt process is 33970
2014-02-27 08:31:56,439   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 08:31:56,439   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 08:31:56,439   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 08:31:56,439   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 08:31:56,440   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 08:31:56,440   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 08:31:56,440   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 08:31:56,440   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 08:31:56,440   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 08:31:56,440   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 08:31:56,440   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 08:31:56,440   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 08:31:56,440   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 08:31:56,440   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 08:31:56,441   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 08:31:56,441   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 08:31:56,441   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 08:31:56,441   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 08:31:56,441   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 08:31:56,441   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 08:31:56,441   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 08:31:56,442   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 08:31:56,442   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 08:31:56,442   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 08:31:56,442   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 08:31:56,459   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 08:31:56,460   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 08:31:56,464   INFO  [Thread-10] HOST: Logging config info
2014-02-27 08:31:56,494   INFO  [Thread-11] CONSOLE: Server completed initialization.
2014-02-27 03:33:16,935   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:33:16,946   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:33:16,947   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,947   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,952   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,953   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:33:16,953   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:33:16,954   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:33:16,954   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:33:16,954   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:33:16,956   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:33:16,956   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:33:16,957   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:33:16,958   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,958   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:33:16,959   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,959   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:33:16,960   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:33:16,960   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:33:16,961   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:33:16,961   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:33:16,961   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:33:16,962   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:33:16,963   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,964   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:33:16,964   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:33:16,964   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:33:16,965   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:33:16,965   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:33:16,965   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:33:16,966   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,966   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,966   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,967   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,967   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,967   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,968   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:33:16,968   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,968   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,968   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,969   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,969   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,970   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:33:16,971   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:33:16,971   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:33:16,975   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,975   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:33:16,992   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:33:17,036   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:33:17,048   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:33:17,052   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:33:17,057   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:33:17,062   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:17,069   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:17,073   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:17,080   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:33:17,082   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:33:17,084   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:33:17,086   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:33:17,089   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:33:17,094   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,100   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,103   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,111   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:33:17,112   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,117   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,119   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,137   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:33:17,140   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,146   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,152   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:33:17,154   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:33:17,157   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:33:17,161   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:33:17,163   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:33:17,165   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:33:17,169   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:33:17,170   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:33:17,173   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:33:17,175   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:33:17,177   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:33:17,179   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:33:17,181   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:33:17,183   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:33:17,185   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:17,190   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:17,193   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:17,196   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:33:17,198   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:33:17,202   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:33:17,205   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:33:17,206   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:33:17,208   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:33:17,211   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:33:17,213   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:33:17,214   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:17,217   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:17,219   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:17,223   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:33:17,225   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:33:17,227   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:33:17,232   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:33:17,234   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,238   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,241   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,244   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:33:17,246   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,249   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,251   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,254   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:33:17,255   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,258   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,260   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:17,263   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:33:17,265   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:33:17,268   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:33:17,269   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:33:17,273   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:33:17,275   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:33:17,277   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:33:17,281   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:33:17,283   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:33:17,285   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:33:17,287   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:33:17,289   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:33:17,291   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:33:17,293   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:33:17,295   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:33:17,296   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:33:17,299   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:33:17,301   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:33:17,304   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:33:17,309   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:33:17,314   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:33:17,316   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:33:17,319   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:33:17,320   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:33:17,322   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:33:17,323   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:33:17,325   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:33:17,326   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:33:17,328   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:33:17,330   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:33:17,332   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:33:17,333   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:33:17,335   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:33:17,337   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:33:17,360   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:33:17,364   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:33:17,367   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:33:17,370   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:17,370   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:33:17,373   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:17,374   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:33:17,377   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:33:17,383   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:33:17,384   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:33:17,389   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:33:17,397   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:33:17,397   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:33:17,398   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:33:17,401   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:17,402   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:33:17,405   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:33:17,410   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:33:17,414   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:33:17,416   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:17,417   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:33:17,420   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:33:17,430   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:33:17,436   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:17,437   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:33:17,446   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:33:17,452   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:33:17,456   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:33:17,457   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:33:17,460   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:33:17,463   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:17,464   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:33:17,468   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:33:17,472   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:33:17,472   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:17,473   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:33:17,475   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:33:17,477   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:33:17,480   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:33:17,482   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:33:17,483   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:33:17,500   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:33:17,502   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:33:17,506   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:17,507   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:33:17,510   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:33:17,511   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:33:17,513   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:33:17,515   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:33:17,519   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:33:17,521   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:17,521   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:33:17,524   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:33:17,524   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:33:17,525   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:33:17,528   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:33:17,531   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:33:17,533   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:17,534   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:33:17,537   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:33:17,538   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:33:17,540   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:17,541   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:33:17,543   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:17,544   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:33:17,547   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:33:17,549   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:17,550   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:33:17,553   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:33:17,569   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:33:17,572   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:33:17,574   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:17,576   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:33:17,581   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:33:17,583   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:17,584   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:33:17,590   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:17,591   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:33:17,597   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:33:17,601   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:33:17,617   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:33:17,620   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:33:17,620   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:33:17,624   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:33:17,625   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:33:17,647   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:33:17,648   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:33:17,658   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:33:17,666   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:33:17,669   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:33:17,677   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:33:17,679   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:33:17,682   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:33:17,684   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:33:17,684   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:33:17,686   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:17,687   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:33:17,689   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:33:17,690   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:33:17,692   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:33:17,692   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:17,693   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:33:17,699   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:17,700   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:33:17,706   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 08:33:19,408   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:33:19,423   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:33:19,431   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:33:19,455   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:33:19,455   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:33:19,457   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 08:33:19,462   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 08:33:19,476   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 08:33:19,476   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 08:33:19,476   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 08:33:19,493   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 08:33:19,515   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:33:19,546   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 08:33:19,591   FATAL [main] HOST: The PID of this process is 34120
2014-02-27 08:33:19,591   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 08:33:19,591   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 984887      0t0  TCP *:59727 (LISTEN)
2014-02-27 08:33:19,591   FATAL [main] HOST: java      33970 thorsten   34u  IPv6 984688      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 08:33:19,591   FATAL [main] HOST: java      33970 thorsten   40u  IPv6 984695      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 08:33:19,591   FATAL [main] HOST: java      33970 thorsten   54u  IPv6 984702      0t0  TCP *:8080 (LISTEN)
2014-02-27 08:33:19,591   FATAL [main] HOST: java      33970 thorsten   56u  IPv6 984774      0t0  TCP *:21212 (LISTEN)
2014-02-27 08:33:19,591   FATAL [main] HOST: java      33970 thorsten   57u  IPv6 984775      0t0  TCP *:21211 (LISTEN)
2014-02-27 08:33:19,598   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 08:33:19,598   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 08:33:19,935   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 08:33:19,939   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:43021
2014-02-27 08:33:19,943   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 08:33:19,945   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 08:33:19,957   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 08:33:19,966   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 08:33:19,966   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 08:33:19,967   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 03:33:31,477   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:33:31,483   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:33:31,483   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,484   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,486   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,486   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:33:31,487   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:33:31,488   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:33:31,488   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:33:31,489   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:33:31,489   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:33:31,489   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:33:31,490   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:33:31,491   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,492   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:33:31,493   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,494   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:33:31,495   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:33:31,495   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:33:31,495   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:33:31,495   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:33:31,495   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:33:31,496   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:33:31,497   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,498   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:33:31,498   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:33:31,498   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:33:31,499   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:33:31,500   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:33:31,500   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:33:31,500   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,501   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,501   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,501   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,502   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,502   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,502   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:33:31,503   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,503   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,503   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,504   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,504   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,505   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:33:31,506   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:33:31,506   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:33:31,506   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,507   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:33:31,520   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:33:31,566   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:33:31,578   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:33:31,581   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:33:31,586   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:33:31,591   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:31,598   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:31,602   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:31,608   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:33:31,610   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:33:31,612   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:33:31,614   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:33:31,617   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:33:31,619   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,623   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,627   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,631   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:33:31,632   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,636   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,638   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,648   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:33:31,651   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,654   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,658   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:33:31,660   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:33:31,662   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:33:31,666   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:33:31,667   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:33:31,670   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:33:31,673   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:33:31,675   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:33:31,677   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:33:31,680   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:33:31,681   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:33:31,683   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:33:31,685   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:33:31,687   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:33:31,689   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:31,691   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:31,694   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:31,697   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:33:31,699   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:33:31,701   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:33:31,704   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:33:31,705   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:33:31,707   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:33:31,709   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:33:31,711   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:33:31,712   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:31,715   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:31,717   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:33:31,719   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:33:31,721   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:33:31,723   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:33:31,725   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:33:31,727   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,730   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,733   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,736   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:33:31,738   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,743   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,745   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,748   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:33:31,750   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,752   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,756   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:33:31,759   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:33:31,760   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:33:31,763   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:33:31,765   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:33:31,769   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:33:31,773   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:33:31,775   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:33:31,780   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:33:31,782   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:33:31,783   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:33:31,786   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:33:31,787   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:33:31,789   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:33:31,793   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:33:31,795   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:33:31,797   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:33:31,800   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:33:31,801   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:33:31,803   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:33:31,811   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:33:31,813   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:33:31,817   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:33:31,819   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:33:31,820   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:33:31,828   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:33:31,830   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:33:31,832   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:33:31,834   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:33:31,836   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:33:31,837   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:33:31,840   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:33:31,842   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:33:31,843   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:33:31,845   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:33:31,868   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:33:31,872   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:33:31,875   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:33:31,877   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:31,878   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:33:31,891   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:31,892   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:33:31,895   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:33:31,907   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:33:31,911   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:33:31,918   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:33:31,927   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:33:31,927   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:33:31,928   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:33:31,930   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:31,931   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:33:31,935   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:33:31,939   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:33:31,942   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:33:31,944   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:31,945   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:33:31,948   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:33:31,954   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:33:31,955   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:31,956   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:33:31,960   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:33:31,964   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:33:31,966   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:33:31,967   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:33:31,970   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:33:31,972   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:31,973   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:33:31,977   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:33:31,981   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:33:31,981   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:31,982   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:33:31,988   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:33:31,989   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:33:31,992   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:33:31,994   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:33:31,995   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:33:32,012   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:33:32,013   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:33:32,017   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:32,019   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:33:32,021   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:33:32,022   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:33:32,024   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:33:32,028   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:33:32,033   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:33:32,041   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:32,042   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:33:32,045   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:33:32,045   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:33:32,046   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:33:32,054   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:33:32,058   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:33:32,060   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:32,060   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:33:32,065   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:33:32,066   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:33:32,068   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:32,069   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:33:32,072   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:32,073   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:33:32,075   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:33:32,078   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:32,079   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:33:32,082   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:33:32,088   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:33:32,093   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:33:32,095   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:32,095   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:33:32,110   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:33:32,112   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:32,113   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:33:32,115   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:32,116   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:33:32,119   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:33:32,122   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:33:32,125   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:33:32,134   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:33:32,135   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:33:32,138   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:33:32,139   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:33:32,153   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:33:32,154   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:33:32,164   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:33:32,166   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:33:32,168   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:33:32,170   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:33:32,171   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:33:32,174   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:33:32,176   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:33:32,177   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:33:32,179   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:32,180   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:33:32,182   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:33:32,183   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:33:32,185   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:33:32,185   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:33:32,186   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:33:32,192   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:33:32,194   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:33:32,200   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 08:33:33,518   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:33:33,524   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:33:33,531   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:33:33,555   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:33:33,555   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:33:33,557   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 08:33:33,589   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:33:33,605   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 08:33:33,650   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-02-27 08:33:33,655   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 08:33:33,657   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:50709
2014-02-27 08:33:33,658   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 08:33:33,660   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:50709
2014-02-27 08:33:33,671   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169fea34ee800000 with negotiated timeout 6000 for client /127.0.0.1:50709
2014-02-27 08:33:33,671   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169fea34ee800000, negotiated timeout = 6000
2014-02-27 08:33:33,713   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 08:33:33,740   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 08:33:33,740   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 08:33:33,755   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 08:33:33,974   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 08:33:35,350   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 08:33:35,358   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 08:33:35,462   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 08:33:35,467   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 08:33:35,767   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 08:33:35,897   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 08:33:35,922   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 08:33:35,933   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 08:33:35,944   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 08:33:35,948   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 08:33:35,949   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 08:33:35,954   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 08:33:35,956   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 23 ms.
2014-02-27 08:33:35,956   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 9 ms.
2014-02-27 08:33:35,956   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 3 ms.
2014-02-27 08:33:35,967   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:33:35,967   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:33:35,967   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:33:35,974   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 08:33:35,976   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 9 ms.
2014-02-27 08:33:35,984   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:33:36,009   INFO  [main] HOST: Database start action is Create.
2014-02-27 08:33:36,048   INFO  [main] HOST: PID of this Volt process is 34181
2014-02-27 08:33:36,048   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 08:33:36,048   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 08:33:36,048   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 08:33:36,048   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 08:33:36,048   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 08:33:36,048   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 08:33:36,048   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 08:33:36,048   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 08:33:36,049   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 08:33:36,049   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 08:33:36,049   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 08:33:36,049   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 08:33:36,049   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 08:33:36,049   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 08:33:36,049   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 08:33:36,049   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 08:33:36,049   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 08:33:36,049   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 08:33:36,049   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 08:33:36,049   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 08:33:36,049   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 08:33:36,051   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 08:33:36,051   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 08:33:36,051   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 08:33:36,051   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 08:33:36,067   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 08:33:36,068   INFO  [Thread-9] HOST: Logging config info
2014-02-27 08:33:36,068   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 08:33:36,093   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 03:35:11,113   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:35:11,121   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:35:11,122   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,124   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,127   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,127   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:35:11,128   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:35:11,130   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:35:11,130   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:35:11,140   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:35:11,141   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:35:11,141   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:35:11,142   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:35:11,144   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,144   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:35:11,145   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,146   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:35:11,147   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:35:11,147   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:35:11,147   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:35:11,147   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:35:11,147   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:35:11,149   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:35:11,150   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,150   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:35:11,150   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:35:11,150   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:35:11,151   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:35:11,151   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:35:11,151   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:35:11,151   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,152   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,152   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,152   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,152   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,152   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,153   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:35:11,153   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,153   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,153   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,154   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,154   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,154   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:35:11,155   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:35:11,155   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:35:11,156   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,156   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:35:11,169   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:35:11,231   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:35:11,244   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:35:11,249   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:35:11,254   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:35:11,259   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:11,268   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:11,272   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:11,279   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:35:11,281   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:35:11,284   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:35:11,286   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:35:11,289   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:35:11,291   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,296   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,300   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,305   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:35:11,307   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,310   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,313   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,323   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:35:11,326   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,330   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,334   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:35:11,336   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:35:11,339   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:35:11,343   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:35:11,345   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:35:11,349   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:35:11,352   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:35:11,354   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:35:11,357   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:35:11,359   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:35:11,361   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:35:11,364   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:35:11,365   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:35:11,367   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:35:11,369   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:11,375   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:11,378   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:11,381   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:35:11,383   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:35:11,388   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:35:11,392   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:35:11,393   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:35:11,395   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:35:11,398   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:35:11,401   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:35:11,402   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:11,405   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:11,408   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:11,411   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:35:11,413   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:35:11,415   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:35:11,418   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:35:11,420   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,423   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,426   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,429   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:35:11,431   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,436   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,440   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,443   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:35:11,444   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,446   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,451   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:11,454   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:35:11,456   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:35:11,458   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:35:11,460   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:35:11,467   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:35:11,469   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:35:11,471   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:35:11,474   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:35:11,476   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:35:11,671   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:35:11,677   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:35:11,679   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:35:11,683   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:35:11,686   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:35:11,690   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:35:11,693   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:35:11,697   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:35:11,701   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:35:11,706   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:35:11,715   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:35:11,717   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:35:11,720   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:35:11,722   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:35:11,724   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:35:11,729   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:35:11,732   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:35:11,734   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:35:11,741   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:35:11,744   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:35:11,746   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:35:11,749   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:35:11,750   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:35:11,752   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:35:11,754   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:35:11,781   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:35:11,786   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:35:11,790   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:35:11,792   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:11,793   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:35:11,799   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:11,836   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:35:11,845   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:35:11,862   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:35:11,863   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:35:11,873   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:35:11,884   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:35:11,884   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:35:11,885   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:35:11,887   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:11,894   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:35:11,898   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:35:11,904   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:35:11,908   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:35:11,910   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:11,911   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:35:11,914   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:35:11,922   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:35:11,925   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:11,926   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:35:11,932   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:35:11,937   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:35:11,940   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:35:11,941   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:35:11,945   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:35:11,952   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:11,953   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:35:11,963   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:35:11,975   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:35:11,975   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:11,978   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:35:11,980   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:35:11,984   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:35:11,992   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:35:12,002   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:35:12,003   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:35:12,033   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:35:12,035   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:35:12,039   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:12,041   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:35:12,050   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:35:12,054   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:35:12,056   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:35:12,058   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:35:12,062   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:35:12,072   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:12,076   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:35:12,081   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:35:12,081   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:35:12,082   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:35:12,086   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:35:12,091   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:35:12,093   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:12,094   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:35:12,099   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:35:12,100   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:35:12,102   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:12,103   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:35:12,105   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:12,106   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:35:12,109   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:35:12,112   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:12,113   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:35:12,117   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:35:12,122   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:35:12,126   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:35:12,128   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:12,129   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:35:12,132   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:35:12,134   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:12,135   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:35:12,143   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:12,144   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:35:12,155   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:35:12,158   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:35:12,170   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:35:12,172   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:35:12,177   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:35:12,180   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:35:12,181   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:35:12,205   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:35:12,206   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:35:12,218   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:35:12,220   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:35:12,222   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:35:12,229   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:35:12,232   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:35:12,235   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:35:12,237   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:35:12,238   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:35:12,240   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:12,242   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:35:12,245   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:35:12,246   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:35:12,249   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:35:12,249   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:12,250   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:35:12,257   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:12,258   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:35:12,265   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 08:35:14,203   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:35:14,212   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:35:14,222   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:35:14,249   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:35:14,250   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:35:14,251   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 08:35:14,257   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 08:35:14,266   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 08:35:14,266   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 2
2014-02-27 08:35:14,267   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 08:35:14,280   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 08:35:14,318   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:35:14,354   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 08:35:14,389   FATAL [main] HOST: The PID of this process is 34315
2014-02-27 08:35:14,389   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 08:35:14,390   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 985859      0t0  TCP *:49101 (LISTEN)
2014-02-27 08:35:14,390   FATAL [main] HOST: java      34181 thorsten   34u  IPv6 985690      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 08:35:14,390   FATAL [main] HOST: java      34181 thorsten   40u  IPv6 985697      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 08:35:14,390   FATAL [main] HOST: java      34181 thorsten   54u  IPv6 985704      0t0  TCP *:8080 (LISTEN)
2014-02-27 08:35:14,390   FATAL [main] HOST: java      34181 thorsten   55u  IPv6 985771      0t0  TCP *:21212 (LISTEN)
2014-02-27 08:35:14,390   FATAL [main] HOST: java      34181 thorsten   56u  IPv6 985772      0t0  TCP *:21211 (LISTEN)
2014-02-27 08:35:14,396   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 08:35:14,396   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 08:35:14,733   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 08:35:14,734   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:43025
2014-02-27 08:35:14,740   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 08:35:14,742   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 08:35:14,753   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 08:35:14,763   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 08:35:14,763   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 08:35:14,765   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 03:35:27,395   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:35:27,408   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:35:27,409   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,409   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,413   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,414   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:35:27,414   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:35:27,415   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:35:27,415   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:35:27,416   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:35:27,416   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:35:27,416   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:35:27,417   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:35:27,418   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,418   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:35:27,419   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,420   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:35:27,421   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:35:27,421   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:35:27,421   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:35:27,421   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:35:27,422   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:35:27,423   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:35:27,425   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,425   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:35:27,426   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:35:27,426   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:35:27,427   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:35:27,427   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:35:27,427   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:35:27,428   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,428   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,428   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,429   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,429   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,429   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,429   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:35:27,431   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,431   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,431   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,432   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,432   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,433   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:35:27,434   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:35:27,434   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:35:27,435   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,435   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:35:27,449   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:35:27,501   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:35:27,516   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:35:27,520   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:35:27,525   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:35:27,532   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:27,539   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:27,544   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:27,551   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:35:27,553   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:35:27,556   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:35:27,558   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:35:27,562   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:35:27,564   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,569   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,573   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,578   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:35:27,580   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,583   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,586   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,597   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:35:27,601   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,604   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,609   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:35:27,611   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:35:27,614   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:35:27,618   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:35:27,620   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:35:27,623   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:35:27,626   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:35:27,628   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:35:27,632   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:35:27,635   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:35:27,636   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:35:27,638   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:35:27,640   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:35:27,642   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:35:27,644   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:27,647   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:27,649   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:27,653   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:35:27,656   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:35:27,659   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:35:27,663   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:35:27,664   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:35:27,667   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:35:27,669   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:35:27,672   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:35:27,673   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:27,676   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:27,678   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:35:27,681   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:35:27,682   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:35:27,685   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:35:27,688   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:35:27,690   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,693   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,695   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,698   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:35:27,700   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,704   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,707   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,710   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:35:27,712   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,714   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,717   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:35:27,720   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:35:27,722   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:35:27,725   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:35:27,727   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:35:27,730   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:35:27,733   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:35:27,735   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:35:27,739   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:35:27,740   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:35:27,744   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:35:27,747   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:35:27,748   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:35:27,750   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:35:27,752   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:35:27,755   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:35:27,757   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:35:27,760   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:35:27,761   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:35:27,764   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:35:27,772   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:35:27,800   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:35:27,804   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:35:27,806   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:35:27,807   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:35:27,809   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:35:27,811   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:35:27,813   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:35:27,815   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:35:27,818   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:35:27,820   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:35:27,822   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:35:27,823   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:35:27,826   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:35:27,827   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:35:27,857   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:35:27,862   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:35:27,868   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:35:27,871   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:27,872   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:35:27,874   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:27,876   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:35:27,879   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:35:27,886   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:35:27,887   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:35:27,893   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:35:27,902   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:35:27,902   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:35:27,904   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:35:27,907   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:27,908   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:35:27,912   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:35:27,919   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:35:27,922   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:35:27,925   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:27,926   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:35:27,930   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:35:27,942   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:35:27,953   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:27,954   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:35:27,958   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:35:27,966   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:35:27,969   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:35:27,970   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:35:27,979   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:35:27,981   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:27,982   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:35:27,987   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:35:27,992   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:35:27,992   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:27,993   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:35:27,996   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:35:27,997   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:35:28,001   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:35:28,004   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:35:28,005   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:35:28,024   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:35:28,025   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:35:28,029   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:28,030   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:35:28,032   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:35:28,035   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:35:28,037   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:35:28,040   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:35:28,044   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:35:28,047   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:28,048   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:35:28,051   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:35:28,051   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:35:28,052   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:35:28,056   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:35:28,105   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:35:28,107   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:28,108   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:35:28,112   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:35:28,113   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:35:28,115   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:28,116   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:35:28,119   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:28,120   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:35:28,122   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:35:28,124   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:28,125   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:35:28,129   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:35:28,134   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:35:28,137   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:35:28,139   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:28,140   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:35:28,150   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:35:28,153   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:28,154   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:35:28,156   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:28,157   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:35:28,161   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:35:28,164   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:35:28,176   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:35:28,179   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:35:28,180   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:35:28,183   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:35:28,185   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:35:28,208   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:35:28,210   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:35:28,221   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:35:28,223   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:35:28,225   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:35:28,231   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:35:28,235   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:35:28,240   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:35:28,242   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:35:28,244   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:35:28,246   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:28,247   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:35:28,250   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:35:28,251   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:35:28,253   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:35:28,253   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:35:28,254   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:35:28,260   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:35:28,261   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:35:28,271   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 08:35:29,826   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:35:29,833   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:35:29,840   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:35:29,867   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:35:29,867   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:35:29,869   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 08:35:29,907   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:35:29,929   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 08:35:29,981   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@485fd4e6
2014-02-27 08:35:29,987   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 08:35:29,989   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:50713
2014-02-27 08:35:29,990   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 08:35:29,992   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:50713
2014-02-27 08:35:30,010   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169feb1824800000 with negotiated timeout 6000 for client /127.0.0.1:50713
2014-02-27 08:35:30,010   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169feb1824800000, negotiated timeout = 6000
2014-02-27 08:35:30,061   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 08:35:30,090   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 08:35:30,090   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 08:35:30,105   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 08:35:30,364   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 08:35:31,918   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 08:35:31,929   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 08:35:32,057   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 08:35:32,061   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 08:35:32,387   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 08:35:32,561   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 08:35:32,591   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 08:35:32,603   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 08:35:32,610   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 08:35:32,612   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 08:35:32,612   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 08:35:32,624   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 08:35:32,631   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 29 ms.
2014-02-27 08:35:32,631   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 8 ms.
2014-02-27 08:35:32,631   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 21 ms.
2014-02-27 08:35:32,651   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:35:32,651   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:35:32,651   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:35:32,662   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 08:35:32,664   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 12 ms.
2014-02-27 08:35:32,682   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:35:32,713   INFO  [main] HOST: Database start action is Create.
2014-02-27 08:35:32,752   INFO  [main] HOST: PID of this Volt process is 34376
2014-02-27 08:35:32,752   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 08:35:32,752   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 08:35:32,752   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 08:35:32,753   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 08:35:32,753   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 08:35:32,753   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 08:35:32,753   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 08:35:32,753   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 08:35:32,753   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 08:35:32,753   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 08:35:32,753   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 08:35:32,754   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 08:35:32,754   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 08:35:32,754   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 08:35:32,754   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 08:35:32,754   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 08:35:32,754   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 08:35:32,754   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 08:35:32,754   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 08:35:32,754   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 08:35:32,754   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 08:35:32,755   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 08:35:32,755   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 08:35:32,755   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 08:35:32,755   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 08:35:32,771   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 08:35:32,773   INFO  [Thread-9] HOST: Logging config info
2014-02-27 08:35:32,773   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 08:35:32,803   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 03:37:57,159   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:37:57,166   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:37:57,166   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,167   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,169   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,170   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:37:57,170   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:37:57,171   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:37:57,171   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:37:57,182   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:37:57,182   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:37:57,182   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:37:57,183   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:37:57,184   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,185   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:37:57,186   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,187   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:37:57,188   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:37:57,188   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:37:57,188   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:37:57,188   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:37:57,188   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:37:57,189   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:37:57,190   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,191   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:37:57,191   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:37:57,191   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:37:57,194   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:37:57,194   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:37:57,194   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:37:57,195   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,195   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,195   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,196   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,196   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,196   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,197   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:37:57,198   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,198   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,198   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,198   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,199   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,199   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:37:57,200   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:37:57,200   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:37:57,200   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,200   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:37:57,215   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:37:57,286   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:37:57,302   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:37:57,307   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:37:57,314   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:37:57,322   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:37:57,337   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:37:57,342   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:37:57,350   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:37:57,352   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:37:57,355   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:37:57,358   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:37:57,364   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:37:57,367   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,373   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,379   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,384   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:37:57,386   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,392   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,419   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,430   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:37:57,433   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,438   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,448   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:37:57,451   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:37:57,455   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:37:57,460   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:37:57,462   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:37:57,465   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:37:57,468   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:37:57,470   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:37:57,473   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:37:57,478   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:37:57,480   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:37:57,483   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:37:57,487   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:37:57,491   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:37:57,493   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:37:57,499   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:37:57,502   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:37:57,505   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:37:57,509   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:37:57,539   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:37:57,545   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:37:57,549   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:37:57,552   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:37:57,557   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:37:57,560   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:37:57,563   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:37:57,568   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:37:57,571   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:37:57,576   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:37:57,581   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:37:57,586   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:37:57,593   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:37:57,597   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,604   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,608   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,614   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:37:57,617   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,629   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,633   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,638   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:37:57,644   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,648   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,662   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:37:57,668   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:37:57,674   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:37:57,680   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:37:57,684   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:37:57,689   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:37:57,696   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:37:57,700   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:37:57,707   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:37:57,712   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:37:57,715   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:37:57,719   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:37:57,721   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:37:57,725   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:37:57,731   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:37:57,734   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:37:57,737   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:37:57,740   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:37:57,743   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:37:57,746   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:37:57,752   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:37:57,756   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:37:57,760   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:37:57,763   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:37:57,765   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:37:57,784   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:37:57,787   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:37:57,790   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:37:57,794   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:37:57,798   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:37:57,800   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:37:57,804   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:37:57,806   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:37:57,809   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:37:57,810   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:37:57,839   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:37:57,845   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:37:57,848   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:37:57,850   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:37:57,852   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:37:57,855   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:37:57,856   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:37:57,866   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:37:57,887   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:37:57,889   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:37:57,894   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:37:57,906   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:37:57,906   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:37:57,907   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:37:57,913   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:37:57,915   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:37:57,923   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:37:57,930   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:37:57,933   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:37:57,935   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:37:57,936   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:37:57,939   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:37:57,949   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:37:57,952   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:37:57,953   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:37:57,965   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:37:57,969   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:37:57,971   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:37:57,973   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:37:57,978   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:37:57,986   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:37:57,987   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:37:57,995   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:37:58,007   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:37:58,007   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:37:58,008   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:37:58,028   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:37:58,030   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:37:58,034   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:37:58,050   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:37:58,051   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:37:58,081   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:37:58,082   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:37:58,087   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:37:58,089   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:37:58,097   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:37:58,101   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:37:58,105   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:37:58,108   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:37:58,114   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:37:58,127   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:37:58,128   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:37:58,134   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:37:58,134   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:37:58,135   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:37:58,140   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:37:58,145   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:37:58,149   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:37:58,150   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:37:58,157   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:37:58,158   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:37:58,166   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:37:58,167   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:37:58,170   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:37:58,171   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:37:58,175   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:37:58,178   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:37:58,179   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:37:58,183   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:37:58,189   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:37:58,192   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:37:58,194   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:37:58,195   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:37:58,198   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:37:58,204   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:37:58,205   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:37:58,214   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:37:58,215   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:37:58,219   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:37:58,225   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:37:58,236   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:37:58,242   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:37:58,243   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:37:58,246   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:37:58,248   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:37:58,273   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:37:58,275   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:37:58,279   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:37:58,289   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:37:58,292   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:37:58,293   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:37:58,296   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:37:58,306   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:37:58,309   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:37:58,310   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:37:58,313   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:37:58,315   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:37:58,318   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:37:58,319   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:37:58,322   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:37:58,323   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:37:58,324   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:37:58,331   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:37:58,332   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:37:58,341   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 08:37:59,971   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:37:59,978   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:37:59,985   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:38:00,013   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:38:00,013   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:38:00,016   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 08:38:00,022   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 08:38:00,031   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 08:38:00,031   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 2
2014-02-27 08:38:00,031   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 08:38:00,042   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 08:38:00,075   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:38:00,135   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 08:38:00,169   FATAL [main] HOST: The PID of this process is 34718
2014-02-27 08:38:00,169   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 08:38:00,169   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 987072      0t0  TCP *:57528 (LISTEN)
2014-02-27 08:38:00,169   FATAL [main] HOST: java      34376 thorsten   34u  IPv6 986660      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 08:38:00,169   FATAL [main] HOST: java      34376 thorsten   40u  IPv6 986667      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 08:38:00,169   FATAL [main] HOST: java      34376 thorsten   54u  IPv6 986674      0t0  TCP *:8080 (LISTEN)
2014-02-27 08:38:00,169   FATAL [main] HOST: java      34376 thorsten   55u  IPv6 986741      0t0  TCP *:21212 (LISTEN)
2014-02-27 08:38:00,169   FATAL [main] HOST: java      34376 thorsten   56u  IPv6 986742      0t0  TCP *:21211 (LISTEN)
2014-02-27 08:38:00,175   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 08:38:00,175   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 08:38:00,506   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:43107
2014-02-27 08:38:00,506   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 08:38:00,515   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 08:38:00,530   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 08:38:00,542   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 08:38:00,542   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 08:38:00,543   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 03:38:28,345   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:38:28,357   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:38:28,358   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,358   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,361   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,361   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:38:28,362   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:38:28,362   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:38:28,362   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:38:28,363   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:38:28,364   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:38:28,364   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:38:28,365   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:38:28,366   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,366   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:38:28,367   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,368   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:38:28,369   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:38:28,369   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:38:28,369   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:38:28,369   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:38:28,369   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:38:28,370   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:38:28,371   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,372   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:38:28,372   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:38:28,373   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:38:28,373   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:38:28,373   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:38:28,374   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:38:28,374   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,374   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,375   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,375   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,375   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,376   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,376   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:38:28,377   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,377   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,377   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,378   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,378   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,379   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:38:28,380   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:38:28,380   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:38:28,381   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,381   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:38:28,395   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:38:28,446   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:38:28,459   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:38:28,463   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:38:28,468   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:38:28,476   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:38:28,484   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:38:28,489   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:38:28,495   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:38:28,498   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:38:28,501   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:38:28,503   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:38:28,507   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:38:28,510   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,514   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,520   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,524   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:38:28,527   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,530   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,533   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,543   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:38:28,546   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,554   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,567   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:38:28,570   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:38:28,575   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:38:28,579   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:38:28,581   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:38:28,584   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:38:28,588   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:38:28,590   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:38:28,593   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:38:28,596   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:38:28,598   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:38:28,600   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:38:28,604   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:38:28,607   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:38:28,609   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:38:28,615   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:38:28,618   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:38:28,623   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:38:28,625   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:38:28,631   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:38:28,634   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:38:28,635   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:38:28,637   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:38:28,641   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:38:28,644   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:38:28,645   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:38:28,649   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:38:28,652   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:38:28,654   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:38:28,657   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:38:28,661   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:38:28,667   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:38:28,668   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,672   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,676   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,679   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:38:28,680   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,692   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,695   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,698   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:38:28,699   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,702   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,706   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:38:28,710   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:38:28,712   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:38:28,715   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:38:28,717   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:38:28,723   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:38:28,727   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:38:28,731   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:38:28,737   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:38:28,739   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:38:28,741   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:38:28,744   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:38:28,745   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:38:28,747   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:38:28,749   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:38:28,753   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:38:28,754   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:38:28,759   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:38:28,761   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:38:28,763   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:38:28,769   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:38:28,772   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:38:28,774   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:38:28,776   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:38:28,777   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:38:28,786   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:38:28,788   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:38:28,791   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:38:28,792   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:38:28,794   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:38:28,796   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:38:28,798   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:38:28,800   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:38:28,803   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:38:28,804   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:38:28,830   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:38:28,837   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:38:28,840   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:38:28,842   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:38:28,843   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:38:28,852   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:38:28,857   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:38:28,860   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:38:28,875   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:38:28,877   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:38:28,884   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:38:28,903   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:38:28,904   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:38:28,905   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:38:28,913   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:38:28,914   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:38:28,918   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:38:28,922   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:38:28,927   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:38:28,929   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:38:28,931   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:38:28,935   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:38:28,942   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:38:28,944   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:38:28,945   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:38:28,949   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:38:28,953   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:38:28,956   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:38:28,958   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:38:28,962   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:38:28,967   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:38:28,968   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:38:28,973   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:38:28,977   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:38:28,977   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:38:28,978   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:38:28,982   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:38:28,983   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:38:28,987   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:38:28,989   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:38:28,991   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:38:29,012   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:38:29,013   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:38:29,017   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:38:29,019   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:38:29,021   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:38:29,025   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:38:29,028   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:38:29,030   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:38:29,033   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:38:29,036   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:38:29,037   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:38:29,040   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:38:29,040   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:38:29,041   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:38:29,045   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:38:29,050   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:38:29,052   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:38:29,054   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:38:29,057   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:38:29,058   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:38:29,061   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:38:29,062   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:38:29,064   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:38:29,065   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:38:29,068   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:38:29,071   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:38:29,072   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:38:29,075   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:38:29,080   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:38:29,083   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:38:29,085   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:38:29,087   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:38:29,092   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:38:29,095   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:38:29,096   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:38:29,099   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:38:29,100   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:38:29,109   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:38:29,112   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:38:29,128   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:38:29,130   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:38:29,131   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:38:29,135   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:38:29,136   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:38:29,151   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:38:29,153   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:38:29,168   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:38:29,170   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:38:29,172   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:38:29,174   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:38:29,176   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:38:29,185   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:38:29,188   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:38:29,189   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:38:29,192   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:38:29,193   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:38:29,196   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:38:29,197   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:38:29,200   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:38:29,200   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:38:29,202   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:38:29,217   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:38:29,219   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:38:29,233   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 08:38:31,017   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:38:31,026   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:38:31,035   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:38:31,063   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:38:31,063   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:38:31,065   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 08:38:31,104   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:38:31,119   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 08:38:31,175   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@2a03803
2014-02-27 08:38:31,180   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 08:38:31,184   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 08:38:31,184   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:50808
2014-02-27 08:38:31,188   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:50808
2014-02-27 08:38:31,203   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169fec7a0a000000, negotiated timeout = 6000
2014-02-27 08:38:31,205   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169fec7a0a000000 with negotiated timeout 6000 for client /127.0.0.1:50808
2014-02-27 08:38:31,241   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 08:38:31,265   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 08:38:31,265   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 08:38:31,280   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 08:38:31,563   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 08:38:33,171   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 08:38:33,175   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 08:38:33,289   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 08:38:33,296   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 08:38:33,625   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 08:38:33,768   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 08:38:33,786   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 08:38:33,801   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 08:38:33,807   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 08:38:33,821   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 22 ms.
2014-02-27 08:38:33,829   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 08:38:33,829   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 7 ms.
2014-02-27 08:38:33,831   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 08:38:33,834   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:38:33,840   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:38:33,842   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 08:38:33,842   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 3 ms.
2014-02-27 08:38:33,856   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:38:33,860   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 08:38:33,862   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 8 ms.
2014-02-27 08:38:33,877   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:38:33,905   INFO  [main] HOST: Database start action is Create.
2014-02-27 08:38:33,934   INFO  [main] HOST: PID of this Volt process is 34786
2014-02-27 08:38:33,934   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 08:38:33,934   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 08:38:33,934   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 08:38:33,934   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 08:38:33,934   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 08:38:33,934   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 08:38:33,934   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 08:38:33,934   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 08:38:33,935   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 08:38:33,935   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 08:38:33,935   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 08:38:33,935   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 08:38:33,935   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 08:38:33,935   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 08:38:33,935   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 08:38:33,935   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 08:38:33,935   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 08:38:33,935   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 08:38:33,935   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 08:38:33,935   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 08:38:33,935   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 08:38:33,936   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 08:38:33,936   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 08:38:33,937   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 08:38:33,937   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 08:38:33,955   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 08:38:33,957   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 08:38:33,957   INFO  [Thread-9] HOST: Logging config info
2014-02-27 08:38:33,992   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 03:41:12,748   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:41:12,755   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:41:12,755   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,756   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,760   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,760   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:41:12,761   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:41:12,761   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:41:12,761   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:41:12,762   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:41:12,764   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:41:12,764   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:41:12,765   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:41:12,766   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,766   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:41:12,767   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,768   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:41:12,769   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:41:12,770   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:41:12,770   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:41:12,770   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:41:12,770   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:41:12,771   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:41:12,772   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,773   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:41:12,773   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:41:12,773   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:41:12,775   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:41:12,775   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:41:12,775   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:41:12,776   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,776   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,776   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,777   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,777   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,778   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,778   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:41:12,779   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,779   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,779   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,780   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,780   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,792   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:41:12,798   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:41:12,798   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:41:12,799   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,799   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:41:12,828   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:41:12,905   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:41:12,937   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:41:12,943   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:41:12,955   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:41:12,963   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:41:12,972   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:41:12,977   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:41:12,986   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:41:12,990   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:41:13,000   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:41:13,003   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:41:13,013   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:41:13,015   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,020   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,024   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,028   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:41:13,030   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,033   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,036   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,046   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:41:13,048   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,051   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,053   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,056   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:41:13,059   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:41:13,062   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:41:13,065   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:41:13,067   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:41:13,069   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:41:13,072   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:41:13,074   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:41:13,076   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:41:13,079   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:41:13,081   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:41:13,083   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:41:13,084   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:41:13,086   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:41:13,088   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:41:13,091   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:41:13,093   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:41:13,097   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:41:13,099   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:41:13,101   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:41:13,104   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:41:13,105   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:41:13,107   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:41:13,109   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:41:13,111   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:41:13,112   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:41:13,114   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:41:13,117   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:41:13,119   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:41:13,121   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:41:13,123   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:41:13,126   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:41:13,128   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,131   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,133   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,136   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:41:13,138   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,141   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,148   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,152   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:41:13,153   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,158   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,160   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:41:13,163   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:41:13,165   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:41:13,167   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:41:13,169   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:41:13,173   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:41:13,177   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:41:13,179   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:41:13,183   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:41:13,187   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:41:13,188   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:41:13,191   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:41:13,192   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:41:13,197   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:41:13,198   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:41:13,201   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:41:13,202   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:41:13,205   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:41:13,206   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:41:13,215   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:41:13,216   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:41:13,219   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:41:13,220   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:41:13,222   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:41:13,223   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:41:13,227   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:41:13,230   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:41:13,232   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:41:13,239   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:41:13,242   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:41:13,244   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:41:13,246   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:41:13,247   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:41:13,249   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:41:13,250   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:41:13,273   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:41:13,282   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:41:13,285   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:41:13,287   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:41:13,296   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:41:13,299   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:41:13,300   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:41:13,311   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:41:13,322   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:41:13,323   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:41:13,328   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:41:13,337   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:41:13,337   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:41:13,338   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:41:13,340   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:41:13,341   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:41:13,344   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:41:13,349   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:41:13,352   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:41:13,354   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:41:13,355   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:41:13,358   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:41:13,365   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:41:13,367   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:41:13,368   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:41:13,371   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:41:13,374   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:41:13,377   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:41:13,378   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:41:13,382   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:41:13,386   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:41:13,387   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:41:13,394   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:41:13,406   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:41:13,406   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:41:13,407   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:41:13,410   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:41:13,411   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:41:13,415   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:41:13,418   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:41:13,419   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:41:13,436   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:41:13,438   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:41:13,442   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:41:13,443   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:41:13,446   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:41:13,447   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:41:13,449   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:41:13,458   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:41:13,461   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:41:13,473   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:41:13,474   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:41:13,477   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:41:13,477   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:41:13,479   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:41:13,482   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:41:13,485   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:41:13,489   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:41:13,490   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:41:13,492   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:41:13,493   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:41:13,495   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:41:13,497   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:41:13,500   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:41:13,501   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:41:13,503   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:41:13,505   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:41:13,505   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:41:13,507   ERROR [main] COMPILER: [BLE_UpdateCheckState.class]: PartitionInfo parameter must be a String or Number for procedure: BLE_UpdateCheckState
2014-02-27 03:41:13,508   ERROR [main] COMPILER: Failed to compile XML
2014-02-27 03:41:13,508   ERROR [main] COMPILER: Catalog compilation failed.
2014-02-27 08:41:14,526   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:41:14,538   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:41:14,544   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:41:14,568   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:41:14,569   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:41:14,570   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 08:41:14,576   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 08:41:14,584   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 08:41:14,584   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 08:41:14,584   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 08:41:14,601   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 08:41:14,621   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:41:14,656   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 08:41:14,694   FATAL [main] HOST: The PID of this process is 35111
2014-02-27 08:41:14,694   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 08:41:14,694   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 989152      0t0  TCP *:53265 (LISTEN)
2014-02-27 08:41:14,694   FATAL [main] HOST: java      34786 thorsten   34u  IPv6 988745      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 08:41:14,694   FATAL [main] HOST: java      34786 thorsten   40u  IPv6 988752      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 08:41:14,694   FATAL [main] HOST: java      34786 thorsten   54u  IPv6 988759      0t0  TCP *:8080 (LISTEN)
2014-02-27 08:41:14,694   FATAL [main] HOST: java      34786 thorsten   55u  IPv6 988826      0t0  TCP *:21212 (LISTEN)
2014-02-27 08:41:14,694   FATAL [main] HOST: java      34786 thorsten   56u  IPv6 988827      0t0  TCP *:21211 (LISTEN)
2014-02-27 08:41:14,700   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 08:41:14,700   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 08:41:15,033   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 08:41:15,036   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:43192
2014-02-27 08:41:15,043   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-02-27 08:41:15,044   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 08:41:15,062   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 08:41:15,073   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 08:41:15,073   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 08:41:15,075   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 03:45:27,203   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:45:27,209   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:45:27,210   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,210   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,213   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,213   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:45:27,214   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:45:27,214   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:45:27,214   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:45:27,215   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:45:27,216   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:45:27,216   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:45:27,217   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:45:27,218   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,218   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:45:27,219   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,220   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:45:27,221   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:45:27,221   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:45:27,221   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:45:27,221   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:45:27,222   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:45:27,223   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:45:27,224   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,225   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:45:27,225   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:45:27,225   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:45:27,226   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:45:27,226   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:45:27,226   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:45:27,227   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,227   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,227   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,228   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,228   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,228   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,229   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:45:27,230   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,230   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,230   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,231   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,231   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,232   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:45:27,233   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:45:27,233   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:45:27,233   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,233   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:45:27,247   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:45:27,312   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:45:27,326   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:45:27,329   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:45:27,334   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:45:27,339   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:27,348   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:27,352   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:27,361   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:45:27,363   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:45:27,366   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:45:27,368   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:45:27,370   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:45:27,372   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,376   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,381   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,385   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:45:27,387   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,391   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,393   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,402   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:45:27,404   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,407   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,411   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,415   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:45:27,418   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:45:27,421   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:45:27,426   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:45:27,429   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:45:27,431   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:45:27,435   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:45:27,436   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:45:27,439   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:45:27,442   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:45:27,443   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:45:27,445   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:45:27,447   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:45:27,449   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:45:27,451   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:27,456   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:27,458   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:27,462   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:45:27,464   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:45:27,470   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:45:27,472   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:45:27,474   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:45:27,477   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:45:27,479   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:45:27,481   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:45:27,482   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:27,485   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:27,487   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:27,490   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:45:27,491   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:45:27,494   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:45:27,497   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:45:27,499   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,502   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,504   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,507   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:45:27,509   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,512   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,513   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,516   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:45:27,517   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,520   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,524   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:27,526   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:45:27,528   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:45:27,531   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:45:27,533   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:45:27,536   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:45:27,538   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:45:27,540   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:45:27,543   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:45:27,545   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:45:27,546   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:45:27,549   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:45:27,550   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:45:27,552   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:45:27,553   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:45:27,555   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:45:27,556   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:45:27,560   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:45:27,562   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:45:27,569   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:45:27,570   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:45:27,572   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:45:27,574   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:45:27,576   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:45:27,577   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:45:27,578   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:45:27,580   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:45:27,582   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:45:27,583   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:45:27,585   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:45:27,587   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:45:27,589   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:45:27,590   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:45:27,592   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:45:27,595   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:45:27,621   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:45:27,627   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:45:27,630   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:45:27,632   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:27,641   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:45:27,644   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:27,645   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:45:27,648   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:45:27,655   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:45:27,656   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:45:27,663   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:45:27,671   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:45:27,671   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:45:27,672   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:45:27,674   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:27,675   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:45:27,679   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:45:27,683   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:45:27,686   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:45:27,689   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:27,690   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:45:27,692   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:45:27,700   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:45:27,702   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:27,703   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:45:27,707   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:45:27,711   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:45:27,713   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:45:27,714   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:45:27,717   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:45:27,719   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:27,720   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:45:27,724   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:45:27,728   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:45:27,728   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:27,729   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:45:27,732   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:45:27,733   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:45:27,738   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:45:27,740   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:45:27,741   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:45:27,787   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:45:27,788   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:45:27,809   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:27,816   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:45:27,818   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:45:27,819   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:45:27,828   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:45:27,832   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:45:27,841   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:45:27,852   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:27,853   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:45:27,859   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:45:27,859   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:45:27,860   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:45:27,869   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:45:27,872   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:45:27,874   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:27,875   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:45:27,877   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:45:27,877   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:45:27,890   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:27,892   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:45:27,894   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:27,895   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:45:27,897   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:45:27,899   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:27,900   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:45:27,902   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:45:27,907   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:45:27,911   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:45:27,913   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:27,914   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:45:27,917   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:45:27,919   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:27,920   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:45:27,925   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:27,926   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:45:27,929   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:45:27,932   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:45:27,944   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:45:27,955   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:45:27,956   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:45:27,960   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:45:27,961   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:45:27,975   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:45:27,978   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:45:27,993   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:45:27,995   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:45:27,997   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:45:27,999   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:45:28,000   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:45:28,003   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:45:28,005   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:45:28,006   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:45:28,008   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:28,008   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:45:28,010   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:45:28,011   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:45:28,013   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:45:28,013   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:28,014   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:45:28,017   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:28,018   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:45:28,022   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 08:45:29,804   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:45:29,813   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:45:29,820   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:45:29,844   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:45:29,844   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:45:29,846   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 08:45:29,850   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 08:45:29,858   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 08:45:29,858   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 08:45:29,859   INFO  [main] NETWORK: 2 notified of host 0
2014-02-27 08:45:29,874   INFO  [ZooKeeperServer] REJOIN: Joining site 2:-1 known  active sites 0:-1, 2:-1
2014-02-27 08:45:29,896   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:45:29,928   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 08:45:29,960   FATAL [main] HOST: The PID of this process is 35619
2014-02-27 08:45:29,961   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 08:45:29,961   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 990137      0t0  TCP *:41550 (LISTEN)
2014-02-27 08:45:29,961   FATAL [main] HOST: java      34786 thorsten   34u  IPv6 988745      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 08:45:29,961   FATAL [main] HOST: java      34786 thorsten   40u  IPv6 988752      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 08:45:29,961   FATAL [main] HOST: java      34786 thorsten   54u  IPv6 988759      0t0  TCP *:8080 (LISTEN)
2014-02-27 08:45:29,961   FATAL [main] HOST: java      34786 thorsten   55u  IPv6 988826      0t0  TCP *:21212 (LISTEN)
2014-02-27 08:45:29,961   FATAL [main] HOST: java      34786 thorsten   56u  IPv6 988827      0t0  TCP *:21211 (LISTEN)
2014-02-27 08:45:29,967   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 08:45:29,967   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 08:45:30,301   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:43347
2014-02-27 08:45:30,301   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 2:-1, reporting: 0:-1, witnessed: true}
2014-02-27 08:45:30,302   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [2:-1]
2014-02-27 08:45:30,302   WARN  [Volt Network - 0] NETWORK: Host 2 failed
2014-02-27 08:45:30,308   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 2:-1 to failed sites history
2014-02-27 08:45:30,308   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 2:-1 initiatorSafeInitPoints {2:-1->-1}
2014-02-27 08:45:30,309   WARN  [ZooKeeperServer] NETWORK: Host 2 failed
2014-02-27 03:45:38,794   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:45:38,800   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:45:38,801   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,801   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,803   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,804   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:45:38,804   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:45:38,805   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:45:38,805   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:45:38,806   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:45:38,807   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:45:38,807   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:45:38,808   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:45:38,809   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,809   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:45:38,810   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,811   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:45:38,812   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:45:38,813   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:45:38,813   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:45:38,813   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:45:38,813   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:45:38,814   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:45:38,815   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,816   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:45:38,816   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:45:38,816   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:45:38,817   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:45:38,817   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:45:38,817   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:45:38,818   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,818   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,818   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,819   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,819   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,819   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,825   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:45:38,825   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,825   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,825   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,826   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,826   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,827   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:45:38,828   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:45:38,828   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:45:38,830   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,830   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:45:38,844   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:45:38,901   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:45:38,919   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:45:38,928   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:45:38,932   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:45:38,940   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:38,947   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:38,951   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:38,958   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:45:38,960   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:45:38,968   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:45:38,973   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:45:38,976   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:45:38,977   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:38,982   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:38,986   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:38,989   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:45:38,991   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:38,994   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:38,997   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:39,005   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:45:39,006   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:39,009   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:39,012   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:39,015   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:45:39,018   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:45:39,021   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:45:39,024   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:45:39,026   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:45:39,029   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:45:39,032   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:45:39,034   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:45:39,036   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:45:39,039   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:45:39,040   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:45:39,042   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:45:39,044   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:45:39,047   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:45:39,048   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:39,051   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:39,054   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:39,057   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:45:39,059   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:45:39,062   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:45:39,065   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:45:39,066   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:45:39,068   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:45:39,069   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:45:39,071   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:45:39,073   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:39,075   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:39,078   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:45:39,081   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:45:39,082   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:45:39,084   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:45:39,087   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:45:39,089   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:39,092   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:39,094   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:39,097   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:45:39,099   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:39,101   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:39,103   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:39,106   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:45:39,107   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:39,110   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:39,112   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:45:39,115   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:45:39,116   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:45:39,119   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:45:39,121   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:45:39,124   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:45:39,126   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:45:39,129   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:45:39,132   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:45:39,133   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:45:39,135   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:45:39,137   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:45:39,139   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:45:39,140   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:45:39,142   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:45:39,144   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:45:39,146   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:45:39,148   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:45:39,150   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:45:39,156   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:45:39,157   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:45:39,159   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:45:39,161   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:45:39,163   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:45:39,164   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:45:39,166   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:45:39,167   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:45:39,169   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:45:39,170   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:45:39,172   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:45:39,174   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:45:39,176   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:45:39,177   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:45:39,183   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:45:39,184   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:45:39,207   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:45:39,219   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:45:39,222   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:45:39,224   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:39,226   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:45:39,229   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:39,230   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:45:39,233   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:45:39,239   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:45:39,241   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:45:39,246   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:45:39,254   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:45:39,254   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:45:39,255   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:45:39,257   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:39,258   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:45:39,262   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:45:39,266   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:45:39,269   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:45:39,271   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:39,272   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:45:39,275   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:45:39,281   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:45:39,283   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:39,284   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:45:39,288   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:45:39,292   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:45:39,299   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:45:39,300   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:45:39,303   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:45:39,306   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:39,307   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:45:39,312   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:45:39,316   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:45:39,316   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:39,317   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:45:39,320   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:45:39,321   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:45:39,324   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:45:39,327   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:45:39,328   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:45:39,345   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:45:39,346   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:45:39,350   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:39,351   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:45:39,353   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:45:39,355   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:45:39,357   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:45:39,360   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:45:39,363   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:45:39,365   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:39,366   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:45:39,370   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:45:39,370   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:45:39,371   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:45:39,374   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:45:39,382   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:45:39,384   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:39,385   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:45:39,387   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:45:39,388   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:45:39,390   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:39,391   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:45:39,393   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:39,394   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:45:39,396   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:45:39,399   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:39,400   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:45:39,402   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:45:39,407   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:45:39,423   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:45:39,425   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:39,425   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:45:39,429   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:45:39,432   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:39,433   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:45:39,435   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:39,436   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:45:39,439   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:45:39,442   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:45:39,445   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:45:39,448   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:45:39,449   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:45:39,452   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:45:39,453   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:45:39,467   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:45:39,468   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:45:39,487   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:45:39,489   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:45:39,496   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:45:39,498   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:45:39,499   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:45:39,503   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:45:39,505   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:45:39,506   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:45:39,507   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:39,508   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:45:39,511   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:45:39,512   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:45:39,522   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:45:39,522   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:45:39,523   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:45:39,526   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:45:39,527   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:45:39,538   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 08:45:40,848   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:45:40,854   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:45:40,861   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:45:40,884   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:45:40,884   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:45:40,886   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 08:45:40,919   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:45:40,932   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 08:45:40,976   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-02-27 08:45:40,981   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 08:45:40,983   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:51040
2014-02-27 08:45:40,983   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 08:45:40,985   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:51040
2014-02-27 08:45:40,996   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169fefc17c800000 with negotiated timeout 6000 for client /127.0.0.1:51040
2014-02-27 08:45:40,996   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169fefc17c800000, negotiated timeout = 6000
2014-02-27 08:45:41,042   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 08:45:41,068   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 08:45:41,068   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 08:45:41,087   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 08:45:41,304   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 08:45:42,781   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 08:45:42,785   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 08:45:42,835   WARN  [qtp1062391334-31] HOST: JSON interface: Connection refused
2014-02-27 08:45:42,901   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 08:45:42,905   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 08:45:43,244   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 08:45:43,382   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 08:45:43,401   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 08:45:43,411   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 08:45:43,415   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 08:45:43,421   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 08:45:43,423   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 08:45:43,433   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 08:45:43,436   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 4 ms.
2014-02-27 08:45:43,436   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 15 ms.
2014-02-27 08:45:43,437   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 26 ms.
2014-02-27 08:45:43,449   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:45:43,449   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:45:43,449   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:45:43,456   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 08:45:43,458   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 11 ms.
2014-02-27 08:45:43,471   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:45:43,510   INFO  [main] HOST: Database start action is Create.
2014-02-27 08:45:43,536   INFO  [main] HOST: PID of this Volt process is 35687
2014-02-27 08:45:43,536   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 08:45:43,536   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 08:45:43,536   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 08:45:43,536   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 08:45:43,536   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 08:45:43,536   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 08:45:43,536   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 08:45:43,536   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 08:45:43,537   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 08:45:43,537   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 08:45:43,537   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 08:45:43,537   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 08:45:43,537   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 08:45:43,537   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 08:45:43,537   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 08:45:43,537   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 08:45:43,537   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 08:45:43,537   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 08:45:43,537   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 08:45:43,537   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 08:45:43,537   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 08:45:43,538   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 08:45:43,539   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 08:45:43,539   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 08:45:43,539   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 08:45:43,554   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 08:45:43,555   INFO  [Thread-10] HOST: Logging config info
2014-02-27 08:45:43,556   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 08:45:43,593   INFO  [Thread-11] CONSOLE: Server completed initialization.
2014-02-27 03:48:47,679   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:48:47,685   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:48:47,685   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,687   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,690   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,690   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:48:47,690   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:48:47,691   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:48:47,691   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:48:47,706   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:48:47,706   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:48:47,706   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:48:47,707   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:48:47,708   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,708   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:48:47,709   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,710   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:48:47,716   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:48:47,716   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:48:47,716   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:48:47,717   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:48:47,717   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:48:47,718   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:48:47,718   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,719   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:48:47,719   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:48:47,719   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:48:47,720   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:48:47,720   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:48:47,720   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:48:47,720   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,720   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,720   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,721   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,721   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,721   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,721   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:48:47,722   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,722   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,722   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,722   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,722   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,723   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:48:47,723   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:48:47,723   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:48:47,724   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,724   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:48:47,736   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:48:47,786   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:48:47,802   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:48:47,806   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:48:47,811   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:48:47,817   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:48:47,831   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:48:47,834   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:48:47,840   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:48:47,842   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:48:47,845   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:48:47,847   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:48:47,852   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:48:47,854   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:47,859   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:47,862   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:47,867   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:48:47,869   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:47,874   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:47,876   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:47,880   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:48:47,882   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:47,891   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:47,895   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:47,898   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:48:47,901   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:48:47,904   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:48:47,909   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:48:47,911   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:48:47,913   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:48:47,917   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:48:47,918   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:48:47,921   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:48:47,924   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:48:47,926   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:48:47,928   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:48:47,930   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:48:47,933   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:48:47,934   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:48:47,940   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:48:47,942   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:48:47,945   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:48:47,948   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:48:47,952   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:48:47,955   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:48:47,956   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:48:47,958   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:48:47,959   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:48:47,961   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:48:47,963   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:48:47,965   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:48:47,968   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:48:47,970   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:48:47,971   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:48:47,975   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:48:47,978   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:48:47,980   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:47,983   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:47,985   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:47,988   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:48:47,990   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:47,993   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:47,997   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:48,000   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:48:48,002   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:48,006   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:48,008   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:48:48,011   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:48:48,012   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:48:48,015   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:48:48,017   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:48:48,020   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:48:48,024   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:48:48,026   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:48:48,031   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:48:48,033   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:48:48,035   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:48:48,037   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:48:48,038   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:48:48,040   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:48:48,042   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:48:48,045   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:48:48,046   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:48:48,049   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:48:48,050   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:48:48,053   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:48:48,054   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:48:48,061   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:48:48,063   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:48:48,065   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:48:48,066   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:48:48,068   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:48:48,079   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:48:48,081   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:48:48,082   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:48:48,084   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:48:48,086   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:48:48,088   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:48:48,089   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:48:48,091   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:48:48,092   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:48:48,115   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:48:48,124   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:48:48,128   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:48:48,130   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:48:48,138   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:48:48,145   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:48:48,146   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:48:48,155   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:48:48,166   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:48:48,170   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:48:48,177   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:48:48,186   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:48:48,186   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:48:48,187   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:48:48,189   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:48:48,190   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:48:48,195   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:48:48,201   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:48:48,204   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:48:48,212   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:48:48,213   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:48:48,221   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:48:48,228   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:48:48,230   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:48:48,231   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:48:48,234   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:48:48,238   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:48:48,240   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:48:48,241   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:48:48,245   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:48:48,247   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:48:48,248   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:48:48,253   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:48:48,257   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:48:48,257   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:48:48,258   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:48:48,260   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:48:48,261   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:48:48,265   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:48:48,268   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:48:48,269   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:48:48,286   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:48:48,287   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:48:48,291   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:48:48,292   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:48:48,296   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:48:48,298   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:48:48,300   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:48:48,303   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:48:48,306   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:48:48,309   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:48:48,310   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:48:48,317   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:48:48,317   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:48:48,319   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:48:48,328   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:48:48,331   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:48:48,333   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:48:48,335   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:48:48,337   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:48:48,338   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:48:48,340   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:48:48,341   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:48:48,343   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:48:48,345   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:48:48,347   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:48:48,349   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:48:48,350   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:48:48,352   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:48:48,355   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:48:48,358   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:48:48,360   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:48:48,361   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:48:48,364   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:48:48,367   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:48:48,368   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:48:48,370   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:48:48,371   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:48:48,374   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:48:48,377   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:48:48,380   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:48:48,382   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:48:48,383   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:48:48,386   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:48:48,387   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:48:48,402   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:48:48,412   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:48:48,414   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:48:48,519   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:48:48,521   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:48:48,523   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:48:48,525   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:48:48,527   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:48:48,529   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:48:48,530   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:48:48,532   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:48:48,533   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:48:48,535   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:48:48,536   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:48:48,538   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:48:48,538   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:48:48,539   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:48:48,542   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:48:48,543   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:48:48,547   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 08:48:50,038   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:48:50,044   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:48:50,051   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:48:50,075   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:48:50,075   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:48:50,077   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 08:48:50,082   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 08:48:50,089   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 08:48:50,089   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 08:48:50,090   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 08:48:50,101   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 08:48:50,127   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:48:50,157   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 08:48:50,195   FATAL [main] HOST: The PID of this process is 36090
2014-02-27 08:48:50,195   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 08:48:50,195   FATAL [main] HOST: java      14305 thorsten  159u  IPv6 991388      0t0  TCP *:45293 (LISTEN)
2014-02-27 08:48:50,195   FATAL [main] HOST: java      35687 thorsten   34u  IPv6 990886      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 08:48:50,195   FATAL [main] HOST: java      35687 thorsten   40u  IPv6 990893      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 08:48:50,195   FATAL [main] HOST: java      35687 thorsten   54u  IPv6 990900      0t0  TCP *:8080 (LISTEN)
2014-02-27 08:48:50,195   FATAL [main] HOST: java      35687 thorsten   56u  IPv6 990972      0t0  TCP *:21212 (LISTEN)
2014-02-27 08:48:50,195   FATAL [main] HOST: java      35687 thorsten   57u  IPv6 990973      0t0  TCP *:21211 (LISTEN)
2014-02-27 08:48:50,201   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 08:48:50,201   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 08:48:50,536   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 08:48:50,538   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:43462
2014-02-27 08:48:50,538   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 08:48:50,545   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 08:48:50,570   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 08:48:50,580   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 08:48:50,580   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 08:48:50,581   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 03:49:24,598   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:49:24,605   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:49:24,606   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,607   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,609   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,610   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:49:24,610   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:49:24,611   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:49:24,611   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:49:24,611   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:49:24,613   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:49:24,613   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:49:24,614   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:49:24,615   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,615   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:49:24,616   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,617   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:49:24,618   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:49:24,618   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:49:24,618   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:49:24,618   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:49:24,618   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:49:24,619   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:49:24,621   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,622   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:49:24,622   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:49:24,622   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:49:24,623   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:49:24,623   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:49:24,623   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:49:24,624   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,624   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,624   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,625   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,625   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,625   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,626   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:49:24,626   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,626   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,627   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,627   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,627   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,629   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:49:24,630   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:49:24,630   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:49:24,631   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,631   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:49:24,645   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:49:24,691   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:49:24,703   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:49:24,706   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:49:24,712   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:49:24,716   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:49:24,723   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:49:24,727   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:49:24,734   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:49:24,735   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:49:24,738   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:49:24,740   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:49:24,743   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:49:24,744   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,749   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,752   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,756   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:49:24,758   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,761   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,764   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,773   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:49:24,774   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,777   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,780   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,782   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:49:24,785   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:49:24,788   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:49:24,791   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:49:24,793   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:49:24,796   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:49:24,799   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:49:24,801   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:49:24,803   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:49:24,806   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:49:24,807   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:49:24,809   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:49:24,811   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:49:24,813   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:49:24,814   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:49:24,818   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:49:24,820   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:49:24,823   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:49:24,825   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:49:24,827   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:49:24,830   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:49:24,831   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:49:24,834   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:49:24,835   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:49:24,837   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:49:24,838   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:49:24,841   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:49:24,843   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:49:24,845   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:49:24,847   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:49:24,849   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:49:24,852   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:49:24,853   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,856   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,858   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,861   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:49:24,863   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,865   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,867   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,870   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:49:24,871   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,874   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,876   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:49:24,878   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:49:24,880   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:49:24,883   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:49:24,885   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:49:24,888   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:49:24,890   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:49:24,892   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:49:24,895   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:49:24,897   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:49:24,898   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:49:24,900   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:49:24,902   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:49:24,904   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:49:24,905   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:49:24,907   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:49:24,908   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:49:24,911   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:49:24,913   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:49:24,922   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:49:24,923   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:49:24,925   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:49:24,927   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:49:24,930   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:49:24,931   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:49:24,933   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:49:24,938   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:49:24,940   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:49:24,941   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:49:24,943   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:49:24,945   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:49:24,947   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:49:24,948   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:49:24,950   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:49:24,951   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:49:24,974   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:49:24,979   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:49:24,982   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:49:24,984   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:49:24,985   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:49:24,987   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:49:24,988   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:49:24,991   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:49:24,999   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:49:25,000   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:49:25,005   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:49:25,014   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:49:25,014   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:49:25,015   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:49:25,022   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:49:25,023   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:49:25,031   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:49:25,040   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:49:25,043   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:49:25,051   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:49:25,052   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:49:25,060   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:49:25,066   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:49:25,070   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:49:25,071   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:49:25,074   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:49:25,083   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:49:25,091   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:49:25,092   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:49:25,095   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:49:25,097   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:49:25,098   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:49:25,102   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:49:25,105   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:49:25,105   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:49:25,106   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:49:25,108   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:49:25,109   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:49:25,112   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:49:25,114   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:49:25,115   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:49:25,131   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:49:25,132   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:49:25,136   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:49:25,138   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:49:25,140   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:49:25,141   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:49:25,143   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:49:25,145   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:49:25,148   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:49:25,151   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:49:25,152   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:49:25,155   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:49:25,155   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:49:25,156   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:49:25,159   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:49:25,162   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:49:25,163   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:49:25,164   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:49:25,166   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:49:25,167   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:49:25,169   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:49:25,170   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:49:25,172   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:49:25,173   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:49:25,175   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:49:25,177   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:49:25,178   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:49:25,180   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:49:25,183   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:49:25,186   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:49:25,188   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:49:25,189   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:49:25,194   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:49:25,196   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:49:25,197   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:49:25,199   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:49:25,200   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:49:25,203   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:49:25,206   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:49:25,216   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:49:25,218   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:49:25,219   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:49:25,222   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:49:25,223   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:49:25,262   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:49:25,263   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:49:25,270   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:49:25,272   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:49:25,274   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:49:25,275   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:49:25,277   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:49:25,284   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:49:25,286   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:49:25,287   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:49:25,289   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:49:25,290   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:49:25,292   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:49:25,293   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:49:25,295   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:49:25,295   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:49:25,296   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:49:25,303   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:49:25,304   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:49:25,310   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 08:49:26,752   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:49:26,760   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:49:26,768   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:49:26,798   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:49:26,799   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:49:26,801   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 08:49:26,835   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:49:26,852   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 08:49:26,894   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@1b6ebaa7
2014-02-27 08:49:26,899   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 08:49:26,901   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:51166
2014-02-27 08:49:26,902   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 08:49:26,904   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:51166
2014-02-27 08:49:26,920   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169ff17abc000000 with negotiated timeout 6000 for client /127.0.0.1:51166
2014-02-27 08:49:26,921   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169ff17abc000000, negotiated timeout = 6000
2014-02-27 08:49:26,961   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 08:49:26,994   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 08:49:26,994   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 08:49:27,008   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 08:49:27,229   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 08:49:28,777   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 08:49:28,781   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 08:49:28,890   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 08:49:28,893   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 08:49:29,185   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 08:49:29,318   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 08:49:29,337   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 08:49:29,347   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 08:49:29,359   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 08:49:29,360   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 08:49:29,361   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 08:49:29,371   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 08:49:29,374   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 5 ms.
2014-02-27 08:49:29,374   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 15 ms.
2014-02-27 08:49:29,374   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 27 ms.
2014-02-27 08:49:29,379   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:49:29,379   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:49:29,383   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:49:29,392   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 08:49:29,394   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 9 ms.
2014-02-27 08:49:29,402   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:49:29,421   INFO  [main] HOST: Database start action is Create.
2014-02-27 08:49:29,448   INFO  [main] HOST: PID of this Volt process is 36167
2014-02-27 08:49:29,449   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 08:49:29,449   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 08:49:29,449   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 08:49:29,449   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 08:49:29,449   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 08:49:29,449   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 08:49:29,449   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 08:49:29,449   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 08:49:29,449   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 08:49:29,450   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 08:49:29,450   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 08:49:29,450   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 08:49:29,450   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 08:49:29,450   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 08:49:29,450   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 08:49:29,450   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 08:49:29,450   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 08:49:29,450   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 08:49:29,450   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 08:49:29,450   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 08:49:29,450   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 08:49:29,451   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 08:49:29,452   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 08:49:29,452   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 08:49:29,452   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 08:49:29,467   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 08:49:29,468   INFO  [Thread-9] HOST: Logging config info
2014-02-27 08:49:29,468   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 08:49:29,492   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 03:56:11,098   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:56:11,112   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:56:11,112   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,113   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,115   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,116   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:56:11,116   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:56:11,117   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:56:11,117   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:56:11,118   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:56:11,119   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:56:11,119   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:56:11,120   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:56:11,121   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,121   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:56:11,122   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,122   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:56:11,124   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:56:11,124   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:56:11,124   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:56:11,124   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:56:11,124   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:56:11,125   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:56:11,127   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,128   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:56:11,128   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:56:11,129   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:56:11,130   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:56:11,130   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:56:11,130   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:56:11,131   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,131   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,131   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,132   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,132   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,132   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,133   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:56:11,135   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,135   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,135   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,135   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,136   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,136   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:56:11,137   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:56:11,137   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:56:11,138   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,138   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:56:11,153   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:56:11,204   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:56:11,216   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:56:11,220   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:56:11,225   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:56:11,230   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:11,238   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:11,242   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:11,248   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:56:11,250   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:56:11,252   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:56:11,254   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:56:11,257   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:56:11,259   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,263   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,267   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,271   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:56:11,273   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,276   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,278   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,287   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:56:11,288   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,291   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,294   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,298   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:56:11,301   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:56:11,303   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:56:11,307   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:56:11,309   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:56:11,312   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:56:11,315   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:56:11,317   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:56:11,320   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:56:11,324   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:56:11,325   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:56:11,328   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:56:11,330   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:56:11,333   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:56:11,335   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:11,341   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:11,344   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:11,347   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:56:11,350   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:56:11,354   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:56:11,359   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:56:11,360   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:56:11,362   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:56:11,364   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:56:11,366   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:56:11,367   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:11,370   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:11,372   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:11,376   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:56:11,377   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:56:11,380   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:56:11,383   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:56:11,384   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,387   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,390   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,393   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:56:11,394   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,397   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,399   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,402   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:56:11,403   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,408   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,410   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:11,415   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:56:11,417   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:56:11,420   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:56:11,422   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:56:11,426   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:56:11,430   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:56:11,432   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:56:11,438   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:56:11,439   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:56:11,441   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:56:11,443   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:56:11,444   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:56:11,446   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:56:11,448   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:56:11,451   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:56:11,453   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:11,455   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:11,457   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:11,464   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:56:11,465   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:11,467   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:11,469   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:11,471   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:56:11,472   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:56:11,474   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:56:11,484   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:56:11,488   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:56:11,490   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:56:11,493   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:56:11,494   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:56:11,497   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:56:11,498   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:56:11,500   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:56:11,501   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:56:11,524   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:56:11,532   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:56:11,536   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:56:11,538   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:11,539   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:56:11,542   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:11,543   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:56:11,547   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:56:11,556   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:56:11,558   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:56:11,563   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:56:11,572   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:56:11,573   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:56:11,574   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:56:11,576   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:11,577   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:56:11,581   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:56:11,586   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:56:11,589   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:56:11,591   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:11,592   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:56:11,596   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:56:11,605   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:56:11,607   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:11,608   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:56:11,615   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:56:11,618   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:56:11,622   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:56:11,623   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:56:11,627   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:56:11,630   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:11,631   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:56:11,635   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:56:11,641   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:56:11,641   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:11,642   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:56:11,646   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:56:11,647   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:56:11,650   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:56:11,652   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:56:11,662   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:56:11,705   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:56:11,706   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:56:11,722   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:11,727   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:56:11,729   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:56:11,731   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:56:11,732   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:56:11,736   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:56:11,743   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:56:11,754   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:11,755   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:56:11,758   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:56:11,758   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:56:11,762   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:56:11,773   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:56:11,779   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:56:11,784   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:11,785   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:56:11,788   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:56:11,789   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:56:11,792   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:11,799   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:56:11,801   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:11,803   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:56:11,807   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:56:11,809   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:11,810   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:56:11,813   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:56:11,837   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:56:11,843   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:56:11,845   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:11,846   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:56:11,856   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:56:11,870   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:11,875   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:56:11,877   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:11,878   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:56:11,884   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:56:11,888   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:56:11,891   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:56:11,900   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:56:11,905   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:56:11,908   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:56:11,911   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:56:11,947   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:56:11,948   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:56:11,968   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:56:11,971   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:56:11,973   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:56:11,979   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:56:11,981   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:56:11,989   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:56:11,991   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:56:11,992   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:56:11,994   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:11,996   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:56:11,998   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:56:11,999   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:56:12,001   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:56:12,002   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:12,002   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:56:12,010   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:12,011   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:56:12,019   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 03:56:20,231   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:56:20,237   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:56:20,238   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,240   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,243   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,243   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:56:20,243   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:56:20,244   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:56:20,244   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:56:20,254   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:56:20,254   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:56:20,254   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:56:20,255   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:56:20,256   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,256   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:56:20,257   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,258   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:56:20,259   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:56:20,259   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:56:20,259   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:56:20,259   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:56:20,259   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:56:20,260   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:56:20,261   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,262   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:56:20,262   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:56:20,262   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:56:20,263   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:56:20,263   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:56:20,263   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:56:20,264   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,264   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,264   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,265   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,265   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,265   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,265   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:56:20,265   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,266   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,266   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,266   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,266   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,267   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:56:20,267   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:56:20,267   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:56:20,268   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,268   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:56:20,279   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:56:20,323   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:56:20,335   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:56:20,339   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:56:20,344   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:56:20,349   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:20,356   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:20,360   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:20,366   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:56:20,368   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:56:20,371   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:56:20,373   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:56:20,376   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:56:20,378   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,382   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,386   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,390   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:56:20,393   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,396   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,398   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,401   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:56:20,403   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,410   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,413   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,416   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:56:20,419   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:56:20,422   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:56:20,425   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:56:20,428   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:56:20,430   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:56:20,434   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:56:20,435   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:56:20,438   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:56:20,442   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:56:20,443   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:56:20,445   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:56:20,447   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:56:20,449   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:56:20,451   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:20,454   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:20,456   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:20,459   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:56:20,461   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:56:20,464   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:56:20,467   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:56:20,468   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:56:20,470   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:56:20,472   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:56:20,474   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:56:20,476   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:20,479   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:20,481   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:20,483   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:56:20,485   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:56:20,487   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:56:20,490   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:56:20,492   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,495   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,496   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,499   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:56:20,501   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,503   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,505   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,508   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:56:20,510   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,513   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,515   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:20,518   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:56:20,519   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:56:20,522   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:56:20,524   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:56:20,527   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:56:20,529   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:56:20,531   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:56:20,535   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:56:20,537   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:56:20,538   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:56:20,541   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:56:20,542   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:56:20,544   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:56:20,546   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:56:20,549   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:56:20,550   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:20,552   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:20,554   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:20,556   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:56:20,557   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:20,564   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:20,566   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:20,569   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:56:20,570   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:56:20,572   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:56:20,581   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:56:20,583   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:56:20,584   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:56:20,591   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:56:20,592   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:56:20,595   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:56:20,596   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:56:20,598   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:56:20,599   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:56:20,622   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:56:20,631   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:56:20,634   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:56:20,637   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:20,646   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:56:20,651   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:20,653   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:56:20,656   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:56:20,668   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:56:20,670   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:56:20,691   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:56:20,700   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:56:20,700   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:56:20,701   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:56:20,703   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:20,704   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:56:20,707   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:56:20,712   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:56:20,715   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:56:20,717   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:20,718   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:56:20,721   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:56:20,727   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:56:20,729   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:20,730   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:56:20,733   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:56:20,737   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:56:20,739   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:56:20,740   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:56:20,745   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:56:20,747   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:20,748   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:56:20,753   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:56:20,764   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:56:20,764   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:20,766   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:56:20,768   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:56:20,769   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:56:20,772   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:56:20,775   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:56:20,776   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:56:20,801   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:56:20,803   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:56:20,808   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:20,813   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:56:20,815   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:56:20,817   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:56:20,819   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:56:20,820   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:56:20,823   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:56:20,825   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:20,826   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:56:20,829   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:56:20,830   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:56:20,831   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:56:20,834   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:56:20,836   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:56:20,839   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:20,840   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:56:20,842   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:56:20,843   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:56:20,845   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:20,846   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:56:20,848   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:20,849   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:56:20,851   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:56:20,861   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:20,862   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:56:20,865   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:56:20,868   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:56:20,872   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:56:20,873   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:20,874   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:56:20,877   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:56:20,879   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:20,880   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:56:20,882   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:20,883   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:56:20,887   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:56:20,890   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:56:20,893   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:56:20,895   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:56:20,896   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:56:20,900   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:56:20,901   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:56:20,921   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:56:20,922   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:56:20,925   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:56:20,927   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:56:20,937   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:56:20,939   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:56:20,940   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:56:20,943   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:56:20,945   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:56:20,946   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:56:20,948   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:20,949   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:56:20,951   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:56:20,952   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:56:20,954   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:56:20,954   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:20,957   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:56:20,963   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:20,964   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:56:20,971   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 08:56:22,346   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:56:22,357   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:56:22,368   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:56:22,394   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:56:22,394   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:56:22,396   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 08:56:22,402   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 08:56:22,410   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 08:56:22,410   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 08:56:22,410   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 08:56:22,421   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 08:56:22,447   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:56:22,480   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 08:56:22,513   FATAL [main] HOST: The PID of this process is 36983
2014-02-27 08:56:22,513   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 08:56:22,513   FATAL [main] HOST: java      14305 thorsten  161u  IPv6 993405      0t0  TCP *:46087 (LISTEN)
2014-02-27 08:56:22,513   FATAL [main] HOST: java      36167 thorsten   34u  IPv6 992226      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 08:56:22,513   FATAL [main] HOST: java      36167 thorsten   40u  IPv6 992233      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 08:56:22,513   FATAL [main] HOST: java      36167 thorsten   54u  IPv6 992240      0t0  TCP *:8080 (LISTEN)
2014-02-27 08:56:22,513   FATAL [main] HOST: java      36167 thorsten   55u  IPv6 992307      0t0  TCP *:21212 (LISTEN)
2014-02-27 08:56:22,514   FATAL [main] HOST: java      36167 thorsten   56u  IPv6 992308      0t0  TCP *:21211 (LISTEN)
2014-02-27 08:56:22,519   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 08:56:22,519   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 08:56:22,853   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 08:56:22,859   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:43719
2014-02-27 08:56:22,859   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 08:56:22,867   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 08:56:22,868   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-02-27 08:56:22,887   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 08:56:22,896   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 08:56:22,897   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 08:56:22,897   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 03:56:31,671   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 03:56:31,677   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 03:56:31,678   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,679   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,681   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,682   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 03:56:31,682   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 03:56:31,682   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:56:31,682   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 03:56:31,683   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:56:31,684   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:56:31,684   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 03:56:31,684   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 03:56:31,686   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,687   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 03:56:31,688   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,688   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 03:56:31,689   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:56:31,689   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 03:56:31,690   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 03:56:31,690   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 03:56:31,690   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 03:56:31,691   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 03:56:31,692   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,693   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:56:31,693   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 03:56:31,693   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 03:56:31,694   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:56:31,694   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:56:31,694   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 03:56:31,695   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,695   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,695   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,696   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,696   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,696   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,697   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 03:56:31,697   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,697   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,697   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,698   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,698   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,699   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 03:56:31,700   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:56:31,700   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 03:56:31,701   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,701   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 03:56:31,714   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 03:56:31,762   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:56:31,785   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 03:56:31,788   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 03:56:31,798   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:56:31,806   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:31,820   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:31,824   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:31,831   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 03:56:31,833   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:56:31,835   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 03:56:31,837   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 03:56:31,843   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:56:31,845   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,850   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,854   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,858   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:56:31,859   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,864   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,868   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,875   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 03:56:31,877   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,880   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,882   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,885   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 03:56:31,888   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 03:56:31,891   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 03:56:31,896   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 03:56:31,898   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 03:56:31,901   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 03:56:31,904   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:56:31,906   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 03:56:31,908   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 03:56:31,911   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 03:56:31,914   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:56:31,916   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:56:31,917   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 03:56:31,920   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:56:31,922   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:31,925   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:31,928   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:31,932   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 03:56:31,934   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 03:56:31,938   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 03:56:31,943   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 03:56:31,945   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:56:31,947   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 03:56:31,949   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 03:56:31,953   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 03:56:31,954   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:31,957   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:31,959   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 03:56:31,962   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 03:56:31,964   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 03:56:31,966   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 03:56:31,968   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:56:31,970   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,974   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,977   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,981   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:56:31,982   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,985   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,987   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,991   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 03:56:31,992   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,995   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:31,998   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 03:56:32,001   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 03:56:32,002   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:56:32,006   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:56:32,008   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 03:56:32,011   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 03:56:32,015   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 03:56:32,017   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 03:56:32,022   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 03:56:32,024   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:56:32,026   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 03:56:32,028   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 03:56:32,031   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 03:56:32,033   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 03:56:32,034   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 03:56:32,037   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 03:56:32,038   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:32,040   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:32,042   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:32,052   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 03:56:32,053   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:32,056   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:32,058   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 03:56:32,060   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 03:56:32,062   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:56:32,064   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 03:56:32,065   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 03:56:32,067   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 03:56:32,068   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:56:32,072   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:56:32,073   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 03:56:32,075   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 03:56:32,077   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 03:56:32,079   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 03:56:32,080   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 03:56:32,106   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 03:56:32,110   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:56:32,113   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:56:32,115   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:32,117   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 03:56:32,119   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:32,120   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 03:56:32,124   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 03:56:32,131   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 03:56:32,132   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 03:56:32,143   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 03:56:32,155   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 03:56:32,155   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 03:56:32,156   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:56:32,166   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:32,167   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 03:56:32,170   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:56:32,181   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 03:56:32,185   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 03:56:32,187   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:32,188   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 03:56:32,191   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 03:56:32,197   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 03:56:32,199   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:32,200   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 03:56:32,203   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 03:56:32,208   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 03:56:32,210   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 03:56:32,211   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 03:56:32,214   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 03:56:32,216   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:32,217   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 03:56:32,221   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 03:56:32,225   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 03:56:32,225   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:32,226   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 03:56:32,228   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:56:32,229   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 03:56:32,232   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 03:56:32,235   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 03:56:32,236   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:56:32,252   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:56:32,253   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 03:56:32,256   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:32,258   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 03:56:32,260   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:56:32,262   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 03:56:32,264   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:56:32,266   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:56:32,269   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 03:56:32,272   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:32,273   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 03:56:32,277   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 03:56:32,277   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 03:56:32,278   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 03:56:32,281   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 03:56:32,284   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 03:56:32,286   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:32,287   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 03:56:32,289   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 03:56:32,290   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 03:56:32,292   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:32,294   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 03:56:32,296   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:32,297   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 03:56:32,299   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 03:56:32,301   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:32,302   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 03:56:32,304   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 03:56:32,308   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:56:32,311   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 03:56:32,313   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:32,314   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 03:56:32,317   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 03:56:32,319   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:32,321   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 03:56:32,323   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:32,324   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:56:32,327   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 03:56:32,330   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 03:56:32,334   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 03:56:32,337   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 03:56:32,338   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 03:56:32,341   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 03:56:32,342   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 03:56:32,356   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 03:56:32,357   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 03:56:32,366   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 03:56:32,367   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 03:56:32,369   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 03:56:32,371   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 03:56:32,372   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 03:56:32,375   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 03:56:32,377   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 03:56:32,378   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 03:56:32,380   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:32,380   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 03:56:32,383   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 03:56:32,384   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 03:56:32,398   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 03:56:32,398   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 03:56:32,399   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 03:56:32,408   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 03:56:32,409   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 03:56:32,414   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 08:56:33,754   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 08:56:33,761   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 08:56:33,767   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 08:56:33,792   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 08:56:33,792   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 08:56:33,794   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 08:56:33,827   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 08:56:33,842   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 08:56:33,884   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@2a03803
2014-02-27 08:56:33,889   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 08:56:33,891   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:51411
2014-02-27 08:56:33,892   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 08:56:33,894   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:51411
2014-02-27 08:56:33,905   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169ff4bcb3800000 with negotiated timeout 6000 for client /127.0.0.1:51411
2014-02-27 08:56:33,906   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169ff4bcb3800000, negotiated timeout = 6000
2014-02-27 08:56:33,947   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 08:56:33,975   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 08:56:33,976   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 08:56:33,989   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 08:56:34,241   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 08:56:35,665   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 08:56:35,669   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 08:56:35,774   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 08:56:35,778   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 08:56:36,078   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 08:56:36,233   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 08:56:36,258   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 08:56:36,269   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 08:56:36,272   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 08:56:36,279   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 08:56:36,279   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 08:56:36,283   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 08:56:36,289   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 6 ms.
2014-02-27 08:56:36,289   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 10 ms.
2014-02-27 08:56:36,290   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 23 ms.
2014-02-27 08:56:36,303   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:56:36,303   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:56:36,304   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:56:36,312   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 08:56:36,314   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 9 ms.
2014-02-27 08:56:36,322   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 08:56:36,348   INFO  [main] HOST: Database start action is Create.
2014-02-27 08:56:36,373   INFO  [main] HOST: PID of this Volt process is 37043
2014-02-27 08:56:36,373   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 08:56:36,373   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 08:56:36,373   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 08:56:36,373   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 08:56:36,373   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 08:56:36,373   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 08:56:36,373   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 08:56:36,373   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 08:56:36,374   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 08:56:36,374   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 08:56:36,374   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 08:56:36,374   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 08:56:36,374   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 08:56:36,374   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 08:56:36,374   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 08:56:36,374   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 08:56:36,374   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 08:56:36,374   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 08:56:36,374   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 08:56:36,374   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 08:56:36,374   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 08:56:36,376   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 08:56:36,376   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 08:56:36,376   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 08:56:36,376   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 08:56:36,393   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 08:56:36,394   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 08:56:36,395   INFO  [Thread-9] HOST: Logging config info
2014-02-27 08:56:36,434   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 04:07:02,796   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 04:07:02,802   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 04:07:02,803   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,805   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,807   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,807   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 04:07:02,808   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 04:07:02,808   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 04:07:02,808   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 04:07:02,819   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 04:07:02,820   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 04:07:02,820   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 04:07:02,820   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 04:07:02,821   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,822   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 04:07:02,824   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,825   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 04:07:02,825   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 04:07:02,825   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 04:07:02,825   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 04:07:02,825   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 04:07:02,826   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 04:07:02,826   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 04:07:02,827   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,828   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 04:07:02,829   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 04:07:02,829   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 04:07:02,829   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 04:07:02,829   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 04:07:02,829   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 04:07:02,830   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,830   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,830   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,830   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,831   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,831   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,831   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 04:07:02,831   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,831   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,832   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,832   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,832   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,832   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 04:07:02,833   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 04:07:02,833   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 04:07:02,833   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,834   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 04:07:02,848   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 04:07:02,906   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 04:07:02,921   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 04:07:02,925   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 04:07:02,936   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 04:07:02,940   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:02,950   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:02,954   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:02,962   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 04:07:02,964   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 04:07:02,970   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 04:07:02,972   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 04:07:02,978   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 04:07:02,980   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:02,985   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:02,992   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:02,998   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 04:07:02,999   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:03,004   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:03,007   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:03,017   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 04:07:03,019   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:03,022   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:03,025   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:03,029   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 04:07:03,032   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 04:07:03,035   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 04:07:03,040   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 04:07:03,042   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 04:07:03,046   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 04:07:03,049   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 04:07:03,051   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 04:07:03,053   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 04:07:03,056   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 04:07:03,060   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 04:07:03,062   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 04:07:03,064   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 04:07:03,066   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 04:07:03,068   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:03,074   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:03,076   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:03,079   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 04:07:03,081   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 04:07:03,088   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 04:07:03,091   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 04:07:03,093   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 04:07:03,097   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 04:07:03,098   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 04:07:03,101   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 04:07:03,102   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:03,105   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:03,107   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:03,110   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 04:07:03,112   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 04:07:03,115   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 04:07:03,120   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 04:07:03,122   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:03,125   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:03,127   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:03,130   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 04:07:03,131   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:03,161   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:03,163   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:03,165   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 04:07:03,166   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:03,169   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:03,171   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:03,173   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 04:07:03,175   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 04:07:03,177   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 04:07:03,179   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 04:07:03,182   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 04:07:03,184   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 04:07:03,186   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 04:07:03,189   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 04:07:03,191   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 04:07:03,192   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 04:07:03,195   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 04:07:03,197   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 04:07:03,199   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 04:07:03,200   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 04:07:03,202   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 04:07:03,203   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 04:07:03,206   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 04:07:03,207   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 04:07:03,216   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 04:07:03,217   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 04:07:03,220   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 04:07:03,221   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 04:07:03,223   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 04:07:03,224   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 04:07:03,226   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 04:07:03,227   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 04:07:03,229   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 04:07:03,231   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 04:07:03,233   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 04:07:03,235   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 04:07:03,237   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 04:07:03,238   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 04:07:03,240   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 04:07:03,241   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 04:07:03,265   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 04:07:03,270   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 04:07:03,273   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 04:07:03,275   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:03,277   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 04:07:03,279   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:03,280   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 04:07:03,283   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 04:07:03,294   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 04:07:03,295   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 04:07:03,306   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 04:07:03,314   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 04:07:03,314   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 04:07:03,318   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 04:07:03,320   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:03,321   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 04:07:03,324   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 04:07:03,329   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 04:07:03,333   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 04:07:03,336   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:03,337   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 04:07:03,339   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 04:07:03,347   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 04:07:03,349   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:03,351   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 04:07:03,355   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 04:07:03,364   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 04:07:03,376   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 04:07:03,377   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 04:07:03,381   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 04:07:03,388   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:03,389   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 04:07:03,400   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 04:07:03,409   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 04:07:03,409   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:03,420   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 04:07:03,429   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 04:07:03,430   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 04:07:03,433   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 04:07:03,437   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 04:07:03,438   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 04:07:03,465   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 04:07:03,466   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 04:07:03,475   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:03,477   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 04:07:03,480   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 04:07:03,482   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 04:07:03,484   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 04:07:03,486   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 04:07:03,491   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 04:07:03,502   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:03,503   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 04:07:03,507   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 04:07:03,507   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 04:07:03,508   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 04:07:03,512   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 04:07:03,516   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 04:07:03,520   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:03,521   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 04:07:03,525   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 04:07:03,526   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 04:07:03,528   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:03,530   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 04:07:03,532   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:03,533   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 04:07:03,536   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 04:07:03,538   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:03,539   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 04:07:03,542   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 04:07:03,546   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 04:07:03,549   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 04:07:03,553   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:03,554   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 04:07:03,566   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 04:07:03,568   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:03,569   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 04:07:03,572   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:03,573   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 04:07:03,580   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 04:07:03,583   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 04:07:03,586   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 04:07:03,594   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 04:07:03,595   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 04:07:03,601   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 04:07:03,603   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 04:07:03,625   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 04:07:03,626   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 04:07:03,636   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 04:07:03,641   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 04:07:03,642   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 04:07:03,650   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 04:07:03,652   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 04:07:03,659   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 04:07:03,663   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 04:07:03,664   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 04:07:03,666   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:03,667   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 04:07:03,668   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 04:07:03,669   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 04:07:03,671   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 04:07:03,671   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:03,672   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 04:07:03,675   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:03,676   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 04:07:03,680   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 09:07:05,086   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 09:07:05,100   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 09:07:05,107   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 09:07:05,131   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 09:07:05,131   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 09:07:05,133   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 09:07:05,137   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 09:07:05,145   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 09:07:05,145   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 09:07:05,145   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 09:07:05,162   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 09:07:05,183   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 09:07:05,222   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 09:07:05,259   FATAL [main] HOST: The PID of this process is 38194
2014-02-27 09:07:05,259   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME
2014-02-27 09:07:05,259   FATAL [main] HOST: java      14305 thorsten  161u  IPv6 995597      0t0  TCP *:44941 (LISTEN)
2014-02-27 09:07:05,259   FATAL [main] HOST: java      37043 thorsten   34u  IPv6 994221      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 09:07:05,259   FATAL [main] HOST: java      37043 thorsten   40u  IPv6 994228      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 09:07:05,259   FATAL [main] HOST: java      37043 thorsten   54u  IPv6 994235      0t0  TCP *:8080 (LISTEN)
2014-02-27 09:07:05,259   FATAL [main] HOST: java      37043 thorsten   55u  IPv6 994302      0t0  TCP *:21212 (LISTEN)
2014-02-27 09:07:05,259   FATAL [main] HOST: java      37043 thorsten   56u  IPv6 994303      0t0  TCP *:21211 (LISTEN)
2014-02-27 09:07:05,264   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 09:07:05,264   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 09:07:05,596   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:44092
2014-02-27 09:07:05,597   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 09:07:05,599   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 09:07:05,609   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 09:07:05,618   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 09:07:05,618   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 09:07:05,619   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 04:07:14,638   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 04:07:14,644   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 04:07:14,645   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,645   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,647   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,648   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 04:07:14,648   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 04:07:14,649   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 04:07:14,649   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 04:07:14,650   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 04:07:14,651   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 04:07:14,651   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 04:07:14,651   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 04:07:14,652   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,653   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 04:07:14,654   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,655   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 04:07:14,656   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 04:07:14,656   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 04:07:14,656   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 04:07:14,656   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 04:07:14,656   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 04:07:14,657   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 04:07:14,659   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,660   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 04:07:14,660   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 04:07:14,660   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 04:07:14,661   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 04:07:14,661   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 04:07:14,661   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 04:07:14,662   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,662   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,662   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,663   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,663   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,663   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,664   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 04:07:14,664   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,664   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,664   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,665   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,665   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,666   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 04:07:14,667   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 04:07:14,667   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 04:07:14,668   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,668   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 04:07:14,681   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 04:07:14,742   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 04:07:14,755   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 04:07:14,758   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 04:07:14,763   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 04:07:14,768   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:14,775   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:14,780   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:14,786   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 04:07:14,788   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 04:07:14,791   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 04:07:14,793   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 04:07:14,796   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 04:07:14,798   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,802   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,806   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,810   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 04:07:14,812   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,815   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,817   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,825   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 04:07:14,827   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,830   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,832   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,835   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 04:07:14,838   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 04:07:14,841   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 04:07:14,845   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 04:07:14,847   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 04:07:14,849   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 04:07:14,852   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 04:07:14,854   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 04:07:14,856   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 04:07:14,859   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 04:07:14,860   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 04:07:14,863   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 04:07:14,864   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 04:07:14,866   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 04:07:14,868   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:14,871   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:14,874   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:14,877   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 04:07:14,879   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 04:07:14,881   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 04:07:14,885   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 04:07:14,886   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 04:07:14,888   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 04:07:14,890   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 04:07:14,892   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 04:07:14,893   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:14,896   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:14,897   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 04:07:14,900   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 04:07:14,901   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 04:07:14,904   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 04:07:14,906   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 04:07:14,908   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,911   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,913   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,916   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 04:07:14,918   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,920   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,922   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,925   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 04:07:14,926   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,929   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,931   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 04:07:14,934   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 04:07:14,936   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 04:07:14,939   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 04:07:14,940   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 04:07:14,943   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 04:07:14,946   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 04:07:14,948   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 04:07:14,951   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 04:07:14,952   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 04:07:14,955   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 04:07:14,957   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 04:07:14,958   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 04:07:14,960   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 04:07:14,962   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 04:07:14,964   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 04:07:14,965   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 04:07:14,967   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 04:07:14,969   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 04:07:14,976   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 04:07:14,977   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 04:07:14,979   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 04:07:14,981   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 04:07:14,983   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 04:07:14,984   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 04:07:14,986   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 04:07:14,987   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 04:07:14,990   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 04:07:14,991   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 04:07:14,993   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 04:07:14,995   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 04:07:14,997   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 04:07:14,998   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 04:07:15,002   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 04:07:15,004   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 04:07:15,030   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 04:07:15,041   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 04:07:15,044   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 04:07:15,046   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:15,047   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 04:07:15,050   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:15,051   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 04:07:15,054   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 04:07:15,061   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 04:07:15,062   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 04:07:15,067   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 04:07:15,076   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 04:07:15,076   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 04:07:15,078   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 04:07:15,080   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:15,081   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 04:07:15,084   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 04:07:15,088   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 04:07:15,091   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 04:07:15,093   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:15,094   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 04:07:15,097   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 04:07:15,103   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 04:07:15,105   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:15,106   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 04:07:15,109   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 04:07:15,115   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 04:07:15,117   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 04:07:15,118   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 04:07:15,122   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 04:07:15,124   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:15,125   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 04:07:15,130   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 04:07:15,134   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 04:07:15,134   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:15,136   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 04:07:15,146   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 04:07:15,147   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 04:07:15,150   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 04:07:15,155   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 04:07:15,156   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 04:07:15,189   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 04:07:15,190   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 04:07:15,198   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:15,202   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 04:07:15,204   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 04:07:15,206   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 04:07:15,208   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 04:07:15,210   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 04:07:15,213   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 04:07:15,225   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:15,226   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 04:07:15,229   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 04:07:15,229   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 04:07:15,230   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 04:07:15,235   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 04:07:15,238   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 04:07:15,242   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:15,243   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 04:07:15,246   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 04:07:15,247   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 04:07:15,250   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:15,251   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 04:07:15,253   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:15,254   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 04:07:15,256   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 04:07:15,258   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:15,259   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 04:07:15,261   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 04:07:15,265   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 04:07:15,267   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 04:07:15,269   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:15,270   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 04:07:15,278   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 04:07:15,281   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:15,282   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 04:07:15,284   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:15,285   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 04:07:15,290   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 04:07:15,293   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 04:07:15,296   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 04:07:15,306   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 04:07:15,307   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 04:07:15,310   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 04:07:15,311   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 04:07:15,333   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 04:07:15,334   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 04:07:15,344   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 04:07:15,346   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 04:07:15,348   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 04:07:15,350   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID = ? ORDER BY CHECKID
2014-02-27 04:07:15,352   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 04:07:15,359   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 04:07:15,361   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 04:07:15,362   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 04:07:15,364   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:15,365   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 04:07:15,376   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 04:07:15,377   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 04:07:15,382   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 04:07:15,382   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 04:07:15,383   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 04:07:15,390   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 04:07:15,391   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 04:07:15,398   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 09:07:16,818   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 09:07:16,831   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 09:07:16,838   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 09:07:16,861   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 09:07:16,861   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 09:07:16,863   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 09:07:16,895   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 09:07:16,909   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 09:07:16,951   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@485fd4e6
2014-02-27 09:07:16,957   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 09:07:16,958   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 09:07:16,958   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:51785
2014-02-27 09:07:16,960   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:51785
2014-02-27 09:07:16,976   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169ff9a4b0800000 with negotiated timeout 6000 for client /127.0.0.1:51785
2014-02-27 09:07:16,976   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169ff9a4b0800000, negotiated timeout = 6000
2014-02-27 09:07:17,016   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 09:07:17,050   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 09:07:17,051   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 09:07:17,064   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 09:07:17,297   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 09:07:18,796   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 09:07:18,800   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 09:07:18,903   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 09:07:18,908   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 09:07:19,190   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 09:07:19,338   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 09:07:19,360   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 09:07:19,371   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 09:07:19,374   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 09:07:19,382   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 09:07:19,382   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 09:07:19,391   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 10 ms.
2014-02-27 09:07:19,393   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 23 ms.
2014-02-27 09:07:19,400   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 09:07:19,400   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 09:07:19,400   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 09:07:19,400   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 3 ms.
2014-02-27 09:07:19,414   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 09:07:19,422   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 09:07:19,423   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 12 ms.
2014-02-27 09:07:19,431   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 09:07:19,455   INFO  [main] HOST: Database start action is Create.
2014-02-27 09:07:19,478   INFO  [main] HOST: PID of this Volt process is 38261
2014-02-27 09:07:19,478   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 09:07:19,478   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 09:07:19,478   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 09:07:19,478   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 09:07:19,478   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 09:07:19,479   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 09:07:19,479   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 09:07:19,479   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 09:07:19,479   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 09:07:19,479   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 09:07:19,479   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 09:07:19,479   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 09:07:19,479   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 09:07:19,479   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 09:07:19,480   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 09:07:19,480   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 09:07:19,480   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 09:07:19,480   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 09:07:19,480   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 09:07:19,480   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 09:07:19,480   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 09:07:19,481   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 09:07:19,481   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 09:07:19,481   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 09:07:19,481   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 09:07:19,496   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 09:07:19,497   INFO  [Thread-9] HOST: Logging config info
2014-02-27 09:07:19,498   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 09:07:19,522   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 09:28:21,027   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 31306 milliseconds late in updating the estimated time
2014-02-27 09:30:04,653   WARN  [Volt Network - 0] org.voltcore.network.VoltNetwork: Network was 7251 milliseconds late in updating the estimated time
2014-02-27 05:04:33,529   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 05:04:33,535   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 05:04:33,536   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,537   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,539   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,539   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 05:04:33,540   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 05:04:33,540   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 05:04:33,540   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 05:04:33,541   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 05:04:33,542   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 05:04:33,542   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 05:04:33,542   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 05:04:33,543   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,544   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 05:04:33,544   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,545   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 05:04:33,546   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 05:04:33,546   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 05:04:33,546   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 05:04:33,546   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 05:04:33,546   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 05:04:33,547   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 05:04:33,548   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,549   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 05:04:33,549   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 05:04:33,549   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 05:04:33,550   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 05:04:33,550   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 05:04:33,551   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 05:04:33,551   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,551   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,552   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,552   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,552   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,552   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,553   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 05:04:33,554   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,554   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,554   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,554   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,555   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,555   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 05:04:33,556   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 05:04:33,556   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 05:04:33,557   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,557   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 05:04:33,570   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 05:04:33,622   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 05:04:33,635   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 05:04:33,638   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 05:04:33,643   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 05:04:33,648   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:33,655   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:33,659   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:33,668   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 05:04:33,670   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 05:04:33,673   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 05:04:33,675   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 05:04:33,678   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 05:04:33,680   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,684   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,688   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,692   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 05:04:33,694   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,699   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,702   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,712   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 05:04:33,713   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,716   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,720   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,723   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 05:04:33,727   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 05:04:33,733   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 05:04:33,737   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 05:04:33,739   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 05:04:33,742   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 05:04:33,744   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 05:04:33,746   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 05:04:33,749   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 05:04:33,752   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 05:04:33,753   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 05:04:33,755   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 05:04:33,757   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 05:04:33,760   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 05:04:33,761   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:33,767   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:33,769   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:33,772   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 05:04:33,774   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 05:04:33,778   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 05:04:33,781   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 05:04:33,782   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 05:04:33,786   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 05:04:33,787   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 05:04:33,789   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 05:04:33,790   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:33,793   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:33,795   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:33,798   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 05:04:33,799   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 05:04:33,802   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 05:04:33,806   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 05:04:33,808   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,811   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,813   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,816   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 05:04:33,817   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,820   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,825   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,828   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 05:04:33,829   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,834   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,835   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:33,838   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 05:04:33,839   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 05:04:33,842   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 05:04:33,843   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 05:04:33,847   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 05:04:33,849   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 05:04:33,851   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 05:04:33,854   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 05:04:33,856   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 05:04:33,857   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 05:04:33,860   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 05:04:33,861   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 05:04:33,863   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 05:04:33,864   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 05:04:33,867   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 05:04:33,869   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:04:33,871   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:04:33,873   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:04:33,879   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 05:04:33,881   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:04:33,883   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:04:33,885   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:04:33,889   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 05:04:33,890   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 05:04:33,892   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 05:04:33,899   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 05:04:33,901   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 05:04:33,902   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 05:04:33,909   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 05:04:33,911   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 05:04:33,913   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 05:04:33,914   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 05:04:33,916   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 05:04:33,917   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 05:04:33,941   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 05:04:33,946   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 05:04:33,949   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 05:04:33,952   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:33,961   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 05:04:33,966   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:33,968   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 05:04:33,973   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 05:04:33,985   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 05:04:33,986   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 05:04:33,993   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 05:04:34,003   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 05:04:34,003   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 05:04:34,004   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 05:04:34,006   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:34,009   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 05:04:34,012   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 05:04:34,018   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 05:04:34,023   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 05:04:34,026   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:34,027   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 05:04:34,031   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 05:04:34,036   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 05:04:34,038   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:34,039   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 05:04:34,042   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 05:04:34,048   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 05:04:34,053   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 05:04:34,053   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 05:04:34,057   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 05:04:34,061   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:34,062   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 05:04:34,072   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 05:04:34,078   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 05:04:34,078   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:34,079   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 05:04:34,087   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 05:04:34,089   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 05:04:34,100   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 05:04:34,111   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 05:04:34,112   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 05:04:34,144   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 05:04:34,146   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 05:04:34,178   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:34,180   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 05:04:34,185   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 05:04:34,187   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 05:04:34,190   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 05:04:34,194   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 05:04:34,201   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 05:04:34,219   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:34,221   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 05:04:34,234   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 05:04:34,234   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 05:04:34,237   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 05:04:34,242   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 05:04:34,246   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 05:04:34,251   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:34,253   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 05:04:34,257   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 05:04:34,258   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 05:04:34,262   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:34,263   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 05:04:34,266   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:34,268   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 05:04:34,277   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 05:04:34,281   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:34,284   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 05:04:34,288   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 05:04:34,292   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 05:04:34,295   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 05:04:34,297   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:34,299   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 05:04:34,307   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 05:04:34,312   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:34,313   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 05:04:34,316   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:34,324   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 05:04:34,335   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 05:04:34,343   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 05:04:34,347   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 05:04:34,355   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 05:04:34,356   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 05:04:34,362   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 05:04:34,364   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 05:04:34,403   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 05:04:34,404   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 05:04:34,417   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 05:04:34,421   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 05:04:34,423   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-02-27 05:04:34,426   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 05:04:34,429   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 05:04:34,435   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 05:04:34,436   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 05:04:34,439   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:34,440   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 05:04:34,446   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 05:04:34,447   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 05:04:34,449   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 05:04:34,449   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:34,450   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 05:04:34,457   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:34,458   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 05:04:34,465   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 10:04:35,903   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 10:04:35,917   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 10:04:35,926   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 10:04:35,957   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 10:04:35,958   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 10:04:35,961   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 10:04:35,966   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 10:04:35,974   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 10:04:35,974   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 10:04:35,975   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 10:04:35,986   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 10:04:36,016   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 10:04:36,126   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 10:04:36,161   FATAL [main] HOST: The PID of this process is 43972
2014-02-27 10:04:36,161   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME
2014-02-27 10:04:36,161   FATAL [main] HOST: java      14305 thorsten   99r  IPv6 1003157      0t0  TCP *:47218 (LISTEN)
2014-02-27 10:04:36,161   FATAL [main] HOST: java      38261 thorsten   34u  IPv6  996426      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 10:04:36,161   FATAL [main] HOST: java      38261 thorsten   40u  IPv6  996433      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 10:04:36,161   FATAL [main] HOST: java      38261 thorsten   54u  IPv6  996442      0t0  TCP *:8080 (LISTEN)
2014-02-27 10:04:36,162   FATAL [main] HOST: java      38261 thorsten   55u  IPv6  996509      0t0  TCP *:21212 (LISTEN)
2014-02-27 10:04:36,162   FATAL [main] HOST: java      38261 thorsten   56u  IPv6  996510      0t0  TCP *:21211 (LISTEN)
2014-02-27 10:04:36,168   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 10:04:36,168   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 10:04:36,510   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 10:04:36,516   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 10:04:36,517   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:46023
2014-02-27 10:04:36,521   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 10:04:36,526   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 10:04:36,539   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 10:04:36,549   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 10:04:36,549   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 10:04:36,550   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 05:04:53,585   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 05:04:53,601   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 05:04:53,601   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,602   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,611   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,612   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 05:04:53,612   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 05:04:53,613   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 05:04:53,613   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 05:04:53,614   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 05:04:53,614   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 05:04:53,614   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 05:04:53,615   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 05:04:53,616   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,616   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 05:04:53,617   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,617   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 05:04:53,618   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 05:04:53,618   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 05:04:53,619   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 05:04:53,619   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 05:04:53,619   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 05:04:53,620   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 05:04:53,621   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,622   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 05:04:53,622   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 05:04:53,622   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 05:04:53,628   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 05:04:53,628   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 05:04:53,628   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 05:04:53,629   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,629   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,629   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,629   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,630   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,630   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,630   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 05:04:53,630   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,630   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,631   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,631   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,631   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,632   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 05:04:53,632   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 05:04:53,632   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 05:04:53,633   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,633   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 05:04:53,644   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 05:04:53,701   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 05:04:53,724   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 05:04:53,727   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 05:04:53,731   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 05:04:53,738   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:53,745   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:53,749   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:53,756   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 05:04:53,758   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 05:04:53,761   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 05:04:53,762   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 05:04:53,768   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 05:04:53,769   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,776   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,779   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,783   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 05:04:53,785   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,790   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,792   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,802   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 05:04:53,803   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,806   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,808   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,811   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 05:04:53,814   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 05:04:53,817   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 05:04:53,821   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 05:04:53,823   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 05:04:53,826   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 05:04:53,829   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 05:04:53,831   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 05:04:53,833   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 05:04:53,836   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 05:04:53,839   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 05:04:53,841   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 05:04:53,842   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 05:04:53,844   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 05:04:53,846   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:53,849   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:53,852   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:53,855   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 05:04:53,857   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 05:04:53,861   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 05:04:53,864   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 05:04:53,866   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 05:04:53,870   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 05:04:53,871   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 05:04:53,873   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 05:04:53,874   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:53,877   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:53,879   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:04:53,882   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 05:04:53,883   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 05:04:53,886   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 05:04:53,888   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 05:04:53,891   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,894   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,895   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,898   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 05:04:53,899   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,903   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,911   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,914   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 05:04:53,915   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,918   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,919   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:04:53,922   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 05:04:53,923   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 05:04:53,926   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 05:04:53,928   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 05:04:53,931   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 05:04:53,933   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 05:04:53,935   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 05:04:53,938   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 05:04:53,940   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 05:04:53,941   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 05:04:53,944   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 05:04:53,945   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 05:04:53,947   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 05:04:53,949   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 05:04:53,951   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 05:04:53,952   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:04:53,954   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:04:53,956   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:04:53,962   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 05:04:53,963   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:04:53,965   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:04:53,967   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:04:53,968   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 05:04:53,969   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 05:04:53,972   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 05:04:53,973   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 05:04:53,974   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 05:04:53,976   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 05:04:53,978   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 05:04:53,979   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 05:04:53,984   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 05:04:53,985   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 05:04:53,987   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 05:04:53,989   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 05:04:54,011   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 05:04:54,022   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 05:04:54,030   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 05:04:54,032   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:54,034   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 05:04:54,036   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:54,037   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 05:04:54,040   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 05:04:54,047   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 05:04:54,048   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 05:04:54,052   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 05:04:54,060   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 05:04:54,060   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 05:04:54,062   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 05:04:54,064   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:54,065   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 05:04:54,068   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 05:04:54,072   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 05:04:54,075   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 05:04:54,077   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:54,078   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 05:04:54,080   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 05:04:54,086   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 05:04:54,088   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:54,089   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 05:04:54,092   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 05:04:54,095   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 05:04:54,098   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 05:04:54,099   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 05:04:54,103   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 05:04:54,105   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:54,106   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 05:04:54,110   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 05:04:54,114   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 05:04:54,114   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:54,115   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 05:04:54,117   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 05:04:54,118   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 05:04:54,122   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 05:04:54,124   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 05:04:54,125   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 05:04:54,143   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 05:04:54,144   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 05:04:54,148   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:54,149   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 05:04:54,151   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 05:04:54,153   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY MULTICHECKID;
2014-02-27 05:04:54,155   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ? ORDER BY MULTICHECKID;
2014-02-27 05:04:54,158   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 05:04:54,166   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 05:04:54,171   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:54,177   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 05:04:54,181   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 05:04:54,181   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 05:04:54,181   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 05:04:54,185   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 05:04:54,188   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 05:04:54,190   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:54,190   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 05:04:54,193   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 05:04:54,194   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 05:04:54,196   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:54,198   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 05:04:54,200   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:54,201   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 05:04:54,203   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 05:04:54,205   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:54,206   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 05:04:54,209   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 05:04:54,212   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 05:04:54,215   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 05:04:54,217   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:54,218   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 05:04:54,221   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 05:04:54,223   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:54,225   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 05:04:54,227   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:54,228   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 05:04:54,232   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 05:04:54,235   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 05:04:54,237   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 05:04:54,240   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 05:04:54,241   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 05:04:54,244   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 05:04:54,245   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 05:04:54,259   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 05:04:54,260   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 05:04:54,273   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 05:04:54,275   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 05:04:54,276   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-02-27 05:04:54,279   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 05:04:54,282   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 05:04:54,284   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 05:04:54,285   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 05:04:54,286   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:54,287   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 05:04:54,289   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 05:04:54,291   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 05:04:54,293   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 05:04:54,293   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 05:04:54,294   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 05:04:54,297   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:04:54,298   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 05:04:54,302   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 10:04:55,781   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 10:04:55,787   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 10:04:55,794   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 10:04:55,817   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 10:04:55,817   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 10:04:55,819   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 10:04:55,850   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 10:04:55,867   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 10:04:55,913   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@2a03803
2014-02-27 10:04:55,917   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 10:04:55,919   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 10:04:55,919   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:53724
2014-02-27 10:04:55,921   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:53724
2014-02-27 10:04:55,932   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16a0140878800000 with negotiated timeout 6000 for client /127.0.0.1:53724
2014-02-27 10:04:55,932   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16a0140878800000, negotiated timeout = 6000
2014-02-27 10:04:55,970   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 10:04:55,997   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 10:04:55,997   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 10:04:56,011   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 10:04:56,248   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 10:04:57,773   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 10:04:57,776   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 10:04:57,881   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 10:04:57,894   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 10:04:58,209   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 10:04:58,367   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 10:04:58,399   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 10:04:58,411   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 10:04:58,419   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 10:04:58,420   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 10:04:58,427   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 10:04:58,432   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 12 ms.
2014-02-27 10:04:58,432   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 21 ms.
2014-02-27 10:04:58,442   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 10:04:58,442   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 3 ms.
2014-02-27 10:04:58,445   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 10:04:58,445   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 10:04:58,451   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 10:04:58,459   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 10:04:58,464   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 15 ms.
2014-02-27 10:04:58,477   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 10:04:58,506   INFO  [main] HOST: Database start action is Create.
2014-02-27 10:04:58,542   INFO  [main] HOST: PID of this Volt process is 44054
2014-02-27 10:04:58,542   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 10:04:58,542   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 10:04:58,542   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 10:04:58,542   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 10:04:58,542   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 10:04:58,542   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 10:04:58,542   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 10:04:58,543   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 10:04:58,543   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 10:04:58,543   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 10:04:58,543   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 10:04:58,543   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 10:04:58,543   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 10:04:58,543   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 10:04:58,543   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 10:04:58,543   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 10:04:58,543   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 10:04:58,543   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 10:04:58,543   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 10:04:58,544   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 10:04:58,544   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 10:04:58,544   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 10:04:58,545   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 10:04:58,545   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 10:04:58,545   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 10:04:58,561   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 10:04:58,563   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 10:04:58,564   INFO  [Thread-9] HOST: Logging config info
2014-02-27 10:04:58,595   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 05:50:49,075   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 05:50:49,082   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 05:50:49,082   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,083   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,085   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,086   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 05:50:49,086   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 05:50:49,087   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 05:50:49,087   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 05:50:49,088   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 05:50:49,088   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 05:50:49,089   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 05:50:49,089   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 05:50:49,090   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,091   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 05:50:49,092   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,093   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 05:50:49,094   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 05:50:49,094   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 05:50:49,094   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 05:50:49,094   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 05:50:49,094   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 05:50:49,096   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 05:50:49,097   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,104   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 05:50:49,104   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 05:50:49,104   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 05:50:49,105   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 05:50:49,105   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 05:50:49,105   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 05:50:49,106   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,106   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,106   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,107   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,107   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,107   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,108   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 05:50:49,108   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,109   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,109   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,109   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,110   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,110   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 05:50:49,111   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 05:50:49,111   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 05:50:49,112   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,112   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 05:50:49,129   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 05:50:49,193   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 05:50:49,210   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 05:50:49,213   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 05:50:49,220   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 05:50:49,226   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:50:49,237   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:50:49,241   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:50:49,247   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 05:50:49,249   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 05:50:49,259   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 05:50:49,261   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 05:50:49,265   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 05:50:49,266   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,272   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,275   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,283   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 05:50:49,285   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,291   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,294   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,305   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 05:50:49,307   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,310   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,312   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,315   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 05:50:49,318   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 05:50:49,320   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 05:50:49,323   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 05:50:49,325   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 05:50:49,327   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 05:50:49,330   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 05:50:49,332   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 05:50:49,334   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 05:50:49,336   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 05:50:49,338   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 05:50:49,340   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 05:50:49,341   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 05:50:49,343   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 05:50:49,345   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:50:49,348   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:50:49,350   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:50:49,353   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 05:50:49,355   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 05:50:49,357   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 05:50:49,360   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 05:50:49,361   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 05:50:49,363   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 05:50:49,365   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 05:50:49,367   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 05:50:49,368   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:50:49,371   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:50:49,372   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:50:49,375   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 05:50:49,376   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 05:50:49,378   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 05:50:49,381   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 05:50:49,382   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,385   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,387   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,390   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 05:50:49,391   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,394   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,395   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,398   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 05:50:49,400   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,403   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,405   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:50:49,407   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 05:50:49,409   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 05:50:49,411   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 05:50:49,413   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 05:50:49,416   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 05:50:49,418   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 05:50:49,420   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 05:50:49,423   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 05:50:49,425   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 05:50:49,426   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 05:50:49,428   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 05:50:49,429   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 05:50:49,431   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 05:50:49,432   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 05:50:49,434   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 05:50:49,435   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:50:49,437   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:50:49,439   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:50:49,446   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 05:50:49,447   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:50:49,449   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:50:49,451   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:50:49,452   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 05:50:49,454   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 05:50:49,455   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 05:50:49,456   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 05:50:49,458   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 05:50:49,459   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 05:50:49,461   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 05:50:49,463   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 05:50:49,465   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 05:50:49,466   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 05:50:49,467   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 05:50:49,469   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 05:50:49,493   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 05:50:49,498   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 05:50:49,501   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 05:50:49,503   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:50:49,504   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 05:50:49,507   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 05:50:49,508   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 05:50:49,511   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 05:50:49,518   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 05:50:49,519   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 05:50:49,525   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 05:50:49,536   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 05:50:49,536   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 05:50:49,537   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 05:50:49,540   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 05:50:49,542   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 05:50:49,549   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 05:50:49,557   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 05:50:49,560   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 05:50:49,563   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 05:50:49,564   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 05:50:49,566   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 05:50:49,573   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 05:50:49,574   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 05:50:49,575   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 05:50:49,579   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 05:50:49,583   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 05:50:49,585   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 05:50:49,586   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 05:50:49,590   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 05:50:49,592   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:50:49,594   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 05:50:49,597   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 05:50:49,601   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 05:50:49,602   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:50:49,603   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 05:50:49,605   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 05:50:49,606   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 05:50:49,609   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 05:50:49,612   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 05:50:49,613   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 05:50:49,637   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 05:50:49,638   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 05:50:49,643   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:50:49,645   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 05:50:49,648   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-02-27 05:50:49,651   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 05:50:49,660   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 05:50:49,664   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 05:50:49,666   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:50:49,679   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 05:50:49,683   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 05:50:49,683   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 05:50:49,684   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 05:50:49,695   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 05:50:49,699   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 05:50:49,702   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 05:50:49,703   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 05:50:49,706   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 05:50:49,708   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 05:50:49,711   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:50:49,712   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 05:50:49,715   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 05:50:49,721   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 05:50:49,726   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 05:50:49,729   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:50:49,731   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 05:50:49,737   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 05:50:49,741   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 05:50:49,744   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 05:50:49,746   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 05:50:49,747   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 05:50:49,751   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 05:50:49,757   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:50:49,758   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 05:50:49,761   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:50:49,763   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 05:50:49,768   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 05:50:49,772   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 05:50:49,776   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 05:50:49,779   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 05:50:49,781   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 05:50:49,784   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 05:50:49,786   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 05:50:49,803   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 05:50:49,805   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 05:50:49,809   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 05:50:49,821   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 05:50:49,823   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-02-27 05:50:49,825   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 05:50:49,828   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 05:50:49,830   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 05:50:49,831   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 05:50:49,833   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 05:50:49,834   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 05:50:49,836   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 05:50:49,837   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 05:50:49,839   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 05:50:49,839   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 05:50:49,840   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 05:50:49,843   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:50:49,844   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 05:50:49,849   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 10:50:51,578   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 10:50:51,585   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 10:50:51,594   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 10:50:51,619   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 10:50:51,619   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 10:50:51,621   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 10:50:51,626   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 10:50:51,633   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 10:50:51,633   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 10:50:51,634   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 10:50:51,651   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 10:50:51,674   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 10:50:51,754   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 10:50:51,787   FATAL [main] HOST: The PID of this process is 48251
2014-02-27 10:50:51,787   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME
2014-02-27 10:50:51,787   FATAL [main] HOST: java      14305 thorsten   99u  IPv6 1009771      0t0  TCP *:40460 (LISTEN)
2014-02-27 10:50:51,787   FATAL [main] HOST: java      44054 thorsten   34u  IPv6 1004797      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 10:50:51,787   FATAL [main] HOST: java      44054 thorsten   40u  IPv6 1004804      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 10:50:51,787   FATAL [main] HOST: java      44054 thorsten   54u  IPv6 1004813      0t0  TCP *:8080 (LISTEN)
2014-02-27 10:50:51,787   FATAL [main] HOST: java      44054 thorsten   55u  IPv6 1004880      0t0  TCP *:21212 (LISTEN)
2014-02-27 10:50:51,787   FATAL [main] HOST: java      44054 thorsten   56u  IPv6 1004881      0t0  TCP *:21211 (LISTEN)
2014-02-27 10:50:51,792   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 10:50:51,793   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 10:50:52,128   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 10:50:52,134   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 10:50:52,135   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:47461
2014-02-27 10:50:52,138   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 10:50:52,139   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-02-27 10:50:52,148   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 10:50:52,158   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 10:50:52,158   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 10:50:52,159   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 05:51:13,973   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 05:51:13,979   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 05:51:13,980   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 05:51:13,981   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 05:51:13,983   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 05:51:13,983   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 05:51:13,984   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 05:51:13,984   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 05:51:13,984   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 05:51:13,985   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 05:51:13,986   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 05:51:13,986   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 05:51:13,987   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 05:51:13,988   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 05:51:13,989   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 05:51:13,990   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 05:51:13,990   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 05:51:13,991   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 05:51:13,991   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 05:51:13,991   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 05:51:13,991   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 05:51:13,992   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 05:51:13,993   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 05:51:13,994   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:51:13,994   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 05:51:13,994   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 05:51:13,995   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 05:51:13,995   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 05:51:13,995   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 05:51:13,996   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 05:51:13,996   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:51:13,996   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:51:13,997   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:51:13,997   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:51:13,997   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:51:13,998   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:51:13,998   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 05:51:13,999   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:51:13,999   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:51:13,999   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 05:51:14,000   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:51:14,000   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 05:51:14,002   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 05:51:14,002   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 05:51:14,003   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 05:51:14,003   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 05:51:14,003   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 05:51:14,016   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 05:51:14,078   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 05:51:14,095   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 05:51:14,099   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 05:51:14,108   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 05:51:14,112   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:51:14,126   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:51:14,130   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:51:14,136   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 05:51:14,138   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 05:51:14,140   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 05:51:14,142   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 05:51:14,148   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 05:51:14,149   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,155   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,158   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,166   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 05:51:14,168   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,173   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,177   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,187   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 05:51:14,188   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,192   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,198   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,201   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 05:51:14,204   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 05:51:14,215   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 05:51:14,219   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 05:51:14,220   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 05:51:14,223   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 05:51:14,226   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 05:51:14,227   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 05:51:14,230   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 05:51:14,233   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 05:51:14,234   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 05:51:14,236   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 05:51:14,237   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 05:51:14,239   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 05:51:14,241   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:51:14,248   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:51:14,251   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:51:14,254   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 05:51:14,256   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 05:51:14,262   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 05:51:14,264   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 05:51:14,266   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 05:51:14,268   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 05:51:14,270   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 05:51:14,272   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 05:51:14,273   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:51:14,276   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:51:14,278   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 05:51:14,281   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 05:51:14,283   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 05:51:14,287   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 05:51:14,292   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 05:51:14,294   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,298   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,300   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,302   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 05:51:14,304   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,309   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,317   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,320   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 05:51:14,321   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,324   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,326   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 05:51:14,328   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 05:51:14,330   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 05:51:14,332   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 05:51:14,334   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 05:51:14,337   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 05:51:14,339   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 05:51:14,341   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 05:51:14,345   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 05:51:14,346   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 05:51:14,350   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 05:51:14,352   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 05:51:14,353   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 05:51:14,355   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 05:51:14,356   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 05:51:14,358   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 05:51:14,359   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:51:14,362   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:51:14,363   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:51:14,371   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 05:51:14,372   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:51:14,375   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:51:14,376   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 05:51:14,378   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 05:51:14,379   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 05:51:14,381   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 05:51:14,393   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 05:51:14,395   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 05:51:14,396   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 05:51:14,406   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 05:51:14,407   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 05:51:14,411   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 05:51:14,412   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 05:51:14,417   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 05:51:14,418   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 05:51:14,442   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 05:51:14,452   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 05:51:14,456   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 05:51:14,458   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:51:14,463   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 05:51:14,465   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 05:51:14,466   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 05:51:14,470   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 05:51:14,477   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 05:51:14,478   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 05:51:14,483   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 05:51:14,492   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 05:51:14,492   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 05:51:14,494   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 05:51:14,496   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 05:51:14,497   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 05:51:14,501   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 05:51:14,505   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 05:51:14,509   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 05:51:14,511   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 05:51:14,512   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 05:51:14,516   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 05:51:14,524   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 05:51:14,532   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 05:51:14,533   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 05:51:14,537   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 05:51:14,546   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 05:51:14,555   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 05:51:14,556   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 05:51:14,560   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 05:51:14,569   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:51:14,570   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 05:51:14,574   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 05:51:14,581   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 05:51:14,581   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:51:14,582   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 05:51:14,588   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 05:51:14,589   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 05:51:14,599   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 05:51:14,601   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 05:51:14,602   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 05:51:14,619   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 05:51:14,620   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 05:51:14,629   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:51:14,631   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 05:51:14,633   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-02-27 05:51:14,635   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 05:51:14,637   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 05:51:14,640   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 05:51:14,643   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:51:14,644   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 05:51:14,647   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 05:51:14,647   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 05:51:14,648   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 05:51:14,651   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 05:51:14,655   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 05:51:14,657   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 05:51:14,658   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 05:51:14,660   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 05:51:14,661   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 05:51:14,670   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:51:14,671   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 05:51:14,674   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 05:51:14,675   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 05:51:14,677   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 05:51:14,679   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:51:14,680   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 05:51:14,682   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 05:51:14,685   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 05:51:14,687   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 05:51:14,689   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 05:51:14,690   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 05:51:14,695   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 05:51:14,696   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:51:14,697   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 05:51:14,703   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:51:14,705   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 05:51:14,708   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 05:51:14,715   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 05:51:14,717   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 05:51:14,736   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 05:51:14,737   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 05:51:14,740   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 05:51:14,741   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 05:51:14,766   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 05:51:14,767   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 05:51:14,769   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 05:51:14,780   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 05:51:14,781   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-02-27 05:51:14,784   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 05:51:14,786   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 05:51:14,788   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 05:51:14,789   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 05:51:14,795   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 05:51:14,796   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 05:51:14,800   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 05:51:14,801   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 05:51:14,803   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 05:51:14,803   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 05:51:14,804   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 05:51:14,807   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 05:51:14,808   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 05:51:14,818   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 10:51:16,200   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 10:51:16,206   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 10:51:16,213   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 10:51:16,239   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 10:51:16,239   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 10:51:16,241   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 10:51:16,276   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 10:51:16,289   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 10:51:16,337   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@2a03803
2014-02-27 10:51:16,342   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 10:51:16,346   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:55161
2014-02-27 10:51:16,347   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 10:51:16,349   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:55161
2014-02-27 10:51:16,360   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16a0293eff000000 with negotiated timeout 6000 for client /127.0.0.1:55161
2014-02-27 10:51:16,361   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16a0293eff000000, negotiated timeout = 6000
2014-02-27 10:51:16,406   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 10:51:16,437   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 10:51:16,437   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 10:51:16,451   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 10:51:16,678   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 10:51:18,186   WARN  [qtp1432109380-29] HOST: JSON interface: Connection refused
2014-02-27 10:51:18,286   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 10:51:18,293   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 10:51:18,385   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 10:51:18,390   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 10:51:18,768   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 10:51:18,898   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 10:51:18,916   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 10:51:18,930   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 10:51:18,933   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 10:51:18,943   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 10:51:18,948   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 22 ms.
2014-02-27 10:51:18,949   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 10:51:18,949   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 6 ms.
2014-02-27 10:51:18,962   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 10:51:18,962   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 10:51:18,964   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 10:51:18,964   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 4 ms.
2014-02-27 10:51:18,977   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 10:51:18,982   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 10:51:18,984   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 9 ms.
2014-02-27 10:51:18,995   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 10:51:19,019   INFO  [main] HOST: Database start action is Create.
2014-02-27 10:51:19,045   INFO  [main] HOST: PID of this Volt process is 48330
2014-02-27 10:51:19,046   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 10:51:19,046   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 10:51:19,046   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 10:51:19,046   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 10:51:19,046   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 10:51:19,046   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 10:51:19,046   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 10:51:19,046   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 10:51:19,046   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 10:51:19,046   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 10:51:19,046   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 10:51:19,046   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 10:51:19,047   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 10:51:19,047   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 10:51:19,047   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 10:51:19,047   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 10:51:19,047   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 10:51:19,047   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 10:51:19,047   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 10:51:19,047   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 10:51:19,047   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 10:51:19,048   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 10:51:19,048   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 10:51:19,048   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 10:51:19,049   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 10:51:19,067   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 10:51:19,068   INFO  [Thread-10] HOST: Logging config info
2014-02-27 10:51:19,068   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 10:51:19,096   INFO  [Thread-11] CONSOLE: Server completed initialization.
2014-02-27 06:20:32,718   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 06:20:32,724   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 06:20:32,725   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,727   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,729   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,729   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 06:20:32,730   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 06:20:32,730   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:20:32,730   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:20:32,739   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:20:32,740   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:20:32,740   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:20:32,740   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 06:20:32,741   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,742   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 06:20:32,743   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,743   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 06:20:32,744   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:20:32,744   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 06:20:32,744   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:20:32,744   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 06:20:32,745   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 06:20:32,746   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 06:20:32,747   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,748   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:20:32,748   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:20:32,748   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 06:20:32,749   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:20:32,749   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:20:32,749   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:20:32,750   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,750   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,750   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,751   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,751   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,751   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,751   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 06:20:32,752   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,752   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,752   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,753   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,753   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,753   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 06:20:32,754   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:20:32,754   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:20:32,754   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,754   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:20:32,767   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 06:20:32,814   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:20:32,827   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:20:32,831   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 06:20:32,837   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:20:32,843   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:32,850   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:32,855   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:32,862   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 06:20:32,864   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:20:32,867   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:20:32,869   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 06:20:32,872   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:20:32,874   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:32,879   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:32,882   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:32,887   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:20:32,889   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:32,893   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:32,896   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:32,914   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 06:20:32,917   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:32,921   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:32,924   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:32,927   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 06:20:32,932   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 06:20:32,938   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 06:20:32,942   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 06:20:32,945   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 06:20:32,949   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 06:20:32,955   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:20:32,959   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 06:20:32,964   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 06:20:32,971   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 06:20:32,973   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:20:32,976   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:20:32,978   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:20:32,980   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:20:32,981   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:32,990   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:32,993   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:32,996   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 06:20:32,999   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 06:20:33,003   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 06:20:33,006   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 06:20:33,007   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:20:33,010   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:20:33,012   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 06:20:33,015   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 06:20:33,016   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:33,019   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:33,021   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:33,024   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 06:20:33,025   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 06:20:33,028   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 06:20:33,031   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:20:33,033   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:33,036   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:33,038   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:33,041   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:20:33,043   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:33,046   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:33,049   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:33,052   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:20:33,053   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:33,058   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:33,061   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:33,063   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:20:33,065   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:20:33,068   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:20:33,070   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:20:33,073   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:20:33,076   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 06:20:33,079   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 06:20:33,083   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 06:20:33,085   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:20:33,087   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:20:33,089   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 06:20:33,090   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 06:20:33,092   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 06:20:33,093   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 06:20:33,097   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 06:20:33,098   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:20:33,100   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:20:33,102   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:20:33,110   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:20:33,112   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:20:33,114   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:20:33,116   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:20:33,118   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 06:20:33,119   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:20:33,121   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:20:33,122   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 06:20:33,124   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:20:33,125   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:20:33,127   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:20:33,129   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:20:33,132   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 06:20:33,133   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 06:20:33,135   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 06:20:33,137   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 06:20:33,162   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 06:20:33,167   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:20:33,170   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:20:33,172   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:33,174   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 06:20:33,176   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:33,177   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 06:20:33,181   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 06:20:33,188   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 06:20:33,189   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 06:20:33,197   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 06:20:33,197   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 06:20:33,198   INFO  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 06:20:33,201   WARN  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Procedure BLE_FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:33,202   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:20:33,209   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:33,213   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 06:20:33,222   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:20:33,226   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 06:20:33,230   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 06:20:33,232   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:33,234   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 06:20:33,238   INFO  [main] COMPILER: [BLE_FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 06:20:33,244   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 06:20:33,250   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 06:20:33,252   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:33,253   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 06:20:33,262   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 06:20:33,266   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 06:20:33,268   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 06:20:33,269   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 06:20:33,274   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 06:20:33,284   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 06:20:33,293   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 06:20:33,294   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:33,295   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 06:20:33,297   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:20:33,298   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 06:20:33,312   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 06:20:33,317   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 06:20:33,318   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:20:33,353   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:20:33,354   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 06:20:33,365   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:33,367   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 06:20:33,370   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-02-27 06:20:33,373   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:20:33,375   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:20:33,379   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 06:20:33,381   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:33,382   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 06:20:33,395   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 06:20:33,395   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 06:20:33,396   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 06:20:33,400   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 06:20:33,403   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 06:20:33,405   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:33,406   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 06:20:33,410   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 06:20:33,411   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 06:20:33,414   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:33,416   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 06:20:33,418   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:33,419   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:20:33,422   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 06:20:33,425   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:33,427   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 06:20:33,430   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 06:20:33,435   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:20:33,439   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 06:20:33,442   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:33,443   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 06:20:33,448   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:20:33,452   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:33,453   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:20:33,459   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:33,460   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:20:33,465   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:20:33,476   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 06:20:33,481   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 06:20:33,491   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 06:20:33,497   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 06:20:33,500   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:20:33,501   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:20:33,529   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:20:33,530   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:20:33,534   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 06:20:33,549   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:20:33,551   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-02-27 06:20:33,553   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:20:33,555   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 06:20:33,558   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:20:33,558   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 06:20:33,565   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:33,566   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 06:20:33,568   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 06:20:33,569   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:20:33,571   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 06:20:33,571   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:33,572   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 06:20:33,575   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:33,576   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 06:20:33,584   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 11:20:35,011   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 11:20:35,018   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 11:20:35,026   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 11:20:35,051   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 11:20:35,051   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 11:20:35,053   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 11:20:35,058   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 11:20:35,066   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 11:20:35,066   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 11:20:35,066   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 11:20:35,079   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 11:20:35,109   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 11:20:35,203   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 11:20:35,247   FATAL [main] HOST: The PID of this process is 51120
2014-02-27 11:20:35,247   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME
2014-02-27 11:20:35,248   FATAL [main] HOST: java      14305 thorsten   99u  IPv6 1014384      0t0  TCP *:56467 (LISTEN)
2014-02-27 11:20:35,248   FATAL [main] HOST: java      48330 thorsten   34u  IPv6 1010809      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 11:20:35,248   FATAL [main] HOST: java      48330 thorsten   40u  IPv6 1010816      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 11:20:35,248   FATAL [main] HOST: java      48330 thorsten   54u  IPv6 1010823      0t0  TCP *:8080 (LISTEN)
2014-02-27 11:20:35,248   FATAL [main] HOST: java      48330 thorsten   56u  IPv6 1010895      0t0  TCP *:21212 (LISTEN)
2014-02-27 11:20:35,248   FATAL [main] HOST: java      48330 thorsten   57u  IPv6 1010896      0t0  TCP *:21211 (LISTEN)
2014-02-27 11:20:35,253   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 11:20:35,253   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 11:20:35,594   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 11:20:35,595   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:48424
2014-02-27 11:20:35,602   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 11:20:35,604   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 11:20:35,615   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 11:20:35,624   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 11:20:35,624   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 11:20:35,625   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 06:20:50,755   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 06:20:50,765   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 06:20:50,768   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,770   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,773   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,773   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 06:20:50,774   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 06:20:50,774   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:20:50,774   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:20:50,782   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:20:50,782   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:20:50,782   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:20:50,783   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 06:20:50,784   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,784   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 06:20:50,785   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,786   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 06:20:50,787   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:20:50,787   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 06:20:50,787   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:20:50,787   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 06:20:50,787   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 06:20:50,788   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 06:20:50,789   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,790   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:20:50,790   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:20:50,790   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 06:20:50,791   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:20:50,791   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:20:50,791   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:20:50,792   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,792   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,792   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,793   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,793   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,793   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,793   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 06:20:50,794   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,794   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,794   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,794   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,794   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,795   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 06:20:50,795   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:20:50,795   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:20:50,796   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,796   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:20:50,807   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 06:20:50,849   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:20:50,861   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:20:50,865   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 06:20:50,870   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:20:50,875   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:50,882   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:50,886   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:50,892   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 06:20:50,894   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:20:50,897   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:20:50,899   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 06:20:50,901   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:20:50,903   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:50,907   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:50,911   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:50,915   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:20:50,916   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:50,919   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:50,922   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:50,931   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 06:20:50,932   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:50,935   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:50,937   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:50,940   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 06:20:50,943   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 06:20:50,945   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 06:20:50,949   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 06:20:50,950   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 06:20:50,953   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 06:20:50,956   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:20:50,957   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 06:20:50,960   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 06:20:50,963   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 06:20:50,964   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:20:50,966   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:20:50,967   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:20:50,969   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:20:50,971   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:50,975   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:50,977   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:50,980   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 06:20:50,982   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 06:20:50,984   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 06:20:50,987   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 06:20:50,988   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:20:50,991   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:20:50,992   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 06:20:50,994   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 06:20:50,996   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:50,998   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:51,000   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:20:51,002   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 06:20:51,004   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 06:20:51,006   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 06:20:51,009   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:20:51,010   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:51,013   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:51,015   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:51,018   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:20:51,019   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:51,022   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:51,023   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:51,026   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:20:51,027   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:51,030   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:51,032   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:20:51,034   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:20:51,036   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:20:51,039   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:20:51,040   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:20:51,043   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:20:51,045   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 06:20:51,047   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 06:20:51,050   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 06:20:51,052   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:20:51,054   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:20:51,056   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 06:20:51,057   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-27 06:20:51,059   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 06:20:51,060   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 06:20:51,062   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 06:20:51,063   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:20:51,066   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:20:51,068   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:20:51,075   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:20:51,076   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:20:51,078   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:20:51,080   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:20:51,082   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 06:20:51,083   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:20:51,085   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:20:51,086   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 06:20:51,088   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:20:51,089   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:20:51,091   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:20:51,093   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:20:51,095   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 06:20:51,096   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 06:20:51,098   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 06:20:51,099   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 06:20:51,122   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 06:20:51,127   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:20:51,130   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:20:51,133   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:51,134   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 06:20:51,136   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:51,137   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 06:20:51,140   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 06:20:51,147   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 06:20:51,148   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 06:20:51,156   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 06:20:51,156   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 06:20:51,157   INFO  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 06:20:51,160   WARN  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Procedure BLE_FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:51,161   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:20:51,163   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:51,164   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 06:20:51,167   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:20:51,181   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 06:20:51,184   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 06:20:51,189   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:51,190   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 06:20:51,197   INFO  [main] COMPILER: [BLE_FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 06:20:51,210   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 06:20:51,223   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 06:20:51,224   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:51,225   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 06:20:51,229   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 06:20:51,232   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 06:20:51,234   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 06:20:51,235   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 06:20:51,238   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 06:20:51,242   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 06:20:51,246   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 06:20:51,246   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:51,247   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 06:20:51,249   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:20:51,250   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 06:20:51,253   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 06:20:51,259   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 06:20:51,260   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:20:51,277   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:20:51,278   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 06:20:51,283   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:51,288   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 06:20:51,290   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-02-27 06:20:51,294   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:20:51,296   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:20:51,299   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 06:20:51,301   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:51,302   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 06:20:51,315   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 06:20:51,315   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 06:20:51,316   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 06:20:51,320   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 06:20:51,324   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 06:20:51,326   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:51,327   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 06:20:51,331   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 06:20:51,332   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 06:20:51,334   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:51,335   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 06:20:51,337   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:51,338   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:20:51,340   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 06:20:51,342   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:51,343   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 06:20:51,345   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 06:20:51,348   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:20:51,352   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 06:20:51,354   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:51,355   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 06:20:51,360   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:20:51,362   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:51,364   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:20:51,370   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:51,371   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:20:51,374   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:20:51,380   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 06:20:51,382   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 06:20:51,392   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 06:20:51,393   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 06:20:51,396   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:20:51,397   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:20:51,418   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:20:51,420   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:20:51,422   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 06:20:51,429   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:20:51,430   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-02-27 06:20:51,433   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:20:51,435   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 06:20:51,438   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:20:51,439   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 06:20:51,446   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:51,447   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 06:20:51,449   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 06:20:51,451   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:20:51,453   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 06:20:51,453   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:20:51,454   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 06:20:51,457   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:20:51,457   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 06:20:51,466   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 11:20:53,081   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 11:20:53,097   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 11:20:53,106   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 11:20:53,135   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 11:20:53,135   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 11:20:53,137   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 11:20:53,173   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 11:20:53,188   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 11:20:53,236   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-02-27 11:20:53,241   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 11:20:53,243   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:56120
2014-02-27 11:20:53,244   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 11:20:53,246   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:56120
2014-02-27 11:20:53,262   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16a036cd7f000000 with negotiated timeout 6000 for client /127.0.0.1:56120
2014-02-27 11:20:53,262   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16a036cd7f000000, negotiated timeout = 6000
2014-02-27 11:20:53,303   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 11:20:53,324   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 11:20:53,324   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 11:20:53,337   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 11:20:53,565   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 11:20:54,986   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 11:20:54,990   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 11:20:55,089   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 11:20:55,098   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 11:20:55,395   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 11:20:55,616   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 11:20:55,641   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 11:20:55,655   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 11:20:55,658   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 11:20:55,671   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 18 ms.
2014-02-27 11:20:55,680   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 11:20:55,682   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:20:55,691   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 11:20:55,692   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 11 ms.
2014-02-27 11:20:55,700   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 11:20:55,700   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 3 ms.
2014-02-27 11:20:55,701   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:20:55,714   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:20:55,720   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 11:20:55,723   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 10 ms.
2014-02-27 11:20:55,731   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:20:55,785   INFO  [main] HOST: Database start action is Create.
2014-02-27 11:20:55,857   INFO  [main] HOST: PID of this Volt process is 51196
2014-02-27 11:20:55,857   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 11:20:55,857   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 11:20:55,857   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 11:20:55,857   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 11:20:55,857   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 11:20:55,857   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 11:20:55,857   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 11:20:55,857   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 11:20:55,858   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 11:20:55,858   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 11:20:55,858   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 11:20:55,858   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 11:20:55,858   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 11:20:55,858   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 11:20:55,858   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 11:20:55,858   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 11:20:55,858   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 11:20:55,858   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 11:20:55,858   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 11:20:55,858   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 11:20:55,858   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 11:20:55,859   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 11:20:55,859   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 11:20:55,862   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 11:20:55,862   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 11:20:55,877   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 11:20:55,878   INFO  [Thread-9] HOST: Logging config info
2014-02-27 11:20:55,879   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 11:20:55,907   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 11:22:11,291   WARN  [Volt Network - 1] AUTH: Procedure FindRulesForCheckID was not found. This message is rate limited to once every 60 seconds.
2014-02-27 06:26:39,974   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 06:26:39,980   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 06:26:39,981   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 06:26:39,981   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 06:26:39,983   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 06:26:39,984   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 06:26:39,984   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 06:26:39,985   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:26:39,985   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:26:39,986   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:26:39,986   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:26:39,987   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:26:39,987   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 06:26:39,988   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 06:26:39,988   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 06:26:39,989   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 06:26:39,990   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 06:26:39,991   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:26:39,991   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 06:26:39,991   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:26:39,991   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 06:26:39,991   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 06:26:39,992   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 06:26:39,993   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:26:39,994   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:26:39,994   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:26:39,994   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 06:26:39,995   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:26:39,995   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:26:39,995   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:26:39,996   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:26:39,996   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:26:39,996   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:26:39,997   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:26:39,997   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:26:39,997   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:26:39,998   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 06:26:39,998   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:26:39,999   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:26:39,999   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:26:39,999   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:26:39,999   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:26:40,000   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 06:26:40,001   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:26:40,001   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:26:40,002   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:26:40,002   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:26:40,014   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 06:26:40,061   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:26:40,074   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:26:40,077   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 06:26:40,082   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:26:40,087   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:26:40,094   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:26:40,098   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:26:40,105   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 06:26:40,107   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:26:40,109   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:26:40,111   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 06:26:40,114   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:26:40,116   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,120   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,124   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,128   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:26:40,130   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,133   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,136   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,144   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 06:26:40,146   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,148   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,151   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,154   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 06:26:40,157   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 06:26:40,160   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 06:26:40,164   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 06:26:40,166   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 06:26:40,169   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 06:26:40,172   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:26:40,175   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 06:26:40,177   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 06:26:40,180   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 06:26:40,182   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:26:40,185   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:26:40,186   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:26:40,188   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:26:40,190   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:26:40,194   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:26:40,197   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:26:40,200   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 06:26:40,202   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 06:26:40,205   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 06:26:40,208   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 06:26:40,209   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:26:40,211   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:26:40,213   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 06:26:40,215   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 06:26:40,216   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:26:40,218   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:26:40,220   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:26:40,223   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 06:26:40,224   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 06:26:40,226   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 06:26:40,229   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:26:40,231   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,234   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,236   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,239   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:26:40,240   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,243   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,244   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,247   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:26:40,248   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,251   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,253   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:26:40,255   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:26:40,257   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:26:40,259   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:26:40,261   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:26:40,264   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:26:40,267   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 06:26:40,269   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 06:26:40,272   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 06:26:40,273   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:26:40,275   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:26:40,277   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 06:26:40,279   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 06:26:40,280   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 06:26:40,283   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 06:26:40,284   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:26:40,286   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:26:40,288   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:26:40,295   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:26:40,296   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:26:40,298   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:26:40,300   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:26:40,302   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 06:26:40,304   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:26:40,306   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:26:40,314   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 06:26:40,317   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:26:40,323   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:26:40,325   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:26:40,326   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:26:40,328   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 06:26:40,330   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 06:26:40,332   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 06:26:40,333   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 06:26:40,357   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 06:26:40,361   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:26:40,364   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:26:40,371   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:26:40,376   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 06:26:40,378   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 06:26:40,380   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 06:26:40,391   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 06:26:40,401   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 06:26:40,405   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 06:26:40,422   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 06:26:40,422   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 06:26:40,423   INFO  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 06:26:40,425   WARN  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Procedure BLE_FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: index scan may provide insufficient ordering
2014-02-27 06:26:40,426   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:26:40,429   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:26:40,430   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 06:26:40,439   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:26:40,443   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 06:26:40,446   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 06:26:40,448   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 06:26:40,449   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 06:26:40,451   INFO  [main] COMPILER: [BLE_FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 06:26:40,458   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 06:26:40,464   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 06:26:40,467   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:26:40,468   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 06:26:40,472   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 06:26:40,475   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 06:26:40,484   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 06:26:40,485   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 06:26:40,489   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 06:26:40,496   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 06:26:40,500   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 06:26:40,500   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:26:40,502   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 06:26:40,504   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:26:40,505   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 06:26:40,508   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 06:26:40,510   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 06:26:40,511   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:26:40,528   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:26:40,530   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 06:26:40,537   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:26:40,539   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 06:26:40,541   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-02-27 06:26:40,543   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:26:40,545   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:26:40,548   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 06:26:40,551   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:26:40,552   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 06:26:40,555   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 06:26:40,555   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 06:26:40,556   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 06:26:40,558   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 06:26:40,561   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 06:26:40,563   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 06:26:40,564   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 06:26:40,566   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 06:26:40,567   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 06:26:40,570   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:26:40,570   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 06:26:40,573   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 06:26:40,573   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:26:40,576   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 06:26:40,578   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:26:40,579   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 06:26:40,588   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 06:26:40,591   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:26:40,594   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 06:26:40,596   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:26:40,597   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 06:26:40,600   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:26:40,602   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:26:40,603   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:26:40,605   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:26:40,605   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:26:40,609   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:26:40,612   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 06:26:40,614   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 06:26:40,617   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 06:26:40,618   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 06:26:40,621   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:26:40,622   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:26:40,637   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:26:40,639   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:26:40,641   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 06:26:40,643   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:26:40,653   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-02-27 06:26:40,655   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:26:40,658   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 06:26:40,659   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:26:40,660   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 06:26:40,662   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:26:40,663   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 06:26:40,665   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 06:26:40,666   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:26:40,669   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 06:26:40,669   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:26:40,670   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 06:26:40,674   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:26:40,674   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 06:26:40,679   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 11:26:42,383   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 11:26:42,395   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 11:26:42,402   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 11:26:42,425   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 11:26:42,426   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 11:26:42,427   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 11:26:42,432   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 11:26:42,440   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 11:26:42,440   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 11:26:42,440   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 11:26:42,451   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 11:26:42,477   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 11:26:42,517   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 11:26:42,549   FATAL [main] HOST: The PID of this process is 51788
2014-02-27 11:26:42,549   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME
2014-02-27 11:26:42,549   FATAL [main] HOST: java      14305 thorsten   99u  IPv6 1016390      0t0  TCP *:55891 (LISTEN)
2014-02-27 11:26:42,549   FATAL [main] HOST: java      51196 thorsten   34u  IPv6 1015601      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 11:26:42,549   FATAL [main] HOST: java      51196 thorsten   40u  IPv6 1015608      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 11:26:42,549   FATAL [main] HOST: java      51196 thorsten   54u  IPv6 1015617      0t0  TCP *:8080 (LISTEN)
2014-02-27 11:26:42,549   FATAL [main] HOST: java      51196 thorsten   55u  IPv6 1015684      0t0  TCP *:21212 (LISTEN)
2014-02-27 11:26:42,549   FATAL [main] HOST: java      51196 thorsten   56u  IPv6 1015685      0t0  TCP *:21211 (LISTEN)
2014-02-27 11:26:42,555   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 11:26:42,555   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 11:26:42,890   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 11:26:42,894   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:48609
2014-02-27 11:26:42,895   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-02-27 11:26:42,901   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 11:26:42,915   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 11:26:42,926   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 11:26:42,926   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 11:26:42,927   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 06:27:04,914   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 06:27:04,926   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 06:27:04,926   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,927   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,932   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,933   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 06:27:04,933   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 06:27:04,933   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:27:04,933   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:27:04,939   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:27:04,939   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:27:04,939   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:27:04,940   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 06:27:04,942   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,943   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 06:27:04,944   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,944   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 06:27:04,945   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:27:04,945   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 06:27:04,945   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:27:04,945   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 06:27:04,946   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 06:27:04,947   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 06:27:04,947   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,948   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:27:04,948   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:27:04,948   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 06:27:04,949   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:27:04,949   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:27:04,949   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:27:04,949   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,950   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,950   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,950   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,950   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,950   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,951   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 06:27:04,951   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,951   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,951   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,951   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,952   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,952   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 06:27:04,953   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:27:04,953   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:27:04,953   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,953   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:27:04,964   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 06:27:05,021   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:27:05,038   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:27:05,041   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 06:27:05,050   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:27:05,055   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:27:05,068   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:27:05,072   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:27:05,078   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 06:27:05,080   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:27:05,082   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:27:05,084   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 06:27:05,090   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:27:05,091   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,097   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,100   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,108   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:27:05,109   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,112   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,115   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,127   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 06:27:05,130   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,133   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,139   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,142   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 06:27:05,145   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 06:27:05,147   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 06:27:05,150   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 06:27:05,152   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 06:27:05,155   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 06:27:05,158   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:27:05,159   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 06:27:05,161   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 06:27:05,164   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 06:27:05,165   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:27:05,168   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:27:05,169   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:27:05,171   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:27:05,173   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:27:05,177   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:27:05,179   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:27:05,182   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 06:27:05,184   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 06:27:05,186   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 06:27:05,189   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 06:27:05,190   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:27:05,192   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:27:05,194   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 06:27:05,196   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 06:27:05,197   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:27:05,199   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:27:05,201   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:27:05,204   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 06:27:05,205   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 06:27:05,208   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 06:27:05,211   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:27:05,212   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,215   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,217   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,220   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:27:05,221   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,224   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,226   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,228   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:27:05,230   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,232   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,234   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:27:05,237   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:27:05,238   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:27:05,242   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:27:05,244   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:27:05,247   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:27:05,249   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 06:27:05,251   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 06:27:05,254   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 06:27:05,255   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:27:05,257   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:27:05,259   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-27 06:27:05,261   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-27 06:27:05,263   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-27 06:27:05,265   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 06:27:05,266   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:27:05,268   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:27:05,270   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:27:05,277   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:27:05,278   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:27:05,280   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:27:05,283   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:27:05,285   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 06:27:05,286   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:27:05,288   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:27:05,289   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 06:27:05,291   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:27:05,292   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:27:05,294   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:27:05,295   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:27:05,298   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 06:27:05,299   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 06:27:05,301   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 06:27:05,302   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 06:27:05,325   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 06:27:05,329   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:27:05,333   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:27:05,335   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:27:05,336   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 06:27:05,339   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 06:27:05,340   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 06:27:05,343   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 06:27:05,349   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 06:27:05,350   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 06:27:05,359   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 06:27:05,359   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 06:27:05,360   INFO  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 06:27:05,362   WARN  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Procedure BLE_FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: index scan may provide insufficient ordering
2014-02-27 06:27:05,363   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:27:05,365   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:27:05,366   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 06:27:05,369   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:27:05,374   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 06:27:05,378   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 06:27:05,380   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 06:27:05,381   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 06:27:05,384   INFO  [main] COMPILER: [BLE_FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 06:27:05,390   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 06:27:05,397   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 06:27:05,400   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:27:05,400   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 06:27:05,412   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 06:27:05,417   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 06:27:05,421   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 06:27:05,422   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 06:27:05,426   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 06:27:05,430   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 06:27:05,434   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 06:27:05,434   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:27:05,435   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 06:27:05,441   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:27:05,443   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 06:27:05,446   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 06:27:05,449   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 06:27:05,449   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:27:05,482   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:27:05,484   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 06:27:05,488   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:27:05,496   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 06:27:05,498   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-02-27 06:27:05,507   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:27:05,509   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:27:05,514   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 06:27:05,517   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:27:05,518   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 06:27:05,527   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 06:27:05,528   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 06:27:05,529   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 06:27:05,534   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 06:27:05,538   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 06:27:05,542   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 06:27:05,543   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 06:27:05,546   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 06:27:05,546   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 06:27:05,551   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:27:05,552   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 06:27:05,554   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 06:27:05,555   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:27:05,557   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 06:27:05,559   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:27:05,560   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 06:27:05,562   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 06:27:05,565   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:27:05,568   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 06:27:05,570   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:27:05,571   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 06:27:05,573   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:27:05,577   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:27:05,578   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:27:05,580   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:27:05,581   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:27:05,588   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:27:05,598   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 06:27:05,603   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 06:27:05,605   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 06:27:05,606   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 06:27:05,614   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:27:05,615   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:27:05,638   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:27:05,639   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:27:05,645   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 06:27:05,647   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:27:05,657   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-02-27 06:27:05,659   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:27:05,661   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 06:27:05,663   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:27:05,664   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 06:27:05,666   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:27:05,667   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 06:27:05,674   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 06:27:05,675   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:27:05,677   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 06:27:05,677   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:27:05,678   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 06:27:05,681   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:27:05,682   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 06:27:05,690   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 11:27:07,514   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 11:27:07,531   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 11:27:07,539   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 11:27:07,563   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 11:27:07,563   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 11:27:07,565   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 11:27:07,600   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 11:27:07,613   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 11:27:07,661   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-02-27 11:27:07,666   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 11:27:07,668   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:56310
2014-02-27 11:27:07,669   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 11:27:07,671   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:56310
2014-02-27 11:27:07,681   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16a039a8cb800000 with negotiated timeout 6000 for client /127.0.0.1:56310
2014-02-27 11:27:07,682   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16a039a8cb800000, negotiated timeout = 6000
2014-02-27 11:27:07,723   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 11:27:07,751   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 11:27:07,751   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 11:27:07,778   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 11:27:08,019   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 11:27:09,449   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 11:27:09,453   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 11:27:09,548   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 11:27:09,552   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 11:27:09,844   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 11:27:09,983   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 11:27:10,001   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 11:27:10,017   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 11:27:10,018   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 11:27:10,028   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 11:27:10,029   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 11:27:10,032   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 22 ms.
2014-02-27 11:27:10,032   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 5 ms.
2014-02-27 11:27:10,040   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:27:10,040   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:27:10,042   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 11:27:10,042   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 3 ms.
2014-02-27 11:27:10,060   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:27:10,066   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 11:27:10,067   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 10 ms.
2014-02-27 11:27:10,081   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:27:10,106   INFO  [main] HOST: Database start action is Create.
2014-02-27 11:27:10,134   INFO  [main] HOST: PID of this Volt process is 51881
2014-02-27 11:27:10,134   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 11:27:10,135   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 11:27:10,135   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 11:27:10,135   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 11:27:10,135   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 11:27:10,135   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 11:27:10,135   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 11:27:10,135   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 11:27:10,135   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 11:27:10,135   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 11:27:10,136   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 11:27:10,136   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 11:27:10,136   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 11:27:10,136   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 11:27:10,136   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 11:27:10,136   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 11:27:10,136   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 11:27:10,136   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 11:27:10,136   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 11:27:10,136   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 11:27:10,136   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 11:27:10,136   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 11:27:10,137   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 11:27:10,142   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 11:27:10,142   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 11:27:10,157   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 11:27:10,159   INFO  [Thread-10] HOST: Logging config info
2014-02-27 11:27:10,159   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 11:27:10,184   INFO  [Thread-11] CONSOLE: Server completed initialization.
2014-02-27 06:40:22,897   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 06:40:22,903   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 06:40:22,903   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,904   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,906   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,907   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 06:40:22,907   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 06:40:22,908   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:40:22,908   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:40:22,909   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:40:22,909   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:40:22,910   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:40:22,910   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 06:40:22,912   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,912   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 06:40:22,913   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,913   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 06:40:22,914   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:40:22,914   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 06:40:22,915   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:40:22,915   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 06:40:22,915   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 06:40:22,916   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 06:40:22,917   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,918   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:40:22,918   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:40:22,918   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 06:40:22,919   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:40:22,919   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:40:22,919   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:40:22,920   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,920   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,920   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,921   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,921   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,921   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,922   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 06:40:22,923   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,923   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,923   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,923   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,924   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,924   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 06:40:22,925   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:40:22,926   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:40:22,926   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,926   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:40:22,928   ERROR [main] COMPILER: [null]: In database, Partition column 'RULE.CHECKPATHID' is nullable. Partition columns must be constrained "NOT NULL".
2014-02-27 06:40:22,928   ERROR [main] COMPILER: Failed to compile XML
2014-02-27 06:40:22,928   ERROR [main] COMPILER: Catalog compilation failed.
2014-02-27 11:40:23,990   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 11:40:23,999   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 11:40:24,010   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 11:40:24,036   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 11:40:24,037   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 11:40:24,038   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 11:40:24,043   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 11:40:24,053   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 11:40:24,053   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 11:40:24,053   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 11:40:24,066   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 11:40:24,091   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 11:40:24,153   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 11:40:24,190   FATAL [main] HOST: The PID of this process is 52179
2014-02-27 11:40:24,190   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME
2014-02-27 11:40:24,190   FATAL [main] HOST: java      14305 thorsten   99u  IPv6 1017625      0t0  TCP *:60022 (LISTEN)
2014-02-27 11:40:24,190   FATAL [main] HOST: java      51881 thorsten   34u  IPv6 1017234      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 11:40:24,190   FATAL [main] HOST: java      51881 thorsten   40u  IPv6 1017241      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 11:40:24,190   FATAL [main] HOST: java      51881 thorsten   54u  IPv6 1017248      0t0  TCP *:8080 (LISTEN)
2014-02-27 11:40:24,190   FATAL [main] HOST: java      51881 thorsten   55u  IPv6 1017315      0t0  TCP *:21212 (LISTEN)
2014-02-27 11:40:24,190   FATAL [main] HOST: java      51881 thorsten   56u  IPv6 1017316      0t0  TCP *:21211 (LISTEN)
2014-02-27 11:40:24,195   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 11:40:24,195   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 11:40:24,542   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 11:40:24,546   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:48668
2014-02-27 11:40:24,552   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-02-27 11:40:24,554   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 11:40:24,570   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 11:40:24,582   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 11:40:24,582   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 11:40:24,583   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 06:40:34,078   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 06:40:34,084   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 06:40:34,085   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,085   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,087   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,088   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 06:40:34,088   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 06:40:34,089   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:40:34,089   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:40:34,090   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:40:34,091   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:40:34,091   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:40:34,091   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 06:40:34,093   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,093   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 06:40:34,094   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,094   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 06:40:34,095   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:40:34,095   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 06:40:34,096   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:40:34,096   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 06:40:34,096   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 06:40:34,097   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 06:40:34,098   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,099   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:40:34,099   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:40:34,099   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10098_10099 on table: RULE of type: BALANCED_TREE
2014-02-27 06:40:34,100   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:40:34,100   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:40:34,100   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10102_10103 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:40:34,101   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,101   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,101   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10108_10109 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,102   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,102   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,102   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10114_10115 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,103   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10117_10118 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 06:40:34,104   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,104   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,104   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10122_10123 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,104   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,104   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10127_10128 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,105   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10131_10132 on table: ACTION of type: BALANCED_TREE
2014-02-27 06:40:34,106   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:40:34,106   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10135_10136 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:40:34,107   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,107   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10140_10141 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:40:34,108   ERROR [main] COMPILER: [null]: In database, Partition column 'RULE.CHECKPATHID' is nullable. Partition columns must be constrained "NOT NULL".
2014-02-27 06:40:34,109   ERROR [main] COMPILER: Failed to compile XML
2014-02-27 06:40:34,109   ERROR [main] COMPILER: Catalog compilation failed.
2014-02-27 11:40:35,089   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 11:40:35,094   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 11:40:35,101   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 11:40:35,124   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 11:40:35,124   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 11:40:35,126   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 11:40:35,158   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 11:40:35,173   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 11:40:35,215   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-02-27 11:40:35,219   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 11:40:35,221   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 11:40:35,221   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:56356
2014-02-27 11:40:35,223   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:56356
2014-02-27 11:40:35,240   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16a03fd20b800000 with negotiated timeout 6000 for client /127.0.0.1:56356
2014-02-27 11:40:35,240   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16a03fd20b800000, negotiated timeout = 6000
2014-02-27 11:40:35,281   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 11:40:35,308   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 11:40:35,308   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 11:40:35,322   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 11:40:35,541   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 11:40:37,011   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 11:40:37,014   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 11:40:37,116   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 11:40:37,121   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 11:40:37,408   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 11:40:37,549   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 11:40:37,570   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 11:40:37,583   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 11:40:37,584   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 11:40:37,600   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 11:40:37,600   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 11:40:37,600   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 1 ms.
2014-02-27 11:40:37,600   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 20 ms.
2014-02-27 11:40:37,611   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:40:37,611   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:40:37,613   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 11:40:37,613   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 4 ms.
2014-02-27 11:40:37,626   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:40:37,632   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 11:40:37,634   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 8 ms.
2014-02-27 11:40:37,649   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:40:37,681   INFO  [main] HOST: Database start action is Create.
2014-02-27 11:40:37,705   INFO  [main] HOST: PID of this Volt process is 52239
2014-02-27 11:40:37,705   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 11:40:37,705   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 11:40:37,705   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 11:40:37,705   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 11:40:37,705   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 11:40:37,705   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 11:40:37,705   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 11:40:37,706   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 11:40:37,706   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 11:40:37,706   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 11:40:37,706   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 11:40:37,706   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 11:40:37,706   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 11:40:37,706   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 11:40:37,706   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 11:40:37,706   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 11:40:37,707   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 11:40:37,707   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 11:40:37,707   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 11:40:37,707   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 11:40:37,707   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 11:40:37,708   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 11:40:37,708   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 11:40:37,708   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 11:40:37,708   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 11:40:37,729   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 11:40:37,730   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 11:40:37,731   INFO  [Thread-9] HOST: Logging config info
2014-02-27 11:40:37,758   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 06:41:17,401   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 06:41:17,408   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 06:41:17,408   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,409   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,411   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,411   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 06:41:17,412   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 06:41:17,412   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:41:17,412   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:41:17,413   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:41:17,414   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:41:17,414   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:41:17,414   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 06:41:17,415   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,416   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 06:41:17,416   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,417   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 06:41:17,418   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:41:17,418   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 06:41:17,418   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:41:17,418   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 06:41:17,418   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 06:41:17,420   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 06:41:17,421   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,421   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:41:17,424   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:41:17,424   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-27 06:41:17,425   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:41:17,425   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:41:17,426   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:41:17,426   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,427   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,427   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,429   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,429   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,429   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,429   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 06:41:17,430   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,430   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,430   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,431   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,431   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,432   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-27 06:41:17,433   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:41:17,433   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:41:17,433   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,433   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:41:17,446   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 06:41:17,489   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:41:17,502   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:41:17,505   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 06:41:17,510   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:41:17,515   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:17,522   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:17,526   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:17,533   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 06:41:17,535   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:41:17,537   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:41:17,539   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 06:41:17,542   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:41:17,544   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,548   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,552   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,557   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:41:17,558   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,561   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,564   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,577   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 06:41:17,578   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,581   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,584   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,586   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 06:41:17,589   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 06:41:17,592   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 06:41:17,595   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 06:41:17,597   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 06:41:17,600   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 06:41:17,603   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:41:17,605   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 06:41:17,607   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 06:41:17,610   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 06:41:17,611   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:41:17,613   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:41:17,615   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:41:17,617   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:41:17,619   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:17,622   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:17,624   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:17,627   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 06:41:17,629   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 06:41:17,631   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 06:41:17,634   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 06:41:17,635   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:41:17,638   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:41:17,639   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 06:41:17,641   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 06:41:17,643   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:17,645   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:17,647   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:17,650   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 06:41:17,651   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 06:41:17,654   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 06:41:17,656   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:41:17,658   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,661   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,663   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,666   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:41:17,667   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,670   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,672   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,674   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:41:17,676   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,678   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,680   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,683   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:41:17,684   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:41:17,688   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:41:17,690   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:41:17,692   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:41:17,695   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 06:41:17,697   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 06:41:17,700   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 06:41:17,701   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:41:17,703   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:41:17,705   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?, ?);
2014-02-27 06:41:17,707   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,709   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,711   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:17,713   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 06:41:17,714   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:41:17,724   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:41:17,727   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:41:17,729   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:41:17,730   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:41:17,733   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:41:17,734   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:41:17,736   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 06:41:17,737   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:41:17,748   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:41:17,753   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 06:41:17,755   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:41:17,756   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:41:17,758   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:41:17,760   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:41:17,762   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 06:41:17,763   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 06:41:17,765   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 06:41:17,766   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 06:41:17,798   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 06:41:17,803   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:41:17,806   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:41:17,808   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:17,809   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 06:41:17,812   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:17,813   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 06:41:17,817   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 06:41:17,827   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 06:41:17,828   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 06:41:17,837   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 06:41:17,837   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 06:41:17,839   INFO  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 06:41:17,841   WARN  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Procedure BLE_FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:17,843   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:41:17,845   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:17,847   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 06:41:17,850   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:41:17,854   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 06:41:17,858   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 06:41:17,860   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:17,861   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 06:41:17,864   INFO  [main] COMPILER: [BLE_FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 06:41:17,868   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 06:41:17,874   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 06:41:17,877   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:17,878   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 06:41:17,882   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 06:41:17,885   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 06:41:17,888   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 06:41:17,889   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 06:41:17,892   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 06:41:17,896   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 06:41:17,901   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 06:41:17,901   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:17,902   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 06:41:17,905   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:41:17,905   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 06:41:17,909   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 06:41:17,911   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 06:41:17,916   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:41:17,935   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:41:17,936   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 06:41:17,939   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:17,941   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 06:41:17,943   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-02-27 06:41:17,946   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:41:17,953   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:41:17,958   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 06:41:17,960   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:17,961   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 06:41:17,965   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 06:41:17,965   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 06:41:17,966   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 06:41:17,970   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 06:41:17,973   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 06:41:17,975   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:17,977   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 06:41:17,979   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 06:41:17,980   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 06:41:17,983   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:17,984   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 06:41:17,986   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:17,987   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:41:17,989   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 06:41:17,992   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:17,993   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 06:41:17,995   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 06:41:18,003   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:41:18,005   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 06:41:18,008   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:18,009   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 06:41:18,013   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:41:18,015   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:18,016   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:41:18,019   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:18,020   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:41:18,024   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:41:18,027   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 06:41:18,030   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 06:41:18,033   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 06:41:18,034   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 06:41:18,037   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:41:18,038   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:41:18,082   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:41:18,092   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:41:18,095   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 06:41:18,097   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:41:18,098   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-02-27 06:41:18,100   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:41:18,108   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 06:41:18,115   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:41:18,116   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 06:41:18,118   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:18,119   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 06:41:18,122   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 06:41:18,123   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:41:18,125   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 06:41:18,125   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:18,126   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 06:41:18,133   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:18,134   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 06:41:18,142   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 11:41:19,638   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 11:41:19,645   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 11:41:19,652   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 11:41:19,677   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 11:41:19,677   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 11:41:19,679   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 11:41:19,684   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 11:41:19,697   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 11:41:19,697   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 11:41:19,698   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 11:41:19,715   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 11:41:19,742   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 11:41:19,777   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 11:41:19,812   FATAL [main] HOST: The PID of this process is 52341
2014-02-27 11:41:19,812   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME
2014-02-27 11:41:19,812   FATAL [main] HOST: java      14305 thorsten   99u  IPv6 1018575      0t0  TCP *:58674 (LISTEN)
2014-02-27 11:41:19,812   FATAL [main] HOST: java      52239 thorsten   34u  IPv6 1018409      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 11:41:19,812   FATAL [main] HOST: java      52239 thorsten   40u  IPv6 1018416      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 11:41:19,812   FATAL [main] HOST: java      52239 thorsten   54u  IPv6 1018423      0t0  TCP *:8080 (LISTEN)
2014-02-27 11:41:19,813   FATAL [main] HOST: java      52239 thorsten   55u  IPv6 1018490      0t0  TCP *:21212 (LISTEN)
2014-02-27 11:41:19,813   FATAL [main] HOST: java      52239 thorsten   56u  IPv6 1018491      0t0  TCP *:21211 (LISTEN)
2014-02-27 11:41:19,818   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 11:41:19,818   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 11:41:20,154   WARN  [ZooKeeperServer] org.voltdb.messaging.impl.HostMessenger: Attempted delivery of message to failed site: 1:-1
2014-02-27 11:41:20,155   WARN  [Volt Network - 1] HOST: Received remote hangup from foreign host localhost/127.0.0.1:48672
2014-02-27 11:41:20,162   WARN  [Volt Network - 1] NETWORK: Host 1 failed
2014-02-27 11:41:20,163   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 11:41:20,182   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 11:41:20,192   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 11:41:20,192   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 11:41:20,193   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 06:41:29,029   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 06:41:29,035   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 06:41:29,035   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,036   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,038   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,039   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 06:41:29,039   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 06:41:29,040   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:41:29,040   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:41:29,041   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:41:29,042   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:41:29,042   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:41:29,042   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 06:41:29,043   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,044   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 06:41:29,045   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,045   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 06:41:29,046   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:41:29,046   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 06:41:29,046   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:41:29,047   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 06:41:29,047   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 06:41:29,048   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 06:41:29,049   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,050   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:41:29,050   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:41:29,050   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-27 06:41:29,051   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:41:29,051   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:41:29,051   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:41:29,052   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,052   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,052   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,053   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,053   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,053   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,053   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 06:41:29,054   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,054   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,054   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,055   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,055   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,056   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-27 06:41:29,057   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:41:29,057   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:41:29,057   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,058   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:41:29,070   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 06:41:29,117   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:41:29,129   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:41:29,132   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 06:41:29,137   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:41:29,142   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:29,149   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:29,153   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:29,160   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 06:41:29,162   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:41:29,164   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:41:29,166   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 06:41:29,169   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:41:29,171   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,175   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,179   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,183   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:41:29,185   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,188   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,190   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,198   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 06:41:29,200   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,203   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,209   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,212   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 06:41:29,216   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 06:41:29,219   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 06:41:29,223   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 06:41:29,225   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 06:41:29,228   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 06:41:29,231   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:41:29,233   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 06:41:29,235   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 06:41:29,238   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 06:41:29,241   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:41:29,243   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:41:29,244   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:41:29,247   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:41:29,249   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:29,255   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:29,257   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:29,260   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 06:41:29,262   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 06:41:29,266   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 06:41:29,268   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 06:41:29,270   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:41:29,273   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:41:29,275   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 06:41:29,277   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 06:41:29,278   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:29,281   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:29,283   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:41:29,286   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 06:41:29,289   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 06:41:29,291   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 06:41:29,296   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:41:29,298   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,301   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,303   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,306   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:41:29,308   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,311   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,312   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,315   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:41:29,316   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,319   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,322   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,325   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:41:29,327   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:41:29,329   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:41:29,331   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:41:29,334   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:41:29,338   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 06:41:29,339   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 06:41:29,344   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 06:41:29,346   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:41:29,347   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:41:29,350   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?, ?);
2014-02-27 06:41:29,351   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,353   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,355   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:41:29,358   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 06:41:29,359   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:41:29,367   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:41:29,369   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:41:29,371   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:41:29,373   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:41:29,375   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:41:29,376   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:41:29,378   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 06:41:29,379   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:41:29,381   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:41:29,383   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 06:41:29,385   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:41:29,386   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:41:29,388   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:41:29,390   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:41:29,392   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 06:41:29,393   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 06:41:29,395   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 06:41:29,396   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 06:41:29,420   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 06:41:29,425   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:41:29,428   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:41:29,430   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:29,432   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 06:41:29,434   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:29,435   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 06:41:29,438   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 06:41:29,445   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 06:41:29,446   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 06:41:29,454   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 06:41:29,454   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 06:41:29,455   INFO  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 06:41:29,457   WARN  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Procedure BLE_FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:29,458   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:41:29,460   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:29,461   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 06:41:29,464   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:41:29,468   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 06:41:29,472   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 06:41:29,475   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:29,476   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 06:41:29,479   INFO  [main] COMPILER: [BLE_FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 06:41:29,483   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 06:41:29,494   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 06:41:29,497   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:29,498   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 06:41:29,504   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 06:41:29,507   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 06:41:29,510   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 06:41:29,511   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 06:41:29,515   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 06:41:29,520   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 06:41:29,524   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 06:41:29,524   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:29,530   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 06:41:29,532   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:41:29,533   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 06:41:29,542   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 06:41:29,549   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 06:41:29,550   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:41:29,577   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:41:29,578   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 06:41:29,584   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:29,585   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 06:41:29,587   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-02-27 06:41:29,590   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:41:29,592   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:41:29,603   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 06:41:29,606   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:29,607   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 06:41:29,610   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 06:41:29,610   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 06:41:29,611   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 06:41:29,614   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 06:41:29,618   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 06:41:29,619   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:29,620   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 06:41:29,622   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 06:41:29,623   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 06:41:29,625   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:29,626   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 06:41:29,628   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:29,629   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:41:29,631   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 06:41:29,633   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:29,634   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 06:41:29,636   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 06:41:29,639   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:41:29,642   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 06:41:29,643   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:29,644   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 06:41:29,647   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:41:29,650   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:29,651   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:41:29,653   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:29,654   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:41:29,657   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:41:29,660   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 06:41:29,662   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 06:41:29,665   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 06:41:29,666   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 06:41:29,668   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:41:29,669   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:41:29,696   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:41:29,698   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:41:29,710   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 06:41:29,712   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:41:29,713   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-02-27 06:41:29,715   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:41:29,718   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 06:41:29,725   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:41:29,726   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 06:41:29,727   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:29,728   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 06:41:29,730   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 06:41:29,731   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:41:29,733   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 06:41:29,733   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:41:29,734   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 06:41:29,740   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:41:29,741   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 06:41:29,748   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 11:41:31,566   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 11:41:31,580   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 11:41:31,587   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 11:41:31,610   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 11:41:31,610   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 11:41:31,612   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 11:41:31,647   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 11:41:31,662   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 11:41:31,705   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@1b6ebaa7
2014-02-27 11:41:31,710   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 11:41:31,711   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:56360
2014-02-27 11:41:31,712   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 11:41:31,714   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:56360
2014-02-27 11:41:31,731   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16a0404061800000 with negotiated timeout 6000 for client /127.0.0.1:56360
2014-02-27 11:41:31,732   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16a0404061800000, negotiated timeout = 6000
2014-02-27 11:41:31,781   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 11:41:31,809   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 11:41:31,809   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 11:41:31,822   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 11:41:32,039   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 11:41:33,490   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 11:41:33,494   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 11:41:33,590   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 11:41:33,594   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 11:41:33,874   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 11:41:34,007   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 11:41:34,025   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 11:41:34,035   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 11:41:34,042   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 11:41:34,052   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 11:41:34,057   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 22 ms.
2014-02-27 11:41:34,059   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 11:41:34,059   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 6 ms.
2014-02-27 11:41:34,065   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:41:34,065   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:41:34,069   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 11:41:34,069   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 4 ms.
2014-02-27 11:41:34,081   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:41:34,091   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 11:41:34,093   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 10 ms.
2014-02-27 11:41:34,101   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:41:34,125   INFO  [main] HOST: Database start action is Create.
2014-02-27 11:41:34,149   INFO  [main] HOST: PID of this Volt process is 52402
2014-02-27 11:41:34,149   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 11:41:34,149   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 11:41:34,149   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 11:41:34,149   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 11:41:34,149   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 11:41:34,150   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 11:41:34,150   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 11:41:34,150   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 11:41:34,150   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 11:41:34,150   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 11:41:34,150   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 11:41:34,150   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 11:41:34,150   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 11:41:34,150   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 11:41:34,151   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 11:41:34,151   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 11:41:34,151   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 11:41:34,151   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 11:41:34,151   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 11:41:34,151   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 11:41:34,151   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 11:41:34,151   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 11:41:34,151   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 11:41:34,157   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 11:41:34,157   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 11:41:34,172   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 11:41:34,173   INFO  [Thread-9] HOST: Logging config info
2014-02-27 11:41:34,174   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 11:41:34,200   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 11:42:20,460   WARN  [Volt Network - 0] AUTH: Error sending procedure RULE.insert to the correct partition. Make sure parameter values are correct. Parameter value null, partition column CHECKPATHID type 9 Message: Invalid partitionIndex
2014-02-27 06:45:39,215   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 06:45:39,221   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 06:45:39,222   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,224   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,226   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,226   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 06:45:39,227   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 06:45:39,227   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:45:39,227   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:45:39,232   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:45:39,233   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:45:39,233   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:45:39,233   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 06:45:39,236   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,236   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 06:45:39,237   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,237   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 06:45:39,239   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:45:39,239   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 06:45:39,239   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:45:39,239   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 06:45:39,239   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 06:45:39,240   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 06:45:39,241   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,242   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:45:39,242   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:45:39,242   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-27 06:45:39,243   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:45:39,243   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:45:39,243   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:45:39,244   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,244   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,244   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,244   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,244   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,244   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,245   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 06:45:39,245   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,245   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,245   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,246   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,246   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,246   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-27 06:45:39,247   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:45:39,247   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:45:39,247   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,247   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:45:39,259   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 06:45:39,312   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:45:39,324   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:45:39,327   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 06:45:39,332   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:45:39,337   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:39,344   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:39,348   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:39,355   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 06:45:39,357   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:45:39,359   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:45:39,362   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 06:45:39,364   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:45:39,366   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,371   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,375   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,379   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:45:39,381   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,385   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,387   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,395   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 06:45:39,397   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,400   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,402   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,406   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 06:45:39,409   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 06:45:39,412   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 06:45:39,415   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 06:45:39,417   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 06:45:39,420   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 06:45:39,423   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:45:39,425   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 06:45:39,427   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 06:45:39,431   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 06:45:39,432   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:45:39,435   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:45:39,437   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:45:39,439   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:45:39,441   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:39,444   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:39,446   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:39,449   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 06:45:39,451   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 06:45:39,453   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 06:45:39,456   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 06:45:39,458   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:45:39,460   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:45:39,462   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 06:45:39,464   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 06:45:39,466   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:39,468   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:39,470   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:39,472   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 06:45:39,474   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 06:45:39,476   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 06:45:39,479   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:45:39,481   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,484   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,486   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,489   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:45:39,490   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,493   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,494   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,497   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:45:39,499   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,502   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,504   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,507   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:45:39,508   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:45:39,512   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:45:39,514   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:45:39,517   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:45:39,520   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 06:45:39,522   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 06:45:39,526   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 06:45:39,528   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:45:39,530   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:45:39,535   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?, ?);
2014-02-27 06:45:39,536   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,540   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,541   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:39,544   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 06:45:39,545   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:45:39,552   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:45:39,554   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:45:39,557   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:45:39,558   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:45:39,560   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:45:39,562   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:45:39,564   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 06:45:39,565   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:45:39,574   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:45:39,575   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 06:45:39,583   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:45:39,584   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:45:39,587   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:45:39,588   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:45:39,590   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 06:45:39,592   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 06:45:39,594   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 06:45:39,595   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 06:45:39,620   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 06:45:39,625   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:45:39,628   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:45:39,631   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:39,632   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 06:45:39,635   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:39,637   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 06:45:39,640   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 06:45:39,647   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 06:45:39,649   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 06:45:39,666   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 06:45:39,666   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 06:45:39,668   INFO  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 06:45:39,674   WARN  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Procedure BLE_FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:39,676   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:45:39,686   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:39,687   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 06:45:39,690   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:45:39,701   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 06:45:39,706   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 06:45:39,711   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:39,712   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 06:45:39,721   INFO  [main] COMPILER: [BLE_FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 06:45:39,725   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 06:45:39,750   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 06:45:39,752   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:39,753   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 06:45:39,757   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 06:45:39,761   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 06:45:39,764   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 06:45:39,765   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 06:45:39,776   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 06:45:39,780   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 06:45:39,785   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 06:45:39,785   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:39,786   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 06:45:39,788   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:45:39,789   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 06:45:39,793   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 06:45:39,795   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 06:45:39,796   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:45:39,814   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:45:39,815   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 06:45:39,819   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:39,820   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 06:45:39,823   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-02-27 06:45:39,825   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:45:39,828   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:45:39,830   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 06:45:39,832   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:39,833   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 06:45:39,838   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 06:45:39,838   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 06:45:39,839   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 06:45:39,843   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 06:45:39,846   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 06:45:39,847   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:39,848   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 06:45:39,851   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 06:45:39,852   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 06:45:39,854   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:39,855   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 06:45:39,857   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:39,858   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:45:39,860   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 06:45:39,862   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:39,863   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 06:45:39,865   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 06:45:39,883   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:45:39,886   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 06:45:39,888   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:39,889   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 06:45:39,892   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:45:39,895   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:39,896   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:45:39,898   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:39,899   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:45:39,903   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:45:39,906   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 06:45:39,909   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 06:45:39,911   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 06:45:39,912   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 06:45:39,917   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:45:39,921   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:45:39,942   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:45:39,943   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:45:39,954   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 06:45:39,956   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:45:39,957   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-02-27 06:45:39,959   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:45:39,962   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 06:45:39,973   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:45:39,974   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 06:45:39,976   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:39,977   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 06:45:39,979   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 06:45:39,980   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:45:39,982   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 06:45:39,982   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:39,983   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 06:45:39,989   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:39,991   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 06:45:39,998   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 11:45:41,585   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 11:45:41,591   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 11:45:41,598   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 11:45:41,622   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 11:45:41,622   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 11:45:41,624   INFO  [main] CONSOLE: Connecting to the VoltDB cluster leader localhost/127.0.0.1:3021
2014-02-27 11:45:41,629   INFO  [Socket Joiner] HOST: Received request type REQUEST_HOSTID
2014-02-27 11:45:41,642   INFO  [main] HOST: Leader provided address 127.0.0.1
2014-02-27 11:45:41,642   INFO  [main] HOST: Clock skew to across all nodes in the cluster is 1
2014-02-27 11:45:41,642   INFO  [main] NETWORK: 1 notified of host 0
2014-02-27 11:45:41,653   INFO  [ZooKeeperServer] REJOIN: Joining site 1:-1 known  active sites 0:-1, 1:-1
2014-02-27 11:45:41,682   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 11:45:41,711   FATAL [main] HOST: Logging ports that are bound for listening, this doesn't include ports bound by outgoing connections which can also cause a failure to bind
2014-02-27 11:45:41,751   FATAL [main] HOST: The PID of this process is 52896
2014-02-27 11:45:41,751   FATAL [main] HOST: COMMAND     PID     USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME
2014-02-27 11:45:41,751   FATAL [main] HOST: java      14305 thorsten   99u  IPv6 1020006      0t0  TCP *:33488 (LISTEN)
2014-02-27 11:45:41,751   FATAL [main] HOST: java      52402 thorsten   34u  IPv6 1019375      0t0  TCP 127.0.0.1:3021 (LISTEN)
2014-02-27 11:45:41,751   FATAL [main] HOST: java      52402 thorsten   40u  IPv6 1019382      0t0  TCP 127.0.0.1:2181 (LISTEN)
2014-02-27 11:45:41,751   FATAL [main] HOST: java      52402 thorsten   54u  IPv6 1019389      0t0  TCP *:8080 (LISTEN)
2014-02-27 11:45:41,751   FATAL [main] HOST: java      52402 thorsten   55u  IPv6 1019456      0t0  TCP *:21212 (LISTEN)
2014-02-27 11:45:41,751   FATAL [main] HOST: java      52402 thorsten   56u  IPv6 1019457      0t0  TCP *:21211 (LISTEN)
2014-02-27 11:45:41,757   FATAL [main] HOST: ZooKeeper service unable to bind to port : 2181
2014-02-27 11:45:41,757   FATAL [main] HOST: java.net.BindException: Address already in use
2014-02-27 11:45:42,094   WARN  [Volt Network - 0] HOST: Received remote hangup from foreign host localhost/127.0.0.1:48821
2014-02-27 11:45:42,101   INFO  [ZooKeeperServer] REJOIN: Agreement, Processing FaultMessage {failed: 1:-1, reporting: 0:-1, witnessed: true}
2014-02-27 11:45:42,103   WARN  [Volt Network - 0] NETWORK: Host 1 failed
2014-02-27 11:45:42,118   INFO  [ZooKeeperServer] REJOIN: Agreement, Sending survivors SITE_FAILURE_UPDATE from site: 0:-1 survivors: [0:-1] failed: [1:-1]
2014-02-27 11:45:42,128   INFO  [ZooKeeperServer] REJOIN: Agreement, Adding 1:-1 to failed sites history
2014-02-27 11:45:42,128   INFO  [ZooKeeperServer] REJOIN: Agreement, handling site faults for newly failed sites 1:-1 initiatorSafeInitPoints {1:-1->-1}
2014-02-27 11:45:42,129   WARN  [ZooKeeperServer] NETWORK: Host 1 failed
2014-02-27 06:45:54,697   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 06:45:54,708   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 06:45:54,709   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,711   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,713   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,713   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 06:45:54,714   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 06:45:54,714   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:45:54,714   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:45:54,720   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:45:54,721   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:45:54,721   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:45:54,722   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 06:45:54,723   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,723   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 06:45:54,724   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,724   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 06:45:54,725   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:45:54,725   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 06:45:54,726   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:45:54,726   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 06:45:54,726   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 06:45:54,727   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 06:45:54,728   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,729   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:45:54,729   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:45:54,729   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-27 06:45:54,730   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:45:54,730   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:45:54,730   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:45:54,731   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,731   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,731   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,732   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,732   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,732   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,732   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 06:45:54,733   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,733   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,733   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,734   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,734   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,734   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-27 06:45:54,735   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:45:54,735   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:45:54,735   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,736   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:45:54,748   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 06:45:54,789   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:45:54,803   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:45:54,806   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 06:45:54,811   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:45:54,816   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:54,823   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:54,827   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:54,834   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 06:45:54,835   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:45:54,839   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:45:54,841   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 06:45:54,844   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:45:54,845   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,850   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,853   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,857   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:45:54,859   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,862   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,864   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,874   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 06:45:54,875   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,878   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,880   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,883   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 06:45:54,886   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 06:45:54,888   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 06:45:54,891   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 06:45:54,893   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 06:45:54,896   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 06:45:54,899   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:45:54,900   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 06:45:54,903   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 06:45:54,905   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 06:45:54,907   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:45:54,909   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:45:54,910   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:45:54,912   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:45:54,914   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:54,917   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:54,919   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:54,922   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 06:45:54,924   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 06:45:54,926   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 06:45:54,929   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 06:45:54,930   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:45:54,932   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:45:54,934   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 06:45:54,936   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 06:45:54,937   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:54,939   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:54,941   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:45:54,944   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 06:45:54,945   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 06:45:54,947   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 06:45:54,950   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:45:54,951   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,954   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,956   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,959   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:45:54,960   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,963   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,965   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,967   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:45:54,969   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,972   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,974   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:54,976   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:45:54,978   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:45:54,980   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:45:54,982   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:45:54,985   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:45:54,987   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 06:45:54,989   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 06:45:54,992   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 06:45:54,994   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:45:54,995   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:45:54,998   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?, ?);
2014-02-27 06:45:54,999   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:55,001   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:55,003   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:45:55,006   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 06:45:55,007   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:45:55,015   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:45:55,016   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:45:55,019   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:45:55,020   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:45:55,022   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:45:55,023   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:45:55,025   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 06:45:55,026   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:45:55,028   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:45:55,029   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 06:45:55,031   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:45:55,032   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:45:55,035   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:45:55,038   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:45:55,044   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 06:45:55,046   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 06:45:55,047   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 06:45:55,049   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 06:45:55,081   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 06:45:55,086   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:45:55,089   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:45:55,094   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:55,099   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 06:45:55,102   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:55,111   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 06:45:55,114   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 06:45:55,130   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 06:45:55,132   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 06:45:55,139   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 06:45:55,140   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 06:45:55,141   INFO  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 06:45:55,143   WARN  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Procedure BLE_FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:55,144   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:45:55,147   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:55,153   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 06:45:55,156   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:45:55,163   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 06:45:55,167   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 06:45:55,169   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:55,170   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 06:45:55,173   INFO  [main] COMPILER: [BLE_FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 06:45:55,177   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 06:45:55,188   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 06:45:55,189   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:55,190   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 06:45:55,194   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 06:45:55,197   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 06:45:55,200   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 06:45:55,201   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 06:45:55,208   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 06:45:55,221   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 06:45:55,231   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 06:45:55,231   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:55,232   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 06:45:55,238   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:45:55,239   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 06:45:55,244   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 06:45:55,250   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 06:45:55,251   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:45:55,277   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:45:55,278   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 06:45:55,283   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:55,285   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 06:45:55,287   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-02-27 06:45:55,290   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:45:55,292   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:45:55,301   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 06:45:55,302   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:55,303   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 06:45:55,310   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 06:45:55,310   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 06:45:55,311   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 06:45:55,315   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 06:45:55,318   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 06:45:55,320   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:55,321   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 06:45:55,325   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 06:45:55,326   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 06:45:55,329   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:55,330   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 06:45:55,331   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:55,332   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:45:55,334   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 06:45:55,336   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:55,337   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 06:45:55,340   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 06:45:55,343   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:45:55,347   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 06:45:55,353   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:55,354   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 06:45:55,357   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:45:55,361   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:55,362   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:45:55,364   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:55,365   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:45:55,368   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:45:55,373   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 06:45:55,381   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 06:45:55,383   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 06:45:55,384   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 06:45:55,390   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:45:55,391   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:45:55,411   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:45:55,412   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:45:55,421   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 06:45:55,424   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:45:55,425   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-02-27 06:45:55,427   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:45:55,429   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 06:45:55,436   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:45:55,437   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 06:45:55,439   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:55,440   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 06:45:55,441   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 06:45:55,442   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:45:55,444   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 06:45:55,444   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:45:55,445   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 06:45:55,452   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:45:55,453   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 06:45:55,460   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 11:45:56,733   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 11:45:56,749   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 11:45:56,759   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 11:45:56,782   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 11:45:56,782   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 11:45:56,784   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 11:45:56,817   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 11:45:56,833   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 11:45:56,880   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@485fd4e6
2014-02-27 11:45:56,885   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 11:45:56,887   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 11:45:56,887   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:56517
2014-02-27 11:45:56,889   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:56517
2014-02-27 11:45:56,899   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16a042464c800000 with negotiated timeout 6000 for client /127.0.0.1:56517
2014-02-27 11:45:56,899   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16a042464c800000, negotiated timeout = 6000
2014-02-27 11:45:56,937   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 11:45:56,969   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 11:45:56,969   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 11:45:56,983   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 11:45:57,192   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 11:45:58,604   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 11:45:58,608   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 11:45:58,707   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 11:45:58,711   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 11:45:59,000   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 11:45:59,134   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 11:45:59,151   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 11:45:59,166   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 11:45:59,168   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 11:45:59,178   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 11:45:59,178   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 11:45:59,182   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 5 ms.
2014-02-27 11:45:59,182   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 20 ms.
2014-02-27 11:45:59,191   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:45:59,191   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:45:59,192   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 11:45:59,192   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 4 ms.
2014-02-27 11:45:59,206   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:45:59,210   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 11:45:59,211   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 9 ms.
2014-02-27 11:45:59,224   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:45:59,251   INFO  [main] HOST: Database start action is Create.
2014-02-27 11:45:59,275   INFO  [main] HOST: PID of this Volt process is 52974
2014-02-27 11:45:59,275   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 11:45:59,275   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 11:45:59,275   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 11:45:59,275   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 11:45:59,275   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 11:45:59,275   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 11:45:59,276   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 11:45:59,276   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 11:45:59,276   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 11:45:59,276   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 11:45:59,276   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 11:45:59,276   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 11:45:59,276   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 11:45:59,276   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 11:45:59,276   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 11:45:59,276   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 11:45:59,276   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 11:45:59,277   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 11:45:59,277   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 11:45:59,277   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 11:45:59,277   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 11:45:59,277   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 11:45:59,278   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 11:45:59,278   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 11:45:59,278   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 11:45:59,293   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 11:45:59,294   INFO  [Thread-9] HOST: Logging config info
2014-02-27 11:45:59,294   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 11:45:59,332   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 06:50:09,478   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 06:50:09,485   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 06:50:09,485   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,486   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,488   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,488   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 06:50:09,489   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 06:50:09,489   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:50:09,489   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:50:09,490   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:50:09,491   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:50:09,491   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:50:09,491   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 06:50:09,492   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,493   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 06:50:09,494   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,494   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 06:50:09,495   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:50:09,495   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 06:50:09,495   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:50:09,495   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 06:50:09,496   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 06:50:09,497   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 06:50:09,498   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,498   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:50:09,499   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:50:09,499   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-27 06:50:09,500   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:50:09,500   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:50:09,500   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:50:09,500   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,501   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,501   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,501   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,502   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,502   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,502   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 06:50:09,503   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,503   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,503   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,504   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,504   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,505   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-27 06:50:09,506   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:50:09,506   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:50:09,506   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,506   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:50:09,520   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 06:50:09,571   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:50:09,593   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:50:09,596   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 06:50:09,600   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:50:09,608   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:50:09,614   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:50:09,618   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:50:09,625   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 06:50:09,626   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:50:09,635   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:50:09,636   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 06:50:09,642   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:50:09,644   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,650   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,654   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,658   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:50:09,660   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,664   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,667   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,679   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 06:50:09,680   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,683   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,687   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,690   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 06:50:09,693   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 06:50:09,696   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 06:50:09,700   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 06:50:09,702   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 06:50:09,705   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 06:50:09,708   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:50:09,710   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 06:50:09,712   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 06:50:09,715   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 06:50:09,716   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:50:09,719   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:50:09,720   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:50:09,722   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:50:09,724   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:50:09,730   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:50:09,732   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:50:09,735   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 06:50:09,737   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 06:50:09,742   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 06:50:09,744   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 06:50:09,746   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:50:09,748   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:50:09,749   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 06:50:09,751   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 06:50:09,753   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:50:09,755   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:50:09,757   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:50:09,760   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 06:50:09,761   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 06:50:09,763   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 06:50:09,766   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:50:09,768   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,771   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,773   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,776   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:50:09,777   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,780   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,782   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,784   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:50:09,785   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,788   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,790   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,792   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:50:09,794   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:50:09,797   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:50:09,798   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:50:09,801   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:50:09,803   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 06:50:09,806   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 06:50:09,809   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 06:50:09,810   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:50:09,812   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:50:09,814   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?, ?);
2014-02-27 06:50:09,816   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,818   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,820   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:50:09,822   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 06:50:09,823   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:50:09,830   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:50:09,832   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:50:09,834   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:50:09,835   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:50:09,837   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:50:09,839   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:50:09,841   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 06:50:09,842   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:50:09,844   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:50:09,845   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 06:50:09,847   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:50:09,848   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:50:09,850   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:50:09,852   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:50:09,854   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 06:50:09,855   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 06:50:09,857   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 06:50:09,858   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 06:50:09,882   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 06:50:09,887   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:50:09,890   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:50:09,892   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:50:09,893   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 06:50:09,896   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 06:50:09,897   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 06:50:09,903   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 06:50:09,913   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 06:50:09,914   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 06:50:09,922   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 06:50:09,922   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 06:50:09,923   INFO  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 06:50:09,925   WARN  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Procedure BLE_FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:50:09,926   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:50:09,928   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:50:09,929   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 06:50:09,932   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:50:09,937   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 06:50:09,940   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 06:50:09,942   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 06:50:09,943   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 06:50:09,946   INFO  [main] COMPILER: [BLE_FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 06:50:09,950   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 06:50:09,956   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 06:50:09,961   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:50:09,962   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 06:50:09,965   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 06:50:09,974   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 06:50:09,976   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 06:50:09,977   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 06:50:09,986   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 06:50:09,990   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 06:50:09,994   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 06:50:09,994   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:50:09,995   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 06:50:10,001   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:50:10,002   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 06:50:10,005   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 06:50:10,012   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 06:50:10,013   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:50:10,046   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:50:10,047   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 06:50:10,050   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:50:10,052   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 06:50:10,054   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-02-27 06:50:10,057   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:50:10,060   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:50:10,064   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 06:50:10,066   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:50:10,067   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 06:50:10,072   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 06:50:10,073   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 06:50:10,074   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 06:50:10,077   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 06:50:10,082   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 06:50:10,084   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 06:50:10,085   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 06:50:10,089   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 06:50:10,090   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 06:50:10,093   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:50:10,094   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 06:50:10,096   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 06:50:10,097   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:50:10,099   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 06:50:10,101   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:50:10,109   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 06:50:10,112   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 06:50:10,116   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:50:10,119   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 06:50:10,124   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:50:10,125   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 06:50:10,130   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:50:10,133   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:50:10,134   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:50:10,136   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:50:10,137   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:50:10,140   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:50:10,145   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 06:50:10,157   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 06:50:10,160   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 06:50:10,161   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 06:50:10,167   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:50:10,168   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:50:10,188   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:50:10,194   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:50:10,197   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 06:50:10,199   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:50:10,200   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-02-27 06:50:10,202   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:50:10,209   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 06:50:10,216   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:50:10,217   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 06:50:10,219   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:50:10,220   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 06:50:10,222   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 06:50:10,223   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:50:10,225   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 06:50:10,225   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:50:10,226   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 06:50:10,232   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:50:10,233   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 06:50:10,240   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 11:50:11,799   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 11:50:11,817   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 11:50:11,828   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 11:50:11,858   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 11:50:11,858   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 11:50:11,860   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 11:50:11,892   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 11:50:11,907   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 11:50:11,951   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@485fd4e6
2014-02-27 11:50:11,956   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 11:50:11,958   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:56561
2014-02-27 11:50:11,959   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 11:50:11,961   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:56561
2014-02-27 11:50:11,972   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16a044387c800000 with negotiated timeout 6000 for client /127.0.0.1:56561
2014-02-27 11:50:11,973   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16a044387c800000, negotiated timeout = 6000
2014-02-27 11:50:12,019   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 11:50:12,040   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 11:50:12,040   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 11:50:12,053   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 11:50:12,273   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 11:50:13,735   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 11:50:13,739   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 11:50:13,835   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 11:50:13,839   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 11:50:14,147   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 11:50:14,295   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 11:50:14,313   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 11:50:14,323   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 11:50:14,331   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 11:50:14,339   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 11:50:14,339   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 11:50:14,344   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 11:50:14,348   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 5 ms.
2014-02-27 11:50:14,348   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 10 ms.
2014-02-27 11:50:14,348   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 25 ms.
2014-02-27 11:50:14,368   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:50:14,368   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:50:14,368   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:50:14,372   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 11:50:14,378   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 13 ms.
2014-02-27 11:50:14,385   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:50:14,410   INFO  [main] HOST: Database start action is Create.
2014-02-27 11:50:14,435   INFO  [main] HOST: PID of this Volt process is 53149
2014-02-27 11:50:14,435   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 11:50:14,435   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 11:50:14,435   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 11:50:14,435   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 11:50:14,435   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 11:50:14,435   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 11:50:14,435   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 11:50:14,435   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 11:50:14,436   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 11:50:14,436   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 11:50:14,436   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 11:50:14,436   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 11:50:14,436   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 11:50:14,436   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 11:50:14,436   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 11:50:14,436   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 11:50:14,436   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 11:50:14,436   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 11:50:14,436   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 11:50:14,436   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 11:50:14,436   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 11:50:14,436   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 11:50:14,437   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 11:50:14,443   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 11:50:14,443   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 11:50:14,458   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 11:50:14,460   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 11:50:14,460   INFO  [Thread-9] HOST: Logging config info
2014-02-27 11:50:14,484   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 06:52:48,887   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 06:52:48,904   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 06:52:48,905   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,906   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,914   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,914   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 06:52:48,915   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 06:52:48,915   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:52:48,916   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:52:48,917   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:52:48,917   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:52:48,917   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:52:48,918   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 06:52:48,919   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,926   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 06:52:48,927   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,927   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 06:52:48,929   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:52:48,929   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 06:52:48,929   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:52:48,929   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 06:52:48,929   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 06:52:48,930   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 06:52:48,937   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,938   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:52:48,938   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:52:48,939   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-27 06:52:48,940   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:52:48,940   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:52:48,940   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:52:48,941   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,941   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,941   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,942   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,942   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,942   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,942   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 06:52:48,943   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,943   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,943   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,944   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,944   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,945   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-27 06:52:48,946   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:52:48,946   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:52:48,946   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,946   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:52:48,959   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 06:52:49,000   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:52:49,011   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:52:49,015   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 06:52:49,019   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:52:49,024   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:52:49,031   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:52:49,035   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:52:49,042   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 06:52:49,043   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:52:49,046   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:52:49,048   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 06:52:49,051   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:52:49,052   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,057   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,060   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,064   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:52:49,066   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,069   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,071   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,079   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 06:52:49,080   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,083   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,085   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,088   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 06:52:49,091   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 06:52:49,094   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 06:52:49,097   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 06:52:49,099   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 06:52:49,101   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 06:52:49,105   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:52:49,106   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 06:52:49,109   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 06:52:49,112   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 06:52:49,113   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:52:49,115   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:52:49,117   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:52:49,119   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:52:49,121   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:52:49,124   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:52:49,126   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:52:49,129   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 06:52:49,131   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 06:52:49,133   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 06:52:49,136   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 06:52:49,137   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:52:49,139   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:52:49,140   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 06:52:49,143   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 06:52:49,144   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:52:49,146   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:52:49,148   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:52:49,150   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 06:52:49,152   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 06:52:49,154   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 06:52:49,157   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:52:49,158   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,161   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,163   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,166   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:52:49,167   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,170   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,172   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,174   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:52:49,175   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,178   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,180   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,182   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:52:49,184   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:52:49,187   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:52:49,189   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:52:49,191   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:52:49,195   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 06:52:49,197   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 06:52:49,202   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 06:52:49,203   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:52:49,205   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:52:49,207   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?, ?);
2014-02-27 06:52:49,209   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,211   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,213   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:52:49,216   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 06:52:49,217   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:52:49,223   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:52:49,225   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:52:49,228   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:52:49,229   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:52:49,231   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:52:49,232   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:52:49,234   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 06:52:49,235   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:52:49,242   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:52:49,244   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 06:52:49,248   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:52:49,249   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:52:49,251   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:52:49,252   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:52:49,254   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 06:52:49,256   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 06:52:49,257   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 06:52:49,259   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 06:52:49,286   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 06:52:49,291   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:52:49,294   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:52:49,296   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:52:49,307   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 06:52:49,310   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 06:52:49,311   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 06:52:49,320   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 06:52:49,331   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 06:52:49,332   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 06:52:49,350   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 06:52:49,350   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 06:52:49,351   INFO  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 06:52:49,353   WARN  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Procedure BLE_FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:52:49,358   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:52:49,367   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:52:49,368   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 06:52:49,371   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:52:49,375   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 06:52:49,379   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 06:52:49,382   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 06:52:49,384   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 06:52:49,386   INFO  [main] COMPILER: [BLE_FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 06:52:49,390   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 06:52:49,396   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 06:52:49,398   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:52:49,399   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 06:52:49,403   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 06:52:49,406   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 06:52:49,408   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 06:52:49,409   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 06:52:49,412   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 06:52:49,416   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 06:52:49,420   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 06:52:49,420   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:52:49,421   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 06:52:49,424   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:52:49,425   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 06:52:49,428   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 06:52:49,430   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 06:52:49,436   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:52:49,453   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:52:49,454   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 06:52:49,458   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:52:49,459   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 06:52:49,461   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-02-27 06:52:49,464   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:52:49,466   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:52:49,469   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 06:52:49,471   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:52:49,471   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 06:52:49,474   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 06:52:49,474   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 06:52:49,475   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 06:52:49,479   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 06:52:49,482   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 06:52:49,484   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 06:52:49,485   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 06:52:49,488   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 06:52:49,489   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 06:52:49,491   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:52:49,492   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 06:52:49,494   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 06:52:49,495   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:52:49,497   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 06:52:49,499   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:52:49,500   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 06:52:49,502   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 06:52:49,506   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:52:49,508   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 06:52:49,510   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:52:49,511   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 06:52:49,514   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:52:49,517   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:52:49,518   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:52:49,520   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:52:49,521   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:52:49,524   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:52:49,527   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 06:52:49,530   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 06:52:49,541   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 06:52:49,542   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 06:52:49,545   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:52:49,546   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:52:49,560   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:52:49,561   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:52:49,569   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 06:52:49,571   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:52:49,573   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-02-27 06:52:49,575   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:52:49,578   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 06:52:49,587   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:52:49,588   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 06:52:49,590   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:52:49,591   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 06:52:49,593   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 06:52:49,594   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:52:49,597   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 06:52:49,597   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:52:49,598   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 06:52:49,604   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:52:49,605   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 06:52:49,612   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 11:52:50,887   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 11:52:50,893   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 11:52:50,900   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 11:52:50,923   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 11:52:50,923   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 11:52:50,925   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 11:52:50,960   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 11:52:50,974   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 11:52:51,021   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@64bd4e4d
2014-02-27 11:52:51,026   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 11:52:51,028   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:56565
2014-02-27 11:52:51,029   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 11:52:51,030   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:56565
2014-02-27 11:52:51,048   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16a0456f2b800000 with negotiated timeout 6000 for client /127.0.0.1:56565
2014-02-27 11:52:51,049   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16a0456f2b800000, negotiated timeout = 6000
2014-02-27 11:52:51,093   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 11:52:51,122   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 11:52:51,122   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 11:52:51,135   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 11:52:51,334   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 11:52:52,720   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 11:52:52,723   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 11:52:52,833   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 11:52:52,837   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 11:52:53,133   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 11:52:53,280   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 11:52:53,304   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 11:52:53,314   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 11:52:53,319   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 11:52:53,326   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 11:52:53,326   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 11:52:53,331   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 11:52:53,336   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 6 ms.
2014-02-27 11:52:53,336   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 11 ms.
2014-02-27 11:52:53,337   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 24 ms.
2014-02-27 11:52:53,352   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:52:53,352   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:52:53,352   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:52:53,361   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 11:52:53,362   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 7 ms.
2014-02-27 11:52:53,371   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:52:53,397   INFO  [main] HOST: Database start action is Create.
2014-02-27 11:52:53,423   INFO  [main] HOST: PID of this Volt process is 53287
2014-02-27 11:52:53,423   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 11:52:53,423   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 11:52:53,423   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 11:52:53,423   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 11:52:53,423   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 11:52:53,423   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 11:52:53,423   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 11:52:53,423   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 11:52:53,424   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 11:52:53,424   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 11:52:53,424   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 11:52:53,424   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 11:52:53,424   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 11:52:53,424   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 11:52:53,424   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 11:52:53,424   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 11:52:53,425   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 11:52:53,425   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 11:52:53,425   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 11:52:53,425   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 11:52:53,425   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 11:52:53,425   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 11:52:53,425   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 11:52:53,426   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 11:52:53,426   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 11:52:53,441   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 11:52:53,443   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 11:52:53,444   INFO  [Thread-9] HOST: Logging config info
2014-02-27 11:52:53,480   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-27 06:56:53,677   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-27 06:56:53,687   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-02-27 06:56:53,688   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,690   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,695   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,695   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-02-27 06:56:53,695   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-27 06:56:53,696   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:56:53,696   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-02-27 06:56:53,705   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:56:53,705   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:56:53,706   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-02-27 06:56:53,706   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-27 06:56:53,709   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,710   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-02-27 06:56:53,711   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,711   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-02-27 06:56:53,713   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:56:53,713   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-27 06:56:53,713   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-27 06:56:53,713   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-27 06:56:53,713   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-02-27 06:56:53,714   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-02-27 06:56:53,716   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,716   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:56:53,716   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-27 06:56:53,716   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-27 06:56:53,717   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:56:53,717   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:56:53,717   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-27 06:56:53,717   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,718   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,718   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,718   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,718   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,718   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,719   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-27 06:56:53,720   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,720   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,720   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,721   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,721   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,721   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-27 06:56:53,722   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:56:53,722   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-27 06:56:53,722   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,722   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-27 06:56:53,741   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-27 06:56:54,019   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:56:54,071   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-27 06:56:54,178   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-27 06:56:54,192   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:56:54,214   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:56:54,233   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:56:54,243   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:56:54,385   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-27 06:56:54,388   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:56:54,391   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-27 06:56:54,394   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-27 06:56:54,401   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:56:54,403   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,410   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,414   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,422   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:56:54,425   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,428   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,431   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,440   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-02-27 06:56:54,441   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,444   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,451   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,456   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-27 06:56:54,459   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-02-27 06:56:54,470   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-02-27 06:56:54,477   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-27 06:56:54,479   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-02-27 06:56:54,481   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-02-27 06:56:54,484   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:56:54,486   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-02-27 06:56:54,489   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-02-27 06:56:54,492   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-27 06:56:54,495   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:56:54,497   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:56:54,499   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-27 06:56:54,501   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:56:54,504   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:56:54,508   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:56:54,510   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:56:54,514   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-27 06:56:54,516   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-02-27 06:56:54,521   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-02-27 06:56:54,524   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-27 06:56:54,526   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:56:54,530   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-27 06:56:54,532   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-27 06:56:54,535   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-27 06:56:54,537   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:56:54,540   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:56:54,542   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-27 06:56:54,547   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-27 06:56:54,549   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-02-27 06:56:54,552   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-02-27 06:56:54,555   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:56:54,557   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,561   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,564   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,567   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:56:54,570   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,574   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,582   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,588   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-27 06:56:54,590   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,593   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,595   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,598   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-27 06:56:54,599   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:56:54,602   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:56:54,604   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-27 06:56:54,607   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-27 06:56:54,609   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-02-27 06:56:54,611   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-02-27 06:56:54,615   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-27 06:56:54,617   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:56:54,621   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-02-27 06:56:54,624   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?, ?);
2014-02-27 06:56:54,625   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,628   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,631   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-02-27 06:56:54,634   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-27 06:56:54,635   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:56:54,648   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:56:54,652   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:56:54,655   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-27 06:56:54,656   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:56:54,664   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:56:54,666   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-27 06:56:54,669   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-27 06:56:54,670   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:56:54,679   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-27 06:56:54,688   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-27 06:56:54,697   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-27 06:56:54,699   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:56:54,707   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:56:54,709   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-27 06:56:54,712   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-27 06:56:54,714   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-27 06:56:54,716   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-27 06:56:54,721   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-27 06:56:54,807   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-02-27 06:56:54,817   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:56:54,820   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:56:54,828   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:56:54,830   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-27 06:56:54,835   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-27 06:56:54,836   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-27 06:56:54,847   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-27 06:56:54,865   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-27 06:56:54,867   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-27 06:56:54,898   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-02-27 06:56:54,898   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-27 06:56:54,904   INFO  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-27 06:56:54,907   WARN  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Procedure BLE_FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:56:54,908   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:56:54,912   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:56:54,922   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-27 06:56:54,931   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:56:54,944   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-02-27 06:56:54,954   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-27 06:56:54,957   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-27 06:56:54,958   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-27 06:56:54,968   INFO  [main] COMPILER: [BLE_FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID IN ? ORDER BY RULEID;
2014-02-27 06:56:54,978   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-27 06:56:54,993   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-27 06:56:55,001   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:56:55,003   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-27 06:56:55,015   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-27 06:56:55,029   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-27 06:56:55,031   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-27 06:56:55,032   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-27 06:56:55,043   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-27 06:56:55,060   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-27 06:56:55,075   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-02-27 06:56:55,075   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:56:55,076   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-27 06:56:55,086   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:56:55,087   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-27 06:56:55,091   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-27 06:56:55,098   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-27 06:56:55,105   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:56:55,172   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:56:55,174   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-27 06:56:55,188   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:56:55,190   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-02-27 06:56:55,193   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-02-27 06:56:55,205   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:56:55,208   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:56:55,220   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-27 06:56:55,223   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:56:55,225   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-27 06:56:55,229   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-27 06:56:55,229   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-27 06:56:55,230   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-27 06:56:55,233   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-27 06:56:55,237   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-27 06:56:55,239   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-27 06:56:55,240   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-27 06:56:55,243   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-27 06:56:55,244   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-27 06:56:55,246   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:56:55,247   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-27 06:56:55,269   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-27 06:56:55,272   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-27 06:56:55,282   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-27 06:56:55,285   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:56:55,292   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-02-27 06:56:55,295   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-27 06:56:55,304   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:56:55,313   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-27 06:56:55,321   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:56:55,323   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-27 06:56:55,332   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-27 06:56:55,343   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:56:55,344   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-27 06:56:55,346   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:56:55,347   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:56:55,350   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-27 06:56:55,364   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-27 06:56:55,369   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-02-27 06:56:55,372   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-27 06:56:55,373   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-02-27 06:56:55,377   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-02-27 06:56:55,378   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-27 06:56:55,394   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-27 06:56:55,396   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-27 06:56:55,415   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-02-27 06:56:55,418   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-27 06:56:55,421   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-02-27 06:56:55,424   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-02-27 06:56:55,427   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-27 06:56:55,430   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-27 06:56:55,431   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-27 06:56:55,433   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-27 06:56:55,434   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-27 06:56:55,436   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-02-27 06:56:55,437   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-27 06:56:55,440   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-27 06:56:55,440   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-27 06:56:55,441   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-27 06:56:55,444   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-27 06:56:55,445   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-27 06:56:55,450   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-27 11:56:56,935   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-27 11:56:56,947   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-02-27 11:56:56,955   INFO  [main] NETWORK: Default network thread count: 2
2014-02-27 11:56:57,001   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-27 11:56:57,001   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-27 11:56:57,004   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-27 11:56:57,049   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-27 11:56:57,074   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-27 11:56:57,152   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@1b6ebaa7
2014-02-27 11:56:57,158   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-27 11:56:57,160   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:39249
2014-02-27 11:56:57,161   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-27 11:56:57,163   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:39249
2014-02-27 11:56:57,180   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16a0474fe5800000 with negotiated timeout 6000 for client /127.0.0.1:39249
2014-02-27 11:56:57,180   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16a0474fe5800000, negotiated timeout = 6000
2014-02-27 11:56:57,226   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-27 11:56:57,255   INFO  [main] HOST: Host id of this node is: 0
2014-02-27 11:56:57,256   INFO  [main] CONSOLE: Host id of this node is: 0
2014-02-27 11:56:57,272   INFO  [main] HOST: URL of deployment: deployment.xml
2014-02-27 11:56:57,607   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-02-27 11:56:59,356   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-27 11:56:59,362   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-02-27 11:56:59,968   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-02-27 11:57:00,002   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-02-27 11:57:00,361   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-02-27 11:57:00,537   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-27 11:57:00,566   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-27 11:57:00,581   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-27 11:57:00,592   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-27 11:57:00,592   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-27 11:57:00,593   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-27 11:57:00,612   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 22 ms.
2014-02-27 11:57:00,612   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 31 ms.
2014-02-27 11:57:00,623   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-27 11:57:00,624   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 7 ms.
2014-02-27 11:57:00,626   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:57:00,626   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:57:00,641   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:57:00,707   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-27 11:57:00,709   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 70 ms.
2014-02-27 11:57:00,724   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-27 11:57:00,749   INFO  [main] HOST: Database start action is Create.
2014-02-27 11:57:00,791   INFO  [main] HOST: PID of this Volt process is 2789
2014-02-27 11:57:00,791   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-27 11:57:00,791   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-27 11:57:00,791   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-27 11:57:00,791   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-27 11:57:00,791   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-02-27 11:57:00,791   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-02-27 11:57:00,791   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-02-27 11:57:00,791   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-02-27 11:57:00,792   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-27 11:57:00,792   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-27 11:57:00,792   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-27 11:57:00,792   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-27 11:57:00,792   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-27 11:57:00,792   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-02-27 11:57:00,792   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-27 11:57:00,792   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-27 11:57:00,792   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-02-27 11:57:00,792   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-02-27 11:57:00,792   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-02-27 11:57:00,792   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-02-27 11:57:00,793   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-02-27 11:57:00,794   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-27 11:57:00,794   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-02-27 11:57:00,794   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-02-27 11:57:00,794   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-02-27 11:57:00,828   INFO  [Thread-9] HOST: Logging config info
2014-02-27 11:57:00,833   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-27 11:57:00,837   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-02-27 11:57:00,894   INFO  [Thread-10] CONSOLE: Server completed initialization.
