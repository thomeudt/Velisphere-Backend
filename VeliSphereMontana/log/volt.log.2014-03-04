2014-03-04 16:33:47,295   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10020_10021 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-03-04 16:33:47,311   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: USER of type: BALANCED_TREE
2014-03-04 16:33:47,312   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,313   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,320   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,320   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10044_10045 on table: SPHERE of type: BALANCED_TREE
2014-03-04 16:33:47,321   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10048_10049 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-03-04 16:33:47,321   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-03-04 16:33:47,321   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINT of type: BALANCED_TREE
2014-03-04 16:33:47,322   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-03-04 16:33:47,322   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-03-04 16:33:47,322   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: PROPERTY of type: BALANCED_TREE
2014-03-04 16:33:47,323   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10062_10063 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-03-04 16:33:47,324   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,324   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10071_10072 on table: MESSAGE of type: BALANCED_TREE
2014-03-04 16:33:47,325   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,325   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10080_10081 on table: EXPRESSION of type: BALANCED_TREE
2014-03-04 16:33:47,326   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-03-04 16:33:47,326   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-03-04 16:33:47,327   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-03-04 16:33:47,327   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-03-04 16:33:47,327   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10086_10087 on table: CHECK of type: BALANCED_TREE
2014-03-04 16:33:47,329   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10090_10091 on table: CHECKSTATE of type: BALANCED_TREE
2014-03-04 16:33:47,331   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10095_10096 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,331   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-03-04 16:33:47,331   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-03-04 16:33:47,332   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-03-04 16:33:47,332   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-03-04 16:33:47,332   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-03-04 16:33:47,333   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-03-04 16:33:47,333   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,333   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,333   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,334   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,334   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,334   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,335   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-03-04 16:33:47,335   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,335   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,336   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,336   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,337   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,337   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-03-04 16:33:47,337   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-04 16:33:47,338   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-03-04 16:33:47,338   INFO  [main] COMPILER: [null]: Created index: RULEACTIONLINK on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,338   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-03-04 16:33:47,354   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-03-04 16:33:47,452   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-03-04 16:33:47,465   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-03-04 16:33:47,470   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-03-04 16:33:47,479   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-03-04 16:33:47,487   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-04 16:33:47,495   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-04 16:33:47,499   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?) AND (ENDPOINTID = ?);
2014-03-04 16:33:47,507   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-03-04 16:33:47,509   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-04 16:33:47,518   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-03-04 16:33:47,523   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-03-04 16:33:47,526   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-03-04 16:33:47,528   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,532   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,536   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,543   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-04 16:33:47,545   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,549   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,558   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,562   INFO  [main] COMPILER: [CHECKSTATE.insert]: Compiling Statement: INSERT INTO CHECKSTATE VALUES (?, ?, ?);
2014-03-04 16:33:47,564   INFO  [main] COMPILER: [CHECKSTATE.select]: Compiling Statement: SELECT * FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,567   INFO  [main] COMPILER: [CHECKSTATE.delete]: Compiling Statement: DELETE FROM CHECKSTATE WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,569   INFO  [main] COMPILER: [CHECKSTATE.update]: Compiling Statement: UPDATE CHECKSTATE SET CHECKID = ?, STATE = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,572   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-03-04 16:33:47,575   INFO  [main] COMPILER: [ENDPOINT.delete]: Compiling Statement: DELETE FROM ENDPOINT WHERE (ENDPOINTID = ?);
2014-03-04 16:33:47,579   INFO  [main] COMPILER: [ENDPOINT.update]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTID = ?, ENDPOINTNAME = ?, ENDPOINTCLASSID = ? WHERE (ENDPOINTID = ?);
2014-03-04 16:33:47,582   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-03-04 16:33:47,584   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE (LINKID = ?);
2014-03-04 16:33:47,586   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.update]: Compiling Statement: UPDATE ENDPOINT_SPHERE_LINK SET LINKID = ?, ENDPOINTID = ?, SPHEREID = ? WHERE (LINKID = ?);
2014-03-04 16:33:47,589   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-03-04 16:33:47,591   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.delete]: Compiling Statement: DELETE FROM ENDPOINT_USER_LINK WHERE (LINKID = ?);
2014-03-04 16:33:47,594   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.update]: Compiling Statement: UPDATE ENDPOINT_USER_LINK SET LINKID = ?, ENDPOINTID = ?, USERID = ? WHERE (LINKID = ?);
2014-03-04 16:33:47,597   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-03-04 16:33:47,598   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-04 16:33:47,600   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-03-04 16:33:47,602   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-03-04 16:33:47,604   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-04 16:33:47,606   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-04 16:33:47,609   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-04 16:33:47,612   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-03-04 16:33:47,615   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-03-04 16:33:47,617   INFO  [main] COMPILER: [EXPRESSION.delete]: Compiling Statement: DELETE FROM EXPRESSION WHERE (EXPRESSIONID = ?);
2014-03-04 16:33:47,619   INFO  [main] COMPILER: [EXPRESSION.update]: Compiling Statement: UPDATE EXPRESSION SET EXPRESSIONID = ?, PROPERTYID = ?, PAYLOAD = ? WHERE (EXPRESSIONID = ?);
2014-03-04 16:33:47,622   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-03-04 16:33:47,623   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-04 16:33:47,625   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-03-04 16:33:47,627   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-03-04 16:33:47,629   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-03-04 16:33:47,630   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-04 16:33:47,633   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-04 16:33:47,635   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-03-04 16:33:47,637   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-03-04 16:33:47,639   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_EXPRESSION_LINK WHERE (LINKID = ?);
2014-03-04 16:33:47,642   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.update]: Compiling Statement: UPDATE MESSAGE_EXPRESSION_LINK SET LINKID = ?, MESSAGEID = ?, EXPRESSIONID = ? WHERE (LINKID = ?);
2014-03-04 16:33:47,645   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-03-04 16:33:47,647   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,650   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,652   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,655   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-03-04 16:33:47,657   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,659   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,661   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,664   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-03-04 16:33:47,665   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,668   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,670   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,673   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-03-04 16:33:47,674   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-04 16:33:47,677   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-04 16:33:47,679   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-03-04 16:33:47,682   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-03-04 16:33:47,684   INFO  [main] COMPILER: [PROPERTY.delete]: Compiling Statement: DELETE FROM PROPERTY WHERE (PROPERTYID = ?);
2014-03-04 16:33:47,686   INFO  [main] COMPILER: [PROPERTY.update]: Compiling Statement: UPDATE PROPERTY SET PROPERTYID = ?, PROPERTYNAME = ?, PROPERTYCLASSID = ?, ENDPOINTCLASSID = ?, ACT = ?, SENSE = ?, STATUS = ?, CONFIGURABLE = ? WHERE (PROPERTYID = ?);
2014-03-04 16:33:47,690   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-03-04 16:33:47,691   INFO  [main] COMPILER: [PROPERTYCLASS.delete]: Compiling Statement: DELETE FROM PROPERTYCLASS WHERE (PROPERTYCLASSID = ?);
2014-03-04 16:33:47,693   INFO  [main] COMPILER: [PROPERTYCLASS.update]: Compiling Statement: UPDATE PROPERTYCLASS SET PROPERTYCLASSID = ?, PROPERTYCLASSNAME = ?, PROPERTYCLASSDATATYPE = ?, PROPERTYCLASSUNIT = ? WHERE (PROPERTYCLASSID = ?);
2014-03-04 16:33:47,695   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?, ?);
2014-03-04 16:33:47,697   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,699   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,701   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ?, CHECKPATHID = ? WHERE (RULEID = ?) AND (CHECKPATHID = ?);
2014-03-04 16:33:47,704   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-03-04 16:33:47,705   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (RULEID = ?);
2014-03-04 16:33:47,727   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (RULEID = ?);
2014-03-04 16:33:47,728   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (RULEID = ?);
2014-03-04 16:33:47,730   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-03-04 16:33:47,732   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-03-04 16:33:47,734   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-03-04 16:33:47,735   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-03-04 16:33:47,737   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-03-04 16:33:47,739   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-03-04 16:33:47,740   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-03-04 16:33:47,742   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-03-04 16:33:47,744   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-03-04 16:33:47,745   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-04 16:33:47,748   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-04 16:33:47,750   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-03-04 16:33:47,752   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-03-04 16:33:47,753   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-03-04 16:33:47,755   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-03-04 16:33:47,757   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-03-04 16:33:47,821   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK ORDER BY CHECKID;
2014-03-04 16:33:47,826   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-04 16:33:47,829   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-04 16:33:47,832   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-04 16:33:47,833   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-03-04 16:33:47,836   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-03-04 16:33:47,837   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-03-04 16:33:47,840   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-03-04 16:33:47,847   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-03-04 16:33:47,848   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-03-04 16:33:47,856   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;'
2014-03-04 16:33:47,856   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-03-04 16:33:47,857   INFO  [main] COMPILER: [BLE_FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ? ORDER BY RULEID;
2014-03-04 16:33:47,861   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-03-04 16:33:47,863   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-04 16:33:47,864   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-03-04 16:33:47,867   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-04 16:33:47,872   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ? ORDER BY MULTICHECKLID;
2014-03-04 16:33:47,876   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-03-04 16:33:47,878   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-03-04 16:33:47,879   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-03-04 16:33:47,882   INFO  [main] COMPILER: [BLE_FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ? ORDER BY RULEID;
2014-03-04 16:33:47,885   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-03-04 16:33:47,890   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-03-04 16:33:47,892   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-04 16:33:47,893   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-03-04 16:33:47,897   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-03-04 16:33:47,900   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-03-04 16:33:47,903   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-03-04 16:33:47,904   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-03-04 16:33:47,908   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-03-04 16:33:47,917   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-03-04 16:33:47,936   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;'
2014-03-04 16:33:47,936   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-04 16:33:47,937   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-03-04 16:33:47,939   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-03-04 16:33:47,940   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-03-04 16:33:47,946   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-03-04 16:33:47,949   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-03-04 16:33:47,986   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-04 16:33:47,987   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-03-04 16:33:47,993   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-04 16:33:47,994   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ? ORDER BY MULTICHECKRID;
2014-03-04 16:33:47,997   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID IN ? ORDER BY MULTICHECKID;
2014-03-04 16:33:48,000   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-04 16:33:48,006   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-04 16:33:48,009   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-03-04 16:33:48,012   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-04 16:33:48,013   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-03-04 16:33:48,023   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-03-04 16:33:48,023   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-03-04 16:33:48,027   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-03-04 16:33:48,037   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-03-04 16:33:48,040   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-03-04 16:33:48,042   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-03-04 16:33:48,043   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-03-04 16:33:48,048   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-03-04 16:33:48,049   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-03-04 16:33:48,055   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-04 16:33:48,056   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-03-04 16:33:48,059   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-03-04 16:33:48,060   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-03-04 16:33:48,062   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-03-04 16:33:48,064   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-04 16:33:48,065   INFO  [main] COMPILER: [BLE_UpdateCheckState.class]: Compiling Statement: UPDATE CHECKSTATE SET STATE = ? WHERE CHECKPATHID = ? AND CHECKID = ?;
2014-03-04 16:33:48,067   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-03-04 16:33:48,078   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-04 16:33:48,081   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-03-04 16:33:48,083   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-03-04 16:33:48,084   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-03-04 16:33:48,091   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-03-04 16:33:48,095   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-04 16:33:48,096   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-03-04 16:33:48,099   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-04 16:33:48,100   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-03-04 16:33:48,103   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-03-04 16:33:48,109   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-03-04 16:33:48,110   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID, MULTICHECKID;
2014-03-04 16:33:48,122   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;
2014-03-04 16:33:48,136   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ? ORDER BY CHECKID;", reason: insufficient ordering criteria.
2014-03-04 16:33:48,137   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-03-04 16:33:48,163   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-03-04 16:33:48,164   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-03-04 16:33:48,183   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ? ORDER BY CHECKID;
2014-03-04 16:33:48,191   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-03-04 16:33:48,195   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECKSTATE WHERE CHECKID IN ? ORDER BY CHECKID
2014-03-04 16:33:48,199   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ? ORDER BY OPERATOR;
2014-03-04 16:33:48,203   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-03-04 16:33:48,204   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-03-04 16:33:48,205   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-03-04 16:33:48,207   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-03-04 16:33:48,208   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-03-04 16:33:48,215   INFO  [main] COMPILER: [ResetChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?'
2014-03-04 16:33:48,216   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-03-04 16:33:48,218   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-03-04 16:33:48,218   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-03-04 16:33:48,219   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-03-04 16:33:48,222   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-03-04 16:33:48,223   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-03-04 16:33:48,232   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-03-04 21:33:49,737   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-03-04 21:33:49,746   INFO  [main] CONSOLE: Build: 4.0.2.3 voltdb-4.0.2.3-0-ge2f2df4-local Community Edition
2014-03-04 21:33:49,753   INFO  [main] NETWORK: Default network thread count: 2
2014-03-04 21:33:49,805   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-03-04 21:33:49,806   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-03-04 21:33:49,808   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-03-04 21:33:49,853   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-03-04 21:33:49,876   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-03-04 21:33:49,965   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@485fd4e6
2014-03-04 21:33:49,971   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-03-04 21:33:49,973   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:59556
2014-03-04 21:33:49,974   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-03-04 21:33:49,976   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:59556
2014-03-04 21:33:49,992   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16ae2f490c000000 with negotiated timeout 6000 for client /127.0.0.1:59556
2014-03-04 21:33:49,992   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16ae2f490c000000, negotiated timeout = 6000
2014-03-04 21:33:50,039   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-03-04 21:33:50,082   INFO  [main] HOST: Host id of this node is: 0
2014-03-04 21:33:50,082   INFO  [main] CONSOLE: Host id of this node is: 0
2014-03-04 21:33:50,101   INFO  [main] HOST: URL of deployment: deployment.xml
2014-03-04 21:33:50,787   INFO  [main] HOST: Dead host timeout set to 90000 milliseconds
2014-03-04 21:33:52,466   INFO  [main] EXPORT: System is not using any export functionality.
2014-03-04 21:33:52,470   INFO  [main] CONSOLE: Initializing the database. This may take a moment...
2014-03-04 21:33:52,645   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-4.0.2.3). A confirmation message will follow if the loading is successful.
2014-03-04 21:33:52,707   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-4.0.2.3.
2014-03-04 21:33:53,088   INFO  [main] TM: Setting maximum size of MPI read pool to: 20
2014-03-04 21:33:53,280   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-03-04 21:33:53,313   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-03-04 21:33:53,325   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-03-04 21:33:53,342   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-03-04 21:33:53,342   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-03-04 21:33:53,342   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-03-04 21:33:53,354   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 12 ms.
2014-03-04 21:33:53,354   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 29 ms.
2014-03-04 21:33:53,365   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-03-04 21:33:53,365   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 8 ms.
2014-03-04 21:33:53,368   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-04 21:33:53,368   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-04 21:33:53,375   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-04 21:33:53,387   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-03-04 21:33:53,389   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 13 ms.
2014-03-04 21:33:53,398   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-03-04 21:33:53,426   INFO  [main] HOST: Database start action is Create.
2014-03-04 21:33:53,523   INFO  [main] HOST: PID of this Volt process is 25698
2014-03-04 21:33:53,523   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-03-04 21:33:53,523   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-03-04 21:33:53,523   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-03-04 21:33:53,523   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-03-04 21:33:53,523   INFO  [main] HOST: Available JVM arguments: -Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Dlog4j.configuration=file:///home/thorsten/voltdb-4.0.2.3/voltdb/log4j.xml -Djava.library.path=/home/thorsten/voltdb-4.0.2.3/voltdb
2014-03-04 21:33:53,523   INFO  [main] HOST: JVM class path: /home/thorsten/voltdb-4.0.2.3/voltdb/voltdb-4.0.2.3.jar:/home/thorsten/voltdb-4.0.2.3/lib/jna.jar:/home/thorsten/voltdb-4.0.2.3/lib/servlet-api-2.5.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-juli.jar:/home/thorsten/voltdb-4.0.2.3/lib/log4j-1.2.16.jar:/home/thorsten/voltdb-4.0.2.3/lib/snappy-java-1.1.0.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-nop-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-cli-1.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/groovy-all-2.1.7-indy.jar:/home/thorsten/voltdb-4.0.2.3/lib/jsch-0.1.50.jar:/home/thorsten/voltdb-4.0.2.3/lib/super-csv-2.1.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-io-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/commons-lang3-3.0.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-server-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-util-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jline-2.10.jar:/home/thorsten/voltdb-4.0.2.3/lib/protobuf-java-2.4.1.jar:/home/thorsten/voltdb-4.0.2.3/lib/slf4j-api-1.6.2.jar:/home/thorsten/voltdb-4.0.2.3/lib/tomcat-jdbc.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-http-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/jetty-continuation-7.6.1.v20120215.jar:/home/thorsten/voltdb-4.0.2.3/lib/zmq-2.1.11.jar
2014-03-04 21:33:53,523   INFO  [main] HOST: Maximum usable Java heap set to 1820 mb.
2014-03-04 21:33:53,523   INFO  [main] HOST: Minimum required Java heap for catalog and server config is 654 MB.
2014-03-04 21:33:53,524   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-03-04 21:33:53,524   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-03-04 21:33:53,524   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-03-04 21:33:53,524   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-03-04 21:33:53,524   INFO  [main] HOST: No schedule set for automated snapshots.
2014-03-04 21:33:53,524   INFO  [main] HOST: Using "voltdbroot" for voltdbroot directory.
2014-03-04 21:33:53,525   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-03-04 21:33:53,525   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-03-04 21:33:53,525   INFO  [main] HOST: HOST MEMORY (MB): 2703
2014-03-04 21:33:53,525   INFO  [main] HOST: OS PROFILE:       Linux 2.6.32-358.el6.x86_64 amd64 en_US
2014-03-04 21:33:53,525   INFO  [main] HOST: JAVA VERSION:     1.7.0_51
2014-03-04 21:33:53,525   INFO  [main] HOST: JAVA RUNTIME:     Java(TM) SE Runtime Environment (1.7.0_51-b13)
2014-03-04 21:33:53,525   INFO  [main] HOST: JAVA VM:          Java HotSpot(TM) 64-Bit Server VM (24.51-b03, mixed mode)
2014-03-04 21:33:53,525   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-03-04 21:33:53,526   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.110 2a02:8070:8333:b700:20c:29ff:fe99:4c48%2 21212,21211,8080 [SELF]
2014-03-04 21:33:53,532   WARN  [main] CONSOLE: This is not a highly available cluster. K-Safety is set to 0.
2014-03-04 21:33:53,532   WARN  [main] CONSOLE: Durability is turned off. Command logging is off.
2014-03-04 21:33:53,549   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-03-04 21:33:53,550   INFO  [Thread-9] HOST: Logging config info
2014-03-04 21:33:53,551   INFO  [SnapshotDaemon] LOGGING: Checking for existence of snapshot truncation request
2014-03-04 21:33:53,589   INFO  [Thread-10] CONSOLE: Server completed initialization.
