2014-02-23 22:43:18,301   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-23 22:43:18,314   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-23 22:43:18,314   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-23 22:43:18,317   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-23 22:43:18,317   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-23 22:43:18,318   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-23 22:43:18,319   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-23 22:43:18,319   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-23 22:43:18,320   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 22:43:18,320   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 22:43:18,321   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 22:43:18,321   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 22:43:18,328   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-23 22:43:18,329   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-23 22:43:18,329   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-23 22:43:18,330   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-23 22:43:18,331   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-23 22:43:18,331   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-23 22:43:18,333   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-23 22:43:18,333   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-23 22:43:18,333   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-23 22:43:18,333   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-23 22:43:18,333   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-23 22:43:18,334   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:43:18,335   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-23 22:43:18,336   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 22:43:18,338   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 22:43:18,338   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 22:43:18,338   INFO  [main] COMPILER: [null]: Created index: MCLMC on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:43:18,338   INFO  [main] COMPILER: [null]: Created index: MCLCH on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:43:18,338   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:43:18,339   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:43:18,339   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:43:18,339   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:43:18,339   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-23 22:43:18,339   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:43:18,339   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:43:18,340   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:43:18,340   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-23 22:43:18,343   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 22:43:18,343   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 22:43:18,393   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 22:43:18,393   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 22:43:18,393   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 22:43:18,393   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 22:43:18,393   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-23 22:43:18,393   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?); for CHECK with partitioning: CHECK.CHECKPATHID:1
2014-02-23 22:43:18,393   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?); for CHECK with partitioning: CHECK.CHECKPATHID:1
2014-02-23 22:43:18,394   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-23 22:43:18,394   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 22:43:18,394   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 22:43:18,394   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 22:43:18,394   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 22:43:18,394   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 22:43:18,394   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 22:43:18,394   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 22:43:18,394   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 22:43:18,394   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 22:43:18,394   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 22:43:18,394   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 22:43:18,394   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 22:43:18,395   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-23 22:43:18,395   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 22:43:18,395   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 22:43:18,395   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 22:43:18,395   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 22:43:18,395   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 22:43:18,395   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 22:43:18,395   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 22:43:18,395   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 22:43:18,395   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-23 22:43:18,395   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-23 22:43:18,395   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-23 22:43:18,395   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 22:43:18,395   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 22:43:18,396   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 22:43:18,396   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 22:43:18,396   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 22:43:18,396   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 22:43:18,396   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 22:43:18,396   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 22:43:18,396   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 22:43:18,396   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 22:43:18,396   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 22:43:18,396   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 22:43:18,396   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-23 22:43:18,396   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-23 22:43:18,396   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:1
2014-02-23 22:43:18,396   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:1
2014-02-23 22:43:18,397   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-23 22:43:18,397   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-23 22:43:18,397   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:1
2014-02-23 22:43:18,397   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:1
2014-02-23 22:43:18,397   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-23 22:43:18,397   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-23 22:43:18,397   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 22:43:18,397   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 22:43:18,398   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-23 22:43:18,398   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-23 22:43:18,398   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:1
2014-02-23 22:43:18,398   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:1
2014-02-23 22:43:18,398   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-23 22:43:18,398   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-23 22:43:18,398   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-23 22:43:18,398   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 22:43:18,398   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 22:43:18,398   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 22:43:18,398   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 22:43:18,398   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 22:43:18,398   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 22:43:18,398   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 22:43:18,399   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 22:43:18,399   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 22:43:18,399   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 22:43:18,399   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 22:43:18,399   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 22:43:18,399   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 22:43:18,399   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 22:43:18,399   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 22:43:18,399   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 22:43:18,399   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 22:43:18,399   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 22:43:18,399   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 22:43:18,399   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 22:43:18,399   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-23 22:43:18,400   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 22:43:18,400   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 22:43:18,400   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 22:43:18,408   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-23 22:43:18,504   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 22:43:18,513   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 22:43:18,518   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-23 22:43:18,523   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 22:43:18,526   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,531   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,534   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,544   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-23 22:43:18,546   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 22:43:18,548   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 22:43:18,550   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-23 22:43:18,554   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-23 22:43:18,555   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,561   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,565   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,568   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 22:43:18,569   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,572   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,574   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,577   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-23 22:43:18,580   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-23 22:43:18,581   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 22:43:18,585   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 22:43:18,587   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-23 22:43:18,590   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 22:43:18,593   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:43:18,598   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:43:18,601   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:43:18,603   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-23 22:43:18,605   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-23 22:43:18,607   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-23 22:43:18,609   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 22:43:18,612   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 22:43:18,615   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 22:43:18,620   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 22:43:18,623   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-23 22:43:18,624   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 22:43:18,626   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 22:43:18,643   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-23 22:43:18,646   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-23 22:43:18,648   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:43:18,650   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:43:18,652   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:43:18,654   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-23 22:43:18,657   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 22:43:18,659   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,662   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,664   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,668   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 22:43:18,671   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,673   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,675   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,678   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 22:43:18,679   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,681   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,684   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:43:18,687   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 22:43:18,688   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-23 22:43:18,691   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-23 22:43:18,693   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-23 22:43:18,697   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 22:43:18,699   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-23 22:43:18,700   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-23 22:43:18,701   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-23 22:43:18,704   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-23 22:43:18,705   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-23 22:43:18,707   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-23 22:43:18,710   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-23 22:43:18,712   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-23 22:43:18,716   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-23 22:43:18,718   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 22:43:18,720   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-23 22:43:18,722   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-23 22:43:18,725   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-23 22:43:18,727   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-23 22:43:18,728   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 22:43:18,730   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 22:43:18,732   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-23 22:43:18,736   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-23 22:43:18,737   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 22:43:18,739   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 22:43:18,741   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 22:43:18,743   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-23 22:43:18,744   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-23 22:43:18,747   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-23 22:43:18,749   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-23 22:43:18,811   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-23 22:43:18,818   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:18,819   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 22:43:18,825   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-23 22:43:18,826   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 22:43:18,830   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:18,831   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-23 22:43:18,837   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-23 22:43:18,838   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-23 22:43:18,844   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;
2014-02-23 22:43:18,854   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:18,855   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-23 22:43:18,858   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:18,859   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-23 22:43:18,895   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-23 22:43:18,896   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-23 22:43:18,902   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 22:43:18,903   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-23 22:43:18,908   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 22:43:18,913   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 22:43:18,917   WARN  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Procedure BLE_MultiCheckParentForMultiCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:18,918   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-23 22:43:18,922   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-23 22:43:18,923   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-23 22:43:18,928   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-23 22:43:18,942   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-23 22:43:18,943   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-23 22:43:18,947   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-23 22:43:18,948   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 22:43:18,949   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 22:43:18,954   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-23 22:43:18,958   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-23 22:43:18,960   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:18,961   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-23 22:43:18,962   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-23 22:43:18,963   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-23 22:43:18,965   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-23 22:43:18,967   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:18,967   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-23 22:43:18,971   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-23 22:43:18,975   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:18,976   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-23 22:43:18,978   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-23 22:43:18,979   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-23 22:43:18,986   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;
2014-02-23 22:43:18,992   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;'
2014-02-23 22:43:18,992   WARN  [main] COMPILER: [AME_ActionsForRule.class]: Procedure AME_ActionsForRule has a statement with a non-deterministic result - statement: "SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:18,992   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-23 22:43:19,037   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 22:43:19,038   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-23 22:43:19,041   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:19,041   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 22:43:19,045   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 22:43:19,047   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ?
2014-02-23 22:43:19,049   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 22:43:19,051   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 22:43:19,054   WARN  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Procedure BLE_IsCycleMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:19,054   WARN  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Procedure BLE_IsCycleMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:19,055   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 22:43:19,060   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:19,061   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-23 22:43:19,064   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-23 22:43:19,064   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-23 22:43:19,065   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 22:43:19,067   WARN  [main] COMPILER: [BLE_CheckPathForChecks.class]: Procedure BLE_CheckPathForChecks has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;", reason: index scan may provide insufficient ordering
2014-02-23 22:43:19,068   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-23 22:43:19,070   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-23 22:43:19,077   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-23 22:43:19,078   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-23 22:43:19,079   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-23 22:43:19,082   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-23 22:43:19,083   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-23 22:43:19,085   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:19,085   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-23 22:43:19,087   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-23 22:43:19,087   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 22:43:19,089   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-23 22:43:19,091   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:19,091   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-23 22:43:19,094   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 22:43:19,096   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-23 22:43:19,097   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 22:43:19,097   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;
2014-02-23 22:43:19,107   WARN  [main] COMPILER: [BLE_AllChecksForExpression.class]: Procedure BLE_AllChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:19,108   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 22:43:19,112   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:19,113   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 22:43:19,115   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:19,116   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-23 22:43:19,119   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-23 22:43:19,122   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?;
2014-02-23 22:43:19,124   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;
2014-02-23 22:43:19,126   WARN  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Procedure BLE_CheckPathForMultiChecks is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:19,127   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-23 22:43:19,144   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-23 22:43:19,146   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;
2014-02-23 22:43:19,149   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:19,150   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-23 22:43:19,182   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 22:43:19,183   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 22:43:19,184   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-23 22:43:19,185   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 22:43:19,188   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 22:43:19,190   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 22:43:19,192   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?
2014-02-23 22:43:19,194   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 22:43:19,196   WARN  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Procedure BLE_IsMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:19,197   WARN  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Procedure BLE_IsMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:19,198   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-23 22:43:19,200   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-23 22:43:19,201   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-23 22:43:19,203   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 22:43:19,204   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-23 22:43:19,206   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-23 22:43:19,208   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-23 22:43:19,208   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 22:43:19,209   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-23 22:43:19,212   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:43:19,213   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-23 22:43:19,219   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 06:43:20,419   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 06:43:20,434   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 06:43:20,442   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 06:43:20,478   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 06:43:20,478   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 06:43:20,480   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 06:43:20,517   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 06:43:20,525   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 06:43:20,603   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@326b9c84
2014-02-24 06:43:20,607   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 06:43:20,611   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:33997
2014-02-24 06:43:20,612   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 06:43:20,613   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:33997
2014-02-24 06:43:20,631   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x1697fe36d2800000 with negotiated timeout 6000 for client /127.0.0.1:33997
2014-02-24 06:43:20,631   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1697fe36d2800000, negotiated timeout = 6000
2014-02-24 06:43:20,686   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 06:43:20,738   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 06:43:21,009   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 06:43:21,010   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 06:43:21,010   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 06:43:21,010   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 06:43:21,178   INFO  [main] HOST: hsql loaded
2014-02-24 06:43:21,275   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 06:43:23,629   INFO  [main] HOST: hsql loaded
2014-02-24 06:43:23,636   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 06:43:23,701   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-3.0). A confirmation message will follow if the loading is successful.
2014-02-24 06:43:23,756   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-3.0.
2014-02-24 06:43:23,885   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-24 06:43:23,930   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-24 06:43:23,947   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-24 06:43:23,967   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-24 06:43:23,967   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 9 ms.
2014-02-24 06:43:23,975   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-24 06:43:23,977   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-24 06:43:23,977   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 3 ms.
2014-02-24 06:43:23,979   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 06:43:23,991   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 06:43:23,995   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-24 06:43:23,995   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 12 ms.
2014-02-24 06:43:24,020   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 06:43:24,066   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-24 06:43:24,067   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 44 ms.
2014-02-24 06:43:24,084   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 06:43:24,086   INFO  [main] CONSOLE: Initializing initiator ID: 0, SiteID: 0:7
2014-02-24 06:43:24,117   INFO  [Mailbox tracker] EXPORT: Attempting to boot export client due to rejoin or other cluster topology change
2014-02-24 06:43:24,142   INFO  [main] HOST: Database start action is Create.
2014-02-24 06:43:24,142   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-24 06:43:24,142   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-24 06:43:24,142   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-24 06:43:24,142   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-24 06:43:24,143   INFO  [main] HOST: Available JVM arguments: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Xmx1024m -Dlog4j.configuration=file:///home/voltdb/voltdb-3.0/voltdb/log4j.xml -Djava.library.path=/home/voltdb/voltdb-3.0/voltdb
2014-02-24 06:43:24,143   INFO  [main] HOST: JVM class path: /home/voltdb/voltdb-3.0/voltdb/voltdb-3.0.jar:/home/voltdb/voltdb-3.0/lib/commons-cli-1.2.jar:/home/voltdb/voltdb-3.0/lib/commons-lang3-3.0.jar:/home/voltdb/voltdb-3.0/lib/guava-12.0.jar:/home/voltdb/voltdb-3.0/lib/jetty-continuation-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-http-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-io-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-server-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-util-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jline-2.10.jar:/home/voltdb/voltdb-3.0/lib/jna.jar:/home/voltdb/voltdb-3.0/lib/jsch-0.1.48.jar:/home/voltdb/voltdb-3.0/lib/log4j-1.2.16.jar:/home/voltdb/voltdb-3.0/lib/protobuf-java-2.4.1.jar:/home/voltdb/voltdb-3.0/lib/servlet-api-2.5.jar:/home/voltdb/voltdb-3.0/lib/slf4j-api-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/slf4j-nop-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/snappy-java-1.0.5-M3.jar:/home/voltdb/voltdb-3.0/lib/zmq-2.1.11.jar
2014-02-24 06:43:24,143   INFO  [main] HOST: Maximum usable Java heap set to 910 mb.
2014-02-24 06:43:24,143   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-24 06:43:24,143   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-24 06:43:24,143   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-24 06:43:24,143   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-24 06:43:24,143   INFO  [main] HOST: HOST MEMORY (MB): 2002
2014-02-24 06:43:24,143   INFO  [main] HOST: OS PROFILE:       Linux 3.2.0-36-generic amd64 en_US
2014-02-24 06:43:24,144   INFO  [main] HOST: JAVA VERSION:     1.6.0_24
2014-02-24 06:43:24,144   INFO  [main] HOST: JAVA RUNTIME:     OpenJDK Runtime Environment (1.6.0_24-b24)
2014-02-24 06:43:24,144   INFO  [main] HOST: JAVA VM:          OpenJDK 64-Bit Server VM (20.0-b12, mixed mode)
2014-02-24 06:43:24,144   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-24 06:43:24,144   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.149 2a02:8070:8333:b700:20c:29ff:feba:12f0%2 21212,21211,8080 [SELF]
2014-02-24 06:43:24,161   WARN  [main] HOST: Running without redundancy (k=0) is not recommended for production use.
2014-02-24 06:43:24,219   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-24 06:43:24,755   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-23 22:51:17,743   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-23 22:51:17,747   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-23 22:51:17,748   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-23 22:51:17,750   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,750   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,751   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,751   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-23 22:51:17,751   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-23 22:51:17,752   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 22:51:17,752   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 22:51:17,753   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 22:51:17,758   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 22:51:17,758   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-23 22:51:17,759   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-23 22:51:17,759   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,760   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-23 22:51:17,760   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,761   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-23 22:51:17,762   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-23 22:51:17,762   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-23 22:51:17,762   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-23 22:51:17,762   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-23 22:51:17,762   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-23 22:51:17,764   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,764   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-23 22:51:17,765   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 22:51:17,765   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 22:51:17,765   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 22:51:17,766   INFO  [main] COMPILER: [null]: Created index: MCLMC on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,766   INFO  [main] COMPILER: [null]: Created index: MCLCH on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,766   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,767   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,767   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,767   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,768   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-23 22:51:17,768   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,768   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,768   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,769   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,769   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,770   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-23 22:51:17,770   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 22:51:17,771   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 22:51:17,807   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 22:51:17,807   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 22:51:17,807   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 22:51:17,807   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 22:51:17,807   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-23 22:51:17,807   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?); for CHECK with partitioning: CHECK.CHECKPATHID:1
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?); for CHECK with partitioning: CHECK.CHECKPATHID:1
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 22:51:17,808   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:1
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:1
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-23 22:51:17,809   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:1
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:1
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:1
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:1
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 22:51:17,810   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 22:51:17,811   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 22:51:17,811   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 22:51:17,811   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 22:51:17,811   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 22:51:17,811   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 22:51:17,811   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 22:51:17,811   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 22:51:17,811   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 22:51:17,811   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 22:51:17,811   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 22:51:17,811   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 22:51:17,811   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 22:51:17,811   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-23 22:51:17,811   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 22:51:17,811   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 22:51:17,811   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 22:51:17,815   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-23 22:51:17,854   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 22:51:17,862   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 22:51:17,865   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-23 22:51:17,868   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 22:51:17,871   INFO  [main] COMPILER: [CHECK.select]: Compiling Statement: SELECT * FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,876   INFO  [main] COMPILER: [CHECK.delete]: Compiling Statement: DELETE FROM CHECK WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,878   INFO  [main] COMPILER: [CHECK.update]: Compiling Statement: UPDATE CHECK SET CHECKID = ?, ENDPOINTID = ?, PROPERTYID = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, NAME = ?, CHECKPATHID = ? WHERE (CHECKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,882   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-23 22:51:17,883   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 22:51:17,885   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 22:51:17,887   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-23 22:51:17,889   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-23 22:51:17,890   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,893   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,895   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_CHECK_LINK SET LINKID = ?, CHECKPATHID = ?, CHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,898   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 22:51:17,899   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,902   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM CHECKPATH_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,904   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.update]: Compiling Statement: UPDATE CHECKPATH_MULTICHECK_LINK SET LINKID = ?, CHECKPATHID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,906   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-23 22:51:17,908   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-23 22:51:17,909   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 22:51:17,911   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 22:51:17,913   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-23 22:51:17,915   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 22:51:17,916   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:51:17,920   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:51:17,921   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:51:17,924   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-23 22:51:17,925   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-23 22:51:17,926   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-23 22:51:17,928   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 22:51:17,929   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 22:51:17,932   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 22:51:17,934   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 22:51:17,936   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-23 22:51:17,939   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 22:51:17,942   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 22:51:17,943   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-23 22:51:17,945   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-23 22:51:17,947   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:51:17,949   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:51:17,951   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:51:17,953   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-23 22:51:17,954   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 22:51:17,955   INFO  [main] COMPILER: [MULTICHECK.select]: Compiling Statement: SELECT * FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,958   INFO  [main] COMPILER: [MULTICHECK.delete]: Compiling Statement: DELETE FROM MULTICHECK WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,960   INFO  [main] COMPILER: [MULTICHECK.update]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKID = ?, OPERATOR = ?, STATE = ?, EXPIRED = ?, MULTICHECKNAME = ?, CHECKPATHID = ? WHERE (MULTICHECKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,963   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 22:51:17,964   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,966   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,967   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_CHECK_LINK SET LINKID = ?, MULTICHECKID = ?, CHECKID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,970   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 22:51:17,971   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,973   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,974   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.update]: Compiling Statement: UPDATE MULTICHECK_MULTICHECK_LINK SET LINKID = ?, MULTICHECKLID = ?, MULTICHECKRID = ?, CHECKPATHID = ? WHERE (LINKID = ?) AND (CHECKPATHID = ?);
2014-02-23 22:51:17,977   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 22:51:17,979   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.select]: Compiling Statement: SELECT * FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-23 22:51:17,981   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.delete]: Compiling Statement: DELETE FROM OUTBOUNDPROPERTYACTION WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-23 22:51:17,983   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.update]: Compiling Statement: UPDATE OUTBOUNDPROPERTYACTION SET OUTBOUNDPROPERTYACTIONID = ?, OUTBOUNDPROPERTYID = ?, INBOUNDPROPERTYID = ?, CURRENTSTATEPROPERTYID = ?, CUSTOMPAYLOAD = ?, ACTIONID = ? WHERE (OUTBOUNDPROPERTYACTIONID = ?) AND (ACTIONID = ?);
2014-02-23 22:51:17,985   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 22:51:17,987   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-23 22:51:17,988   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-23 22:51:17,990   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-23 22:51:17,992   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-23 22:51:17,994   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-23 22:51:17,996   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-23 22:51:17,997   INFO  [main] COMPILER: [RULE_ACTION_LINK.select]: Compiling Statement: SELECT * FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-23 22:51:17,999   INFO  [main] COMPILER: [RULE_ACTION_LINK.delete]: Compiling Statement: DELETE FROM RULE_ACTION_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-23 22:51:18,001   INFO  [main] COMPILER: [RULE_ACTION_LINK.update]: Compiling Statement: UPDATE RULE_ACTION_LINK SET LINKID = ?, RULEID = ?, ACTIONID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-23 22:51:18,003   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 22:51:18,004   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.select]: Compiling Statement: SELECT * FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-23 22:51:18,007   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.delete]: Compiling Statement: DELETE FROM RULE_MULTICHECK_LINK WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-23 22:51:18,008   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.update]: Compiling Statement: UPDATE RULE_MULTICHECK_LINK SET LINKID = ?, RULEID = ?, MULTICHECKID = ? WHERE (LINKID = ?) AND (RULEID = ?);
2014-02-23 22:51:18,010   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-23 22:51:18,012   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 22:51:18,014   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 22:51:18,015   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-23 22:51:18,017   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-23 22:51:18,018   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 22:51:18,020   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 22:51:18,022   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 22:51:18,023   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-23 22:51:18,024   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-23 22:51:18,026   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-23 22:51:18,029   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-23 22:51:18,057   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-23 22:51:18,061   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,062   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 22:51:18,064   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-23 22:51:18,064   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 22:51:18,067   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,067   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-23 22:51:18,070   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-23 22:51:18,071   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-23 22:51:18,073   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;
2014-02-23 22:51:18,080   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,081   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-23 22:51:18,082   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,083   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-23 22:51:18,096   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-23 22:51:18,097   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-23 22:51:18,100   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 22:51:18,100   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-23 22:51:18,103   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 22:51:18,105   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 22:51:18,108   WARN  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Procedure BLE_MultiCheckParentForMultiCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,108   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-23 22:51:18,114   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-23 22:51:18,114   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-23 22:51:18,116   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-23 22:51:18,119   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-23 22:51:18,119   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-23 22:51:18,123   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-23 22:51:18,124   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 22:51:18,125   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 22:51:18,127   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-23 22:51:18,130   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-23 22:51:18,132   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,132   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-23 22:51:18,134   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-23 22:51:18,134   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-23 22:51:18,136   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-23 22:51:18,138   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,138   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-23 22:51:18,141   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-23 22:51:18,145   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,145   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-23 22:51:18,147   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-23 22:51:18,148   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-23 22:51:18,150   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;
2014-02-23 22:51:18,151   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;'
2014-02-23 22:51:18,151   WARN  [main] COMPILER: [AME_ActionsForRule.class]: Procedure AME_ActionsForRule has a statement with a non-deterministic result - statement: "SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,152   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-23 22:51:18,182   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 22:51:18,184   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-23 22:51:18,187   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,188   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 22:51:18,192   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 22:51:18,194   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ?
2014-02-23 22:51:18,195   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 22:51:18,197   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 22:51:18,201   WARN  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Procedure BLE_IsCycleMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,201   WARN  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Procedure BLE_IsCycleMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,206   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 22:51:18,208   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,209   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-23 22:51:18,212   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-23 22:51:18,212   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-23 22:51:18,213   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 22:51:18,215   WARN  [main] COMPILER: [BLE_CheckPathForChecks.class]: Procedure BLE_CheckPathForChecks has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;", reason: index scan may provide insufficient ordering
2014-02-23 22:51:18,215   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-23 22:51:18,218   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-23 22:51:18,220   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-23 22:51:18,221   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-23 22:51:18,222   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-23 22:51:18,224   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-23 22:51:18,224   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-23 22:51:18,226   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,227   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-23 22:51:18,228   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-23 22:51:18,229   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 22:51:18,231   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-23 22:51:18,233   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,234   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-23 22:51:18,236   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 22:51:18,238   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-23 22:51:18,239   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 22:51:18,240   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;
2014-02-23 22:51:18,242   WARN  [main] COMPILER: [BLE_AllChecksForExpression.class]: Procedure BLE_AllChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,242   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 22:51:18,244   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,244   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 22:51:18,246   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,246   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-23 22:51:18,248   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-23 22:51:18,250   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?;
2014-02-23 22:51:18,255   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;
2014-02-23 22:51:18,257   WARN  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Procedure BLE_CheckPathForMultiChecks is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,258   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-23 22:51:18,260   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-23 22:51:18,262   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;
2014-02-23 22:51:18,265   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,265   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-23 22:51:18,316   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 22:51:18,317   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 22:51:18,322   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-23 22:51:18,323   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 22:51:18,325   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 22:51:18,327   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 22:51:18,329   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?
2014-02-23 22:51:18,331   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 22:51:18,333   WARN  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Procedure BLE_IsMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,333   WARN  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Procedure BLE_IsMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,334   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-23 22:51:18,336   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-23 22:51:18,337   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-23 22:51:18,339   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 22:51:18,339   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-23 22:51:18,342   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-23 22:51:18,343   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-23 22:51:18,343   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 22:51:18,344   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-23 22:51:18,346   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:51:18,347   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-23 22:51:18,352   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 06:51:19,418   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 06:51:19,428   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 06:51:19,434   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 06:51:19,452   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 06:51:19,453   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 06:51:19,454   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 06:51:19,485   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 06:51:19,492   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 06:51:19,524   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@36f0b7f8
2014-02-24 06:51:19,527   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 06:51:19,529   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:34001
2014-02-24 06:51:19,530   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 06:51:19,532   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:34001
2014-02-24 06:51:19,543   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169801de36000000 with negotiated timeout 6000 for client /127.0.0.1:34001
2014-02-24 06:51:19,543   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169801de36000000, negotiated timeout = 6000
2014-02-24 06:51:19,596   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 06:51:19,645   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 06:51:19,814   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 06:51:19,814   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 06:51:19,815   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 06:51:19,815   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 06:51:19,960   INFO  [main] HOST: hsql loaded
2014-02-24 06:51:20,047   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 06:51:21,837   INFO  [main] HOST: hsql loaded
2014-02-24 06:51:21,840   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 06:51:21,891   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-3.0). A confirmation message will follow if the loading is successful.
2014-02-24 06:51:21,891   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-3.0.
2014-02-24 06:51:22,046   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-24 06:51:22,095   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-24 06:51:22,127   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-24 06:51:22,131   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-24 06:51:22,132   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 14 ms.
2014-02-24 06:51:22,142   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 06:51:22,161   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-24 06:51:22,162   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-24 06:51:22,162   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 13 ms.
2014-02-24 06:51:22,183   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 06:51:22,215   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-24 06:51:22,215   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 19 ms.
2014-02-24 06:51:22,241   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 06:51:22,290   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-24 06:51:22,291   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 29 ms.
2014-02-24 06:51:22,303   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 06:51:22,305   INFO  [main] CONSOLE: Initializing initiator ID: 0, SiteID: 0:7
2014-02-24 06:51:22,329   INFO  [Mailbox tracker] EXPORT: Attempting to boot export client due to rejoin or other cluster topology change
2014-02-24 06:51:22,351   INFO  [main] HOST: Database start action is Create.
2014-02-24 06:51:22,351   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-24 06:51:22,351   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-24 06:51:22,351   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-24 06:51:22,351   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-24 06:51:22,352   INFO  [main] HOST: Available JVM arguments: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Xmx1024m -Dlog4j.configuration=file:///home/voltdb/voltdb-3.0/voltdb/log4j.xml -Djava.library.path=/home/voltdb/voltdb-3.0/voltdb
2014-02-24 06:51:22,352   INFO  [main] HOST: JVM class path: /home/voltdb/voltdb-3.0/voltdb/voltdb-3.0.jar:/home/voltdb/voltdb-3.0/lib/commons-cli-1.2.jar:/home/voltdb/voltdb-3.0/lib/commons-lang3-3.0.jar:/home/voltdb/voltdb-3.0/lib/guava-12.0.jar:/home/voltdb/voltdb-3.0/lib/jetty-continuation-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-http-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-io-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-server-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-util-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jline-2.10.jar:/home/voltdb/voltdb-3.0/lib/jna.jar:/home/voltdb/voltdb-3.0/lib/jsch-0.1.48.jar:/home/voltdb/voltdb-3.0/lib/log4j-1.2.16.jar:/home/voltdb/voltdb-3.0/lib/protobuf-java-2.4.1.jar:/home/voltdb/voltdb-3.0/lib/servlet-api-2.5.jar:/home/voltdb/voltdb-3.0/lib/slf4j-api-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/slf4j-nop-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/snappy-java-1.0.5-M3.jar:/home/voltdb/voltdb-3.0/lib/zmq-2.1.11.jar
2014-02-24 06:51:22,352   INFO  [main] HOST: Maximum usable Java heap set to 910 mb.
2014-02-24 06:51:22,352   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-24 06:51:22,352   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-24 06:51:22,352   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-24 06:51:22,352   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-24 06:51:22,352   INFO  [main] HOST: HOST MEMORY (MB): 2002
2014-02-24 06:51:22,352   INFO  [main] HOST: OS PROFILE:       Linux 3.2.0-36-generic amd64 en_US
2014-02-24 06:51:22,352   INFO  [main] HOST: JAVA VERSION:     1.6.0_24
2014-02-24 06:51:22,352   INFO  [main] HOST: JAVA RUNTIME:     OpenJDK Runtime Environment (1.6.0_24-b24)
2014-02-24 06:51:22,352   INFO  [main] HOST: JAVA VM:          OpenJDK 64-Bit Server VM (20.0-b12, mixed mode)
2014-02-24 06:51:22,353   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-24 06:51:22,353   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.149 2a02:8070:8333:b700:20c:29ff:feba:12f0%2 21212,21211,8080 [SELF]
2014-02-24 06:51:22,365   WARN  [main] HOST: Running without redundancy (k=0) is not recommended for production use.
2014-02-24 06:51:22,394   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-24 06:51:22,958   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-23 22:56:12,032   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-23 22:56:12,035   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-23 22:56:12,036   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-23 22:56:12,038   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,038   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,038   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,039   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-23 22:56:12,039   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-23 22:56:12,040   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 22:56:12,040   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 22:56:12,040   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 22:56:12,041   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 22:56:12,041   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-23 22:56:12,042   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-23 22:56:12,042   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,043   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-23 22:56:12,043   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,046   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-23 22:56:12,047   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-23 22:56:12,047   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-23 22:56:12,047   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-23 22:56:12,047   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-23 22:56:12,047   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-23 22:56:12,048   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,049   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-23 22:56:12,050   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 22:56:12,050   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 22:56:12,050   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 22:56:12,050   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,051   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,051   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,051   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,051   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,051   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,052   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-23 22:56:12,053   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,053   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,053   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,053   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,061   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,062   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-23 22:56:12,069   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 22:56:12,070   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 22:56:12,096   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 22:56:12,096   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 22:56:12,096   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-23 22:56:12,097   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-23 22:56:12,098   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 22:56:12,099   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 22:56:12,103   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-23 22:56:12,145   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 22:56:12,153   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 22:56:12,158   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-23 22:56:12,166   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 22:56:12,169   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-23 22:56:12,170   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 22:56:12,172   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 22:56:12,174   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-23 22:56:12,178   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-23 22:56:12,179   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 22:56:12,181   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-23 22:56:12,183   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-23 22:56:12,184   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 22:56:12,186   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 22:56:12,189   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-23 22:56:12,191   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 22:56:12,192   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:56:12,195   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:56:12,198   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:56:12,200   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-23 22:56:12,202   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-23 22:56:12,203   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-23 22:56:12,204   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 22:56:12,206   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 22:56:12,209   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 22:56:12,211   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 22:56:12,214   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-23 22:56:12,215   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 22:56:12,217   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 22:56:12,219   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-23 22:56:12,221   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-23 22:56:12,222   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:56:12,224   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:56:12,226   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 22:56:12,234   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-23 22:56:12,236   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 22:56:12,237   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 22:56:12,238   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 22:56:12,239   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 22:56:12,240   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 22:56:12,242   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-23 22:56:12,243   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-23 22:56:12,245   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-23 22:56:12,252   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-23 22:56:12,254   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-23 22:56:12,256   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-23 22:56:12,257   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 22:56:12,258   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-23 22:56:12,259   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 22:56:12,263   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 22:56:12,264   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-23 22:56:12,267   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-23 22:56:12,268   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 22:56:12,270   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 22:56:12,272   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 22:56:12,274   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-23 22:56:12,276   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-23 22:56:12,279   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-23 22:56:12,280   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-23 22:56:12,308   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-23 22:56:12,312   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:12,313   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 22:56:12,314   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-23 22:56:12,315   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 22:56:12,317   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:12,318   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-23 22:56:12,321   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-23 22:56:12,321   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-23 22:56:12,324   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;
2014-02-23 22:56:12,337   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:12,338   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-23 22:56:12,339   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:12,340   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-23 22:56:12,357   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-23 22:56:12,358   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-23 22:56:12,360   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 22:56:12,361   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-23 22:56:12,365   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 22:56:12,367   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 22:56:12,369   WARN  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Procedure BLE_MultiCheckParentForMultiCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:12,369   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-23 22:56:12,501   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-23 22:56:12,501   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-23 22:56:12,504   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-23 22:56:12,506   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-23 22:56:12,507   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-23 22:56:12,511   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-23 22:56:12,512   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 22:56:12,513   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 22:56:12,516   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-23 22:56:12,518   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-23 22:56:12,520   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:12,521   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-23 22:56:12,522   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-23 22:56:12,523   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-23 22:56:12,526   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-23 22:56:12,527   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:12,528   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-23 22:56:12,532   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-23 22:56:12,535   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:12,536   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-23 22:56:12,537   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-23 22:56:12,538   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-23 22:56:12,540   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;
2014-02-23 22:56:12,542   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;'
2014-02-23 22:56:12,542   WARN  [main] COMPILER: [AME_ActionsForRule.class]: Procedure AME_ActionsForRule has a statement with a non-deterministic result - statement: "SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:12,542   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-23 22:56:12,572   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 22:56:12,573   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-23 22:56:12,575   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:12,576   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 22:56:12,578   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 22:56:12,579   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ?
2014-02-23 22:56:12,581   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 22:56:13,679   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 22:56:13,684   WARN  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Procedure BLE_IsCycleMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:13,685   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 22:56:13,689   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:13,691   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-23 22:56:13,695   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-23 22:56:13,695   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-23 22:56:13,696   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 22:56:13,698   WARN  [main] COMPILER: [BLE_CheckPathForChecks.class]: Procedure BLE_CheckPathForChecks has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;", reason: index scan may provide insufficient ordering
2014-02-23 22:56:13,699   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-23 22:56:13,702   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-23 22:56:13,704   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-23 22:56:13,706   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-23 22:56:13,707   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-23 22:56:13,709   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-23 22:56:13,710   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-23 22:56:13,712   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:13,713   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-23 22:56:13,715   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-23 22:56:13,716   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 22:56:13,719   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-23 22:56:13,721   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:13,722   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-23 22:56:13,727   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 22:56:13,733   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-23 22:56:13,734   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 22:56:13,735   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;
2014-02-23 22:56:13,737   WARN  [main] COMPILER: [BLE_AllChecksForExpression.class]: Procedure BLE_AllChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:13,738   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 22:56:13,740   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:13,742   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 22:56:13,743   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:13,754   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-23 22:56:13,756   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-23 22:56:13,758   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?;
2014-02-23 22:56:13,760   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;
2014-02-23 22:56:13,762   WARN  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Procedure BLE_CheckPathForMultiChecks is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:13,762   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-23 22:56:13,764   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-23 22:56:13,765   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;
2014-02-23 22:56:13,768   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:13,768   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-23 22:56:13,787   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 22:56:13,788   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 22:56:13,789   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-23 22:56:13,790   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 22:56:13,791   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 22:56:13,793   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 22:56:13,831   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?
2014-02-23 22:56:13,833   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 22:56:13,835   WARN  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Procedure BLE_IsMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:13,844   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-23 22:56:13,846   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-23 22:56:13,847   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-23 22:56:13,851   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 22:56:13,852   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-23 22:56:13,854   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-23 22:56:13,856   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-23 22:56:13,856   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 22:56:13,857   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-23 22:56:13,863   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 22:56:13,864   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-23 22:56:13,872   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 06:56:15,394   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 06:56:15,406   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 06:56:15,539   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 06:56:15,657   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 06:56:15,657   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 06:56:15,662   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 06:56:15,703   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 06:56:15,712   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 06:56:15,824   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@326b9c84
2014-02-24 06:56:15,829   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 06:56:15,831   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 06:56:15,831   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:34007
2014-02-24 06:56:15,833   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:34007
2014-02-24 06:56:15,844   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16980420ec800000 with negotiated timeout 6000 for client /127.0.0.1:34007
2014-02-24 06:56:15,844   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16980420ec800000, negotiated timeout = 6000
2014-02-24 06:56:15,888   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 06:56:15,926   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 06:56:16,101   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 06:56:16,102   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 06:56:16,102   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 06:56:16,102   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 06:56:16,268   INFO  [main] HOST: hsql loaded
2014-02-24 06:56:16,380   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 06:56:18,013   INFO  [main] HOST: hsql loaded
2014-02-24 06:56:18,016   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 06:56:18,066   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-3.0). A confirmation message will follow if the loading is successful.
2014-02-24 06:56:18,210   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-24 06:56:18,255   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-24 06:56:18,281   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-24 06:56:18,296   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-24 06:56:18,297   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 17 ms.
2014-02-24 06:56:18,307   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-24 06:56:18,317   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 06:56:18,318   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-24 06:56:18,318   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 12 ms.
2014-02-24 06:56:18,342   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 06:56:18,367   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-24 06:56:18,367   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 28 ms.
2014-02-24 06:56:18,382   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 06:56:18,424   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-24 06:56:18,426   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 22 ms.
2014-02-24 06:56:18,440   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 06:56:18,445   INFO  [main] CONSOLE: Initializing initiator ID: 0, SiteID: 0:7
2014-02-24 06:56:18,447   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-3.0.
2014-02-24 06:56:18,504   INFO  [Mailbox tracker] EXPORT: Attempting to boot export client due to rejoin or other cluster topology change
2014-02-24 06:56:18,532   INFO  [main] HOST: Database start action is Create.
2014-02-24 06:56:18,532   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-24 06:56:18,532   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-24 06:56:18,532   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-24 06:56:18,532   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-24 06:56:18,532   INFO  [main] HOST: Available JVM arguments: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Xmx1024m -Dlog4j.configuration=file:///home/voltdb/voltdb-3.0/voltdb/log4j.xml -Djava.library.path=/home/voltdb/voltdb-3.0/voltdb
2014-02-24 06:56:18,533   INFO  [main] HOST: JVM class path: /home/voltdb/voltdb-3.0/voltdb/voltdb-3.0.jar:/home/voltdb/voltdb-3.0/lib/commons-cli-1.2.jar:/home/voltdb/voltdb-3.0/lib/commons-lang3-3.0.jar:/home/voltdb/voltdb-3.0/lib/guava-12.0.jar:/home/voltdb/voltdb-3.0/lib/jetty-continuation-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-http-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-io-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-server-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-util-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jline-2.10.jar:/home/voltdb/voltdb-3.0/lib/jna.jar:/home/voltdb/voltdb-3.0/lib/jsch-0.1.48.jar:/home/voltdb/voltdb-3.0/lib/log4j-1.2.16.jar:/home/voltdb/voltdb-3.0/lib/protobuf-java-2.4.1.jar:/home/voltdb/voltdb-3.0/lib/servlet-api-2.5.jar:/home/voltdb/voltdb-3.0/lib/slf4j-api-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/slf4j-nop-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/snappy-java-1.0.5-M3.jar:/home/voltdb/voltdb-3.0/lib/zmq-2.1.11.jar
2014-02-24 06:56:18,533   INFO  [main] HOST: Maximum usable Java heap set to 910 mb.
2014-02-24 06:56:18,533   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-24 06:56:18,533   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-24 06:56:18,533   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-24 06:56:18,533   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-24 06:56:18,533   INFO  [main] HOST: HOST MEMORY (MB): 2002
2014-02-24 06:56:18,533   INFO  [main] HOST: OS PROFILE:       Linux 3.2.0-36-generic amd64 en_US
2014-02-24 06:56:18,533   INFO  [main] HOST: JAVA VERSION:     1.6.0_24
2014-02-24 06:56:18,533   INFO  [main] HOST: JAVA RUNTIME:     OpenJDK Runtime Environment (1.6.0_24-b24)
2014-02-24 06:56:18,533   INFO  [main] HOST: JAVA VM:          OpenJDK 64-Bit Server VM (20.0-b12, mixed mode)
2014-02-24 06:56:18,533   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-24 06:56:18,533   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.149 2a02:8070:8333:b700:20c:29ff:feba:12f0%2 21212,21211,8080 [SELF]
2014-02-24 06:56:18,547   WARN  [main] HOST: Running without redundancy (k=0) is not recommended for production use.
2014-02-24 06:56:18,572   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-24 06:56:19,105   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-23 23:01:39,601   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-23 23:01:39,605   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-23 23:01:39,606   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-23 23:01:39,608   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,608   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,609   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,609   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-23 23:01:39,609   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-23 23:01:39,610   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:01:39,610   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:01:39,611   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:01:39,611   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:01:39,611   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:01:39,612   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-23 23:01:39,612   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,613   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-23 23:01:39,613   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,614   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-23 23:01:39,615   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:01:39,615   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-23 23:01:39,615   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:01:39,615   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-23 23:01:39,616   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-23 23:01:39,616   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,617   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-23 23:01:39,618   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:01:39,618   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:01:39,618   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:01:39,619   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,619   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,619   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,620   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,620   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,620   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,620   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-23 23:01:39,621   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,621   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,621   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,621   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,621   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,622   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-23 23:01:39,623   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 23:01:39,624   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 23:01:39,663   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:01:39,663   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:01:39,664   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-23 23:01:39,665   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:01:39,666   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:01:39,670   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-23 23:01:39,728   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:01:39,736   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:01:39,738   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-23 23:01:39,748   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:01:39,751   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-23 23:01:39,753   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:01:39,755   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:01:39,757   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-23 23:01:39,759   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:01:39,760   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:01:39,761   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-23 23:01:39,764   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-23 23:01:39,765   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:01:39,767   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:01:39,771   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:01:39,773   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:01:39,774   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:01:39,777   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:01:39,780   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:01:39,783   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-23 23:01:39,784   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:01:39,786   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-23 23:01:39,787   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:01:39,788   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:01:39,792   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:01:39,794   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:01:39,797   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-23 23:01:39,798   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:01:39,801   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:01:39,802   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-23 23:01:39,805   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-23 23:01:39,806   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:01:39,808   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:01:39,810   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:01:39,813   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-23 23:01:39,814   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:01:39,815   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:01:39,817   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:01:39,818   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:01:39,819   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:01:39,821   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-23 23:01:39,822   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-23 23:01:39,824   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-23 23:01:39,831   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-23 23:01:39,833   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-23 23:01:39,836   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-23 23:01:39,837   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:01:39,842   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-23 23:01:39,844   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:01:39,846   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:01:39,848   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-23 23:01:39,850   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:01:39,851   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:01:39,853   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:01:39,855   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:01:39,857   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-23 23:01:39,858   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-23 23:01:39,860   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-23 23:01:39,862   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-23 23:01:39,888   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-23 23:01:39,893   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:39,894   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:01:39,896   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:01:39,896   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:01:39,899   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:39,899   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-23 23:01:39,902   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-23 23:01:39,903   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-23 23:01:39,905   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;
2014-02-23 23:01:39,912   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:39,912   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-23 23:01:39,914   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:39,915   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-23 23:01:39,931   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-23 23:01:39,932   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:01:39,934   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:01:39,934   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-23 23:01:39,937   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:01:39,940   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:01:39,942   WARN  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Procedure BLE_MultiCheckParentForMultiCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:39,943   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-23 23:01:39,944   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-23 23:01:39,945   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-23 23:01:39,948   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-23 23:01:39,952   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-23 23:01:39,952   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:01:39,957   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-23 23:01:39,959   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:01:39,959   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:01:39,963   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-23 23:01:39,966   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-23 23:01:39,968   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:39,969   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-23 23:01:39,971   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-23 23:01:39,971   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-23 23:01:39,974   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-23 23:01:39,976   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:39,976   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-23 23:01:39,980   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-23 23:01:39,984   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:39,984   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-23 23:01:39,986   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:01:39,987   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-23 23:01:39,989   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;
2014-02-23 23:01:39,991   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;'
2014-02-23 23:01:39,991   WARN  [main] COMPILER: [AME_ActionsForRule.class]: Procedure AME_ActionsForRule has a statement with a non-deterministic result - statement: "SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:39,992   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:01:40,030   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:01:40,031   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-23 23:01:40,035   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:40,036   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:01:40,038   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:01:40,039   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ?
2014-02-23 23:01:40,041   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:01:40,043   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:01:40,045   WARN  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Procedure BLE_IsCycleMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:40,045   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:01:40,047   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:40,048   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-23 23:01:40,051   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-23 23:01:40,051   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-23 23:01:40,052   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:01:40,054   WARN  [main] COMPILER: [BLE_CheckPathForChecks.class]: Procedure BLE_CheckPathForChecks has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;", reason: index scan may provide insufficient ordering
2014-02-23 23:01:40,054   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-23 23:01:40,056   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-23 23:01:40,058   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-23 23:01:40,060   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-23 23:01:40,060   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-23 23:01:40,062   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-23 23:01:40,063   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-23 23:01:40,065   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:40,066   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-23 23:01:40,067   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-23 23:01:40,068   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:01:40,070   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-23 23:01:40,072   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:40,073   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-23 23:01:40,075   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:01:40,078   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-23 23:01:40,079   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:01:40,080   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;
2014-02-23 23:01:40,082   WARN  [main] COMPILER: [BLE_AllChecksForExpression.class]: Procedure BLE_AllChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:40,083   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:01:40,084   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:40,085   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:01:40,087   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:40,088   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:01:40,090   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:01:40,092   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?;
2014-02-23 23:01:40,094   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;
2014-02-23 23:01:40,096   WARN  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Procedure BLE_CheckPathForMultiChecks is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:40,097   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:01:40,098   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-23 23:01:40,100   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;
2014-02-23 23:01:40,103   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:40,104   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:01:40,129   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:01:40,129   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:01:40,133   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:01:40,133   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:01:40,142   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:01:40,143   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:01:40,145   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?
2014-02-23 23:01:40,147   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:01:40,150   WARN  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Procedure BLE_IsMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:40,154   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-23 23:01:40,156   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:01:40,157   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-23 23:01:40,159   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:01:40,159   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-23 23:01:40,162   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:01:40,163   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-23 23:01:40,163   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:01:40,164   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-23 23:01:40,167   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:01:40,167   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-23 23:01:40,189   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 07:01:41,084   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 07:01:41,095   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 07:01:41,101   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 07:01:41,131   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 07:01:41,131   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 07:01:41,133   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 07:01:41,162   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 07:01:41,169   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 07:01:41,204   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@36f0b7f8
2014-02-24 07:01:41,207   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 07:01:41,209   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:34011
2014-02-24 07:01:41,210   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 07:01:41,212   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:34011
2014-02-24 07:01:41,223   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x1698069c6e000000 with negotiated timeout 6000 for client /127.0.0.1:34011
2014-02-24 07:01:41,223   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1698069c6e000000, negotiated timeout = 6000
2014-02-24 07:01:41,264   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 07:01:41,290   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 07:01:41,467   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 07:01:41,467   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 07:01:41,468   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 07:01:41,468   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 07:01:41,627   INFO  [main] HOST: hsql loaded
2014-02-24 07:01:41,711   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 07:01:43,305   INFO  [main] HOST: hsql loaded
2014-02-24 07:01:43,309   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 07:01:43,361   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-3.0). A confirmation message will follow if the loading is successful.
2014-02-24 07:01:43,361   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-3.0.
2014-02-24 07:01:43,506   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-24 07:01:43,551   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-24 07:01:43,574   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-24 07:01:43,595   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-24 07:01:43,596   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-24 07:01:43,596   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 22 ms.
2014-02-24 07:01:43,614   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:01:43,614   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-24 07:01:43,614   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 4 ms.
2014-02-24 07:01:43,637   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:01:43,639   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-24 07:01:43,639   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 16 ms.
2014-02-24 07:01:43,657   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:01:43,688   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-24 07:01:43,688   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 24 ms.
2014-02-24 07:01:43,701   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:01:43,703   INFO  [main] CONSOLE: Initializing initiator ID: 0, SiteID: 0:7
2014-02-24 07:01:43,732   INFO  [Mailbox tracker] EXPORT: Attempting to boot export client due to rejoin or other cluster topology change
2014-02-24 07:01:43,747   INFO  [main] HOST: Database start action is Create.
2014-02-24 07:01:43,747   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-24 07:01:43,747   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-24 07:01:43,747   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-24 07:01:43,747   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-24 07:01:43,747   INFO  [main] HOST: Available JVM arguments: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Xmx1024m -Dlog4j.configuration=file:///home/voltdb/voltdb-3.0/voltdb/log4j.xml -Djava.library.path=/home/voltdb/voltdb-3.0/voltdb
2014-02-24 07:01:43,747   INFO  [main] HOST: JVM class path: /home/voltdb/voltdb-3.0/voltdb/voltdb-3.0.jar:/home/voltdb/voltdb-3.0/lib/commons-cli-1.2.jar:/home/voltdb/voltdb-3.0/lib/commons-lang3-3.0.jar:/home/voltdb/voltdb-3.0/lib/guava-12.0.jar:/home/voltdb/voltdb-3.0/lib/jetty-continuation-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-http-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-io-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-server-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-util-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jline-2.10.jar:/home/voltdb/voltdb-3.0/lib/jna.jar:/home/voltdb/voltdb-3.0/lib/jsch-0.1.48.jar:/home/voltdb/voltdb-3.0/lib/log4j-1.2.16.jar:/home/voltdb/voltdb-3.0/lib/protobuf-java-2.4.1.jar:/home/voltdb/voltdb-3.0/lib/servlet-api-2.5.jar:/home/voltdb/voltdb-3.0/lib/slf4j-api-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/slf4j-nop-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/snappy-java-1.0.5-M3.jar:/home/voltdb/voltdb-3.0/lib/zmq-2.1.11.jar
2014-02-24 07:01:43,747   INFO  [main] HOST: Maximum usable Java heap set to 910 mb.
2014-02-24 07:01:43,747   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-24 07:01:43,747   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-24 07:01:43,748   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-24 07:01:43,748   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-24 07:01:43,748   INFO  [main] HOST: HOST MEMORY (MB): 2002
2014-02-24 07:01:43,748   INFO  [main] HOST: OS PROFILE:       Linux 3.2.0-36-generic amd64 en_US
2014-02-24 07:01:43,748   INFO  [main] HOST: JAVA VERSION:     1.6.0_24
2014-02-24 07:01:43,748   INFO  [main] HOST: JAVA RUNTIME:     OpenJDK Runtime Environment (1.6.0_24-b24)
2014-02-24 07:01:43,748   INFO  [main] HOST: JAVA VM:          OpenJDK 64-Bit Server VM (20.0-b12, mixed mode)
2014-02-24 07:01:43,748   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-24 07:01:43,748   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.149 2a02:8070:8333:b700:20c:29ff:feba:12f0%2 21212,21211,8080 [SELF]
2014-02-24 07:01:43,763   WARN  [main] HOST: Running without redundancy (k=0) is not recommended for production use.
2014-02-24 07:01:43,794   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-24 07:01:44,330   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-23 23:03:39,762   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-23 23:03:39,767   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-23 23:03:39,767   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-23 23:03:39,771   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,772   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,772   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,774   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-23 23:03:39,774   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-23 23:03:39,774   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:03:39,774   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:03:39,782   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:03:39,782   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:03:39,783   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:03:39,783   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-23 23:03:39,784   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,785   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-23 23:03:39,785   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,785   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-23 23:03:39,787   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:03:39,787   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-23 23:03:39,787   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:03:39,787   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-23 23:03:39,787   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-23 23:03:39,788   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,789   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-23 23:03:39,789   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:03:39,789   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:03:39,790   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:03:39,797   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,797   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,797   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,798   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,798   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,798   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,799   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-23 23:03:39,799   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,800   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,800   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,800   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,800   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,801   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-23 23:03:39,802   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 23:03:39,802   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 23:03:39,853   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:03:39,854   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-23 23:03:39,855   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:03:39,856   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:03:39,857   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:03:39,857   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:03:39,857   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:03:39,860   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-23 23:03:39,910   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:03:39,918   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:03:39,921   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-23 23:03:39,924   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:03:39,927   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-23 23:03:39,929   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:03:39,931   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:03:39,933   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-23 23:03:39,936   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:03:39,937   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:03:39,938   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-23 23:03:39,941   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-23 23:03:39,942   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:03:39,944   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:03:39,947   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:03:39,949   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:03:39,950   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:03:39,953   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:03:39,955   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:03:39,957   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-23 23:03:39,959   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:03:39,960   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-23 23:03:39,962   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:03:39,963   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:03:39,966   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:03:39,968   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:03:39,970   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-23 23:03:39,971   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:03:39,973   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:03:39,975   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-23 23:03:39,977   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-23 23:03:39,978   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:03:39,981   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:03:39,983   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:03:39,985   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-23 23:03:39,986   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:03:39,987   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:03:39,989   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:03:39,990   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:03:39,991   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:03:39,993   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-23 23:03:39,994   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-23 23:03:39,995   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-23 23:03:39,998   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-23 23:03:40,003   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-23 23:03:40,005   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-23 23:03:40,006   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:03:40,007   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-23 23:03:40,008   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:03:40,010   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:03:40,011   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-23 23:03:40,013   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:03:40,014   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:03:40,016   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:03:40,018   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:03:40,020   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-23 23:03:40,021   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-23 23:03:40,023   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-23 23:03:40,025   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-23 23:03:40,053   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-23 23:03:40,057   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,058   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:03:40,059   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:03:40,060   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:03:40,062   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,063   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-23 23:03:40,066   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-23 23:03:40,067   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-23 23:03:40,069   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;
2014-02-23 23:03:40,075   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,075   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-23 23:03:40,077   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,078   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-23 23:03:40,093   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-23 23:03:40,094   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:03:40,095   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:03:40,096   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-23 23:03:40,099   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:03:40,101   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:03:40,103   WARN  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Procedure BLE_MultiCheckParentForMultiCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,103   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-23 23:03:40,105   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-23 23:03:40,106   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-23 23:03:40,108   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-23 23:03:40,111   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-23 23:03:40,111   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:03:40,116   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-23 23:03:40,117   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:03:40,118   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:03:40,121   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-23 23:03:40,124   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-23 23:03:40,125   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,126   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-23 23:03:40,129   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-23 23:03:40,129   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-23 23:03:40,133   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-23 23:03:40,134   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,135   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-23 23:03:40,139   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-23 23:03:40,142   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,143   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-23 23:03:40,145   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:03:40,145   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-23 23:03:40,148   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;
2014-02-23 23:03:40,150   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;'
2014-02-23 23:03:40,150   WARN  [main] COMPILER: [AME_ActionsForRule.class]: Procedure AME_ActionsForRule has a statement with a non-deterministic result - statement: "SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,151   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:03:40,193   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:03:40,194   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-23 23:03:40,197   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,198   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:03:40,200   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:03:40,201   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ?
2014-02-23 23:03:40,203   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:03:40,205   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:03:40,207   WARN  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Procedure BLE_IsCycleMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,216   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:03:40,218   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,219   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-23 23:03:40,223   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-23 23:03:40,223   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-23 23:03:40,223   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:03:40,225   WARN  [main] COMPILER: [BLE_CheckPathForChecks.class]: Procedure BLE_CheckPathForChecks has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;", reason: index scan may provide insufficient ordering
2014-02-23 23:03:40,226   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-23 23:03:40,228   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-23 23:03:40,230   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-23 23:03:40,231   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-23 23:03:40,234   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-23 23:03:40,236   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-23 23:03:40,237   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-23 23:03:40,245   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,246   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-23 23:03:40,248   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-23 23:03:40,249   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:03:40,251   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-23 23:03:40,253   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,253   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-23 23:03:40,258   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:03:40,260   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-23 23:03:40,262   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:03:40,262   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;
2014-02-23 23:03:40,266   WARN  [main] COMPILER: [BLE_AllChecksForExpression.class]: Procedure BLE_AllChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,266   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:03:40,269   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,270   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:03:40,271   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,272   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:03:40,273   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:03:40,275   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?;
2014-02-23 23:03:40,277   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;
2014-02-23 23:03:40,278   WARN  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Procedure BLE_CheckPathForMultiChecks is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,279   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:03:40,280   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-23 23:03:40,283   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;
2014-02-23 23:03:40,288   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,289   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:03:40,322   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:03:40,330   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:03:40,332   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:03:40,333   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:03:40,375   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:03:40,377   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:03:40,382   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?
2014-02-23 23:03:40,385   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:03:40,387   WARN  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Procedure BLE_IsMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,388   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-23 23:03:40,395   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:03:40,397   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-23 23:03:40,402   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:03:40,403   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-23 23:03:40,413   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:03:40,416   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-23 23:03:40,416   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:03:40,416   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-23 23:03:40,419   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:03:40,420   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-23 23:03:40,427   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 07:03:41,369   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 07:03:41,379   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 07:03:41,385   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 07:03:41,403   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 07:03:41,403   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 07:03:41,405   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 07:03:41,430   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 07:03:41,437   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 07:03:41,470   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@326b9c84
2014-02-24 07:03:41,474   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 07:03:41,476   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:34015
2014-02-24 07:03:41,477   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 07:03:41,478   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:34015
2014-02-24 07:03:41,493   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x1698078753800000 with negotiated timeout 6000 for client /127.0.0.1:34015
2014-02-24 07:03:41,493   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1698078753800000, negotiated timeout = 6000
2014-02-24 07:03:41,545   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 07:03:41,581   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 07:03:41,753   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 07:03:41,753   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 07:03:41,753   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 07:03:41,754   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 07:03:41,911   INFO  [main] HOST: hsql loaded
2014-02-24 07:03:41,999   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 07:03:43,712   INFO  [main] HOST: hsql loaded
2014-02-24 07:03:43,716   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 07:03:43,769   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-3.0). A confirmation message will follow if the loading is successful.
2014-02-24 07:03:43,770   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-3.0.
2014-02-24 07:03:43,914   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-24 07:03:43,972   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-24 07:03:43,993   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-24 07:03:43,997   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-24 07:03:43,998   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 12 ms.
2014-02-24 07:03:44,009   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:03:44,023   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-24 07:03:44,030   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-24 07:03:44,030   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 8 ms.
2014-02-24 07:03:44,036   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:03:44,062   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-24 07:03:44,062   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 29 ms.
2014-02-24 07:03:44,084   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:03:44,113   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-24 07:03:44,114   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 23 ms.
2014-02-24 07:03:44,127   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:03:44,128   INFO  [main] CONSOLE: Initializing initiator ID: 0, SiteID: 0:7
2014-02-24 07:03:44,153   INFO  [Mailbox tracker] EXPORT: Attempting to boot export client due to rejoin or other cluster topology change
2014-02-24 07:03:44,173   INFO  [main] HOST: Database start action is Create.
2014-02-24 07:03:44,173   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-24 07:03:44,173   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-24 07:03:44,173   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-24 07:03:44,173   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-24 07:03:44,174   INFO  [main] HOST: Available JVM arguments: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Xmx1024m -Dlog4j.configuration=file:///home/voltdb/voltdb-3.0/voltdb/log4j.xml -Djava.library.path=/home/voltdb/voltdb-3.0/voltdb
2014-02-24 07:03:44,174   INFO  [main] HOST: JVM class path: /home/voltdb/voltdb-3.0/voltdb/voltdb-3.0.jar:/home/voltdb/voltdb-3.0/lib/commons-cli-1.2.jar:/home/voltdb/voltdb-3.0/lib/commons-lang3-3.0.jar:/home/voltdb/voltdb-3.0/lib/guava-12.0.jar:/home/voltdb/voltdb-3.0/lib/jetty-continuation-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-http-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-io-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-server-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-util-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jline-2.10.jar:/home/voltdb/voltdb-3.0/lib/jna.jar:/home/voltdb/voltdb-3.0/lib/jsch-0.1.48.jar:/home/voltdb/voltdb-3.0/lib/log4j-1.2.16.jar:/home/voltdb/voltdb-3.0/lib/protobuf-java-2.4.1.jar:/home/voltdb/voltdb-3.0/lib/servlet-api-2.5.jar:/home/voltdb/voltdb-3.0/lib/slf4j-api-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/slf4j-nop-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/snappy-java-1.0.5-M3.jar:/home/voltdb/voltdb-3.0/lib/zmq-2.1.11.jar
2014-02-24 07:03:44,174   INFO  [main] HOST: Maximum usable Java heap set to 910 mb.
2014-02-24 07:03:44,174   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-24 07:03:44,174   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-24 07:03:44,174   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-24 07:03:44,174   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-24 07:03:44,174   INFO  [main] HOST: HOST MEMORY (MB): 2002
2014-02-24 07:03:44,174   INFO  [main] HOST: OS PROFILE:       Linux 3.2.0-36-generic amd64 en_US
2014-02-24 07:03:44,174   INFO  [main] HOST: JAVA VERSION:     1.6.0_24
2014-02-24 07:03:44,175   INFO  [main] HOST: JAVA RUNTIME:     OpenJDK Runtime Environment (1.6.0_24-b24)
2014-02-24 07:03:44,175   INFO  [main] HOST: JAVA VM:          OpenJDK 64-Bit Server VM (20.0-b12, mixed mode)
2014-02-24 07:03:44,176   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-24 07:03:44,176   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.149 2a02:8070:8333:b700:20c:29ff:feba:12f0%2 21212,21211,8080 [SELF]
2014-02-24 07:03:44,182   WARN  [main] HOST: Running without redundancy (k=0) is not recommended for production use.
2014-02-24 07:03:44,263   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-24 07:03:44,795   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-23 23:19:07,692   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-23 23:19:07,700   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-23 23:19:07,701   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-23 23:19:07,703   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,703   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,704   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,704   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-23 23:19:07,705   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-23 23:19:07,705   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:19:07,705   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:19:07,706   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:19:07,706   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:19:07,707   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:19:07,707   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-23 23:19:07,708   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,708   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-23 23:19:07,709   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,709   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-23 23:19:07,711   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:19:07,711   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-23 23:19:07,711   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:19:07,711   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-23 23:19:07,711   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-23 23:19:07,712   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,713   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-23 23:19:07,713   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-23 23:19:07,713   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-23 23:19:07,714   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:19:07,714   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:19:07,714   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:19:07,715   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,715   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,715   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,715   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,716   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,716   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,716   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-23 23:19:07,717   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,717   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,717   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,717   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,718   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,718   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-23 23:19:07,719   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 23:19:07,719   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 23:19:07,720   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,720   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 23:19:07,761   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:19:07,761   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:19:07,761   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:19:07,761   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:19:07,761   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-23 23:19:07,761   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:19:07,761   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:19:07,762   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:19:07,763   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 23:19:07,764   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 23:19:07,764   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:19:07,764   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:19:07,764   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:19:07,764   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:19:07,764   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:19:07,764   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:19:07,764   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:19:07,764   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:19:07,764   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:19:07,764   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:19:07,764   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:19:07,764   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:19:07,775   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-23 23:19:07,832   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:19:07,839   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:19:07,843   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-23 23:19:07,852   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:19:07,855   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-23 23:19:07,856   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:19:07,858   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:19:07,860   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-23 23:19:07,863   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:19:07,864   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:19:07,865   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-23 23:19:07,868   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-23 23:19:07,869   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:19:07,871   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:19:07,874   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:19:07,877   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:19:07,878   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:19:07,882   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:19:07,884   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:19:07,887   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-23 23:19:07,888   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:19:07,890   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-23 23:19:07,892   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:19:07,893   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:19:07,897   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:19:07,899   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:19:07,902   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-23 23:19:07,903   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:19:07,906   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:19:07,908   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-23 23:19:07,910   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-23 23:19:07,911   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:19:07,914   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:19:07,917   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:19:07,919   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-23 23:19:07,921   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:19:07,922   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:19:07,924   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:19:07,925   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:19:07,926   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:19:07,928   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-23 23:19:07,933   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-23 23:19:07,934   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-23 23:19:07,938   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-23 23:19:07,940   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-23 23:19:07,942   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-23 23:19:07,943   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:19:07,945   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-23 23:19:07,946   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:19:07,948   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:19:07,950   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-23 23:19:07,952   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:19:07,954   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:19:07,957   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:19:07,958   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:19:07,960   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-23 23:19:07,962   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-23 23:19:07,964   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-23 23:19:07,966   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-23 23:19:07,994   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-23 23:19:07,998   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:07,999   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:19:08,001   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:19:08,001   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:19:08,004   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,004   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-23 23:19:08,008   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-23 23:19:08,008   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-23 23:19:08,010   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;
2014-02-23 23:19:08,018   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,019   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-23 23:19:08,021   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,022   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-23 23:19:08,036   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-23 23:19:08,037   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:19:08,039   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:19:08,040   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-23 23:19:08,043   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:19:08,046   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:19:08,048   WARN  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Procedure BLE_MultiCheckParentForMultiCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,048   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-23 23:19:08,051   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-23 23:19:08,052   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-23 23:19:08,055   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-23 23:19:08,058   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-23 23:19:08,059   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:19:08,064   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-23 23:19:08,066   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:19:08,067   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:19:08,070   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-23 23:19:08,073   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-23 23:19:08,075   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,076   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-23 23:19:08,078   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-23 23:19:08,078   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-23 23:19:08,082   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-23 23:19:08,084   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,085   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-23 23:19:08,089   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-23 23:19:08,092   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,093   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-23 23:19:08,095   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:19:08,096   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-23 23:19:08,099   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;
2014-02-23 23:19:08,101   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;'
2014-02-23 23:19:08,101   WARN  [main] COMPILER: [AME_ActionsForRule.class]: Procedure AME_ActionsForRule has a statement with a non-deterministic result - statement: "SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,102   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:19:08,136   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:19:08,137   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-23 23:19:08,141   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,142   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:19:08,144   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:19:08,147   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ?
2014-02-23 23:19:08,149   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:19:08,151   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:19:08,153   WARN  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Procedure BLE_IsCycleMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,154   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:19:08,156   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,156   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-23 23:19:08,159   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-23 23:19:08,159   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-23 23:19:08,160   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:19:08,162   WARN  [main] COMPILER: [BLE_CheckPathForChecks.class]: Procedure BLE_CheckPathForChecks has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;", reason: index scan may provide insufficient ordering
2014-02-23 23:19:08,163   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-23 23:19:08,166   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-23 23:19:08,168   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-23 23:19:08,169   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-23 23:19:08,170   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-23 23:19:08,172   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-23 23:19:08,173   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-23 23:19:08,175   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,175   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-23 23:19:08,177   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-23 23:19:08,178   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:19:08,180   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-23 23:19:08,182   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,183   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-23 23:19:08,185   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:19:08,188   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-23 23:19:08,189   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:19:08,190   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;
2014-02-23 23:19:08,193   WARN  [main] COMPILER: [BLE_AllChecksForExpression.class]: Procedure BLE_AllChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,194   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:19:08,196   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,197   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:19:08,199   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,199   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:19:08,202   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:19:08,204   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?;
2014-02-23 23:19:08,207   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;
2014-02-23 23:19:08,209   WARN  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Procedure BLE_CheckPathForMultiChecks is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,209   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:19:08,211   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-23 23:19:08,213   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;
2014-02-23 23:19:08,216   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,217   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:19:08,268   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:19:08,269   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:19:08,271   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:19:08,271   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:19:08,273   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:19:08,275   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:19:08,277   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?
2014-02-23 23:19:08,282   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:19:08,287   WARN  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Procedure BLE_IsMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,288   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-23 23:19:08,289   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:19:08,290   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-23 23:19:08,292   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:19:08,293   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-23 23:19:08,302   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:19:08,304   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-23 23:19:08,304   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:19:08,305   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-23 23:19:08,307   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:19:08,308   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-23 23:19:08,314   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 07:19:09,192   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 07:19:09,202   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 07:19:09,208   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 07:19:09,228   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 07:19:09,228   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 07:19:09,230   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 07:19:09,257   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 07:19:09,264   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 07:19:09,300   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@75be16f5
2014-02-24 07:19:09,303   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 07:19:09,305   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:34091
2014-02-24 07:19:09,306   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 07:19:09,308   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:34091
2014-02-24 07:19:09,319   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16980e9b7e000000 with negotiated timeout 6000 for client /127.0.0.1:34091
2014-02-24 07:19:09,319   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16980e9b7e000000, negotiated timeout = 6000
2014-02-24 07:19:09,362   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 07:19:09,406   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 07:19:09,591   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 07:19:09,591   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 07:19:09,591   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 07:19:09,592   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 07:19:09,735   INFO  [main] HOST: hsql loaded
2014-02-24 07:19:09,820   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 07:19:11,404   INFO  [main] HOST: hsql loaded
2014-02-24 07:19:11,407   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 07:19:11,457   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-3.0). A confirmation message will follow if the loading is successful.
2014-02-24 07:19:11,460   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-3.0.
2014-02-24 07:19:11,599   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-24 07:19:11,659   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-24 07:19:11,688   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-24 07:19:11,690   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-24 07:19:11,691   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 23 ms.
2014-02-24 07:19:11,697   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:19:11,723   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-24 07:19:11,724   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-24 07:19:11,725   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 15 ms.
2014-02-24 07:19:11,740   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:19:11,771   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-24 07:19:11,772   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 26 ms.
2014-02-24 07:19:11,795   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:19:11,844   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-24 07:19:11,845   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 48 ms.
2014-02-24 07:19:11,858   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:19:11,859   INFO  [main] CONSOLE: Initializing initiator ID: 0, SiteID: 0:7
2014-02-24 07:19:11,889   INFO  [Mailbox tracker] EXPORT: Attempting to boot export client due to rejoin or other cluster topology change
2014-02-24 07:19:11,927   INFO  [main] HOST: Database start action is Create.
2014-02-24 07:19:11,927   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-24 07:19:11,927   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-24 07:19:11,927   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-24 07:19:11,927   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-24 07:19:11,927   INFO  [main] HOST: Available JVM arguments: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Xmx1024m -Dlog4j.configuration=file:///home/voltdb/voltdb-3.0/voltdb/log4j.xml -Djava.library.path=/home/voltdb/voltdb-3.0/voltdb
2014-02-24 07:19:11,927   INFO  [main] HOST: JVM class path: /home/voltdb/voltdb-3.0/voltdb/voltdb-3.0.jar:/home/voltdb/voltdb-3.0/lib/commons-cli-1.2.jar:/home/voltdb/voltdb-3.0/lib/commons-lang3-3.0.jar:/home/voltdb/voltdb-3.0/lib/guava-12.0.jar:/home/voltdb/voltdb-3.0/lib/jetty-continuation-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-http-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-io-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-server-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-util-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jline-2.10.jar:/home/voltdb/voltdb-3.0/lib/jna.jar:/home/voltdb/voltdb-3.0/lib/jsch-0.1.48.jar:/home/voltdb/voltdb-3.0/lib/log4j-1.2.16.jar:/home/voltdb/voltdb-3.0/lib/protobuf-java-2.4.1.jar:/home/voltdb/voltdb-3.0/lib/servlet-api-2.5.jar:/home/voltdb/voltdb-3.0/lib/slf4j-api-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/slf4j-nop-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/snappy-java-1.0.5-M3.jar:/home/voltdb/voltdb-3.0/lib/zmq-2.1.11.jar
2014-02-24 07:19:11,927   INFO  [main] HOST: Maximum usable Java heap set to 910 mb.
2014-02-24 07:19:11,927   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-24 07:19:11,927   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-24 07:19:11,928   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-24 07:19:11,928   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-24 07:19:11,928   INFO  [main] HOST: HOST MEMORY (MB): 2002
2014-02-24 07:19:11,928   INFO  [main] HOST: OS PROFILE:       Linux 3.2.0-36-generic amd64 en_US
2014-02-24 07:19:11,928   INFO  [main] HOST: JAVA VERSION:     1.6.0_24
2014-02-24 07:19:11,928   INFO  [main] HOST: JAVA RUNTIME:     OpenJDK Runtime Environment (1.6.0_24-b24)
2014-02-24 07:19:11,928   INFO  [main] HOST: JAVA VM:          OpenJDK 64-Bit Server VM (20.0-b12, mixed mode)
2014-02-24 07:19:11,929   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-24 07:19:11,929   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.149 2a02:8070:8333:b700:20c:29ff:feba:12f0%2 21212,21211,8080 [SELF]
2014-02-24 07:19:11,945   WARN  [main] HOST: Running without redundancy (k=0) is not recommended for production use.
2014-02-24 07:19:11,976   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-24 07:19:12,527   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-23 23:24:24,186   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-23 23:24:24,189   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-23 23:24:24,190   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-23 23:24:24,192   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,192   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,193   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,193   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-23 23:24:24,194   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-23 23:24:24,194   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:24:24,194   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:24:24,195   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:24:24,195   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:24:24,196   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:24:24,196   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-23 23:24:24,196   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,197   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-23 23:24:24,198   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,198   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-23 23:24:24,199   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:24:24,199   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-23 23:24:24,200   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:24:24,200   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-23 23:24:24,200   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-23 23:24:24,201   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,201   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-23 23:24:24,201   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-23 23:24:24,201   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-23 23:24:24,202   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:24:24,202   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:24:24,202   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:24:24,203   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,203   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,203   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,204   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,204   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,204   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,204   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-23 23:24:24,205   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,205   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,205   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,205   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,205   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,206   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-23 23:24:24,207   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 23:24:24,207   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 23:24:24,208   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,208   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 23:24:24,254   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:24:24,255   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:24:24,255   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:24:24,255   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:24:24,255   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-23 23:24:24,255   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:24:24,255   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:24:24,255   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:24:24,255   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:24:24,255   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 23:24:24,255   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 23:24:24,255   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-23 23:24:24,255   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:24:24,255   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:24:24,255   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:24:24,255   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-23 23:24:24,256   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:24:24,257   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:24:24,261   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-23 23:24:24,301   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:24:24,309   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:24:24,313   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-23 23:24:24,317   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:24:24,320   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-23 23:24:24,322   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:24:24,325   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:24:24,328   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-23 23:24:24,332   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:24:24,333   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:24:24,335   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-23 23:24:24,339   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-23 23:24:24,340   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:24:24,343   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:24:24,346   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:24:24,349   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:24:24,351   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:24:24,356   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:24:24,358   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:24:24,362   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-23 23:24:24,364   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:24:24,366   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-23 23:24:24,368   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:24:24,369   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:24:24,372   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:24:24,374   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:24:24,377   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-23 23:24:24,379   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:24:24,381   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:24:24,383   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-23 23:24:24,385   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-23 23:24:24,386   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:24:24,389   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:24:24,391   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:24:24,394   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-23 23:24:24,395   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:24:24,397   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:24:24,399   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:24:24,400   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:24:24,401   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:24:24,403   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-23 23:24:24,408   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-23 23:24:24,409   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-23 23:24:24,413   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-23 23:24:24,414   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-23 23:24:24,417   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-23 23:24:24,418   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:24:24,419   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-23 23:24:24,420   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:24:24,422   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:24:24,424   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-23 23:24:24,426   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:24:24,427   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:24:24,429   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:24:24,430   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:24:24,432   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-23 23:24:24,433   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-23 23:24:24,435   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-23 23:24:24,437   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-23 23:24:24,466   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-23 23:24:24,469   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,471   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:24:24,472   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:24:24,473   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:24:24,475   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,476   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-23 23:24:24,480   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-23 23:24:24,480   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-23 23:24:24,483   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;
2014-02-23 23:24:24,489   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,490   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-23 23:24:24,492   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,493   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-23 23:24:24,513   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-23 23:24:24,513   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:24:24,515   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:24:24,516   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-23 23:24:24,519   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:24:24,522   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:24:24,524   WARN  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Procedure BLE_MultiCheckParentForMultiCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,525   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-23 23:24:24,527   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-23 23:24:24,527   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-23 23:24:24,530   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-23 23:24:24,533   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-23 23:24:24,533   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:24:24,537   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-23 23:24:24,539   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:24:24,539   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:24:24,542   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-23 23:24:24,545   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-23 23:24:24,547   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,548   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-23 23:24:24,550   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-23 23:24:24,550   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-23 23:24:24,553   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-23 23:24:24,554   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,555   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-23 23:24:24,558   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-23 23:24:24,561   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,562   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-23 23:24:24,563   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:24:24,564   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-23 23:24:24,566   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;
2014-02-23 23:24:24,568   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;'
2014-02-23 23:24:24,568   WARN  [main] COMPILER: [AME_ActionsForRule.class]: Procedure AME_ActionsForRule has a statement with a non-deterministic result - statement: "SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,569   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:24:24,596   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:24:24,597   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-23 23:24:24,601   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,602   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:24:24,605   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:24:24,608   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ?
2014-02-23 23:24:24,610   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:24:24,613   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:24:24,615   WARN  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Procedure BLE_IsCycleMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,616   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:24:24,619   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,620   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-23 23:24:24,623   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-23 23:24:24,624   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-23 23:24:24,624   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:24:24,626   WARN  [main] COMPILER: [BLE_CheckPathForChecks.class]: Procedure BLE_CheckPathForChecks has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;", reason: index scan may provide insufficient ordering
2014-02-23 23:24:24,627   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-23 23:24:24,632   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-23 23:24:24,634   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-23 23:24:24,636   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-23 23:24:24,637   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-23 23:24:24,639   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-23 23:24:24,640   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-23 23:24:24,642   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,643   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-23 23:24:24,644   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-23 23:24:24,645   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:24:24,647   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-23 23:24:24,649   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,650   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-23 23:24:24,653   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:24:24,669   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-23 23:24:24,671   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:24:24,679   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;
2014-02-23 23:24:24,688   WARN  [main] COMPILER: [BLE_AllChecksForExpression.class]: Procedure BLE_AllChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,688   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:24:24,691   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,692   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:24:24,694   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,694   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:24:24,697   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:24:24,699   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?;
2014-02-23 23:24:24,710   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;
2014-02-23 23:24:24,712   WARN  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Procedure BLE_CheckPathForMultiChecks is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,721   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:24:24,723   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-23 23:24:24,725   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;
2014-02-23 23:24:24,728   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,729   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:24:24,759   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:24:24,759   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:24:24,761   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:24:24,761   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:24:24,764   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:24:24,781   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:24:24,784   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?
2014-02-23 23:24:24,787   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:24:24,788   WARN  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Procedure BLE_IsMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,798   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-23 23:24:24,800   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:24:24,810   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-23 23:24:24,813   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:24:24,814   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-23 23:24:24,822   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:24:24,824   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-23 23:24:24,824   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:24:24,824   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-23 23:24:24,827   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:24:24,828   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-23 23:24:24,850   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 07:24:25,807   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 07:24:25,819   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 07:24:25,828   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 07:24:25,848   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 07:24:25,849   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 07:24:25,850   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 07:24:25,873   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 07:24:25,880   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 07:24:25,913   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@421fbfd6
2014-02-24 07:24:25,917   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 07:24:25,919   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:34241
2014-02-24 07:24:25,920   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 07:24:25,922   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:34241
2014-02-24 07:24:25,933   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16981105e1800000 with negotiated timeout 6000 for client /127.0.0.1:34241
2014-02-24 07:24:25,934   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16981105e1800000, negotiated timeout = 6000
2014-02-24 07:24:25,995   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 07:24:26,032   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 07:24:26,224   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 07:24:26,224   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 07:24:26,225   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 07:24:26,225   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 07:24:26,381   INFO  [main] HOST: hsql loaded
2014-02-24 07:24:26,468   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 07:24:28,046   INFO  [main] HOST: hsql loaded
2014-02-24 07:24:28,049   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 07:24:28,098   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-3.0). A confirmation message will follow if the loading is successful.
2014-02-24 07:24:28,099   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-3.0.
2014-02-24 07:24:28,239   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-24 07:24:28,291   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-24 07:24:28,324   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-24 07:24:28,327   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-24 07:24:28,328   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 28 ms.
2014-02-24 07:24:28,333   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:24:28,348   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-24 07:24:28,361   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-24 07:24:28,361   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 21 ms.
2014-02-24 07:24:28,368   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:24:28,374   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-24 07:24:28,374   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 6 ms.
2014-02-24 07:24:28,404   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:24:28,459   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-24 07:24:28,460   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 29 ms.
2014-02-24 07:24:28,472   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:24:28,473   INFO  [main] CONSOLE: Initializing initiator ID: 0, SiteID: 0:7
2014-02-24 07:24:28,497   INFO  [Mailbox tracker] EXPORT: Attempting to boot export client due to rejoin or other cluster topology change
2014-02-24 07:24:28,530   INFO  [main] HOST: Database start action is Create.
2014-02-24 07:24:28,530   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-24 07:24:28,531   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-24 07:24:28,531   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-24 07:24:28,531   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-24 07:24:28,531   INFO  [main] HOST: Available JVM arguments: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Xmx1024m -Dlog4j.configuration=file:///home/voltdb/voltdb-3.0/voltdb/log4j.xml -Djava.library.path=/home/voltdb/voltdb-3.0/voltdb
2014-02-24 07:24:28,531   INFO  [main] HOST: JVM class path: /home/voltdb/voltdb-3.0/voltdb/voltdb-3.0.jar:/home/voltdb/voltdb-3.0/lib/commons-cli-1.2.jar:/home/voltdb/voltdb-3.0/lib/commons-lang3-3.0.jar:/home/voltdb/voltdb-3.0/lib/guava-12.0.jar:/home/voltdb/voltdb-3.0/lib/jetty-continuation-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-http-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-io-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-server-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-util-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jline-2.10.jar:/home/voltdb/voltdb-3.0/lib/jna.jar:/home/voltdb/voltdb-3.0/lib/jsch-0.1.48.jar:/home/voltdb/voltdb-3.0/lib/log4j-1.2.16.jar:/home/voltdb/voltdb-3.0/lib/protobuf-java-2.4.1.jar:/home/voltdb/voltdb-3.0/lib/servlet-api-2.5.jar:/home/voltdb/voltdb-3.0/lib/slf4j-api-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/slf4j-nop-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/snappy-java-1.0.5-M3.jar:/home/voltdb/voltdb-3.0/lib/zmq-2.1.11.jar
2014-02-24 07:24:28,531   INFO  [main] HOST: Maximum usable Java heap set to 910 mb.
2014-02-24 07:24:28,531   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-24 07:24:28,531   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-24 07:24:28,531   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-24 07:24:28,531   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-24 07:24:28,531   INFO  [main] HOST: HOST MEMORY (MB): 2002
2014-02-24 07:24:28,531   INFO  [main] HOST: OS PROFILE:       Linux 3.2.0-36-generic amd64 en_US
2014-02-24 07:24:28,532   INFO  [main] HOST: JAVA VERSION:     1.6.0_24
2014-02-24 07:24:28,532   INFO  [main] HOST: JAVA RUNTIME:     OpenJDK Runtime Environment (1.6.0_24-b24)
2014-02-24 07:24:28,532   INFO  [main] HOST: JAVA VM:          OpenJDK 64-Bit Server VM (20.0-b12, mixed mode)
2014-02-24 07:24:28,532   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-24 07:24:28,532   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.149 2a02:8070:8333:b700:20c:29ff:feba:12f0%2 21212,21211,8080 [SELF]
2014-02-24 07:24:28,548   WARN  [main] HOST: Running without redundancy (k=0) is not recommended for production use.
2014-02-24 07:24:28,590   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-24 07:24:29,128   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-23 23:26:19,006   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-23 23:26:19,010   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-23 23:26:19,010   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-23 23:26:19,012   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,016   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,017   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,017   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-23 23:26:19,018   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-23 23:26:19,018   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:26:19,018   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:26:19,019   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:26:19,019   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:26:19,020   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:26:19,020   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-23 23:26:19,021   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,022   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-23 23:26:19,022   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,022   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-23 23:26:19,024   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:26:19,024   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-23 23:26:19,024   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:26:19,024   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-23 23:26:19,024   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-23 23:26:19,025   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,026   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-23 23:26:19,026   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-23 23:26:19,026   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-23 23:26:19,026   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:26:19,027   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:26:19,027   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:26:19,027   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,027   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,028   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,028   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,028   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,028   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,029   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-23 23:26:19,029   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,030   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,030   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,030   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,030   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,031   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-23 23:26:19,032   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 23:26:19,032   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 23:26:19,032   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,032   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 23:26:19,072   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:26:19,072   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:26:19,072   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:26:19,072   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:26:19,072   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-23 23:26:19,072   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:26:19,072   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:26:19,072   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:26:19,072   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:26:19,072   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 23:26:19,072   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 23:26:19,072   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-23 23:26:19,072   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:26:19,073   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:26:19,074   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:26:19,075   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:26:19,075   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:26:19,075   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:26:19,075   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:26:19,075   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:26:19,075   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:26:19,075   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:26:19,075   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:26:19,075   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:26:19,079   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-23 23:26:19,118   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:26:19,127   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:26:19,130   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-23 23:26:19,134   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:26:19,137   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-23 23:26:19,138   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:26:19,141   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:26:19,144   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-23 23:26:19,147   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:26:19,148   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:26:19,149   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-23 23:26:19,152   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-23 23:26:19,153   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:26:19,155   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:26:19,158   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:26:19,160   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:26:19,161   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:26:19,164   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:26:19,166   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:26:19,169   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-23 23:26:19,170   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:26:19,172   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-23 23:26:19,173   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:26:19,174   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:26:19,177   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:26:19,179   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:26:19,181   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-23 23:26:19,183   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:26:19,185   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:26:19,187   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-23 23:26:19,189   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-23 23:26:19,190   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:26:19,192   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:26:19,194   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:26:19,196   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-23 23:26:19,197   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:26:19,199   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:26:19,200   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:26:19,201   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:26:19,202   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:26:19,205   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-23 23:26:19,206   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-23 23:26:19,210   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-23 23:26:19,218   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-23 23:26:19,220   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-23 23:26:19,222   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-23 23:26:19,224   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:26:19,225   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-23 23:26:19,226   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:26:19,229   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:26:19,230   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-23 23:26:19,233   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:26:19,234   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:26:19,236   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:26:19,238   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:26:19,240   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-23 23:26:19,241   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-23 23:26:19,243   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-23 23:26:19,245   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-23 23:26:19,272   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-23 23:26:19,275   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,276   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:26:19,278   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:26:19,279   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:26:19,281   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,282   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-23 23:26:19,285   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-23 23:26:19,286   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-23 23:26:19,288   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;
2014-02-23 23:26:19,295   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,296   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-23 23:26:19,298   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,299   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-23 23:26:19,313   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-23 23:26:19,314   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:26:19,316   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:26:19,316   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-23 23:26:19,319   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:26:19,322   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:26:19,324   WARN  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Procedure BLE_MultiCheckParentForMultiCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,325   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-23 23:26:19,327   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-23 23:26:19,328   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-23 23:26:19,330   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-23 23:26:19,333   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-23 23:26:19,334   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:26:19,340   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-23 23:26:19,342   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:26:19,343   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:26:19,346   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-23 23:26:19,349   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-23 23:26:19,350   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,351   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-23 23:26:19,353   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-23 23:26:19,354   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-23 23:26:19,357   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-23 23:26:19,358   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,359   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-23 23:26:19,363   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-23 23:26:19,367   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,369   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-23 23:26:19,372   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:26:19,373   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-23 23:26:19,376   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;
2014-02-23 23:26:19,378   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;'
2014-02-23 23:26:19,378   WARN  [main] COMPILER: [AME_ActionsForRule.class]: Procedure AME_ActionsForRule has a statement with a non-deterministic result - statement: "SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,379   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:26:19,412   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:26:19,413   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-23 23:26:19,416   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,417   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:26:19,418   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:26:19,420   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ?
2014-02-23 23:26:19,422   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:26:19,424   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:26:19,426   WARN  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Procedure BLE_IsCycleMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,427   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:26:19,429   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,429   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-23 23:26:19,432   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-23 23:26:19,432   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-23 23:26:19,433   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:26:19,435   WARN  [main] COMPILER: [BLE_CheckPathForChecks.class]: Procedure BLE_CheckPathForChecks has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;", reason: index scan may provide insufficient ordering
2014-02-23 23:26:19,436   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-23 23:26:19,438   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-23 23:26:19,451   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-23 23:26:19,453   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-23 23:26:19,453   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-23 23:26:19,455   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-23 23:26:19,456   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-23 23:26:19,458   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,458   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-23 23:26:19,460   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-23 23:26:19,461   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:26:19,463   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-23 23:26:19,465   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,466   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-23 23:26:19,469   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:26:19,472   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-23 23:26:19,476   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:26:19,477   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;
2014-02-23 23:26:19,480   WARN  [main] COMPILER: [BLE_AllChecksForExpression.class]: Procedure BLE_AllChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,480   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:26:19,482   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,483   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:26:19,485   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,485   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:26:19,488   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:26:19,490   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?;
2014-02-23 23:26:19,492   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;
2014-02-23 23:26:19,494   WARN  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Procedure BLE_CheckPathForMultiChecks is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,495   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:26:19,496   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-23 23:26:19,498   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;
2014-02-23 23:26:19,501   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,501   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:26:19,523   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:26:19,524   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:26:19,525   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:26:19,526   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:26:19,528   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:26:19,530   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:26:19,532   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?
2014-02-23 23:26:19,537   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:26:19,539   WARN  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Procedure BLE_IsMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,539   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-23 23:26:19,542   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:26:19,543   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-23 23:26:19,557   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:26:19,558   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-23 23:26:19,560   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:26:19,562   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-23 23:26:19,562   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:26:19,563   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-23 23:26:19,580   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:26:19,581   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-23 23:26:19,595   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 07:26:20,529   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 07:26:20,540   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 07:26:20,546   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 07:26:20,565   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 07:26:20,565   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 07:26:20,568   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 07:26:20,593   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 07:26:20,600   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 07:26:20,638   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@421fbfd6
2014-02-24 07:26:20,642   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 07:26:20,644   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 07:26:20,644   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:34245
2014-02-24 07:26:20,646   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:34245
2014-02-24 07:26:20,662   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169811e5f3000000 with negotiated timeout 6000 for client /127.0.0.1:34245
2014-02-24 07:26:20,663   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169811e5f3000000, negotiated timeout = 6000
2014-02-24 07:26:20,714   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 07:26:20,750   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 07:26:20,925   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 07:26:20,926   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 07:26:20,926   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 07:26:20,926   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 07:26:21,072   INFO  [main] HOST: hsql loaded
2014-02-24 07:26:21,158   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 07:26:22,767   INFO  [main] HOST: hsql loaded
2014-02-24 07:26:22,771   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 07:26:22,829   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-3.0). A confirmation message will follow if the loading is successful.
2014-02-24 07:26:22,830   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-3.0.
2014-02-24 07:26:22,982   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-24 07:26:23,027   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-24 07:26:23,056   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-24 07:26:23,061   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-24 07:26:23,061   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 8 ms.
2014-02-24 07:26:23,069   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-24 07:26:23,071   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-24 07:26:23,071   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 8 ms.
2014-02-24 07:26:23,072   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:26:23,085   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:26:23,111   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-24 07:26:23,111   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 28 ms.
2014-02-24 07:26:23,129   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:26:23,188   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-24 07:26:23,189   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 22 ms.
2014-02-24 07:26:23,201   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:26:23,202   INFO  [main] CONSOLE: Initializing initiator ID: 0, SiteID: 0:7
2014-02-24 07:26:23,225   INFO  [Mailbox tracker] EXPORT: Attempting to boot export client due to rejoin or other cluster topology change
2014-02-24 07:26:23,240   INFO  [main] HOST: Database start action is Create.
2014-02-24 07:26:23,240   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-24 07:26:23,240   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-24 07:26:23,240   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-24 07:26:23,240   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-24 07:26:23,240   INFO  [main] HOST: Available JVM arguments: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Xmx1024m -Dlog4j.configuration=file:///home/voltdb/voltdb-3.0/voltdb/log4j.xml -Djava.library.path=/home/voltdb/voltdb-3.0/voltdb
2014-02-24 07:26:23,240   INFO  [main] HOST: JVM class path: /home/voltdb/voltdb-3.0/voltdb/voltdb-3.0.jar:/home/voltdb/voltdb-3.0/lib/commons-cli-1.2.jar:/home/voltdb/voltdb-3.0/lib/commons-lang3-3.0.jar:/home/voltdb/voltdb-3.0/lib/guava-12.0.jar:/home/voltdb/voltdb-3.0/lib/jetty-continuation-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-http-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-io-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-server-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-util-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jline-2.10.jar:/home/voltdb/voltdb-3.0/lib/jna.jar:/home/voltdb/voltdb-3.0/lib/jsch-0.1.48.jar:/home/voltdb/voltdb-3.0/lib/log4j-1.2.16.jar:/home/voltdb/voltdb-3.0/lib/protobuf-java-2.4.1.jar:/home/voltdb/voltdb-3.0/lib/servlet-api-2.5.jar:/home/voltdb/voltdb-3.0/lib/slf4j-api-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/slf4j-nop-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/snappy-java-1.0.5-M3.jar:/home/voltdb/voltdb-3.0/lib/zmq-2.1.11.jar
2014-02-24 07:26:23,241   INFO  [main] HOST: Maximum usable Java heap set to 910 mb.
2014-02-24 07:26:23,241   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-24 07:26:23,241   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-24 07:26:23,241   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-24 07:26:23,241   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-24 07:26:23,241   INFO  [main] HOST: HOST MEMORY (MB): 2002
2014-02-24 07:26:23,241   INFO  [main] HOST: OS PROFILE:       Linux 3.2.0-36-generic amd64 en_US
2014-02-24 07:26:23,241   INFO  [main] HOST: JAVA VERSION:     1.6.0_24
2014-02-24 07:26:23,241   INFO  [main] HOST: JAVA RUNTIME:     OpenJDK Runtime Environment (1.6.0_24-b24)
2014-02-24 07:26:23,241   INFO  [main] HOST: JAVA VM:          OpenJDK 64-Bit Server VM (20.0-b12, mixed mode)
2014-02-24 07:26:23,241   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-24 07:26:23,241   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.149 2a02:8070:8333:b700:20c:29ff:feba:12f0%2 21212,21211,8080 [SELF]
2014-02-24 07:26:23,248   WARN  [main] HOST: Running without redundancy (k=0) is not recommended for production use.
2014-02-24 07:26:23,290   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-24 07:26:23,849   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-23 23:28:45,666   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-23 23:28:45,670   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-23 23:28:45,670   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-23 23:28:45,672   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,673   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,673   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,673   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-23 23:28:45,674   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-23 23:28:45,674   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:28:45,674   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:28:45,675   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:28:45,675   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:28:45,676   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:28:45,676   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-23 23:28:45,677   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,677   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-23 23:28:45,678   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,678   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-23 23:28:45,679   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:28:45,679   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-23 23:28:45,680   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:28:45,680   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-23 23:28:45,680   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-23 23:28:45,681   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,681   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-23 23:28:45,681   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-23 23:28:45,681   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-23 23:28:45,682   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:28:45,682   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:28:45,682   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:28:45,683   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,683   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,683   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,684   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,684   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,684   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,684   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-23 23:28:45,685   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,685   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,685   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,686   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,686   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,686   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-23 23:28:45,687   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 23:28:45,687   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 23:28:45,688   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,688   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 23:28:45,730   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:28:45,730   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:28:45,730   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:28:45,730   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:28:45,730   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-23 23:28:45,730   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:28:45,731   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:28:45,732   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:28:45,733   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:28:45,733   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:28:45,733   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:28:45,733   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:28:45,733   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:28:45,733   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:28:45,733   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:28:45,733   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:28:45,733   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:28:45,733   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:28:45,737   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-23 23:28:45,795   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:28:45,803   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:28:45,805   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-23 23:28:45,809   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:28:45,812   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-23 23:28:45,813   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:28:45,816   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:28:45,817   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-23 23:28:45,820   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:28:45,821   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:28:45,822   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-23 23:28:45,825   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-23 23:28:45,826   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:28:45,828   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:28:45,831   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:28:45,833   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:28:45,834   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:28:45,837   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:28:45,839   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:28:45,841   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-23 23:28:45,843   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:28:45,845   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-23 23:28:45,846   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:28:45,847   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:28:45,851   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:28:45,853   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:28:45,856   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-23 23:28:45,857   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:28:45,860   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:28:45,861   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-23 23:28:45,864   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-23 23:28:45,865   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:28:45,867   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:28:45,870   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:28:45,872   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-23 23:28:45,874   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:28:45,875   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:28:45,877   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:28:45,878   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:28:45,879   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:28:45,881   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-23 23:28:45,885   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-23 23:28:45,887   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-23 23:28:45,890   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-23 23:28:45,892   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-23 23:28:45,894   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-23 23:28:45,896   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:28:45,897   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-23 23:28:45,898   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:28:45,900   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:28:45,902   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-23 23:28:45,904   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:28:45,905   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:28:45,908   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:28:45,909   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:28:45,911   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-23 23:28:45,913   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-23 23:28:45,915   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-23 23:28:45,917   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-23 23:28:45,944   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-23 23:28:45,948   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:45,949   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:28:45,950   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:28:45,951   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:28:45,954   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:45,955   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-23 23:28:45,958   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-23 23:28:45,959   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-23 23:28:45,961   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;
2014-02-23 23:28:45,967   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:45,968   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-23 23:28:45,970   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:45,971   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-23 23:28:45,987   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-23 23:28:45,987   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:28:45,989   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:28:45,990   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-23 23:28:45,992   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:28:45,995   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:28:45,997   WARN  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Procedure BLE_MultiCheckParentForMultiCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:45,998   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-23 23:28:46,001   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-23 23:28:46,002   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-23 23:28:46,004   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-23 23:28:46,008   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-23 23:28:46,008   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:28:46,013   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-23 23:28:46,015   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:28:46,015   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:28:46,019   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-23 23:28:46,022   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-23 23:28:46,024   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:46,024   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-23 23:28:46,026   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-23 23:28:46,027   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-23 23:28:46,029   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-23 23:28:46,031   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:46,032   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-23 23:28:46,036   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-23 23:28:46,039   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:46,040   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-23 23:28:46,042   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:28:46,043   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-23 23:28:46,045   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;
2014-02-23 23:28:46,047   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;'
2014-02-23 23:28:46,047   WARN  [main] COMPILER: [AME_ActionsForRule.class]: Procedure AME_ActionsForRule has a statement with a non-deterministic result - statement: "SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:46,048   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:28:46,081   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:28:46,082   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-23 23:28:46,086   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:46,087   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:28:46,089   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:28:46,092   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ?
2014-02-23 23:28:46,094   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:28:46,096   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:28:46,099   WARN  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Procedure BLE_IsCycleMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:46,099   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:28:46,101   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:46,102   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-23 23:28:46,105   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-23 23:28:46,105   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-23 23:28:46,106   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:28:46,108   WARN  [main] COMPILER: [BLE_CheckPathForChecks.class]: Procedure BLE_CheckPathForChecks has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;", reason: index scan may provide insufficient ordering
2014-02-23 23:28:46,109   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-23 23:28:46,112   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-23 23:28:46,114   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-23 23:28:46,115   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-23 23:28:46,116   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-23 23:28:46,118   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-23 23:28:46,119   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-23 23:28:46,121   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:46,122   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-23 23:28:46,124   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-23 23:28:46,125   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:28:46,127   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-23 23:28:46,128   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:46,129   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-23 23:28:46,132   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:28:46,134   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-23 23:28:46,136   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:28:46,136   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;
2014-02-23 23:28:46,139   WARN  [main] COMPILER: [BLE_AllChecksForExpression.class]: Procedure BLE_AllChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:46,139   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:28:46,142   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:46,142   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:28:46,144   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:46,145   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:28:46,147   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:28:46,149   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?;
2014-02-23 23:28:46,151   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;
2014-02-23 23:28:46,153   WARN  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Procedure BLE_CheckPathForMultiChecks is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:46,154   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:28:46,156   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-23 23:28:46,158   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;
2014-02-23 23:28:46,160   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:46,161   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:28:46,183   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:28:46,184   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:28:46,203   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:28:46,204   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:28:46,207   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:28:46,208   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:28:46,219   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?
2014-02-23 23:28:46,227   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:28:46,230   WARN  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Procedure BLE_IsMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:46,231   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-23 23:28:46,233   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:28:46,233   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-23 23:28:46,236   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:28:46,236   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-23 23:28:46,240   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:28:46,242   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-23 23:28:46,242   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:28:46,243   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-23 23:28:46,246   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:28:46,247   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-23 23:28:46,262   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 07:28:47,135   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 07:28:47,145   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 07:28:47,151   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 07:28:47,170   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 07:28:47,170   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 07:28:47,172   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 07:28:47,198   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 07:28:47,205   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 07:28:47,237   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@421fbfd6
2014-02-24 07:28:47,240   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 07:28:47,242   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:34279
2014-02-24 07:28:47,243   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 07:28:47,245   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:34279
2014-02-24 07:28:47,255   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x1698130446800000 with negotiated timeout 6000 for client /127.0.0.1:34279
2014-02-24 07:28:47,255   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x1698130446800000, negotiated timeout = 6000
2014-02-24 07:28:47,293   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 07:28:47,325   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 07:28:47,497   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 07:28:47,497   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 07:28:47,497   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 07:28:47,498   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 07:28:47,655   INFO  [main] HOST: hsql loaded
2014-02-24 07:28:47,738   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 07:28:49,321   INFO  [main] HOST: hsql loaded
2014-02-24 07:28:49,324   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 07:28:49,379   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-3.0). A confirmation message will follow if the loading is successful.
2014-02-24 07:28:49,380   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-3.0.
2014-02-24 07:28:49,532   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-24 07:28:49,578   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-24 07:28:49,601   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-24 07:28:49,604   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-24 07:28:49,604   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 11 ms.
2014-02-24 07:28:49,610   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:28:49,615   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-24 07:28:49,629   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-24 07:28:49,629   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 18 ms.
2014-02-24 07:28:49,644   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:28:49,669   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-24 07:28:49,670   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 29 ms.
2014-02-24 07:28:49,688   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:28:49,725   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-24 07:28:49,726   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 35 ms.
2014-02-24 07:28:49,739   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:28:49,740   INFO  [main] CONSOLE: Initializing initiator ID: 0, SiteID: 0:7
2014-02-24 07:28:49,764   INFO  [Mailbox tracker] EXPORT: Attempting to boot export client due to rejoin or other cluster topology change
2014-02-24 07:28:49,788   INFO  [main] HOST: Database start action is Create.
2014-02-24 07:28:49,788   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-24 07:28:49,789   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-24 07:28:49,789   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-24 07:28:49,789   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-24 07:28:49,789   INFO  [main] HOST: Available JVM arguments: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Xmx1024m -Dlog4j.configuration=file:///home/voltdb/voltdb-3.0/voltdb/log4j.xml -Djava.library.path=/home/voltdb/voltdb-3.0/voltdb
2014-02-24 07:28:49,789   INFO  [main] HOST: JVM class path: /home/voltdb/voltdb-3.0/voltdb/voltdb-3.0.jar:/home/voltdb/voltdb-3.0/lib/commons-cli-1.2.jar:/home/voltdb/voltdb-3.0/lib/commons-lang3-3.0.jar:/home/voltdb/voltdb-3.0/lib/guava-12.0.jar:/home/voltdb/voltdb-3.0/lib/jetty-continuation-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-http-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-io-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-server-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-util-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jline-2.10.jar:/home/voltdb/voltdb-3.0/lib/jna.jar:/home/voltdb/voltdb-3.0/lib/jsch-0.1.48.jar:/home/voltdb/voltdb-3.0/lib/log4j-1.2.16.jar:/home/voltdb/voltdb-3.0/lib/protobuf-java-2.4.1.jar:/home/voltdb/voltdb-3.0/lib/servlet-api-2.5.jar:/home/voltdb/voltdb-3.0/lib/slf4j-api-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/slf4j-nop-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/snappy-java-1.0.5-M3.jar:/home/voltdb/voltdb-3.0/lib/zmq-2.1.11.jar
2014-02-24 07:28:49,789   INFO  [main] HOST: Maximum usable Java heap set to 910 mb.
2014-02-24 07:28:49,789   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-24 07:28:49,789   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-24 07:28:49,790   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-24 07:28:49,790   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-24 07:28:49,790   INFO  [main] HOST: HOST MEMORY (MB): 2002
2014-02-24 07:28:49,790   INFO  [main] HOST: OS PROFILE:       Linux 3.2.0-36-generic amd64 en_US
2014-02-24 07:28:49,790   INFO  [main] HOST: JAVA VERSION:     1.6.0_24
2014-02-24 07:28:49,790   INFO  [main] HOST: JAVA RUNTIME:     OpenJDK Runtime Environment (1.6.0_24-b24)
2014-02-24 07:28:49,790   INFO  [main] HOST: JAVA VM:          OpenJDK 64-Bit Server VM (20.0-b12, mixed mode)
2014-02-24 07:28:49,790   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-24 07:28:49,791   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.149 2a02:8070:8333:b700:20c:29ff:feba:12f0%2 21212,21211,8080 [SELF]
2014-02-24 07:28:49,804   WARN  [main] HOST: Running without redundancy (k=0) is not recommended for production use.
2014-02-24 07:28:49,834   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-24 07:28:50,410   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-23 23:40:55,329   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-23 23:40:55,346   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-23 23:40:55,348   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-23 23:40:55,353   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,356   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,356   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,357   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-23 23:40:55,357   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-23 23:40:55,366   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:40:55,366   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:40:55,367   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:40:55,367   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:40:55,368   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:40:55,368   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-23 23:40:55,369   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,370   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-23 23:40:55,370   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,371   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-23 23:40:55,373   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:40:55,373   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-23 23:40:55,373   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:40:55,373   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-23 23:40:55,373   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-23 23:40:55,379   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,380   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-23 23:40:55,380   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-23 23:40:55,380   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-23 23:40:55,381   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:40:55,381   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:40:55,381   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:40:55,381   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,381   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,382   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,382   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,382   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,382   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,383   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-23 23:40:55,383   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,383   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,383   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,384   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,384   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,384   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-23 23:40:55,385   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 23:40:55,385   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 23:40:55,385   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,385   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 23:40:55,414   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:40:55,414   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:40:55,414   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:40:55,414   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:40:55,414   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-23 23:40:55,414   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:40:55,414   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:40:55,414   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:40:55,414   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:40:55,414   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 23:40:55,414   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 23:40:55,414   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:40:55,415   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:40:55,416   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:40:55,417   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:40:55,417   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:40:55,417   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:40:55,417   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:40:55,417   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:40:55,417   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:40:55,417   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:40:55,425   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-23 23:40:55,499   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:40:55,510   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:40:55,513   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-23 23:40:55,522   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:40:55,525   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-23 23:40:55,527   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:40:55,531   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:40:55,533   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-23 23:40:55,535   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:40:55,537   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:40:55,538   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-23 23:40:55,542   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-23 23:40:55,543   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:40:55,545   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:40:55,549   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:40:55,551   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:40:55,554   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:40:55,561   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:40:55,563   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:40:55,566   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-23 23:40:55,568   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:40:55,570   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-23 23:40:55,571   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:40:55,573   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:40:55,576   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:40:55,579   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:40:55,583   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-23 23:40:55,585   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:40:55,588   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:40:55,589   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-23 23:40:55,591   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-23 23:40:55,593   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:40:55,595   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:40:55,598   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:40:55,648   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-23 23:40:55,650   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:40:55,652   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:40:55,653   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:40:55,654   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:40:55,656   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:40:55,658   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-23 23:40:55,663   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-23 23:40:55,664   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-23 23:40:55,667   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-23 23:40:55,669   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-23 23:40:55,671   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-23 23:40:55,673   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:40:55,674   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-23 23:40:55,675   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:40:55,678   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:40:55,679   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-23 23:40:55,681   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:40:55,682   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:40:55,685   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:40:55,687   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:40:55,689   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-23 23:40:55,691   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-23 23:40:55,694   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-23 23:40:55,696   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-23 23:40:55,794   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-23 23:40:55,806   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:55,807   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:40:55,849   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:40:55,850   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:40:55,858   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:55,860   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-23 23:40:55,870   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-23 23:40:55,871   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-23 23:40:55,880   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;
2014-02-23 23:40:55,900   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:55,901   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-23 23:40:55,907   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:55,908   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-23 23:40:55,947   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-23 23:40:55,948   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:40:55,950   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:40:55,950   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-23 23:40:55,953   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:40:55,956   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:40:55,958   WARN  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Procedure BLE_MultiCheckParentForMultiCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:55,959   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-23 23:40:55,964   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-23 23:40:55,964   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-23 23:40:55,968   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-23 23:40:55,975   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-23 23:40:55,976   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:40:55,981   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-23 23:40:55,983   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:40:55,984   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:40:55,987   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-23 23:40:55,991   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-23 23:40:55,992   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:55,993   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-23 23:40:55,996   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-23 23:40:55,996   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-23 23:40:55,999   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-23 23:40:56,004   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:56,005   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-23 23:40:56,010   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-23 23:40:56,014   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:56,015   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-23 23:40:56,018   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:40:56,018   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-23 23:40:56,021   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;
2014-02-23 23:40:56,028   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;'
2014-02-23 23:40:56,028   WARN  [main] COMPILER: [AME_ActionsForRule.class]: Procedure AME_ActionsForRule has a statement with a non-deterministic result - statement: "SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:56,029   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:40:56,074   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:40:56,075   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-23 23:40:56,078   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:56,079   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:40:56,081   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:40:56,085   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ?
2014-02-23 23:40:56,087   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:40:56,091   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:40:56,093   WARN  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Procedure BLE_IsCycleMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:56,099   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:40:56,108   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:56,108   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-23 23:40:56,112   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-23 23:40:56,112   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-23 23:40:56,113   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:40:56,115   WARN  [main] COMPILER: [BLE_CheckPathForChecks.class]: Procedure BLE_CheckPathForChecks has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;", reason: index scan may provide insufficient ordering
2014-02-23 23:40:56,116   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-23 23:40:56,119   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-23 23:40:56,122   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-23 23:40:56,123   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-23 23:40:56,134   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-23 23:40:56,137   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-23 23:40:56,138   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-23 23:40:56,149   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:56,149   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-23 23:40:56,190   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-23 23:40:56,191   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:40:56,193   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-23 23:40:56,195   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:56,196   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-23 23:40:56,198   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:40:56,201   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-23 23:40:56,203   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:40:56,203   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;
2014-02-23 23:40:56,206   WARN  [main] COMPILER: [BLE_AllChecksForExpression.class]: Procedure BLE_AllChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:56,206   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:40:56,208   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:56,209   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:40:56,210   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:56,211   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:40:56,213   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:40:56,215   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?;
2014-02-23 23:40:56,217   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;
2014-02-23 23:40:56,219   WARN  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Procedure BLE_CheckPathForMultiChecks is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:56,220   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:40:56,222   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-23 23:40:56,224   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;
2014-02-23 23:40:56,227   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:56,228   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:40:56,278   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:40:56,278   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:40:56,286   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:40:56,287   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:40:56,295   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:40:56,299   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:40:56,302   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?
2014-02-23 23:40:56,307   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:40:56,369   WARN  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Procedure BLE_IsMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:56,370   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-23 23:40:56,372   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:40:56,373   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-23 23:40:56,375   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:40:56,376   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-23 23:40:56,408   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:40:56,414   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-23 23:40:56,414   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:40:56,414   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-23 23:40:56,418   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:40:56,419   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-23 23:40:56,445   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 07:40:57,339   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 07:40:57,355   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 07:40:57,367   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 07:40:57,407   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 07:40:57,407   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 07:40:57,409   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 07:40:57,451   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 07:40:57,459   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 07:40:57,515   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@421fbfd6
2014-02-24 07:40:57,519   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 07:40:57,521   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:34509
2014-02-24 07:40:57,522   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 07:40:57,524   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:34509
2014-02-24 07:40:57,535   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x169818969a800000, negotiated timeout = 6000
2014-02-24 07:40:57,536   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x169818969a800000 with negotiated timeout 6000 for client /127.0.0.1:34509
2014-02-24 07:40:57,601   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 07:40:57,638   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 07:40:57,868   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 07:40:57,868   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 07:40:57,868   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 07:40:57,869   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 07:40:58,011   INFO  [main] HOST: hsql loaded
2014-02-24 07:40:58,107   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 07:40:59,772   INFO  [main] HOST: hsql loaded
2014-02-24 07:40:59,778   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 07:40:59,835   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-3.0). A confirmation message will follow if the loading is successful.
2014-02-24 07:40:59,839   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-3.0.
2014-02-24 07:40:59,986   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-24 07:41:00,033   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-24 07:41:00,059   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-24 07:41:00,073   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-24 07:41:00,073   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 13 ms.
2014-02-24 07:41:00,075   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-24 07:41:00,088   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:41:00,089   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-24 07:41:00,089   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 13 ms.
2014-02-24 07:41:00,116   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:41:00,118   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-24 07:41:00,118   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 17 ms.
2014-02-24 07:41:00,146   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:41:00,204   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-24 07:41:00,204   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 28 ms.
2014-02-24 07:41:00,218   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:41:00,219   INFO  [main] CONSOLE: Initializing initiator ID: 0, SiteID: 0:7
2014-02-24 07:41:00,245   INFO  [Mailbox tracker] EXPORT: Attempting to boot export client due to rejoin or other cluster topology change
2014-02-24 07:41:00,262   INFO  [main] HOST: Database start action is Create.
2014-02-24 07:41:00,262   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-24 07:41:00,262   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-24 07:41:00,262   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-24 07:41:00,262   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-24 07:41:00,262   INFO  [main] HOST: Available JVM arguments: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Xmx1024m -Dlog4j.configuration=file:///home/voltdb/voltdb-3.0/voltdb/log4j.xml -Djava.library.path=/home/voltdb/voltdb-3.0/voltdb
2014-02-24 07:41:00,262   INFO  [main] HOST: JVM class path: /home/voltdb/voltdb-3.0/voltdb/voltdb-3.0.jar:/home/voltdb/voltdb-3.0/lib/commons-cli-1.2.jar:/home/voltdb/voltdb-3.0/lib/commons-lang3-3.0.jar:/home/voltdb/voltdb-3.0/lib/guava-12.0.jar:/home/voltdb/voltdb-3.0/lib/jetty-continuation-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-http-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-io-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-server-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-util-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jline-2.10.jar:/home/voltdb/voltdb-3.0/lib/jna.jar:/home/voltdb/voltdb-3.0/lib/jsch-0.1.48.jar:/home/voltdb/voltdb-3.0/lib/log4j-1.2.16.jar:/home/voltdb/voltdb-3.0/lib/protobuf-java-2.4.1.jar:/home/voltdb/voltdb-3.0/lib/servlet-api-2.5.jar:/home/voltdb/voltdb-3.0/lib/slf4j-api-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/slf4j-nop-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/snappy-java-1.0.5-M3.jar:/home/voltdb/voltdb-3.0/lib/zmq-2.1.11.jar
2014-02-24 07:41:00,262   INFO  [main] HOST: Maximum usable Java heap set to 910 mb.
2014-02-24 07:41:00,262   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-24 07:41:00,262   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-24 07:41:00,263   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-24 07:41:00,263   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-24 07:41:00,263   INFO  [main] HOST: HOST MEMORY (MB): 2002
2014-02-24 07:41:00,263   INFO  [main] HOST: OS PROFILE:       Linux 3.2.0-36-generic amd64 en_US
2014-02-24 07:41:00,263   INFO  [main] HOST: JAVA VERSION:     1.6.0_24
2014-02-24 07:41:00,263   INFO  [main] HOST: JAVA RUNTIME:     OpenJDK Runtime Environment (1.6.0_24-b24)
2014-02-24 07:41:00,263   INFO  [main] HOST: JAVA VM:          OpenJDK 64-Bit Server VM (20.0-b12, mixed mode)
2014-02-24 07:41:00,263   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-24 07:41:00,263   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.149 2a02:8070:8333:b700:20c:29ff:feba:12f0%2 21212,21211,8080 [SELF]
2014-02-24 07:41:00,273   WARN  [main] HOST: Running without redundancy (k=0) is not recommended for production use.
2014-02-24 07:41:00,312   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-24 07:41:00,854   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-23 23:52:46,849   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-23 23:52:46,853   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-23 23:52:46,854   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-23 23:52:46,856   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,856   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,857   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,857   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-23 23:52:46,858   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-23 23:52:46,858   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:52:46,858   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:52:46,859   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:52:46,859   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:52:46,860   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:52:46,860   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-23 23:52:46,861   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,870   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-23 23:52:46,871   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,871   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-23 23:52:46,872   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:52:46,872   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-23 23:52:46,872   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:52:46,872   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-23 23:52:46,872   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-23 23:52:46,873   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,873   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-23 23:52:46,873   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-23 23:52:46,873   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-23 23:52:46,874   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:52:46,874   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:52:46,874   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:52:46,874   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,874   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,874   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,875   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,875   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,875   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,875   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-23 23:52:46,875   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,875   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,876   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,876   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,876   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,876   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-23 23:52:46,877   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 23:52:46,877   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 23:52:46,877   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,877   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 23:52:46,913   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:52:46,913   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:52:46,913   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:52:46,913   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:52:46,913   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-23 23:52:46,913   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:52:46,913   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-23 23:52:46,914   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:52:46,915   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:52:46,916   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:52:46,916   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:52:46,916   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 23:52:46,916   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 23:52:46,916   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:52:46,916   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:52:46,916   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:52:46,916   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:52:46,916   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:52:46,916   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:52:46,916   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:52:46,916   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:52:46,916   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:52:46,916   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:52:46,916   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:52:46,917   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:52:46,921   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-23 23:52:46,985   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:52:46,994   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:52:46,996   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-23 23:52:47,000   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:52:47,003   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-23 23:52:47,004   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:52:47,007   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:52:47,009   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-23 23:52:47,011   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:52:47,012   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:52:47,013   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-23 23:52:47,016   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-23 23:52:47,017   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:52:47,019   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:52:47,022   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:52:47,024   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:52:47,025   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:52:47,028   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:52:47,030   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:52:47,032   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-23 23:52:47,034   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:52:47,035   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-23 23:52:47,037   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:52:47,038   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:52:47,041   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:52:47,043   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:52:47,045   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-23 23:52:47,046   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:52:47,049   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:52:47,050   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-23 23:52:47,052   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-23 23:52:47,053   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:52:47,056   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:52:47,058   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:52:47,060   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-23 23:52:47,061   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:52:47,063   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:52:47,064   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:52:47,065   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:52:47,066   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:52:47,069   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-23 23:52:47,071   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-23 23:52:47,083   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-23 23:52:47,086   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-23 23:52:47,088   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-23 23:52:47,091   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-23 23:52:47,092   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:52:47,093   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-23 23:52:47,094   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:52:47,097   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:52:47,098   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-23 23:52:47,101   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:52:47,102   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:52:47,105   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:52:47,107   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:52:47,109   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-23 23:52:47,110   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-23 23:52:47,112   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-23 23:52:47,113   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-23 23:52:47,146   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-23 23:52:47,152   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,153   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:52:47,155   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:52:47,155   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:52:47,157   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,158   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-23 23:52:47,161   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-23 23:52:47,162   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-23 23:52:47,164   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;
2014-02-23 23:52:47,179   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,180   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-23 23:52:47,182   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,183   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-23 23:52:47,207   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-23 23:52:47,208   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:52:47,210   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:52:47,211   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-23 23:52:47,214   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:52:47,216   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:52:47,218   WARN  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Procedure BLE_MultiCheckParentForMultiCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,219   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-23 23:52:47,222   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-23 23:52:47,223   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-23 23:52:47,226   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-23 23:52:47,230   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-23 23:52:47,231   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:52:47,236   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-23 23:52:47,238   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:52:47,239   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:52:47,243   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-23 23:52:47,246   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-23 23:52:47,249   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,249   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-23 23:52:47,252   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-23 23:52:47,252   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-23 23:52:47,256   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-23 23:52:47,258   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,259   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-23 23:52:47,264   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-23 23:52:47,267   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,268   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-23 23:52:47,271   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:52:47,271   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-23 23:52:47,274   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-23 23:52:47,277   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-23 23:52:47,278   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:52:47,313   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:52:47,314   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-23 23:52:47,317   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,318   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:52:47,320   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:52:47,322   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ?
2014-02-23 23:52:47,324   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:52:47,326   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:52:47,328   WARN  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Procedure BLE_IsCycleMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,329   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:52:47,330   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,331   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-23 23:52:47,334   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-23 23:52:47,334   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-23 23:52:47,335   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:52:47,337   WARN  [main] COMPILER: [BLE_CheckPathForChecks.class]: Procedure BLE_CheckPathForChecks has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ?;", reason: index scan may provide insufficient ordering
2014-02-23 23:52:47,337   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-23 23:52:47,340   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-23 23:52:47,342   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-23 23:52:47,344   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-23 23:52:47,344   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-23 23:52:47,346   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-23 23:52:47,347   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-23 23:52:47,348   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,349   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-23 23:52:47,365   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-23 23:52:47,373   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:52:47,375   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-23 23:52:47,377   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,378   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-23 23:52:47,381   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:52:47,384   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-23 23:52:47,385   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:52:47,386   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;
2014-02-23 23:52:47,388   WARN  [main] COMPILER: [BLE_AllChecksForExpression.class]: Procedure BLE_AllChecksForExpression has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,389   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:52:47,391   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,392   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:52:47,394   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,394   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:52:47,397   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:52:47,399   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?;
2014-02-23 23:52:47,401   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;
2014-02-23 23:52:47,402   WARN  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Procedure BLE_CheckPathForMultiChecks is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,403   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:52:47,405   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-23 23:52:47,406   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;
2014-02-23 23:52:47,409   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,409   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:52:47,433   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:52:47,434   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:52:47,436   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:52:47,437   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:52:47,439   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:52:47,441   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:52:47,462   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?
2014-02-23 23:52:47,464   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:52:47,466   WARN  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Procedure BLE_IsMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,467   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-23 23:52:47,469   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:52:47,470   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-23 23:52:47,472   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:52:47,472   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-23 23:52:47,475   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:52:47,491   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-23 23:52:47,491   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:52:47,491   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-23 23:52:47,494   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:52:47,495   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-23 23:52:47,502   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 07:52:48,411   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 07:52:48,422   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 07:52:48,429   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 07:52:48,448   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 07:52:48,448   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 07:52:48,450   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 07:52:48,477   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 07:52:48,483   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 07:52:48,516   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@326b9c84
2014-02-24 07:52:48,524   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 07:52:48,526   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:34671
2014-02-24 07:52:48,527   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 07:52:48,529   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:34671
2014-02-24 07:52:48,541   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16981e0348800000 with negotiated timeout 6000 for client /127.0.0.1:34671
2014-02-24 07:52:48,542   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16981e0348800000, negotiated timeout = 6000
2014-02-24 07:52:48,600   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 07:52:48,641   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 07:52:48,820   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 07:52:48,820   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 07:52:48,820   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 07:52:48,821   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 07:52:48,963   INFO  [main] HOST: hsql loaded
2014-02-24 07:52:49,054   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 07:52:50,851   INFO  [main] HOST: hsql loaded
2014-02-24 07:52:50,860   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 07:52:50,915   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-3.0). A confirmation message will follow if the loading is successful.
2014-02-24 07:52:50,916   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-3.0.
2014-02-24 07:52:51,075   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-24 07:52:51,131   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-24 07:52:51,165   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-24 07:52:51,169   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-24 07:52:51,169   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 11 ms.
2014-02-24 07:52:51,183   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:52:51,195   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-24 07:52:51,214   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-24 07:52:51,214   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 27 ms.
2014-02-24 07:52:51,219   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:52:51,245   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-24 07:52:51,245   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 24 ms.
2014-02-24 07:52:51,265   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:52:51,307   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-24 07:52:51,308   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 20 ms.
2014-02-24 07:52:51,324   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:52:51,326   INFO  [main] CONSOLE: Initializing initiator ID: 0, SiteID: 0:7
2014-02-24 07:52:51,353   INFO  [Mailbox tracker] EXPORT: Attempting to boot export client due to rejoin or other cluster topology change
2014-02-24 07:52:51,370   INFO  [main] HOST: Database start action is Create.
2014-02-24 07:52:51,370   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-24 07:52:51,370   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-24 07:52:51,370   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-24 07:52:51,370   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-24 07:52:51,370   INFO  [main] HOST: Available JVM arguments: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Xmx1024m -Dlog4j.configuration=file:///home/voltdb/voltdb-3.0/voltdb/log4j.xml -Djava.library.path=/home/voltdb/voltdb-3.0/voltdb
2014-02-24 07:52:51,371   INFO  [main] HOST: JVM class path: /home/voltdb/voltdb-3.0/voltdb/voltdb-3.0.jar:/home/voltdb/voltdb-3.0/lib/commons-cli-1.2.jar:/home/voltdb/voltdb-3.0/lib/commons-lang3-3.0.jar:/home/voltdb/voltdb-3.0/lib/guava-12.0.jar:/home/voltdb/voltdb-3.0/lib/jetty-continuation-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-http-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-io-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-server-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-util-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jline-2.10.jar:/home/voltdb/voltdb-3.0/lib/jna.jar:/home/voltdb/voltdb-3.0/lib/jsch-0.1.48.jar:/home/voltdb/voltdb-3.0/lib/log4j-1.2.16.jar:/home/voltdb/voltdb-3.0/lib/protobuf-java-2.4.1.jar:/home/voltdb/voltdb-3.0/lib/servlet-api-2.5.jar:/home/voltdb/voltdb-3.0/lib/slf4j-api-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/slf4j-nop-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/snappy-java-1.0.5-M3.jar:/home/voltdb/voltdb-3.0/lib/zmq-2.1.11.jar
2014-02-24 07:52:51,371   INFO  [main] HOST: Maximum usable Java heap set to 910 mb.
2014-02-24 07:52:51,371   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-24 07:52:51,371   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-24 07:52:51,371   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-24 07:52:51,371   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-24 07:52:51,371   INFO  [main] HOST: HOST MEMORY (MB): 2002
2014-02-24 07:52:51,371   INFO  [main] HOST: OS PROFILE:       Linux 3.2.0-36-generic amd64 en_US
2014-02-24 07:52:51,371   INFO  [main] HOST: JAVA VERSION:     1.6.0_24
2014-02-24 07:52:51,371   INFO  [main] HOST: JAVA RUNTIME:     OpenJDK Runtime Environment (1.6.0_24-b24)
2014-02-24 07:52:51,371   INFO  [main] HOST: JAVA VM:          OpenJDK 64-Bit Server VM (20.0-b12, mixed mode)
2014-02-24 07:52:51,372   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-24 07:52:51,372   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.149 2a02:8070:8333:b700:20c:29ff:feba:12f0%2 21212,21211,8080 [SELF]
2014-02-24 07:52:51,386   WARN  [main] HOST: Running without redundancy (k=0) is not recommended for production use.
2014-02-24 07:52:51,423   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-24 07:52:51,962   INFO  [Thread-10] CONSOLE: Server completed initialization.
2014-02-23 23:55:39,543   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10019_10020 on table: LOGQUEUE of type: BALANCED_TREE
2014-02-23 23:55:39,547   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10025_10026 on table: ENDPOINTPROPERTYLOG of type: BALANCED_TREE
2014-02-23 23:55:39,547   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10030_10031 on table: USER of type: BALANCED_TREE
2014-02-23 23:55:39,549   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10035_10036 on table: ENDPOINT_USER_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,550   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10040_10041 on table: ENDPOINT_SPHERE_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,551   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10045_10046 on table: SPHERE_USER_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,551   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10049_10050 on table: SPHERE of type: BALANCED_TREE
2014-02-23 23:55:39,552   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10053_10054 on table: ENDPOINTCLASS of type: BALANCED_TREE
2014-02-23 23:55:39,552   INFO  [main] COMPILER: [null]: Created index: EPEPC on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:55:39,552   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10058_10059 on table: ENDPOINT of type: BALANCED_TREE
2014-02-23 23:55:39,553   INFO  [main] COMPILER: [null]: Created index: PREPC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:55:39,554   INFO  [main] COMPILER: [null]: Created index: PRPRC on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:55:39,554   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10063_10064 on table: PROPERTY of type: BALANCED_TREE
2014-02-23 23:55:39,555   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10067_10068 on table: PROPERTYCLASS of type: BALANCED_TREE
2014-02-23 23:55:39,555   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10072_10073 on table: MESSAGE_ENDPOINT_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,556   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10076_10077 on table: MESSAGE of type: BALANCED_TREE
2014-02-23 23:55:39,556   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10081_10082 on table: MESSAGE_EXPRESSION_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,557   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10085_10086 on table: EXPRESSION of type: BALANCED_TREE
2014-02-23 23:55:39,559   INFO  [main] COMPILER: [null]: Created index: CHEP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:55:39,559   INFO  [main] COMPILER: [null]: Created index: CHPR on table: CHECK of type: BALANCED_TREE
2014-02-23 23:55:39,559   INFO  [main] COMPILER: [null]: Created index: CHCP on table: CHECK of type: BALANCED_TREE
2014-02-23 23:55:39,559   INFO  [main] COMPILER: [null]: Created index: CHST on table: CHECK of type: BALANCED_TREE
2014-02-23 23:55:39,559   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10091_10092 on table: CHECK of type: BALANCED_TREE
2014-02-23 23:55:39,560   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10096_10097 on table: RULE_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,561   INFO  [main] COMPILER: [null]: Created index: RCHECK on table: RULE of type: BALANCED_TREE
2014-02-23 23:55:39,561   INFO  [main] COMPILER: [null]: Created index: RMCHECK on table: RULE of type: BALANCED_TREE
2014-02-23 23:55:39,561   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10099_10100 on table: RULE of type: BALANCED_TREE
2014-02-23 23:55:39,562   INFO  [main] COMPILER: [null]: Created index: MCCP on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:55:39,562   INFO  [main] COMPILER: [null]: Created index: MCST on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:55:39,562   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10103_10104 on table: MULTICHECK of type: BALANCED_TREE
2014-02-23 23:55:39,563   INFO  [main] COMPILER: [null]: Created index: MCLMCIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,563   INFO  [main] COMPILER: [null]: Created index: MCLCHIDX on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,563   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10109_10110 on table: MULTICHECK_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,564   INFO  [main] COMPILER: [null]: Created index: MCMCLR on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,564   INFO  [main] COMPILER: [null]: Created index: MCMCLL on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,564   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10115_10116 on table: MULTICHECK_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,565   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10118_10119 on table: CHECKPATH of type: BALANCED_TREE
2014-02-23 23:55:39,565   INFO  [main] COMPILER: [null]: Created index: CHECKIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,565   INFO  [main] COMPILER: [null]: Created index: CHECKPATHIDIDX on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,566   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10123_10124 on table: CHECKPATH_CHECK_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,566   INFO  [main] COMPILER: [null]: Created index: CPMCIDX on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,566   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10128_10129 on table: CHECKPATH_MULTICHECK_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,567   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10132_10133 on table: ACTION of type: BALANCED_TREE
2014-02-23 23:55:39,568   INFO  [main] COMPILER: [null]: Created index: OUTBOUNDPROPACTION on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 23:55:39,568   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10136_10137 on table: OUTBOUNDPROPERTYACTION of type: BALANCED_TREE
2014-02-23 23:55:39,569   INFO  [main] COMPILER: [null]: Created index: RALRULEID on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,569   INFO  [main] COMPILER: [null]: Created index: SYS_IDX_SYS_PK_10141_10142 on table: RULE_ACTION_LINK of type: BALANCED_TREE
2014-02-23 23:55:39,612   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:55:39,613   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:55:39,613   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ACTION WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:55:39,613   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?); for ACTION with partitioning: ACTION.ACTIONID:0
2014-02-23 23:55:39,613   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?); for CHECK with partitioning: CHECK.CHECKPATHID:8
2014-02-23 23:55:39,613   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH VALUES (?, ?, ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:55:39,613   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:55:39,613   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:55:39,613   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?); for CHECKPATH with partitioning: CHECKPATH.CHECKPATHID:0
2014-02-23 23:55:39,613   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?); for CHECKPATH_CHECK_LINK with partitioning: CHECKPATH_CHECK_LINK.CHECKPATHID:1
2014-02-23 23:55:39,613   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?); for CHECKPATH_MULTICHECK_LINK with partitioning: CHECKPATH_MULTICHECK_LINK.CHECKPATHID:1
2014-02-23 23:55:39,613   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT VALUES (?, ?, ?); for ENDPOINT
2014-02-23 23:55:39,613   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTCLASS VALUES (?, ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:55:39,613   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:55:39,613   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?); for ENDPOINTCLASS with partitioning: ENDPOINTCLASS.ENDPOINTCLASSID:0
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?); for ENDPOINTPROPERTYLOG with partitioning: ENDPOINTPROPERTYLOG.ENDPOINTID:1
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?); for ENDPOINT_SPHERE_LINK
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?); for ENDPOINT_USER_LINK
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO EXPRESSION VALUES (?, ?, ?); for EXPRESSION
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:1
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?); for LOGQUEUE with partitioning: LOGQUEUE.QUEUENAME:2
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE VALUES (?, ?, ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?); for MESSAGE with partitioning: MESSAGE.MESSAGEID:0
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:55:39,614   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?); for MESSAGE_ENDPOINT_LINK with partitioning: MESSAGE_ENDPOINT_LINK.ENDPOINTID:1
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?); for MESSAGE_EXPRESSION_LINK
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?); for MULTICHECK with partitioning: MULTICHECK.CHECKPATHID:5
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_CHECK_LINK with partitioning: MULTICHECK_CHECK_LINK.CHECKPATHID:3
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?); for MULTICHECK_MULTICHECK_LINK with partitioning: MULTICHECK_MULTICHECK_LINK.CHECKPATHID:3
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?); for OUTBOUNDPROPERTYACTION with partitioning: OUTBOUNDPROPERTYACTION.ACTIONID:5
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?); for PROPERTY
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in INSERT multi-partition procedure: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?); for PROPERTYCLASS
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE VALUES (?, ?, ?, ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM RULE WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?); for RULE with partitioning: RULE.RULEID:0
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?); for RULE_ACTION_LINK with partitioning: RULE_ACTION_LINK.RULEID:1
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?); for RULE_MULTICHECK_LINK with partitioning: RULE_MULTICHECK_LINK.RULEID:1
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE VALUES (?, ?, ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?); for SPHERE with partitioning: SPHERE.SPHEREID:0
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:55:39,615   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:55:39,616   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?); for SPHERE_USER_LINK with partitioning: SPHERE_USER_LINK.SPHEREID:1
2014-02-23 23:55:39,616   INFO  [main] COMPILER: Synthesized built-in INSERT procedure: INSERT INTO USER VALUES (?, ?, ?, ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:55:39,616   INFO  [main] COMPILER: Synthesized built-in SELECT procedure: SELECT * FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:55:39,616   INFO  [main] COMPILER: Synthesized built-in DELETE procedure: DELETE FROM USER WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:55:39,616   INFO  [main] COMPILER: Synthesized built-in UPDATE procedure: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?); for USER with partitioning: USER.USERID:0
2014-02-23 23:55:39,620   INFO  [main] COMPILER: [ACTION.insert]: Compiling Statement: INSERT INTO ACTION VALUES (?, ?, ?, ?, ?);
2014-02-23 23:55:39,666   INFO  [main] COMPILER: [ACTION.select]: Compiling Statement: SELECT * FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:55:39,676   INFO  [main] COMPILER: [ACTION.delete]: Compiling Statement: DELETE FROM ACTION WHERE (ACTIONID = ?);
2014-02-23 23:55:39,680   INFO  [main] COMPILER: [ACTION.update]: Compiling Statement: UPDATE ACTION SET ACTIONID = ?, ACTIONNAME = ?, TARGETENDPOINTID = ?, TGTEPIDFROMINBOUNDPROP = ?, EXPIRED = ? WHERE (ACTIONID = ?);
2014-02-23 23:55:39,686   INFO  [main] COMPILER: [CHECK.insert]: Compiling Statement: INSERT INTO CHECK VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:55:39,691   INFO  [main] COMPILER: [CHECKPATH.insert]: Compiling Statement: INSERT INTO CHECKPATH VALUES (?, ?, ?);
2014-02-23 23:55:39,694   INFO  [main] COMPILER: [CHECKPATH.select]: Compiling Statement: SELECT * FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:55:39,698   INFO  [main] COMPILER: [CHECKPATH.delete]: Compiling Statement: DELETE FROM CHECKPATH WHERE (CHECKPATHID = ?);
2014-02-23 23:55:39,701   INFO  [main] COMPILER: [CHECKPATH.update]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHID = ?, CHECKPATHNAME = ?, UIOBJECT = ? WHERE (CHECKPATHID = ?);
2014-02-23 23:55:39,706   INFO  [main] COMPILER: [CHECKPATH_CHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_CHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:55:39,709   INFO  [main] COMPILER: [CHECKPATH_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO CHECKPATH_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:55:39,712   INFO  [main] COMPILER: [ENDPOINT.insert]: Compiling Statement: INSERT INTO ENDPOINT VALUES (?, ?, ?);
2014-02-23 23:55:39,717   INFO  [main] COMPILER: [ENDPOINTCLASS.insert]: Compiling Statement: INSERT INTO ENDPOINTCLASS VALUES (?, ?);
2014-02-23 23:55:39,719   INFO  [main] COMPILER: [ENDPOINTCLASS.select]: Compiling Statement: SELECT * FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:55:39,723   INFO  [main] COMPILER: [ENDPOINTCLASS.delete]: Compiling Statement: DELETE FROM ENDPOINTCLASS WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:55:39,728   INFO  [main] COMPILER: [ENDPOINTCLASS.update]: Compiling Statement: UPDATE ENDPOINTCLASS SET ENDPOINTCLASSID = ?, ENDPOINTCLASSNAME = ? WHERE (ENDPOINTCLASSID = ?);
2014-02-23 23:55:39,732   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.insert]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:55:39,735   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.select]: Compiling Statement: SELECT * FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:55:39,743   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.delete]: Compiling Statement: DELETE FROM ENDPOINTPROPERTYLOG WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:55:39,753   INFO  [main] COMPILER: [ENDPOINTPROPERTYLOG.update]: Compiling Statement: UPDATE ENDPOINTPROPERTYLOG SET ENTRYID = ?, ENDPOINTID = ?, PROPERTYID = ?, PROPERTYENTRY = ?, TIME_STAMP = ? WHERE (ENTRYID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:55:39,759   INFO  [main] COMPILER: [ENDPOINT_SPHERE_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_SPHERE_LINK VALUES (?, ?, ?);
2014-02-23 23:55:39,772   INFO  [main] COMPILER: [ENDPOINT_USER_LINK.insert]: Compiling Statement: INSERT INTO ENDPOINT_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:55:39,783   INFO  [main] COMPILER: [EXPRESSION.insert]: Compiling Statement: INSERT INTO EXPRESSION VALUES (?, ?, ?);
2014-02-23 23:55:39,788   INFO  [main] COMPILER: [LOGQUEUE.insert]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:55:39,796   INFO  [main] COMPILER: [LOGQUEUE.select]: Compiling Statement: SELECT * FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:55:39,810   INFO  [main] COMPILER: [LOGQUEUE.delete]: Compiling Statement: DELETE FROM LOGQUEUE WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:55:39,822   INFO  [main] COMPILER: [LOGQUEUE.update]: Compiling Statement: UPDATE LOGQUEUE SET EXCHANGENAME = ?, MESSAGE = ?, QUEUENAME = ?, ROUTINGKEY = ?, IDENTIFIER = ? WHERE (IDENTIFIER = ?) AND (QUEUENAME = ?);
2014-02-23 23:55:39,838   INFO  [main] COMPILER: [MESSAGE.insert]: Compiling Statement: INSERT INTO MESSAGE VALUES (?, ?, ?);
2014-02-23 23:55:39,841   INFO  [main] COMPILER: [MESSAGE.select]: Compiling Statement: SELECT * FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:55:39,861   INFO  [main] COMPILER: [MESSAGE.delete]: Compiling Statement: DELETE FROM MESSAGE WHERE (MESSAGEID = ?);
2014-02-23 23:55:39,865   INFO  [main] COMPILER: [MESSAGE.update]: Compiling Statement: UPDATE MESSAGE SET MESSAGEID = ?, EXPRESSIONCOUNT = ?, TIME_STAMP = ? WHERE (MESSAGEID = ?);
2014-02-23 23:55:39,877   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_ENDPOINT_LINK VALUES (?, ?, ?);
2014-02-23 23:55:39,880   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.select]: Compiling Statement: SELECT * FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:55:39,896   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.delete]: Compiling Statement: DELETE FROM MESSAGE_ENDPOINT_LINK WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:55:39,900   INFO  [main] COMPILER: [MESSAGE_ENDPOINT_LINK.update]: Compiling Statement: UPDATE MESSAGE_ENDPOINT_LINK SET LINKID = ?, ENDPOINTID = ?, MESSAGEID = ? WHERE (LINKID = ?) AND (ENDPOINTID = ?);
2014-02-23 23:55:39,913   INFO  [main] COMPILER: [MESSAGE_EXPRESSION_LINK.insert]: Compiling Statement: INSERT INTO MESSAGE_EXPRESSION_LINK VALUES (?, ?, ?);
2014-02-23 23:55:39,919   INFO  [main] COMPILER: [MULTICHECK.insert]: Compiling Statement: INSERT INTO MULTICHECK VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:55:39,926   INFO  [main] COMPILER: [MULTICHECK_CHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_CHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:55:39,929   INFO  [main] COMPILER: [MULTICHECK_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO MULTICHECK_MULTICHECK_LINK VALUES (?, ?, ?, ?);
2014-02-23 23:55:39,942   INFO  [main] COMPILER: [OUTBOUNDPROPERTYACTION.insert]: Compiling Statement: INSERT INTO OUTBOUNDPROPERTYACTION VALUES (?, ?, ?, ?, ?, ?);
2014-02-23 23:55:39,946   INFO  [main] COMPILER: [PROPERTY.insert]: Compiling Statement: INSERT INTO PROPERTY VALUES (?, ?, ?, ?, ?, ?, ?, ?);
2014-02-23 23:55:39,963   INFO  [main] COMPILER: [PROPERTYCLASS.insert]: Compiling Statement: INSERT INTO PROPERTYCLASS VALUES (?, ?, ?, ?);
2014-02-23 23:55:39,976   INFO  [main] COMPILER: [RULE.insert]: Compiling Statement: INSERT INTO RULE VALUES (?, ?, ?, ?);
2014-02-23 23:55:39,981   INFO  [main] COMPILER: [RULE.select]: Compiling Statement: SELECT * FROM RULE WHERE (RULEID = ?);
2014-02-23 23:55:39,988   INFO  [main] COMPILER: [RULE.delete]: Compiling Statement: DELETE FROM RULE WHERE (RULEID = ?);
2014-02-23 23:55:39,991   INFO  [main] COMPILER: [RULE.update]: Compiling Statement: UPDATE RULE SET RULEID = ?, RULENAME = ?, CHECKID = ?, MULTICHECKID = ? WHERE (RULEID = ?);
2014-02-23 23:55:40,002   INFO  [main] COMPILER: [RULE_ACTION_LINK.insert]: Compiling Statement: INSERT INTO RULE_ACTION_LINK VALUES (?, ?, ?);
2014-02-23 23:55:40,004   INFO  [main] COMPILER: [RULE_MULTICHECK_LINK.insert]: Compiling Statement: INSERT INTO RULE_MULTICHECK_LINK VALUES (?, ?, ?);
2014-02-23 23:55:40,005   INFO  [main] COMPILER: [SPHERE.insert]: Compiling Statement: INSERT INTO SPHERE VALUES (?, ?, ?);
2014-02-23 23:55:40,006   INFO  [main] COMPILER: [SPHERE.select]: Compiling Statement: SELECT * FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:55:40,014   INFO  [main] COMPILER: [SPHERE.delete]: Compiling Statement: DELETE FROM SPHERE WHERE (SPHEREID = ?);
2014-02-23 23:55:40,016   INFO  [main] COMPILER: [SPHERE.update]: Compiling Statement: UPDATE SPHERE SET SPHEREID = ?, SPHERENAME = ?, PUBLIC = ? WHERE (SPHEREID = ?);
2014-02-23 23:55:40,020   INFO  [main] COMPILER: [SPHERE_USER_LINK.insert]: Compiling Statement: INSERT INTO SPHERE_USER_LINK VALUES (?, ?, ?);
2014-02-23 23:55:40,021   INFO  [main] COMPILER: [SPHERE_USER_LINK.select]: Compiling Statement: SELECT * FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:55:40,023   INFO  [main] COMPILER: [SPHERE_USER_LINK.delete]: Compiling Statement: DELETE FROM SPHERE_USER_LINK WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:55:40,025   INFO  [main] COMPILER: [SPHERE_USER_LINK.update]: Compiling Statement: UPDATE SPHERE_USER_LINK SET LINKID = ?, SPHEREID = ?, USERID = ? WHERE (LINKID = ?) AND (SPHEREID = ?);
2014-02-23 23:55:40,027   INFO  [main] COMPILER: [USER.insert]: Compiling Statement: INSERT INTO USER VALUES (?, ?, ?, ?);
2014-02-23 23:55:40,029   INFO  [main] COMPILER: [USER.select]: Compiling Statement: SELECT * FROM USER WHERE (USERID = ?);
2014-02-23 23:55:40,031   INFO  [main] COMPILER: [USER.delete]: Compiling Statement: DELETE FROM USER WHERE (USERID = ?);
2014-02-23 23:55:40,033   INFO  [main] COMPILER: [USER.update]: Compiling Statement: UPDATE USER SET USERID = ?, USERNAME = ?, USEREMAIL = ?, USERPWHASH = ? WHERE (USERID = ?);
2014-02-23 23:55:40,062   INFO  [main] COMPILER: [FindAllChecks.class]: Compiling Statement: SELECT * FROM CHECK;
2014-02-23 23:55:40,068   WARN  [main] COMPILER: [FindAllChecks.class]: Procedure FindAllChecks has a statement with a non-deterministic result - statement: "SELECT * FROM CHECK;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,069   INFO  [main] COMPILER: [Insert.class]: Compiling Statement: INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);
2014-02-23 23:55:40,071   INFO  [main] COMPILER: [Insert.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 2 of statement 'INSERT INTO LOGQUEUE VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:55:40,071   INFO  [main] COMPILER: [FindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:55:40,073   WARN  [main] COMPILER: [FindAllMultichecksForCheck.class]: Procedure FindAllMultichecksForCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,074   INFO  [main] COMPILER: [UI_SelectAllProperties.class]: Compiling Statement: SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;
2014-02-23 23:55:40,077   WARN  [main] COMPILER: [UI_SelectAllProperties.class]: Procedure UI_SelectAllProperties has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTY ORDER BY PROPERTYNAME;", reason: insufficient ordering criteria.
2014-02-23 23:55:40,078   INFO  [main] COMPILER: [UI_SelectPropertyNameForPropertyID.class]: Compiling Statement: select propertyname from property where propertyid = ?;
2014-02-23 23:55:40,080   INFO  [main] COMPILER: [AME_DetailsForAction.class]: Compiling Statement: SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;
2014-02-23 23:55:40,091   WARN  [main] COMPILER: [AME_DetailsForAction.class]: Procedure AME_DetailsForAction has a statement with a non-deterministic result - statement: "SELECT ACTION.ACTIONID, ACTION.TARGETENDPOINTID, ACTION.TGTEPIDFROMINBOUNDPROP, OUTBOUNDPROPERTYACTION.OUTBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.INBOUNDPROPERTYID, OUTBOUNDPROPERTYACTION.CURRENTSTATEPROPERTYID, OUTBOUNDPROPERTYACTION.CUSTOMPAYLOAD FROM ACTION INNER JOIN OUTBOUNDPROPERTYACTION ON ACTION.ACTIONID = OUTBOUNDPROPERTYACTION.ACTIONID AND OUTBOUNDPROPERTYACTION.ACTIONID = ? ORDER BY ACTION.ACTIONID;", reason: insufficient ordering criteria.
2014-02-23 23:55:40,092   INFO  [main] COMPILER: [FindRulesForCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE CHECKID = ?;
2014-02-23 23:55:40,094   WARN  [main] COMPILER: [FindRulesForCheckID.class]: Procedure FindRulesForCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,095   INFO  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Compiling Statement: select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;
2014-02-23 23:55:40,110   WARN  [main] COMPILER: [UI_SelectChecksForEndpoint.class]: Procedure UI_SelectChecksForEndpoint has a statement with a non-deterministic result - statement: "select * from check join property on check.propertyid = property.propertyid and check.endpointid = ? ORDER BY name;", reason: insufficient ordering criteria.
2014-02-23 23:55:40,110   INFO  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Compiling Statement: SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:55:40,112   WARN  [main] COMPILER: [UI_SelectAllEndpointClasses.class]: Procedure UI_SelectAllEndpointClasses has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINTCLASS ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:55:40,113   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyClassID.class]: Compiling Statement: select propertyclassid, propertyclassdatatype, propertyclassname, propertyclassunit from propertyclass where propertyclassid = ?;
2014-02-23 23:55:40,116   INFO  [main] COMPILER: [UI_DeleteMulticheckMulticheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:55:40,118   INFO  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:55:40,120   WARN  [main] COMPILER: [BLE_MultiCheckParentForMultiCheck.class]: Procedure BLE_MultiCheckParentForMultiCheck has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,121   INFO  [main] COMPILER: [SelectAllUsers.class]: Compiling Statement: SELECT * FROM USER ORDER BY USERNAME;
2014-02-23 23:55:40,123   WARN  [main] COMPILER: [SelectAllUsers.class]: Procedure SelectAllUsers has a statement with a non-deterministic result - statement: "SELECT * FROM USER ORDER BY USERNAME;", reason: insufficient ordering criteria.
2014-02-23 23:55:40,124   INFO  [main] COMPILER: [UI_SelectPropertyClassForPropertyID.class]: Compiling Statement: select propertyclassid from property where propertyid = ?;
2014-02-23 23:55:40,127   INFO  [main] COMPILER: [SelectAllLogEntries.class]: Compiling Statement: SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;
2014-02-23 23:55:40,130   WARN  [main] COMPILER: [SelectAllLogEntries.class]: Procedure SelectAllLogEntries has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE ORDER BY IDENTIFIER;", reason: insufficient ordering criteria.
2014-02-23 23:55:40,130   INFO  [main] COMPILER: [UI_UpdateCheck.class]: Compiling Statement: UPDATE CHECK SET NAME = ?, CHECKVALUE = ?, OPERATOR = ?, STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:55:40,136   INFO  [main] COMPILER: [UI_SelectAllEndpoints.class]: Compiling Statement: SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;
2014-02-23 23:55:40,138   WARN  [main] COMPILER: [UI_SelectAllEndpoints.class]: Procedure UI_SelectAllEndpoints has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:55:40,139   INFO  [main] COMPILER: [FindMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKID, STATE, OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:55:40,142   INFO  [main] COMPILER: [UI_UpdateMulticheck.class]: Compiling Statement: UPDATE MULTICHECK SET MULTICHECKNAME = ?, OPERATOR = ? WHERE MULTICHECKID = ?;
2014-02-23 23:55:40,145   INFO  [main] COMPILER: [Select.class]: Compiling Statement: SELECT * FROM LOGQUEUE
2014-02-23 23:55:40,147   WARN  [main] COMPILER: [Select.class]: Procedure Select has a statement with a non-deterministic result - statement: "SELECT * FROM LOGQUEUE", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,147   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: Compiling Statement: UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;
2014-02-23 23:55:40,149   INFO  [main] COMPILER: [UI_UpdateSpherenameForSphereID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE SPHERE SET SPHERENAME = ? WHERE SPHEREID = ?;'
2014-02-23 23:55:40,150   INFO  [main] COMPILER: [UI_SelectCheckForCheckID.class]: Compiling Statement: select checkid, name from check where checkid = ?;
2014-02-23 23:55:40,152   INFO  [main] COMPILER: [FindRulesForMultiCheckID.class]: Compiling Statement: SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;
2014-02-23 23:55:40,157   WARN  [main] COMPILER: [FindRulesForMultiCheckID.class]: Procedure FindRulesForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT RULEID FROM RULE WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,158   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;
2014-02-23 23:55:40,162   INFO  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE ENDPOINTID = ? AND PROPERTYID = ? AND CHECKVALUE = ? AND OPERATOR = ? AND EXPIRED = ?;
2014-02-23 23:55:40,165   WARN  [main] COMPILER: [ImprovedFindMatchingChecksEqual.class]: Procedure ImprovedFindMatchingChecksEqual is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT * FROM CHECK WHERE STATE = 1 AND ENDPOINTID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,165   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: Compiling Statement: UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;
2014-02-23 23:55:40,167   INFO  [main] COMPILER: [UI_UpdateCheckpathName.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET CHECKPATHNAME = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:55:40,168   INFO  [main] COMPILER: [UpdateMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?
2014-02-23 23:55:40,170   INFO  [main] COMPILER: [AME_ActionsForRule.class]: Compiling Statement: SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;
2014-02-23 23:55:40,172   INFO  [main] COMPILER: [AME_ActionsForRule.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement 'SELECT ACTIONID FROM RULE_ACTION_LINK WHERE RULEID = ? ORDER BY ACTIONID;'
2014-02-23 23:55:40,173   INFO  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:55:40,209   WARN  [main] COMPILER: [UI_SelectActPropertiesForEndpoint.class]: Procedure UI_SelectActPropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.act = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:55:40,210   INFO  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;
2014-02-23 23:55:40,213   WARN  [main] COMPILER: [UI_SelectEndpointsForUser.class]: Procedure UI_SelectEndpointsForUser has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_USER_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_USER_LINK.ENDPOINTID AND ENDPOINT_USER_LINK.USERID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,214   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:55:40,216   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:55:40,218   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID, STATE FROM MULTICHECK WHERE MULTICHECKID = ?
2014-02-23 23:55:40,220   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:55:40,222   INFO  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:55:40,224   WARN  [main] COMPILER: [BLE_IsCycleMultiCheckTrue.class]: Procedure BLE_IsCycleMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,225   INFO  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;
2014-02-23 23:55:40,227   WARN  [main] COMPILER: [FindParentMultiChecksForMultiCheckID.class]: Procedure FindParentMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKLID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKRID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,237   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Compiling Statement: SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;
2014-02-23 23:55:40,241   INFO  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;'
2014-02-23 23:55:40,241   WARN  [main] COMPILER: [UI_LastLogEntryForEndpointProperty.class]: Procedure UI_LastLogEntryForEndpointProperty has a statement with a non-deterministic result - statement: "SELECT TOP 1 ENDPOINTID, PROPERTYID, PROPERTYENTRY, TIME_STAMP FROM ENDPOINTPROPERTYLOG WHERE ENDPOINTID = ? AND  PROPERTYID = ? ORDER BY TIME_STAMP DESC;" , reason: insufficient ordering criteria.
2014-02-23 23:55:40,250   INFO  [main] COMPILER: [BLE_CheckPathForChecks.class]: Compiling Statement: SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ? ORDER BY CHECKPATHID;
2014-02-23 23:55:40,252   WARN  [main] COMPILER: [BLE_CheckPathForChecks.class]: Procedure BLE_CheckPathForChecks has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKID FROM CHECKPATH_CHECK_LINK WHERE CHECKID = ? ORDER BY CHECKPATHID;", reason: index scan may provide insufficient ordering
2014-02-23 23:55:40,253   INFO  [main] COMPILER: [UI_UpdateEndpointnameForEndpointID.class]: Compiling Statement: UPDATE ENDPOINT SET ENDPOINTNAME = ? WHERE ENDPOINTID = ?;
2014-02-23 23:55:40,256   INFO  [main] COMPILER: [UI_DeleteEndpointFromSphere.class]: Compiling Statement: DELETE FROM ENDPOINT_SPHERE_LINK WHERE ENDPOINTID = ? AND SPHEREID = ?;
2014-02-23 23:55:40,258   INFO  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Compiling Statement: SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;
2014-02-23 23:55:40,262   WARN  [main] COMPILER: [UI_SelectAllCheckpaths.class]: Procedure UI_SelectAllCheckpaths has a statement with a non-deterministic result - statement: "SELECT CHECKPATHID, CHECKPATHNAME FROM CHECKPATH ORDER BY CHECKPATHNAME;", reason: insufficient ordering criteria.
2014-02-23 23:55:40,263   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: Compiling Statement: select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;
2014-02-23 23:55:40,265   INFO  [main] COMPILER: [UI_SelectCheckpathForCheckpathID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' select checkpathid, checkpathname, uiobject from checkpath where checkpathid = ?;'
2014-02-23 23:55:40,266   INFO  [main] COMPILER: [UI_FindUserForEmail.class]: Compiling Statement: SELECT * FROM USER WHERE USEREMAIL = ?;
2014-02-23 23:55:40,269   WARN  [main] COMPILER: [UI_FindUserForEmail.class]: Procedure UI_FindUserForEmail has a statement with a non-deterministic result - statement: "SELECT * FROM USER WHERE USEREMAIL = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,269   INFO  [main] COMPILER: [UI_SelectAllSpheres.class]: Compiling Statement: SELECT * FROM SPHERE ORDER BY SPHERENAME;
2014-02-23 23:55:40,271   WARN  [main] COMPILER: [UI_SelectAllSpheres.class]: Procedure UI_SelectAllSpheres has a statement with a non-deterministic result - statement: "SELECT * FROM SPHERE ORDER BY SPHERENAME;", reason: insufficient ordering criteria.
2014-02-23 23:55:40,271   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;
2014-02-23 23:55:40,273   INFO  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ?
2014-02-23 23:55:40,276   WARN  [main] COMPILER: [ImprovedFindAllMultichecksForCheck.class]: Procedure ImprovedFindAllMultichecksForCheck is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT MULTICHECKID FROM MULTICHECK_CHECK_LINK WHERE CHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,277   INFO  [main] COMPILER: [UpdateChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = ? WHERE CHECKID = ?
2014-02-23 23:55:40,280   INFO  [main] COMPILER: [UI_DeleteMulticheckCheckLink.class]: Compiling Statement: DELETE FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:55:40,282   INFO  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Compiling Statement: SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;
2014-02-23 23:55:40,283   WARN  [main] COMPILER: [UI_SelectAllPropertyClasses.class]: Procedure UI_SelectAllPropertyClasses has a statement with a non-deterministic result - statement: "SELECT * FROM PROPERTYCLASS ORDER BY PROPERTYCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:55:40,284   INFO  [main] COMPILER: [BLE_AllChecksForExpression.class]: Compiling Statement: SELECT CHECKID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? ORDER BY CHECKID;
2014-02-23 23:55:40,287   INFO  [main] COMPILER: [FindChecksForMultiCheckID.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:55:40,289   WARN  [main] COMPILER: [FindChecksForMultiCheckID.class]: Procedure FindChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,290   INFO  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Compiling Statement: SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;
2014-02-23 23:55:40,292   WARN  [main] COMPILER: [FindLinkedMultiChecksForMultiCheckID.class]: Procedure FindLinkedMultiChecksForMultiCheckID has a statement with a non-deterministic result - statement: "SELECT MULTICHECKRID FROM MULTICHECK_MULTICHECK_LINK WHERE MULTICHECKLID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,292   INFO  [main] COMPILER: [FindChecksForCheckID.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:55:40,294   INFO  [main] COMPILER: [UI_DeleteCheck.class]: Compiling Statement: DELETE FROM CHECK WHERE CHECKID = ?;
2014-02-23 23:55:40,297   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;
2014-02-23 23:55:40,301   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Compiling Statement: SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID;
2014-02-23 23:55:40,303   INFO  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'UPDATE MULTICHECK SET STATE = 0 WHERE MULTICHECKID = ? AND CHECKPATHID = ?;'
2014-02-23 23:55:40,303   WARN  [main] COMPILER: [BLE_CheckPathForMultiChecks.class]: Procedure BLE_CheckPathForMultiChecks is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKPATHID, MULTICHECKID FROM MULTICHECK WHERE CHECKPATHID = ? ORDER BY CHECKPATHID;", reason: insufficient ordering criteria.
2014-02-23 23:55:40,305   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE CHECKID = ?;
2014-02-23 23:55:40,307   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: UPDATE CHECK SET STATE = 1 WHERE CHECKID = ?;
2014-02-23 23:55:40,313   INFO  [main] COMPILER: [BLE_ChecksForExpression.class]: Compiling Statement: SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;
2014-02-23 23:55:40,316   WARN  [main] COMPILER: [BLE_ChecksForExpression.class]: Procedure BLE_ChecksForExpression is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID, OPERATOR, CHECKVALUE, CHECKPATHID FROM CHECK WHERE ENDPOINTID = ? AND PROPERTYID = ? AND EXPIRED = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,317   INFO  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Compiling Statement: select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;
2014-02-23 23:55:40,363   WARN  [main] COMPILER: [UI_SelectSensePropertiesForEndpoint.class]: Procedure UI_SelectSensePropertiesForEndpoint has a statement with a non-deterministic result - statement: "select * from endpoint, property, endpointclass where endpoint.endpointclassid = property.endpointclassid and endpointclass.endpointclassid = property.endpointclassid and endpoint.endpointid = ? and property.sense = 1 ORDER BY endpoint.endpointname;", reason: insufficient ordering criteria.
2014-02-23 23:55:40,364   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: Compiling Statement: INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);
2014-02-23 23:55:40,371   INFO  [main] COMPILER: [LGE_InsertEndpointPropertyLog.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement 'INSERT INTO ENDPOINTPROPERTYLOG VALUES (?, ?, ?, ?, ?);'
2014-02-23 23:55:40,372   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;
2014-02-23 23:55:40,377   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: UPDATE MULTICHECK SET STATE = ? WHERE MULTICHECKID = ?;
2014-02-23 23:55:40,380   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT MULTICHECKID FROM MULTICHECK WHERE MULTICHECKID = ? AND STATE = ?;
2014-02-23 23:55:40,382   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT CHECKID, STATE FROM CHECK WHERE CHECKID = ?
2014-02-23 23:55:40,384   INFO  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Compiling Statement: SELECT OPERATOR FROM MULTICHECK WHERE MULTICHECKID = ?;
2014-02-23 23:55:40,385   WARN  [main] COMPILER: [BLE_IsMultiCheckTrue.class]: Procedure BLE_IsMultiCheckTrue is RW and has a statement whose result has a non-deterministic ordering - statement: "SELECT CHECKID FROM MULTICHECK_CHECK_LINK WHERE MULTICHECKID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,386   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: Compiling Statement: UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;
2014-02-23 23:55:40,388   INFO  [main] COMPILER: [UI_UpdateCheckpath.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 1 of statement ' UPDATE CHECKPATH SET UIOBJECT = ? WHERE CHECKPATHID = ?;'
2014-02-23 23:55:40,388   INFO  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Compiling Statement: SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;
2014-02-23 23:55:40,390   WARN  [main] COMPILER: [UI_SelectEndpointForEndpointID.class]: Procedure UI_SelectEndpointForEndpointID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTID, ENDPOINTNAME, ENDPOINTCLASSID FROM ENDPOINT WHERE ENDPOINTID = ? ORDER BY ENDPOINTNAME;", reason: insufficient ordering criteria.
2014-02-23 23:55:40,391   INFO  [main] COMPILER: [ResetChecks.class]: Compiling Statement: UPDATE CHECK SET STATE = 0 WHERE ENDPOINTID = ?
2014-02-23 23:55:40,393   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Compiling Statement: SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;
2014-02-23 23:55:40,395   INFO  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: This procedure might benefit from an @ProcInfo annotation designating parameter 0 of statement ' SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;'
2014-02-23 23:55:40,395   WARN  [main] COMPILER: [UI_SelectEndpointClassForEndpointClassID.class]: Procedure UI_SelectEndpointClassForEndpointClassID has a statement with a non-deterministic result - statement: "SELECT ENDPOINTCLASSID, ENDPOINTCLASSNAME FROM ENDPOINTCLASS WHERE ENDPOINTCLASSID = ? ORDER BY ENDPOINTCLASSNAME;", reason: insufficient ordering criteria.
2014-02-23 23:55:40,395   INFO  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Compiling Statement: SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;
2014-02-23 23:55:40,398   WARN  [main] COMPILER: [UI_SelectEndpointsForSphere.class]: Procedure UI_SelectEndpointsForSphere has a statement with a non-deterministic result - statement: "SELECT * FROM ENDPOINT JOIN ENDPOINT_SPHERE_LINK ON ENDPOINT.ENDPOINTID = ENDPOINT_SPHERE_LINK.ENDPOINTID AND ENDPOINT_SPHERE_LINK.SPHEREID = ?;", reason: the query result does not guarantee a consistent ordering
2014-02-23 23:55:40,399   INFO  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Compiling Statement: select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;
2014-02-23 23:55:40,404   WARN  [main] COMPILER: [UI_SelectPropertyDetailsForEndpointClass.class]: Procedure UI_SelectPropertyDetailsForEndpointClass has a statement with a non-deterministic result - statement: "select * from property join propertyclass on property.propertyclassid = propertyclass.propertyclassid and property.endpointclassid = ? ORDER BY propertyname;", reason: insufficient ordering criteria.
2014-02-24 07:55:41,270   INFO  [main] CONSOLE: Initializing VoltDB...

 _    __      ____  ____  ____ 
| |  / /___  / / /_/ __ \/ __ )
| | / / __ \/ / __/ / / / __  |
| |/ / /_/ / / /_/ /_/ / /_/ / 
|___/\____/_/\__/_____/_____/

--------------------------------

2014-02-24 07:55:41,280   INFO  [main] CONSOLE: Build: 3.0 voltdb-3.0-0-g77209f0 Community Edition
2014-02-24 07:55:41,286   INFO  [main] NETWORK: Default network thread count: 2
2014-02-24 07:55:41,313   INFO  [main] HOST: Beginning inter-node communication on port 3021.
2014-02-24 07:55:41,314   INFO  [main] HOST: Attempting to bind to leader ip localhost/127.0.0.1:3021
2014-02-24 07:55:41,315   INFO  [main] CONSOLE: Connecting to VoltDB cluster as the leader...
2014-02-24 07:55:41,339   INFO  [main] ZK-SERVER: binding to port /127.0.0.1:2181
2014-02-24 07:55:41,346   INFO  [main] ZK-SERVER: Created server with tickTime 3000 minSessionTimeout 6000 maxSessionTimeout 60000
2014-02-24 07:55:41,378   INFO  [main] ZK-SERVER: Initiating client connection, connectString=127.0.0.1:2181 sessionTimeout=2000 watcher=org.voltcore.zk.ZKUtil$1@36f0b7f8
2014-02-24 07:55:41,382   INFO  [main-SendThread()] ZK-CLIENT: Opening socket connection to server /127.0.0.1:2181
2014-02-24 07:55:41,384   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Accepted socket connection from /127.0.0.1:34675
2014-02-24 07:55:41,385   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Socket connection established to localhost/127.0.0.1:2181, initiating session
2014-02-24 07:55:41,387   INFO  [NIOServerCxn.Factory:/127.0.0.1:2181] ZK-SERVER: Client attempting to establish new session at /127.0.0.1:34675
2014-02-24 07:55:41,397   INFO  [ZooKeeperServer] ZK-SERVER: Established session 0x16981f54e5800000 with negotiated timeout 6000 for client /127.0.0.1:34675
2014-02-24 07:55:41,397   INFO  [main-SendThread(localhost:2181)] ZK-CLIENT: Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x16981f54e5800000, negotiated timeout = 6000
2014-02-24 07:55:41,446   INFO  [Socket Joiner] HOST: Attempting to bind to internal ip 0.0.0.0/0.0.0.0:3021
2014-02-24 07:55:41,490   INFO  [main] HOST: URL of deployment info: deployment.xml
2014-02-24 07:55:41,666   INFO  [main] HOST: Cluster has 1 hosts with leader hostname: "localhost". 3 sites per host. K = 0.
2014-02-24 07:55:41,666   INFO  [main] HOST: The entire cluster has 1 copy of each of the 3 logical partitions.
2014-02-24 07:55:41,666   INFO  [main] HOST: Detection of network partitions in the cluster is enabled.
2014-02-24 07:55:41,667   INFO  [main] HOST: Using "/home/voltdb/git/velimontana/VeliSphere Montana/voltdbroot" for voltdbroot directory.
2014-02-24 07:55:41,821   INFO  [main] HOST: hsql loaded
2014-02-24 07:55:41,911   INFO  [main] HOST: Registering stats mailbox id 0:-2
2014-02-24 07:55:43,563   INFO  [main] HOST: hsql loaded
2014-02-24 07:55:43,567   INFO  [main] EXPORT: System is not using any export functionality.
2014-02-24 07:55:43,616   INFO  [Iv2ExecutionSite: 0:0] HOST: Loading native VoltDB code (voltdb-3.0). A confirmation message will follow if the loading is successful.
2014-02-24 07:55:43,616   INFO  [Iv2ExecutionSite: 0:0] HOST: Successfully loaded native VoltDB library voltdb-3.0.
2014-02-24 07:55:43,774   INFO  [Leader elector-/db/leaders/globalservice] HOST: Host 0 promoted to be the global service provider
2014-02-24 07:55:43,826   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:0 as leader for partition 0
2014-02-24 07:55:43,847   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:1 as leader for partition 1
2014-02-24 07:55:43,852   INFO  [LeaderCache] TM: SP 0:0 for partition 0 found (including self) 1 surviving replicas to repair.  Survivors: 0:0
2014-02-24 07:55:43,852   INFO  [LeaderCache] TM: SP 0:0 for partition 0 finished leader promotion. Took 11 ms.
2014-02-24 07:55:43,864   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:55:43,866   INFO  [LeaderAppointer-Babysitters] TM: Appointing HSId 0:2 as leader for partition 2
2014-02-24 07:55:43,881   INFO  [LeaderCache] TM: SP 0:1 for partition 1 found (including self) 1 surviving replicas to repair.  Survivors: 0:1
2014-02-24 07:55:43,881   INFO  [LeaderCache] TM: SP 0:1 for partition 1 finished leader promotion. Took 16 ms.
2014-02-24 07:55:43,893   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:55:43,895   INFO  [LeaderCache] TM: SP 0:2 for partition 2 found (including self) 1 surviving replicas to repair.  Survivors: 0:2
2014-02-24 07:55:43,896   INFO  [LeaderCache] TM: SP 0:2 for partition 2 finished leader promotion. Took 9 ms.
2014-02-24 07:55:43,923   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:55:43,960   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 found 3 surviving leaders to repair.  Survivors: 0:0, 0:1, 0:2
2014-02-24 07:55:43,961   INFO  [LeaderCache] TM: MP 0:3 for partition 16383 finished leader promotion. Took 17 ms.
2014-02-24 07:55:43,974   INFO  [LeaderCache] HOST: Mailbox is not registered for site id -4
2014-02-24 07:55:43,975   INFO  [main] CONSOLE: Initializing initiator ID: 0, SiteID: 0:7
2014-02-24 07:55:44,000   INFO  [Mailbox tracker] EXPORT: Attempting to boot export client due to rejoin or other cluster topology change
2014-02-24 07:55:44,023   INFO  [main] HOST: Database start action is Create.
2014-02-24 07:55:44,023   INFO  [main] HOST: Listening for native wire protocol clients on port 21212.
2014-02-24 07:55:44,023   INFO  [main] HOST: Listening for admin wire protocol clients on port 21211.
2014-02-24 07:55:44,023   INFO  [main] HOST: Local machine HTTP monitoring is listening on port 8080.
2014-02-24 07:55:44,024   INFO  [main] HOST: Json API over HTTP enabled at path /api/1.0/, listening on port 8080.
2014-02-24 07:55:44,024   INFO  [main] HOST: Available JVM arguments: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:-ReduceInitialCardMarks -Xmx1024m -Dlog4j.configuration=file:///home/voltdb/voltdb-3.0/voltdb/log4j.xml -Djava.library.path=/home/voltdb/voltdb-3.0/voltdb
2014-02-24 07:55:44,024   INFO  [main] HOST: JVM class path: /home/voltdb/voltdb-3.0/voltdb/voltdb-3.0.jar:/home/voltdb/voltdb-3.0/lib/commons-cli-1.2.jar:/home/voltdb/voltdb-3.0/lib/commons-lang3-3.0.jar:/home/voltdb/voltdb-3.0/lib/guava-12.0.jar:/home/voltdb/voltdb-3.0/lib/jetty-continuation-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-http-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-io-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-server-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jetty-util-7.6.1.v20120215.jar:/home/voltdb/voltdb-3.0/lib/jline-2.10.jar:/home/voltdb/voltdb-3.0/lib/jna.jar:/home/voltdb/voltdb-3.0/lib/jsch-0.1.48.jar:/home/voltdb/voltdb-3.0/lib/log4j-1.2.16.jar:/home/voltdb/voltdb-3.0/lib/protobuf-java-2.4.1.jar:/home/voltdb/voltdb-3.0/lib/servlet-api-2.5.jar:/home/voltdb/voltdb-3.0/lib/slf4j-api-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/slf4j-nop-1.6.2.jar:/home/voltdb/voltdb-3.0/lib/snappy-java-1.0.5-M3.jar:/home/voltdb/voltdb-3.0/lib/zmq-2.1.11.jar
2014-02-24 07:55:44,026   INFO  [main] HOST: Maximum usable Java heap set to 910 mb.
2014-02-24 07:55:44,026   INFO  [main] HOST: Client authentication is not enabled. Anonymous clients accepted.
2014-02-24 07:55:44,026   INFO  [main] HOST: No schedule set for automated snapshots.
2014-02-24 07:55:44,026   INFO  [main] HOST: CPU INFO:         2 Cores (Reported by Java), -1 Sockets, 2 Hardware Threads
2014-02-24 07:55:44,026   INFO  [main] HOST: CPU DESC:         Intel(R) Core(TM) i5-3570K CPU @ 3.40GHz 6144 KB cache
2014-02-24 07:55:44,026   INFO  [main] HOST: HOST MEMORY (MB): 2002
2014-02-24 07:55:44,026   INFO  [main] HOST: OS PROFILE:       Linux 3.2.0-36-generic amd64 en_US
2014-02-24 07:55:44,026   INFO  [main] HOST: JAVA VERSION:     1.6.0_24
2014-02-24 07:55:44,026   INFO  [main] HOST: JAVA RUNTIME:     OpenJDK Runtime Environment (1.6.0_24-b24)
2014-02-24 07:55:44,026   INFO  [main] HOST: JAVA VM:          OpenJDK 64-Bit Server VM (20.0-b12, mixed mode)
2014-02-24 07:55:44,026   INFO  [main] HOST: About to list cluster interfaces for all nodes with format [ip1 ip2 ... ipN] client-port:admin-port:http-port
2014-02-24 07:55:44,027   INFO  [main] HOST:   Host id: 0 with interfaces: 16.1.1.149 2a02:8070:8333:b700:20c:29ff:feba:12f0%2 21212,21211,8080 [SELF]
2014-02-24 07:55:44,055   WARN  [main] HOST: Running without redundancy (k=0) is not recommended for production use.
2014-02-24 07:55:44,096   INFO  [SnapshotDaemon] LOGGING: This node was selected as the leader for snapshot truncation
2014-02-24 07:55:44,636   INFO  [Thread-10] CONSOLE: Server completed initialization.
